{
    "rapi_kargom_nerede_companies": {
        "api_name": "companies",
        "category": "Logistics",
        "tool_name": "kargom_nerede",
        "code": "async def rapi_kargom_nerede_companies(self,*args,**kwargs):\n    '''T\u00fcrkiye'deki kargo \u015firketlerini  Aras Kargo, Yurti\u00e7i Kargo, S\u00fcrat Kargo, PTT Kargo, MNG Kargo, HepsiJet, TrendyolExpress, UPS Kargo, ByExpress Kargo, Kolay Gelsin, Horoz Lojistik, CanadaPost, DHL Kargo, Fedex, TNT Kargo, Usps, Yanwen, AliExpress, Ceva Lojistik, \u0130nter Global Kargo, Kargo\u0130st, Jetizz takip edebilirsiniz.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kargom_nerede_companies',kwargs)\n        "
    },
    "rapi_transportistas_de_argentina_cities_states": {
        "api_name": "cities_states",
        "category": "Logistics",
        "tool_name": "transportistas_de_argentina",
        "code": "async def rapi_transportistas_de_argentina_cities_states(self,*args,**kwargs):\n    '''Obten las oficinas, localidades y precios de tus envios en Argentina para Andreani, Oca y Correo Argentino.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_transportistas_de_argentina_cities_states',kwargs)\n        "
    },
    "rapi_gs1parser_parse": {
        "api_name": "parse",
        "category": "Logistics",
        "tool_name": "gs1parser",
        "code": "async def rapi_gs1parser_parse(self,*args,**kwargs):\n    '''Parse and validate GS1 barcode data\n    \n    \n\n    :param string q: Machine- or human-readable GS1 barcode data. defaults to (01)12345678901231(10)ABCD-123(30)27(11)211015\n    '''\n    return await self._request_rapid_api('rapi_gs1parser_parse',kwargs)\n        "
    },
    "rapi_transitaires_transitaires": {
        "api_name": "transitaires",
        "category": "Logistics",
        "tool_name": "transitaires",
        "code": "async def rapi_transitaires_transitaires(self,*args,**kwargs):\n    '''Transitaires de d\u00e9douanement en Nouvelle-Cal\u00e9donie \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_transitaires_transitaires',kwargs)\n        "
    },
    "rapi_trackingmore_v2_packages_v2_track": {
        "api_name": "packages_v2_track",
        "category": "Logistics",
        "tool_name": "trackingmore_v2",
        "code": "async def rapi_trackingmore_v2_packages_v2_track(self,*args,**kwargs):\n    '''All-in-one global package tracking tool. Support track and trace international 472 couriers.\n    \n    \n\n    :param string trackingNumber: Tracking number of package defaults to NY323068698GB\n    '''\n    return await self._request_rapid_api('rapi_trackingmore_v2_packages_v2_track',kwargs)\n        "
    },
    "rapi_trackingmore_v2_carriers_detect": {
        "api_name": "carriers_detect",
        "category": "Logistics",
        "tool_name": "trackingmore_v2",
        "code": "async def rapi_trackingmore_v2_carriers_detect(self,*args,**kwargs):\n    '''All-in-one global package tracking tool. Support track and trace international 472 couriers.\n    \n    \n\n    :param string trackingNumber: The tracking number of parcel defaults to YT2003521266065328\n    '''\n    return await self._request_rapid_api('rapi_trackingmore_v2_carriers_detect',kwargs)\n        "
    },
    "rapi_pack_send_api_tracking": {
        "api_name": "api_tracking",
        "category": "Logistics",
        "tool_name": "pack_send",
        "code": "async def rapi_pack_send_api_tracking(self,*args,**kwargs):\n    '''Logistics and Shipment Services\n    \n    \n\n    :param string reference:  defaults to ReferenceNumberHere\n    '''\n    return await self._request_rapid_api('rapi_pack_send_api_tracking',kwargs)\n        "
    },
    "rapi_suivi_colis_latest": {
        "api_name": "latest",
        "category": "Logistics",
        "tool_name": "suivi_colis",
        "code": "async def rapi_suivi_colis_latest(self,*args,**kwargs):\n    '''L'API de suivi des colis en Nouvelle-Cal\u00e9donie\n    \n    \n\n    :param string colisId:  defaults to CA107308006SI\n    '''\n    return await self._request_rapid_api('rapi_suivi_colis_latest',kwargs)\n        "
    },
    "rapi_suivi_colis_all": {
        "api_name": "all",
        "category": "Logistics",
        "tool_name": "suivi_colis",
        "code": "async def rapi_suivi_colis_all(self,*args,**kwargs):\n    '''L'API de suivi des colis en Nouvelle-Cal\u00e9donie\n    \n    \n\n    :param string colisid:  defaults to CA107308006SI\n    '''\n    return await self._request_rapid_api('rapi_suivi_colis_all',kwargs)\n        "
    },
    "rapi_orderful_transactions": {
        "api_name": "transactions",
        "category": "Logistics",
        "tool_name": "orderful",
        "code": "async def rapi_orderful_transactions(self,*args,**kwargs):\n    '''API for EDI\n    \n    \n\n    :param string id: Orderful Transaction ID defaults to 8209520\n    '''\n    return await self._request_rapid_api('rapi_orderful_transactions',kwargs)\n        "
    },
    "rapi_livestock_livestock": {
        "api_name": "livestock",
        "category": "Data",
        "tool_name": "livestock",
        "code": "async def rapi_livestock_livestock(self,*args,**kwargs):\n    '''Images and details of livestock offering\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_livestock_livestock',kwargs)\n        "
    },
    "rapi_unofficial_trust_pilot_consumers_get_reviews": {
        "api_name": "consumers_get_reviews",
        "category": "Data",
        "tool_name": "unofficial_trust_pilot",
        "code": "async def rapi_unofficial_trust_pilot_consumers_get_reviews(self,*args,**kwargs):\n    '''This API helps to query data relating to reviews and consumer reports to create a reviewing platform, such as : trustpilot.com\n    \n    \n\n    :param string id: The value of consumer->id field returned in .../business-units/get-reviews or .../consumers/detail endpoint defaults to 5f9c424654404f0019fb19fc\n    :param boolean? includeReportedReviews: Whether or not include reports related to a review defaults to false\n    :param integer? perPage: The number of items per response, for paging purpose defaults to 1\n    :param integer? page: The page index, for paging purpose defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_unofficial_trust_pilot_consumers_get_reviews',kwargs)\n        "
    },
    "rapi_unofficial_trust_pilot_business_units_get_web_links": {
        "api_name": "business_units_get_web_links",
        "category": "Data",
        "tool_name": "unofficial_trust_pilot",
        "code": "async def rapi_unofficial_trust_pilot_business_units_get_web_links(self,*args,**kwargs):\n    '''This API helps to query data relating to reviews and consumer reports to create a reviewing platform, such as : trustpilot.com\n    \n    \n\n    :param string id: The value of id field returned in .../business-units/search or .../business-units/search-by-domain endpoint defaults to 46a7e93b000064000500918b\n    :param string? locale: The locale code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_unofficial_trust_pilot_business_units_get_web_links',kwargs)\n        "
    },
    "rapi_ai_detection_check_text": {
        "api_name": "check_text",
        "category": "Data",
        "tool_name": "ai_detection",
        "code": "async def rapi_ai_detection_check_text(self,*args,**kwargs):\n    '''Quickly determine the authenticity of your data with just a single API call. With just a simple API call, you can quickly and easily determine if the text you're analyzing was generated by a machine or a human. This powerful tool is perfect for businesses, researchers, and developers who need to ensure the authenticity of their text data. Whether you're working with customer reviews, social media posts, or any other type of text, the AI Content Detection API has you covered. Try it today and ...\n    \n    \n\n    :param string term:  defaults to Text you think is generated by AI\n    '''\n    return await self._request_rapid_api('rapi_ai_detection_check_text',kwargs)\n        "
    },
    "rapi_vessel_data_get_vessel_photo": {
        "api_name": "get_vessel_photo",
        "category": "Data",
        "tool_name": "vessel_data",
        "code": "async def rapi_vessel_data_get_vessel_photo(self,*args,**kwargs):\n    '''Global live on board vessels information.\n    \n    \n\n    :param string shipid: \n    '''\n    return await self._request_rapid_api('rapi_vessel_data_get_vessel_photo',kwargs)\n        "
    },
    "rapi_vessel_data_get_vessel_info": {
        "api_name": "get_vessel_info",
        "category": "Data",
        "tool_name": "vessel_data",
        "code": "async def rapi_vessel_data_get_vessel_info(self,*args,**kwargs):\n    '''Global live on board vessels information.\n    \n    \n\n    :param string shipid: Ship ID which included in list return by **Get All Vessels** or **Get Vessels by Area** method.\ne.g \"SHIP_ID\": \"410553\"\n    '''\n    return await self._request_rapid_api('rapi_vessel_data_get_vessel_info',kwargs)\n        "
    },
    "rapi_vessel_data_get_vessels_by_geo_position": {
        "api_name": "get_vessels_by_geo_position",
        "category": "Data",
        "tool_name": "vessel_data",
        "code": "async def rapi_vessel_data_get_vessels_by_geo_position(self,*args,**kwargs):\n    '''Global live on board vessels information.\n    \n    \n\n    :param integer latitude:  defaults to 0\n    :param integer longitude:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_vessel_data_get_vessels_by_geo_position',kwargs)\n        "
    },
    "rapi_seo_api_video": {
        "api_name": "video",
        "category": "Data",
        "tool_name": "seo_api",
        "code": "async def rapi_seo_api_video(self,*args,**kwargs):\n    '''Simple SERP API with accurate, real-time search engine results by location, device, and language. Data for SEO, news, scholar, images, and videos.\n    \n    \n\n    :param string query: A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n    '''\n    return await self._request_rapid_api('rapi_seo_api_video',kwargs)\n        "
    },
    "rapi_seo_api_search_b": {
        "api_name": "search_b",
        "category": "Data",
        "tool_name": "seo_api",
        "code": "async def rapi_seo_api_search_b(self,*args,**kwargs):\n    '''Simple SERP API with accurate, real-time search engine results by location, device, and language. Data for SEO, news, scholar, images, and videos.\n    \n    \n\n    :param string query:  defaults to q=coffee+shop\n    '''\n    return await self._request_rapid_api('rapi_seo_api_search_b',kwargs)\n        "
    },
    "rapi_seo_api_job": {
        "api_name": "job",
        "category": "Data",
        "tool_name": "seo_api",
        "code": "async def rapi_seo_api_job(self,*args,**kwargs):\n    '''Simple SERP API with accurate, real-time search engine results by location, device, and language. Data for SEO, news, scholar, images, and videos.\n    \n    \n\n    :param string query: A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters defaults to q=nurse+practitioner\n    '''\n    return await self._request_rapid_api('rapi_seo_api_job',kwargs)\n        "
    },
    "rapi_seo_api_images": {
        "api_name": "images",
        "category": "Data",
        "tool_name": "seo_api",
        "code": "async def rapi_seo_api_images(self,*args,**kwargs):\n    '''Simple SERP API with accurate, real-time search engine results by location, device, and language. Data for SEO, news, scholar, images, and videos.\n    \n    \n\n    :param string query: \n    '''\n    return await self._request_rapid_api('rapi_seo_api_images',kwargs)\n        "
    },
    "rapi_seo_api_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "seo_api",
        "code": "async def rapi_seo_api_search(self,*args,**kwargs):\n    '''Simple SERP API with accurate, real-time search engine results by location, device, and language. Data for SEO, news, scholar, images, and videos.\n    \n    \n\n    :param string query: A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters defaults to q=employee+schedule+softwares\n    '''\n    return await self._request_rapid_api('rapi_seo_api_search',kwargs)\n        "
    },
    "rapi_rainforest_seller_products": {
        "api_name": "seller_products",
        "category": "Data",
        "tool_name": "rainforest",
        "code": "async def rapi_rainforest_seller_products(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type:  defaults to seller_products\n    :param string? url: The Amazon seller products listing page URL to retrieve seller products results from.\n\n    :param string? amazon_domain: \nThe Amazon domain to retrieve seller product listings from for the seller specified in the seller_id parameter. For a full list of supported Amazon domains see Supported Amazon Domains.\n\nNote: If the amazon_domain and seller_id parameters are supplied then the url parameter is ignored. defaults to amazon.com\n    :param string? seller_id: The Amazon Seller ID to retrieve seller product listings for. Used in combination with the amazon_domain parameter.\n\nNote: If the seller_id and amazon_domain parameters are supplied then the url parameter is ignored. Note: Seller IDs can be retrieved from Rainforest API type=offers requests. defaults to A02211013Q5HP3OMSZC7W\n    :param string? refinements: \nA comma-seperated list of refinement values to filter the seller product results by. These allow you to refine your request by values such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reviews rating 4 and over\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"price range\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"brand\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\n\nRefinement values are returned in the refinements array of each type=seller_products result (if they are displayed). Refinement values are dynamic and change by seller. If you wish to use refinements you should first issue a type=seller_products request without specifying any refinements to retrieve a master list of the avaialble refinements for the given request. You can then cache these refinement values for use on subsequent requests.\n\nFor example, to run a type=seller_products request specifying two refinements with values p_85/2470955011 and p_36/2421886011 the value of the refinements parameter would be refinements=p_85/2470955011,p_36/2421886011\n    :param integer? page: The current page of search results to retrieve. Inspect the pagination.total_pages property in the Search results to see how many pages of search results are available.\n\nupdate value of num to get additional pages\n    :param string? customer_location: Rainforest API supports retrieving data from the following Customer Locations.\n\nThe Customer Locations is specified via the customer_location request parameter.\n\nThe Customer Location determines the location that Rainforest uses when retrieving pages from Amazon. This is useful, for example, for seeing details of how a product appears on amazon.com, to a customer located in a different country. Can be used to identify cross-border shipping data and opportunities.\n\nIf no value for customer_location is supplied then Rainforest defaults to making the request from the country of the Amazon page requested - i.e. \\\"France\\\" for requests for pages from \\\"amazon.fr\\\".\n\nThe table below shows which customer_location values can be used in combination with requests to which amazon_domains. If you require another Amazon domain / customer location combination please contact our support team.\n\nSee the Request Parameters documentation for more information.\n    '''\n    return await self._request_rapid_api('rapi_rainforest_seller_products',kwargs)\n        "
    },
    "rapi_rainforest_seller_profile": {
        "api_name": "seller_profile",
        "category": "Data",
        "tool_name": "rainforest",
        "code": "async def rapi_rainforest_seller_profile(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type:  defaults to seller_profile\n    :param string? url: The Amazon seller profile page URL of the seller to retrieve results from.\n\n    :param string? seller_id: The Amazon Seller ID to retrieve seller profile details for. Used in combination with the amazon_domain parameter.\n\nNote: If the seller_id and amazon_domain parameters are supplied then the url parameter is ignored. Note: Seller IDs can be retrieved from Rainforest API type=offers requests. defaults to A02211013Q5HP3OMSZC7W\n    :param string? amazon_domain: The Amazon domain to retrieve seller profile details from for the seller specified in the seller_id parameter. For a full list of supported Amazon domains see Supported Amazon Domains.\n\nNote: If the amazon_domain and seller_id parameters are supplied then the url parameter is ignored. defaults to amazon.com\n    :param string? customer_location: Rainforest API supports retrieving data from the following Customer Locations.\n\nThe Customer Locations is specified via the customer_location request parameter.\n\nThe Customer Location determines the location that Rainforest uses when retrieving pages from Amazon. This is useful, for example, for seeing details of how a product appears on amazon.com, to a customer located in a different country. Can be used to identify cross-border shipping data and opportunities.\n\nIf no value for customer_location is supplied then Rainforest defaults to making the request from the country of the Amazon page requested - i.e. \\\"France\\\" for requests for pages from \\\"amazon.fr\\\".\n\nThe table below shows which customer_location values can be used in combination with requests to which amazon_domains. If you require another Amazon domain / customer location combination please contact our support team.\n\nSee the Request Parameters documentation for more information.\n    '''\n    return await self._request_rapid_api('rapi_rainforest_seller_profile',kwargs)\n        "
    },
    "rapi_fake_users_user": {
        "api_name": "user",
        "category": "Data",
        "tool_name": "fake_users",
        "code": "async def rapi_fake_users_user(self,*args,**kwargs):\n    '''fake users is a Api that give you fake users\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fake_users_user',kwargs)\n        "
    },
    "rapi_fake_users_get_user_by_gender": {
        "api_name": "get_user_by_gender",
        "category": "Data",
        "tool_name": "fake_users",
        "code": "async def rapi_fake_users_get_user_by_gender(self,*args,**kwargs):\n    '''fake users is a Api that give you fake users\n    \n    \n\n    :param string gender:  defaults to male\n    '''\n    return await self._request_rapid_api('rapi_fake_users_get_user_by_gender',kwargs)\n        "
    },
    "rapi_fish_species_fish_api_fishes": {
        "api_name": "fish_api_fishes",
        "category": "Data",
        "tool_name": "fish_species",
        "code": "async def rapi_fish_species_fish_api_fishes(self,*args,**kwargs):\n    '''A Restful API which is scraping the Wikipedia pages for fish species in order to collect data. The data are cached and refreshed every 24 hours.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fish_species_fish_api_fishes',kwargs)\n        "
    },
    "rapi_fish_species_fish_api_fish_name": {
        "api_name": "fish_api_fish_name",
        "category": "Data",
        "tool_name": "fish_species",
        "code": "async def rapi_fish_species_fish_api_fish_name(self,*args,**kwargs):\n    '''A Restful API which is scraping the Wikipedia pages for fish species in order to collect data. The data are cached and refreshed every 24 hours.\n    \n    \n\n    :param string name: The fish to be found defaults to Tarpon\n    '''\n    return await self._request_rapid_api('rapi_fish_species_fish_api_fish_name',kwargs)\n        "
    },
    "rapi_yoonit_currencies": {
        "api_name": "currencies",
        "category": "Data",
        "tool_name": "yoonit",
        "code": "async def rapi_yoonit_currencies(self,*args,**kwargs):\n    '''Parse quantities and units from text / text replace\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yoonit_currencies',kwargs)\n        "
    },
    "rapi_yoonit_units": {
        "api_name": "units",
        "category": "Data",
        "tool_name": "yoonit",
        "code": "async def rapi_yoonit_units(self,*args,**kwargs):\n    '''Parse quantities and units from text / text replace\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yoonit_units',kwargs)\n        "
    },
    "rapi_subtitles_for_youtube_v2_list_all_available_subtitles": {
        "api_name": "list_all_available_subtitles",
        "category": "Data",
        "tool_name": "subtitles_for_youtube_v2",
        "code": "async def rapi_subtitles_for_youtube_v2_list_all_available_subtitles(self,*args,**kwargs):\n    '''Api for fetching YouTube subtitles\n    \n    \n\n    :param string videoId: YouTube video Id defaults to hKmqP6-TcWA\n    '''\n    return await self._request_rapid_api('rapi_subtitles_for_youtube_v2_list_all_available_subtitles',kwargs)\n        "
    },
    "rapi_subtitles_for_youtube_v2_list_languages": {
        "api_name": "list_languages",
        "category": "Data",
        "tool_name": "subtitles_for_youtube_v2",
        "code": "async def rapi_subtitles_for_youtube_v2_list_languages(self,*args,**kwargs):\n    '''Api for fetching YouTube subtitles\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_subtitles_for_youtube_v2_list_languages',kwargs)\n        "
    },
    "rapi_real_estate_records_transactions": {
        "api_name": "transactions",
        "category": "Data",
        "tool_name": "real_estate_records",
        "code": "async def rapi_real_estate_records_transactions(self,*args,**kwargs):\n    '''Real estate transaction records for New York City and whole New Jersey. Public records have been collected from various sites, standardized using Here.com API, with geolocation information for your consumption. \n    \n    \n\n    :param string zipcode:  defaults to 10019\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_real_estate_records_transactions',kwargs)\n        "
    },
    "rapi_real_estate_records_detail": {
        "api_name": "detail",
        "category": "Data",
        "tool_name": "real_estate_records",
        "code": "async def rapi_real_estate_records_detail(self,*args,**kwargs):\n    '''Real estate transaction records for New York City and whole New Jersey. Public records have been collected from various sites, standardized using Here.com API, with geolocation information for your consumption. \n    \n    \n\n    :param string id:  defaults to 6144a05f3afc5ca06e88a2ab\n    '''\n    return await self._request_rapid_api('rapi_real_estate_records_detail',kwargs)\n        "
    },
    "rapi_tld_get_list_of_top_level_domains": {
        "api_name": "get_list_of_top_level_domains",
        "category": "Data",
        "tool_name": "tld",
        "code": "async def rapi_tld_get_list_of_top_level_domains(self,*args,**kwargs):\n    '''Collection of official top level domains\n    \n    \n\n    :param string? tlds: This queries to check if a specific TLD exist.  If the queried TLDs are found, they are returned in a Json Array. If none are found an empty json array [ ] is returned.\n    '''\n    return await self._request_rapid_api('rapi_tld_get_list_of_top_level_domains',kwargs)\n        "
    },
    "rapi_historical_figures_by_api_ninjas_v1_historicalfigures": {
        "api_name": "v1_historicalfigures",
        "category": "Data",
        "tool_name": "historical_figures_by_api_ninjas",
        "code": "async def rapi_historical_figures_by_api_ninjas_v1_historicalfigures(self,*args,**kwargs):\n    '''Get vital information on the most famous people in history. See more info at https://api-ninjas.com/api/historicalfigures.\n    \n    \n\n    :param integer? offset: number of results to offset pagination.\n    :param string? name: name of the person to search. Includes partial results (e.g. julius will match Julius Caesar). defaults to julius caesar\n    '''\n    return await self._request_rapid_api('rapi_historical_figures_by_api_ninjas_v1_historicalfigures',kwargs)\n        "
    },
    "rapi_phone_area_code": {
        "api_name": "area_code",
        "category": "Data",
        "tool_name": "phone",
        "code": "async def rapi_phone_area_code(self,*args,**kwargs):\n    '''Full set of cool Telephone validation functions with a coverage of more than a hundred different countries.  Phone Metropolis API can analyse, get location information and parse the content of a given phone number. [This API is under maintenance and is not working properly] \n    \n    \n\n    :param string country: \"ISO 2 letter country code\" or \"Name of the Country in English\" defaults to BR\n    :param string region: Geographic Region (e.g. City). No accented letter is required. defaults to Manaus\n    '''\n    return await self._request_rapid_api('rapi_phone_area_code',kwargs)\n        "
    },
    "rapi_phone_analysis": {
        "api_name": "analysis",
        "category": "Data",
        "tool_name": "phone",
        "code": "async def rapi_phone_analysis(self,*args,**kwargs):\n    '''Full set of cool Telephone validation functions with a coverage of more than a hundred different countries.  Phone Metropolis API can analyse, get location information and parse the content of a given phone number. [This API is under maintenance and is not working properly] \n    \n    \n\n    :param string telephone: Full Telephone Number defaults to 1 (703) 259-8585\n    :param string? country: \"ISO 2 letter country code\" or \"Name of the Country in English\" defaults to US\n    '''\n    return await self._request_rapid_api('rapi_phone_analysis',kwargs)\n        "
    },
    "rapi_phone_iso": {
        "api_name": "iso",
        "category": "Data",
        "tool_name": "phone",
        "code": "async def rapi_phone_iso(self,*args,**kwargs):\n    '''Full set of cool Telephone validation functions with a coverage of more than a hundred different countries.  Phone Metropolis API can analyse, get location information and parse the content of a given phone number. [This API is under maintenance and is not working properly] \n    \n    \n\n    :param string country: Description of the Country in English defaults to Canada\n    '''\n    return await self._request_rapid_api('rapi_phone_iso',kwargs)\n        "
    },
    "rapi_phone_directory": {
        "api_name": "directory",
        "category": "Data",
        "tool_name": "phone",
        "code": "async def rapi_phone_directory(self,*args,**kwargs):\n    '''Full set of cool Telephone validation functions with a coverage of more than a hundred different countries.  Phone Metropolis API can analyse, get location information and parse the content of a given phone number. [This API is under maintenance and is not working properly] \n    \n    \n\n    :param string country: \"ISO 2 letter country code\" or \"Name of the Country in English\" defaults to BR\n    '''\n    return await self._request_rapid_api('rapi_phone_directory',kwargs)\n        "
    },
    "rapi_weather_1_hour_minutely_forecast_nowcast": {
        "api_name": "1_hour_minutely_forecast_nowcast",
        "category": "Data",
        "tool_name": "weather",
        "code": "async def rapi_weather_1_hour_minutely_forecast_nowcast(self,*args,**kwargs):\n    '''Current weather data API, and Weather forecast API - Basic access to the Weatherbit.io Weather API.\n    \n    \n\n    :param integer lat:  defaults to 35.5\n    :param integer lon:  defaults to -78.5\n    :param ENUM? units: metric (Default), imperial\n    '''\n    return await self._request_rapid_api('rapi_weather_1_hour_minutely_forecast_nowcast',kwargs)\n        "
    },
    "rapi_weather_severe_weather_alerts": {
        "api_name": "severe_weather_alerts",
        "category": "Data",
        "tool_name": "weather",
        "code": "async def rapi_weather_severe_weather_alerts(self,*args,**kwargs):\n    '''Current weather data API, and Weather forecast API - Basic access to the Weatherbit.io Weather API.\n    \n    \n\n    :param integer lat: Latitude defaults to 38.5\n    :param integer lon: Longitude defaults to -78.5\n    '''\n    return await self._request_rapid_api('rapi_weather_severe_weather_alerts',kwargs)\n        "
    },
    "rapi_scrapeninja_scrape_legacy": {
        "api_name": "scrape_legacy",
        "category": "Data",
        "tool_name": "scrapeninja",
        "code": "async def rapi_scrapeninja_scrape_legacy(self,*args,**kwargs):\n    '''High performance API for web scraping. Emulates Chrome TLS fingerprint, backed by rotating proxies (geos: US, EU, Brazil, France, Germany, 4g residential proxies available!) and smart retries. Use this when node.js/curl/python fails to load the website even with headers fully identical to Chrome, but you still need fast scraping and want to avoid using Puppeteer and JS evaluation (ScrapeNinja returns raw HTTP responses by default). Javascript rendering is available, as well! Read more: https:...\n    \n    \n\n    :param string url:  defaults to https://apiroad.net/ajax-test.html\n    '''\n    return await self._request_rapid_api('rapi_scrapeninja_scrape_legacy',kwargs)\n        "
    },
    "rapi_lexicala_searchentries": {
        "api_name": "searchentries",
        "category": "Data",
        "tool_name": "lexicala",
        "code": "async def rapi_lexicala_searchentries(self,*args,**kwargs):\n    '''Lexicala API is a REST interface offering access to dictionary and lexical data from our monolingual, bilingual, multilingual and learner\u2019s dictionaries in JSON format.\n    \n    \n\n    :param integer? sample: Number of randomly-sampled results to return\n    :param string? source: The resource to search within. The default value is 'global', i.e. the Global series\n    :param string? language: The language code of the entry\u2019s language. For an extensive list of language codes, see GET /languages\n    :param boolean? analyzed: Whether to search using the language analyzer or to get exact matches only. The default value is 'false'\n    :param string? subcategorization: The subcategorization (e.g. countable, transitive, \u2026) to search for\n    :param boolean? polysemous: Whether to only return polysemous entries\n    :param string? pos: The part of speech (POS) to search for\n    :param string? gender: The grammatical gender to search for\n    :param boolean? monosemous: Whether to only return monosemous entries\n    :param boolean? morph: Whether to search in headword inflections if exist. The default value is 'false'\n    :param string? text: The headword text to search for\n    :param string? number: The grammatical number to search for\n    :param integer? page: Page number of results to return (1-indexed). The default value is 1\n    '''\n    return await self._request_rapid_api('rapi_lexicala_searchentries',kwargs)\n        "
    },
    "rapi_google_search_results_scraper_top_news": {
        "api_name": "top_news",
        "category": "Data",
        "tool_name": "google_search_results_scraper",
        "code": "async def rapi_google_search_results_scraper_top_news(self,*args,**kwargs):\n    '''Scrapes search results from google including ads, translation, weather, knowledge graph results, image search, top news results, people also ask, did you mean, dictionary results and more.\n    \n    \n\n    :param string? region:  defaults to US\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_google_search_results_scraper_top_news',kwargs)\n        "
    },
    "rapi_jobtitle_status": {
        "api_name": "status",
        "category": "Data",
        "tool_name": "jobtitle",
        "code": "async def rapi_jobtitle_status(self,*args,**kwargs):\n    '''jobtitle\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jobtitle_status',kwargs)\n        "
    },
    "rapi_ip_whois_geolocation_ip_lookup": {
        "api_name": "ip_lookup",
        "category": "Data",
        "tool_name": "ip_whois_geolocation",
        "code": "async def rapi_ip_whois_geolocation_ip_lookup(self,*args,**kwargs):\n    '''This service is provided by ipfinder.ch and offers precise data on both IPv4 and IPv6 addresses, including information on the associated AS, company, location, abuse contact, and more. This API is one of the most accurate IP WHOIS lookups available and offers 35 different specifications for each IP, making it an excellent tool for both exact analysis and statistical purposes. In addition to its accuracy, this API is also affordable, making it an excellent choice for businesses and individuals...\n    \n    \n\n    :param string ip:  defaults to 1.1.1.1\n    '''\n    return await self._request_rapid_api('rapi_ip_whois_geolocation_ip_lookup',kwargs)\n        "
    },
    "rapi_motivational_quotes_getcategories": {
        "api_name": "getcategories",
        "category": "Data",
        "tool_name": "motivational_quotes",
        "code": "async def rapi_motivational_quotes_getcategories(self,*args,**kwargs):\n    '''Our Motivational Quotes API is the perfect tool to add an inspiring touch to your project. With our API, you can access a vast library of motivational quotes from famous authors, speakers, and thinkers. These quotes can be used to add motivational content to your app, website, or social media feed.\n\nOur API is hosted on Cloudflare servers with edge technology, ensuring fast and reliable access to the data you need. With our API, you can easily retrieve quotes that fit specific themes or categ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_motivational_quotes_getcategories',kwargs)\n        "
    },
    "rapi_motivational_quotes_getquote": {
        "api_name": "getquote",
        "category": "Data",
        "tool_name": "motivational_quotes",
        "code": "async def rapi_motivational_quotes_getquote(self,*args,**kwargs):\n    '''Our Motivational Quotes API is the perfect tool to add an inspiring touch to your project. With our API, you can access a vast library of motivational quotes from famous authors, speakers, and thinkers. These quotes can be used to add motivational content to your app, website, or social media feed.\n\nOur API is hosted on Cloudflare servers with edge technology, ensuring fast and reliable access to the data you need. With our API, you can easily retrieve quotes that fit specific themes or categ...\n    \n    \n\n    :param string? category:  defaults to Appreciation\n    '''\n    return await self._request_rapid_api('rapi_motivational_quotes_getquote',kwargs)\n        "
    },
    "rapi_open_graph_seo_scraper_scrape_open_graph": {
        "api_name": "scrape_open_graph",
        "category": "Data",
        "tool_name": "open_graph_seo_scraper",
        "code": "async def rapi_open_graph_seo_scraper_scrape_open_graph(self,*args,**kwargs):\n    '''Extract open graph and social details from any website or URL. Simply provide a URL and the API will retrieve the OpenGraph data you. Very lightweight, fast, and easy to use\n    \n    \n\n    :param string url:  defaults to amazon.com\n    '''\n    return await self._request_rapid_api('rapi_open_graph_seo_scraper_scrape_open_graph',kwargs)\n        "
    },
    "rapi_outsystems_community_api_get_profiles": {
        "api_name": "get_profiles",
        "category": "Data",
        "tool_name": "outsystems_community_api",
        "code": "async def rapi_outsystems_community_api_get_profiles(self,*args,**kwargs):\n    '''Get information about the OutSystems community. This is not an official OutSystems API.\n    \n    \n\n    :param ENUM? sort_by: String (desc, asc). Orders the results by either Ascending or Descending order.\n    :param ENUM? order_by: String (name, rank, kudos, components, solutions, profile_score, training_score, forums_score, forge_score, ideas_score, total_score, forums_posts, forums_comments, ideas_submitted, ideas_commented, forge_components, publications_articles, certifications). Sorts the results by chosen value.\n    :param integer? page: Used to see the next page of profiles, eg limit=15 and page=2 will show you profiles 15-30 defaults to 1\n    :param integer? limit: The limit of results per page that has been set. Integer between 1 - 50 (inclusive) defaults to 50\n    :param string? keyword: Search keyword against profile name, job title, company or location.\n    '''\n    return await self._request_rapid_api('rapi_outsystems_community_api_get_profiles',kwargs)\n        "
    },
    "rapi_outsystems_community_api_get_profile_series": {
        "api_name": "get_profile_series",
        "category": "Data",
        "tool_name": "outsystems_community_api",
        "code": "async def rapi_outsystems_community_api_get_profile_series(self,*args,**kwargs):\n    '''Get information about the OutSystems community. This is not an official OutSystems API.\n    \n    \n\n    :param string profile_id:  defaults to yjjslxnjng\n    '''\n    return await self._request_rapid_api('rapi_outsystems_community_api_get_profile_series',kwargs)\n        "
    },
    "rapi_outsystems_community_api_get_profile": {
        "api_name": "get_profile",
        "category": "Data",
        "tool_name": "outsystems_community_api",
        "code": "async def rapi_outsystems_community_api_get_profile(self,*args,**kwargs):\n    '''Get information about the OutSystems community. This is not an official OutSystems API.\n    \n    \n\n    :param string? profile_url: \n    :param string? profile_id:  defaults to yjjslxnjng\n    '''\n    return await self._request_rapid_api('rapi_outsystems_community_api_get_profile',kwargs)\n        "
    },
    "rapi_barcodes_search_product_details": {
        "api_name": "search_product_details",
        "category": "Data",
        "tool_name": "barcodes",
        "code": "async def rapi_barcodes_search_product_details(self,*args,**kwargs):\n    '''Search over 500+ million products with UPC, EAN, JAN, ISBN barcodes.\n    \n    \n\n    :param string query: **Barcode** or **search term**\n    :param integer? page: If you want search results - **page number**\nIf you are querying for a barcode, leave it blank.\n\nIf you leave it blank (if you are querying for a search term), the first page will be returned.\n    '''\n    return await self._request_rapid_api('rapi_barcodes_search_product_details',kwargs)\n        "
    },
    "rapi_value_serp_google_product": {
        "api_name": "google_product",
        "category": "Data",
        "tool_name": "value_serp",
        "code": "async def rapi_value_serp_google_product(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string product_id: The Google Product ID to retrieve. Google Product IDs are returned by [Google Shopping search ](https://www.valueserp.com/docs/search-api/results/google/shopping)requests.\n    :param string type:  defaults to product\n    :param string? gl: The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n\n    :param string? hl: The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n\n    :param string? uule: The Google UULE parameter - use to pass through a custom uule parameter to Google. VALUE SERP automatically generates the uule when you use the `location` parameter but we allow you to overwrite it directly by specifying a uule directly.\n\n    :param string? location_auto: If the `location` field is set to a VALUE SERP built-in location from the Locations API, and `location_auto` is set to `true` (default) then the google_domain, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n\n    :param string? google_domain: The Google domain to use to run the query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com.`\n\n    :param string? location: Determines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP `built-in locations `then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_autoparameter`).\n\nNote that Google Product requests are highly location-sensitive. It's important that you set a `location` parameter for the geographic location in which the `product_id` was found.\n    :param boolean? product_condition_new: Determines whether to filter to only new (non-used) products. Valid values are `true` or `false.`\n\n    :param boolean? product_condition_used: Determines whether to filter to only used (non-new) products. Valid values are `true` or `false.`\n\n    :param boolean? product_free_shipping: Determines whether to filter to only products with free shipping. Valid values are `true` or `false.`\n\n    '''\n    return await self._request_rapid_api('rapi_value_serp_google_product',kwargs)\n        "
    },
    "rapi_value_serp_google_places": {
        "api_name": "google_places",
        "category": "Data",
        "tool_name": "value_serp",
        "code": "async def rapi_value_serp_google_places(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? page: Determines the page of results to return, defaults to `1`. Use in combination with the `num` parameter to implement pagination.\n\n    :param string? hl: The `hl` parameter determines the Google UI language to return results. View the full list of supported `hl` values [here](https://www.valueserp.com/docs/search-api/reference/google-languages). Defaults to `en`.\n\n    :param string? location: **Google Local**\n\nDetermines the geographic location in which the query is executed. You can enter any location as free-text, but if you choose one of the VALUE SERP[ built-in locations](https://www.valueserp.com/docs/locations-api) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location (note that this behaviour can be disabled via the `location_auto` parameter).\n\n**Google Maps**\nFormatting the `location` parameter for Google Maps requests\n\nTo get Google Maps results based on latitude and longitude coordinates you should specify your `location` parameter in the form `location=lat:43.437677,lon:-3.8392765,zoom:15` where `43.437677` is your latitude value, `-3.8392765` is your longitude value and `15` is your zoom value.\n\nDelimit each section with a comma `,`, and delimit each name/value pair with a colon `:`.\n\nValid `zoom` values are between `3` (maximum zoom-out) and `21` (maximum zoom-in).\n\nGoogle can return results outside the bounds of the zoom level in some instances. If this behaviour is not desirable then specifying `strict:true` in the `location` parameter will only return results within the current zoom level. Eg. `lat:39.58467741051493,lon:-0.6752313712718961,zoom:15,strict:true`\n    :param string? gl: The `gl` parameter determines the Google country to use for the query. View the full list of supported `gl` values [here](https://www.valueserp.com/docs/search-api/reference/google-countries). Defaults to `us`.\n\n    :param integer? num: Note the maximum number of results per page Google allow, for Places results, is `20`.\n\nDetermines the number of results to show per `page`. Use in combination with the `page` parameter to implement pagination. \n\n    :param string? google_domain: The Google domain to use to run the search query. View the full list of supported `google_domain` values [here](https://www.valueserp.com/docs/search-api/reference/google-domains). Defaults to `google.com`.\n    :param boolean? location_auto: If the `location` field is set to a VALUE SERP [built-in location](https://www.valueserp.com/docs/locations-api) from the [Locations API](https://www.valueserp.com/docs/locations-api), and `location_auto` is set to `true` (default) then the `google_domain`, `gl` and `hl` parameters are automatically updated to the domain, country and language that match the built-in location. Valid values are `true` (default) to enable this behaviour or `false` to disable.\n    '''\n    return await self._request_rapid_api('rapi_value_serp_google_places',kwargs)\n        "
    },
    "rapi_airportsdata_get_airports": {
        "api_name": "get_airports",
        "category": "Data",
        "tool_name": "airportsdata",
        "code": "async def rapi_airportsdata_get_airports(self,*args,**kwargs):\n    '''Get basic information from 28k+ airports and landing strips around the world. With filtering, sorting and pagination options. \n    \n    \n\n    :param string? lid: U.S. FAA Location Identifier (12,566 entries), or an empty string\n    :param string? sortBy: Sort results by a property value. Possible values are: IATA, IACO, name, city, subd, country, tz, lid and elevation.  defaults to iata\n    :param string? name: Filter results by name. The value should be sent as comma-separated.  For example, for *Zabrat Airport*, send *Zabrat,Airport* defaults to Ishigaki,Airport\n    :param integer? limit: Limit to n results. defaults to 50\n    :param integer? elevationOver: Filter airports with an MSL elevation, or highest point of the landing area in feet, over this value. defaults to 50\n    :param string? country:  ISO 3166-1 alpha-2 country code (plus XK for Kosovo). defaults to JP\n    :param string? city: Filter results by city. The value should be sent as comma-separated.  For example, for *Zakynthos Island*, send *Zakynthos,Island* defaults to Ishigaki\n    :param integer? skip: Skip first n results.  defaults to 0\n    :param string? sortByOrder: Specify the sorting order. Possible values are *asc* and *desc*. Results are sorted in ascending order by default.  defaults to desc\n    :param integer? elevationUnder: Filter airports with an MSL elevation, or highest point of the landing area in feet, under this value. defaults to 2000\n    :param string? tz: Timezone expressed as a tz database name (IANA-compliant) or an empty string for Antarctica. defaults to Asia/Tokyo\n    :param string? icao:  defaults to ROIG\n    :param string? subd: Filter results by subdivision (e.g. state, province, region, etc.). The value should be sent as comma-separated.  For example, for *Newfoundland and Labrador*, send *Newfoundland,and,Labrador* defaults to Okinawa\n    :param string? iata:  defaults to ISG\n    '''\n    return await self._request_rapid_api('rapi_airportsdata_get_airports',kwargs)\n        "
    },
    "rapi_mobile_phones_get_brands": {
        "api_name": "get_brands",
        "category": "Data",
        "tool_name": "mobile_phones",
        "code": "async def rapi_mobile_phones_get_brands(self,*args,**kwargs):\n    '''An API that provides information about all mobile brands and their devices would be a comprehensive source of data for developers seeking to build applications or services related to mobile devices. Such an API could include details on all the mobile brands currently on the market, as well as information about each brand's individual devices, such as model names, technical specifications, and images. The \nAPI might also provide additional metadata, such as operating system versions and releas...\n    \n    \n\n    :param integer limit:  defaults to 60\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_mobile_phones_get_brands',kwargs)\n        "
    },
    "rapi_power_bi_smartable_getnews": {
        "api_name": "getnews",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_getnews(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_getnews',kwargs)\n        "
    },
    "rapi_power_bi_smartable_getcommunities": {
        "api_name": "getcommunities",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_getcommunities(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_getcommunities',kwargs)\n        "
    },
    "rapi_power_bi_smartable_getsamples": {
        "api_name": "getsamples",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_getsamples(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_getsamples',kwargs)\n        "
    },
    "rapi_power_bi_smartable_getlearningresources": {
        "api_name": "getlearningresources",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_getlearningresources(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_getlearningresources',kwargs)\n        "
    },
    "rapi_power_bi_smartable_getpeople": {
        "api_name": "getpeople",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_getpeople(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_getpeople',kwargs)\n        "
    },
    "rapi_power_bi_smartable_gettopics": {
        "api_name": "gettopics",
        "category": "Data",
        "tool_name": "power_bi_smartable",
        "code": "async def rapi_power_bi_smartable_gettopics(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_power_bi_smartable_gettopics',kwargs)\n        "
    },
    "rapi_zillow_v2_zestimate_history": {
        "api_name": "zestimate_history",
        "category": "Data",
        "tool_name": "zillow_v2",
        "code": "async def rapi_zillow_v2_zestimate_history(self,*args,**kwargs):\n    '''Access US and CA property data in JSON, CSV, or Excel formats. Search listings, compare zestimate home values, and discover agent details.\n    \n    \n\n    :param string zpid:  defaults to 20476226\n    '''\n    return await self._request_rapid_api('rapi_zillow_v2_zestimate_history',kwargs)\n        "
    },
    "rapi_zillow_v2_property_details": {
        "api_name": "property_details",
        "category": "Data",
        "tool_name": "zillow_v2",
        "code": "async def rapi_zillow_v2_property_details(self,*args,**kwargs):\n    '''Access US and CA property data in JSON, CSV, or Excel formats. Search listings, compare zestimate home values, and discover agent details.\n    \n    \n\n    :param string zpid:  defaults to 7594920\n    '''\n    return await self._request_rapid_api('rapi_zillow_v2_property_details',kwargs)\n        "
    },
    "rapi_zillow_v2_walk_transit_and_bike_score": {
        "api_name": "walk_transit_and_bike_score",
        "category": "Data",
        "tool_name": "zillow_v2",
        "code": "async def rapi_zillow_v2_walk_transit_and_bike_score(self,*args,**kwargs):\n    '''Access US and CA property data in JSON, CSV, or Excel formats. Search listings, compare zestimate home values, and discover agent details.\n    \n    \n\n    :param integer? zpid:  defaults to 20485700\n    '''\n    return await self._request_rapid_api('rapi_zillow_v2_walk_transit_and_bike_score',kwargs)\n        "
    },
    "rapi_zillow_v2_agent_reviews": {
        "api_name": "agent_reviews",
        "category": "Data",
        "tool_name": "zillow_v2",
        "code": "async def rapi_zillow_v2_agent_reviews(self,*args,**kwargs):\n    '''Access US and CA property data in JSON, CSV, or Excel formats. Search listings, compare zestimate home values, and discover agent details.\n    \n    \n\n    :param string zuid:  defaults to X1-ZUz0nmomozy2o9_9bpwk\n    :param integer? page: \n    '''\n    return await self._request_rapid_api('rapi_zillow_v2_agent_reviews',kwargs)\n        "
    },
    "rapi_zillow_v2_agent_s_rental_listings": {
        "api_name": "agent_s_rental_listings",
        "category": "Data",
        "tool_name": "zillow_v2",
        "code": "async def rapi_zillow_v2_agent_s_rental_listings(self,*args,**kwargs):\n    '''Access US and CA property data in JSON, CSV, or Excel formats. Search listings, compare zestimate home values, and discover agent details.\n    \n    \n\n    :param string zuid:  defaults to X1-ZUz0nmomozy2o9_9bpwk\n    :param integer? page: \n    '''\n    return await self._request_rapid_api('rapi_zillow_v2_agent_s_rental_listings',kwargs)\n        "
    },
    "rapi_serp_results_serp": {
        "api_name": "serp",
        "category": "Data",
        "tool_name": "serp_results",
        "code": "async def rapi_serp_results_serp(self,*args,**kwargs):\n    '''Get Search Engine Results with simple API (SERP API)\n    \n    \n\n    :param string query: Search Query\n\ne.g. `music site:youtube.com` defaults to YouTube\n    :param string? proxy: Proxy Country defaults to US\n    :param integer? max: Number of Results defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_serp_results_serp',kwargs)\n        "
    },
    "rapi_spotify_data_artist_featuring": {
        "api_name": "artist_featuring",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_featuring(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_featuring',kwargs)\n        "
    },
    "rapi_spotify_data_artist_discovered_on": {
        "api_name": "artist_discovered_on",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_discovered_on(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_discovered_on',kwargs)\n        "
    },
    "rapi_spotify_data_artist_appears_on": {
        "api_name": "artist_appears_on",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_appears_on(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_appears_on',kwargs)\n        "
    },
    "rapi_spotify_data_artist_albums": {
        "api_name": "artist_albums",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_albums(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    :param string? offset:  defaults to 0\n    :param string? limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_albums',kwargs)\n        "
    },
    "rapi_spotify_data_artist_discography_overview": {
        "api_name": "artist_discography_overview",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_discography_overview(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_discography_overview',kwargs)\n        "
    },
    "rapi_spotify_data_artist_singles": {
        "api_name": "artist_singles",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_singles(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string? id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    :param string? offset:  defaults to 0\n    :param string? limit:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_singles',kwargs)\n        "
    },
    "rapi_spotify_data_artist_overview": {
        "api_name": "artist_overview",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_artist_overview(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_artist_overview',kwargs)\n        "
    },
    "rapi_spotify_data_get_artists": {
        "api_name": "get_artists",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_get_artists(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string ids: Artist IDs (you can use commas) defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_get_artists',kwargs)\n        "
    },
    "rapi_spotify_data_album_metadata": {
        "api_name": "album_metadata",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_album_metadata(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string? id: Album ID defaults to 3IBcauSj5M2A6lTeffJzdv\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_album_metadata',kwargs)\n        "
    },
    "rapi_spotify_data_album_tracks": {
        "api_name": "album_tracks",
        "category": "Data",
        "tool_name": "spotify_data",
        "code": "async def rapi_spotify_data_album_tracks(self,*args,**kwargs):\n    '''Spotify Data\n    \n    \n\n    :param string id: Album ID defaults to 3IBcauSj5M2A6lTeffJzdv\n    :param integer? offset:  defaults to 0\n    :param integer? limit:  defaults to 300\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_album_tracks',kwargs)\n        "
    },
    "rapi_realtor_api_for_real_estate_data_realtorschoollist": {
        "api_name": "realtorschoollist",
        "category": "Data",
        "tool_name": "realtor_api_for_real_estate_data",
        "code": "async def rapi_realtor_api_for_real_estate_data_realtorschoollist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string page:  defaults to 1\n    :param string city:  defaults to San Jose\n    :param string school_level:  defaults to elementary\n    :param string state_code:  defaults to CA\n    '''\n    return await self._request_rapid_api('rapi_realtor_api_for_real_estate_data_realtorschoollist',kwargs)\n        "
    },
    "rapi_realtor_api_for_real_estate_data_realtoragentlist": {
        "api_name": "realtoragentlist",
        "category": "Data",
        "tool_name": "realtor_api_for_real_estate_data",
        "code": "async def rapi_realtor_api_for_real_estate_data_realtoragentlist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string page:  defaults to 1\n    :param string state_code:  defaults to CA\n    :param string city:  defaults to San Jose\n    '''\n    return await self._request_rapid_api('rapi_realtor_api_for_real_estate_data_realtoragentlist',kwargs)\n        "
    },
    "rapi_realtor_api_for_real_estate_data_realtorpropertylist": {
        "api_name": "realtorpropertylist",
        "category": "Data",
        "tool_name": "realtor_api_for_real_estate_data",
        "code": "async def rapi_realtor_api_for_real_estate_data_realtorpropertylist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string offset:  defaults to 0\n    :param string city:  defaults to San Jose\n    :param string state_code:  defaults to CA\n    '''\n    return await self._request_rapid_api('rapi_realtor_api_for_real_estate_data_realtorpropertylist',kwargs)\n        "
    },
    "rapi_fluximmo_get_search": {
        "api_name": "get_search",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_search(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    :param string postal_codes: Liste des codes postaux : s\u00e9par\u00e9s par une virgule. e.g. \\\"75003,75001,75004,63122\\\"\n    :param string? website: Portail immobilier\n    :param integer? bedrooms: Nombre de chambre\n    :param boolean? agency: true: agence  |  false: particulier defaults to true\n    :param boolean? furnished: Bien meubl\u00e9 defaults to true\n    :param string? property_type: Type de bien defaults to House\n    :param integer? limit: Limite d'annonces renvoy\u00e9es\n    :param string? city: Ville : les annonces retourn\u00e9es seront une jointure de la ville et du code postal\n    :param string? search_type: Achat ou location defaults to rent\n    :param integer? price_min: Prix minimum\n    :param integer? price_max: Prix maximum\n    :param integer? rooms: Nombre de pi\u00e8ces\n    :param boolean? has_photos:  defaults to true\n    :param integer? area_max: Surface maximum\n    :param string? since_id: Since unique_id\n    :param boolean? is_new: Bien neuf ou en construction defaults to true\n    :param integer? area_min: Surface minimum\n    :param string? before_id: Before unique_id\n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_search',kwargs)\n        "
    },
    "rapi_fluximmo_get_alert_adverts": {
        "api_name": "get_alert_adverts",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_alert_adverts(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    :param integer alert_id: The unique id of the script\n    :param integer? limit: Limite d'annonces renvoy\u00e9es\n    :param string? since_id: Since unique_id\n    :param string? before_id: Before unique_id\n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_alert_adverts',kwargs)\n        "
    },
    "rapi_fluximmo_get_alerts_list_or_create": {
        "api_name": "get_alerts_list_or_create",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_alerts_list_or_create(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_alerts_list_or_create',kwargs)\n        "
    },
    "rapi_fluximmo_get_webhook_sample": {
        "api_name": "get_webhook_sample",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_webhook_sample(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_webhook_sample',kwargs)\n        "
    },
    "rapi_fluximmo_get_annonce_by_urls": {
        "api_name": "get_annonce_by_urls",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_annonce_by_urls(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    :param string url: url with https://\n    :param string? source: Source\n    :param string? site_id: Site ID\n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_annonce_by_urls',kwargs)\n        "
    },
    "rapi_fluximmo_get_an_alert": {
        "api_name": "get_an_alert",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_an_alert(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    :param integer alert_id: The unique id of the script\n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_an_alert',kwargs)\n        "
    },
    "rapi_fluximmo_get_portail_api": {
        "api_name": "get_portail_api",
        "category": "Data",
        "tool_name": "fluximmo",
        "code": "async def rapi_fluximmo_get_portail_api(self,*args,**kwargs):\n    '''API de flux immobilier \ud83c\udfe1: Scraper LEBONCOIN, PAP, EXPLORIMMO, MEILLEURSAGENTS et plus de 20 portails - Cr\u00e9ez des services innovants gr\u00e2ce \u00e0 notre flux d'annonces immobili\u00e8res en temps r\u00e9el !\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fluximmo_get_portail_api',kwargs)\n        "
    },
    "rapi_telephonetocountry_getcountrybynumber": {
        "api_name": "getcountrybynumber",
        "category": "Data",
        "tool_name": "telephonetocountry",
        "code": "async def rapi_telephonetocountry_getcountrybynumber(self,*args,**kwargs):\n    '''Validate and get location information about phone number. Supports 245 countries\n    \n    \n\n    :param string q: Phone number to search defaults to 12136210002\n    '''\n    return await self._request_rapid_api('rapi_telephonetocountry_getcountrybynumber',kwargs)\n        "
    },
    "rapi_book_getbook": {
        "api_name": "getbook",
        "category": "Data",
        "tool_name": "book",
        "code": "async def rapi_book_getbook(self,*args,**kwargs):\n    '''get and save testing book data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_book_getbook',kwargs)\n        "
    },
    "rapi_100_success_instagram_api_scalable_robust_media_info": {
        "api_name": "media_info",
        "category": "Data",
        "tool_name": "100_success_instagram_api_scalable_robust",
        "code": "async def rapi_100_success_instagram_api_scalable_robust_media_info(self,*args,**kwargs):\n    '''750 requests a minute, 100% success rate Instagram API, any scale is supported. Need help/ custom plan? contact us on Telegram: https://t.me/apimaster10 Join the channel for updates: https://t.me/socialdataapis\n    \n    \n\n    :param string media_id: needs to be the same as mediaId in url defaults to 2489189987845943833_7593209169\n    :param string mediaId:  defaults to 2489189987845943833_7593209169\n    '''\n    return await self._request_rapid_api('rapi_100_success_instagram_api_scalable_robust_media_info',kwargs)\n        "
    },
    "rapi_100_success_instagram_api_scalable_robust_user_followers": {
        "api_name": "user_followers",
        "category": "Data",
        "tool_name": "100_success_instagram_api_scalable_robust",
        "code": "async def rapi_100_success_instagram_api_scalable_robust_user_followers(self,*args,**kwargs):\n    '''750 requests a minute, 100% success rate Instagram API, any scale is supported. Need help/ custom plan? contact us on Telegram: https://t.me/apimaster10 Join the channel for updates: https://t.me/socialdataapis\n    \n    \n\n    :param integer userId:  defaults to 5313965459\n    :param string? order:  defaults to default\n    :param string? query: Filter followers by username\n    :param string? enable_groups:  defaults to true\n    :param string? max_id: Use \\\\\\\\\\\\\\\"next_max_id\\\\\\\\\\\\\\\" as the value for pagination\n    :param string? search_surface: \n    '''\n    return await self._request_rapid_api('rapi_100_success_instagram_api_scalable_robust_user_followers',kwargs)\n        "
    },
    "rapi_100_success_instagram_api_scalable_robust_post_comments": {
        "api_name": "post_comments",
        "category": "Data",
        "tool_name": "100_success_instagram_api_scalable_robust",
        "code": "async def rapi_100_success_instagram_api_scalable_robust_post_comments(self,*args,**kwargs):\n    '''750 requests a minute, 100% success rate Instagram API, any scale is supported. Need help/ custom plan? contact us on Telegram: https://t.me/apimaster10 Join the channel for updates: https://t.me/socialdataapis\n    \n    \n\n    :param integer mediaId:  defaults to 2872132510161250751\n    :param object? min_id:  defaults to {}\n    :param object? max_id:  defaults to {}\n    '''\n    return await self._request_rapid_api('rapi_100_success_instagram_api_scalable_robust_post_comments',kwargs)\n        "
    },
    "rapi_news_content_extraction_live_get_support_languages": {
        "api_name": "get_support_languages",
        "category": "Data",
        "tool_name": "news_content_extraction_live",
        "code": "async def rapi_news_content_extraction_live_get_support_languages(self,*args,**kwargs):\n    '''Comprehensive Extraction of Web News Content\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_content_extraction_live_get_support_languages',kwargs)\n        "
    },
    "rapi_news_content_extraction_live_get_hot_topics": {
        "api_name": "get_hot_topics",
        "category": "Data",
        "tool_name": "news_content_extraction_live",
        "code": "async def rapi_news_content_extraction_live_get_hot_topics(self,*args,**kwargs):\n    '''Comprehensive Extraction of Web News Content\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_content_extraction_live_get_hot_topics',kwargs)\n        "
    },
    "rapi_news_content_extraction_live_get_popular_news_urls": {
        "api_name": "get_popular_news_urls",
        "category": "Data",
        "tool_name": "news_content_extraction_live",
        "code": "async def rapi_news_content_extraction_live_get_popular_news_urls(self,*args,**kwargs):\n    '''Comprehensive Extraction of Web News Content\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_content_extraction_live_get_popular_news_urls',kwargs)\n        "
    },
    "rapi_holy_bible_getchapter": {
        "api_name": "getchapter",
        "category": "Data",
        "tool_name": "holy_bible",
        "code": "async def rapi_holy_bible_getchapter(self,*args,**kwargs):\n    '''The Best Bible API out there.\n\nThe Bible API is an easy-to-use web service that allows you to retrieve The Old Testament and The New Testament based on a chapter or selected verse. The API provides access to the King James Version (KJV) of the Bible, which is widely considered to be one of the most accurate and widely-used translations of the Bible in the English language.\n    \n    \n\n    :param string Book: Enter one of the books from Bible. defaults to Luke\n    :param integer chapter: Enter chapter number from given book. defaults to 8\n    '''\n    return await self._request_rapid_api('rapi_holy_bible_getchapter',kwargs)\n        "
    },
    "rapi_holy_bible_getverses": {
        "api_name": "getverses",
        "category": "Data",
        "tool_name": "holy_bible",
        "code": "async def rapi_holy_bible_getverses(self,*args,**kwargs):\n    '''The Best Bible API out there.\n\nThe Bible API is an easy-to-use web service that allows you to retrieve The Old Testament and The New Testament based on a chapter or selected verse. The API provides access to the King James Version (KJV) of the Bible, which is widely considered to be one of the most accurate and widely-used translations of the Bible in the English language.\n    \n    \n\n    :param string Book: Enter one of the books from Bible. defaults to Luke\n    :param integer chapter: Enter chapter number from given book. defaults to 1\n    :param integer VerseFrom: Enter Verse to start. defaults to 5\n    :param integer VerseTo: Enter Verse to End. defaults to 8\n    '''\n    return await self._request_rapid_api('rapi_holy_bible_getverses',kwargs)\n        "
    },
    "rapi_holy_bible_getverseofachapter": {
        "api_name": "getverseofachapter",
        "category": "Data",
        "tool_name": "holy_bible",
        "code": "async def rapi_holy_bible_getverseofachapter(self,*args,**kwargs):\n    '''The Best Bible API out there.\n\nThe Bible API is an easy-to-use web service that allows you to retrieve The Old Testament and The New Testament based on a chapter or selected verse. The API provides access to the King James Version (KJV) of the Bible, which is widely considered to be one of the most accurate and widely-used translations of the Bible in the English language.\n    \n    \n\n    :param string Book:  defaults to Luke\n    :param integer chapter:  defaults to 1\n    :param integer Verse:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_holy_bible_getverseofachapter',kwargs)\n        "
    },
    "rapi_airdna_property_listings": {
        "api_name": "property_listings",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_property_listings(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param string? room_types: You can choose multiple by separating by comma.\nPossible values : **(entire_home, private_room, shared_room)**.\n\n    :param integer? number_of_months: \n    :param integer? bedrooms_max: \n    :param integer? accommodates_max: \n    :param integer? start_month: \n    :param integer? bedrooms_min: \n    :param boolean? show_regions: \n    :param integer? accommodates_min: \n    :param string? currency:  defaults to native\n    :param integer? start_year: \n    '''\n    return await self._request_rapid_api('rapi_airdna_property_listings',kwargs)\n        "
    },
    "rapi_airdna_rental_ratings": {
        "api_name": "rental_ratings",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_rental_ratings(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param string? currency: \n    '''\n    return await self._request_rapid_api('rapi_airdna_rental_ratings',kwargs)\n        "
    },
    "rapi_airdna_suggest_region": {
        "api_name": "suggest_region",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_suggest_region(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    '''\n    return await self._request_rapid_api('rapi_airdna_suggest_region',kwargs)\n        "
    },
    "rapi_airdna_top_property_managers": {
        "api_name": "top_property_managers",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_top_property_managers(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    '''\n    return await self._request_rapid_api('rapi_airdna_top_property_managers',kwargs)\n        "
    },
    "rapi_airdna_rental_amenities": {
        "api_name": "rental_amenities",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_rental_amenities(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param string? currency: \n    '''\n    return await self._request_rapid_api('rapi_airdna_rental_amenities',kwargs)\n        "
    },
    "rapi_airdna_rental_settings": {
        "api_name": "rental_settings",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_rental_settings(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param string? currency: \n    '''\n    return await self._request_rapid_api('rapi_airdna_rental_settings',kwargs)\n        "
    },
    "rapi_airdna_overview": {
        "api_name": "overview",
        "category": "Data",
        "tool_name": "airdna",
        "code": "async def rapi_airdna_overview(self,*args,**kwargs):\n    '''API for Short-Term Rental Data Analytics | Vrbo & Airbnb Data | Rentalizer\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param string? currency: \n    '''\n    return await self._request_rapid_api('rapi_airdna_overview',kwargs)\n        "
    },
    "rapi_user_instagram_user": {
        "api_name": "instagram_user",
        "category": "Data",
        "tool_name": "user",
        "code": "async def rapi_user_instagram_user(self,*args,**kwargs):\n    '''Instagram users\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_user_instagram_user',kwargs)\n        "
    },
    "rapi_iys_skill_api_functional_areas": {
        "api_name": "functional_areas",
        "category": "Data",
        "tool_name": "iys_skill_api",
        "code": "async def rapi_iys_skill_api_functional_areas(self,*args,**kwargs):\n    '''With the skills search API, applications can allow users to search, be shown skills based on the term they type. and based on the skill they select, show the skills that are in the same category\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_iys_skill_api_functional_areas',kwargs)\n        "
    },
    "rapi_car_specs_get_makes": {
        "api_name": "get_makes",
        "category": "Data",
        "tool_name": "car_specs",
        "code": "async def rapi_car_specs_get_makes(self,*args,**kwargs):\n    '''Fast, simple and reliable API to retrieve car data. Contains data on almost all car manufacturers and models, updated regularly.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_car_specs_get_makes',kwargs)\n        "
    },
    "rapi_car_specs_get_models_by_make_id": {
        "api_name": "get_models_by_make_id",
        "category": "Data",
        "tool_name": "car_specs",
        "code": "async def rapi_car_specs_get_models_by_make_id(self,*args,**kwargs):\n    '''Fast, simple and reliable API to retrieve car data. Contains data on almost all car manufacturers and models, updated regularly.\n    \n    \n\n    :param integer makeId: makeId\n    '''\n    return await self._request_rapid_api('rapi_car_specs_get_models_by_make_id',kwargs)\n        "
    },
    "rapi_jsearch_job_details": {
        "api_name": "job_details",
        "category": "Data",
        "tool_name": "jsearch",
        "code": "async def rapi_jsearch_job_details(self,*args,**kwargs):\n    '''Fast and Simple Job Search for jobs posted on LinkedIn, Indeed, Glassdoor, ZipRecruiter, BeBee and many others, all in a single API.\n    \n    \n\n    :param string job_id: Job Id of the job for which to get details. Batching of up to 20 Job Ids is supported by separating multiple Job Ids by comma (,).\n\nNote that each Job Id in a batch request is counted as a request for quota calculation. defaults to iXki4pXSSRwAAAAAAAAAAA==\n    :param boolean? extended_publisher_details: Return additional publisher details such as website url and favicon. defaults to false\n    '''\n    return await self._request_rapid_api('rapi_jsearch_job_details',kwargs)\n        "
    },
    "rapi_jsearch_search_filters": {
        "api_name": "search_filters",
        "category": "Data",
        "tool_name": "jsearch",
        "code": "async def rapi_jsearch_search_filters(self,*args,**kwargs):\n    '''Fast and Simple Job Search for jobs posted on LinkedIn, Indeed, Glassdoor, ZipRecruiter, BeBee and many others, all in a single API.\n    \n    \n\n    :param string query: Free-form jobs search query. It is highly recommended to include job title and location as part of the query, see query examples below.\n\n**Query examples**\n- *web development in chicago*\n- *marketing manager in new york via linkedin*\n- *developer in germany 60306* defaults to Python developer in Texas, USA\n    :param string? job_titles: Job title filter - specified as a comma (,) separated list of `job_titles` filter values (i.e. filter *value* field) as returned by a previous call to this endpoint.\n\n**Example**: *job_titles=c2VuaW9y,YXNzb2NpYXRl*\n    :param integer? radius: Return jobs within a certain distance from location as specified as part of the query (in km).\n    :param string? company_types: Company types filter - specified as a comma (,) separated list of `company_types` filter values (i.e. filter *value* field) as returned by a previous call to this endpoint.\n\n**Example**: *company_types= L2J1c2luZXNzL25haWNzMjAwNy81MjpGaW5hbmNl,L2J1c2luZXNzL25haWNzMjAwNy81MTpJbmZvcm1hdGlvbg==*\n    :param string? categories: **[Deprecated]** Categories/industries filter - specified as a comma (,) separated list of `categories` filter values (i.e. filter *value* field) as returned by a previous call to this endpoint.\n\n**Example**: *categories=R0MxODpNYW5hZ2VtZW50,R0MwNTpBcnRGYXNoaW9uRGVzaWdu*\n    :param string? job_requirements: Find jobs with specific requirements, specified as a comma delimited list of the following values: `under_3_years_experience`, `more_than_3_years_experience`, `no_experience`, `no_degree`.\n    :param boolean? remote_jobs_only: Find remote jobs only (work from home).\nDefault: `false`.\n    :param ENUM? date_posted: Find jobs posted within the time you specify.\nPossible values: `all`, `today`, `3days`, `week`,`month`.\nDefault: `all`.\n    :param string? employers: Employers filter - specified as a comma (,) separated list of `employers` filter values (i.e. filter *value* field) as returned by a previous call to this endpoint.\n\n**Example**: *employers= L2cvMTFoMTV4eHhydDpJbmZpbml0eSBDb25zdWx0aW5n,L2cvMTFmMDEzOXIxbjpDeWJlckNvZGVycw==*\n    :param string? employment_types: Find jobs of particular employment types, specified as a comma delimited list of the following values: `FULLTIME`, `CONTRACTOR`, `PARTTIME`, `INTERN`.\n    '''\n    return await self._request_rapid_api('rapi_jsearch_search_filters',kwargs)\n        "
    },
    "rapi_jsearch_estimated_salary": {
        "api_name": "estimated_salary",
        "category": "Data",
        "tool_name": "jsearch",
        "code": "async def rapi_jsearch_estimated_salary(self,*args,**kwargs):\n    '''Fast and Simple Job Search for jobs posted on LinkedIn, Indeed, Glassdoor, ZipRecruiter, BeBee and many others, all in a single API.\n    \n    \n\n    :param string? location: Location in which to get salary estimation. defaults to New-York, NY, USA\n    :param string? job_title: Job title for which to get salary estimation. defaults to NodeJS Developer\n    :param integer? radius: Search radius in km (measured from location).\nDefault: `200`. defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_jsearch_estimated_salary',kwargs)\n        "
    },
    "rapi_pmi_jateng_test": {
        "api_name": "test",
        "category": "Data",
        "tool_name": "pmi_jateng",
        "code": "async def rapi_pmi_jateng_test(self,*args,**kwargs):\n    '''ini adalah data pmi jateng unofficial\n    \n    \n\n    :param integer? iniya:  defaults to 9\n    '''\n    return await self._request_rapid_api('rapi_pmi_jateng_test',kwargs)\n        "
    },
    "rapi_lotto_draw_results_global_game_list": {
        "api_name": "game_list",
        "category": "Data",
        "tool_name": "lotto_draw_results_global",
        "code": "async def rapi_lotto_draw_results_global_game_list(self,*args,**kwargs):\n    '''Up to 65 countries lotto draw results available.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lotto_draw_results_global_game_list',kwargs)\n        "
    },
    "rapi_lotto_draw_results_global_region_list": {
        "api_name": "region_list",
        "category": "Data",
        "tool_name": "lotto_draw_results_global",
        "code": "async def rapi_lotto_draw_results_global_region_list(self,*args,**kwargs):\n    '''Up to 65 countries lotto draw results available.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lotto_draw_results_global_region_list',kwargs)\n        "
    },
    "rapi_fake_identity_generator_generaterandomidentity": {
        "api_name": "generaterandomidentity",
        "category": "Data",
        "tool_name": "fake_identity_generator",
        "code": "async def rapi_fake_identity_generator_generaterandomidentity(self,*args,**kwargs):\n    '''The most complete and cheap Fake Identity Generation API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fake_identity_generator_generaterandomidentity',kwargs)\n        "
    },
    "rapi_whatsapp_api_phonelist": {
        "api_name": "phonelist",
        "category": "Data",
        "tool_name": "whatsapp_api",
        "code": "async def rapi_whatsapp_api_phonelist(self,*args,**kwargs):\n    '''To Send Messages From WhatsApp\n    \n    \n\n    :param string product_id:  defaults to product_id\n    '''\n    return await self._request_rapid_api('rapi_whatsapp_api_phonelist',kwargs)\n        "
    },
    "rapi_whatsapp_api_logs": {
        "api_name": "logs",
        "category": "Data",
        "tool_name": "whatsapp_api",
        "code": "async def rapi_whatsapp_api_logs(self,*args,**kwargs):\n    '''To Send Messages From WhatsApp\n    \n    \n\n    :param string product_id:  defaults to product_id\n    '''\n    return await self._request_rapid_api('rapi_whatsapp_api_logs',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_get_websites": {
        "api_name": "get_websites",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_get_websites(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_get_websites',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_search_products_all_countries": {
        "api_name": "search_products_all_countries",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_search_products_all_countries(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    :param string criteria: Search term that will be used to search for products on Amazon. defaults to AMD Ryzen\n    :param string? countryCode: This query parameter represents the country code of the Amazon store where the search will be performed. This parameter should be replaced with the two-letter code of the country that you want to search on Amazon. Default 'US' for United States. Check available list in Get Webistes endpoints. defaults to US\n    :param integer? page: Page number of results that you want to retrieve. If this parameter is not specified, the results of the first page will be returned. defaults to 1\n    :param string? languageCode:  defaults to EN\n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_search_products_all_countries',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_get_deals": {
        "api_name": "get_deals",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_get_deals(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    :param string? countryCode:  defaults to US\n    :param string? languageCode:  defaults to EN\n    :param string? categoryId: Allows to filter by category ID. By default all the categories are returned. \n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_get_deals',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_get_languages": {
        "api_name": "get_languages",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_get_languages(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_get_languages',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_get_product_details_all_countries": {
        "api_name": "get_product_details_all_countries",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_get_product_details_all_countries(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    :param string asin:  defaults to B091J3NYVF\n    :param string? languageCode:  defaults to EN\n    :param string? countryCode:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_get_product_details_all_countries',kwargs)\n        "
    },
    "rapi_amazon_web_scraping_api_get_product_reviews_all_countries": {
        "api_name": "get_product_reviews_all_countries",
        "category": "Data",
        "tool_name": "amazon_web_scraping_api",
        "code": "async def rapi_amazon_web_scraping_api_get_product_reviews_all_countries(self,*args,**kwargs):\n    '''Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx\n    \n    \n\n    :param string asin:  defaults to B091J3NYVF\n    :param string? languageCode:  defaults to EN\n    :param string? countryCode:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_amazon_web_scraping_api_get_product_reviews_all_countries',kwargs)\n        "
    },
    "rapi_gtrend_timezonelist": {
        "api_name": "timezonelist",
        "category": "Data",
        "tool_name": "gtrend",
        "code": "async def rapi_gtrend_timezonelist(self,*args,**kwargs):\n    '''Discover the power of Google Trends Data API! Stay ahead of the game with real-time insights into trending topics, consumer interests, and popular keywords.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gtrend_timezonelist',kwargs)\n        "
    },
    "rapi_bible_search_get_book_by_name": {
        "api_name": "get_book_by_name",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_book_by_name(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param string bookName: Name of the book. defaults to Isaiah\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_book_by_name',kwargs)\n        "
    },
    "rapi_bible_search_get_chapter_by_bookname": {
        "api_name": "get_chapter_by_bookname",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_chapter_by_bookname(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param string bookName: Name of the book. defaults to John\n    :param integer chapterId: Chapter number. defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_chapter_by_bookname',kwargs)\n        "
    },
    "rapi_bible_search_get_verse_by_bookname": {
        "api_name": "get_verse_by_bookname",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_verse_by_bookname(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param integer verseId: Verse number. defaults to 1\n    :param string bookName: Name of the book. defaults to Revelation\n    :param integer chapterId: Chapter number. defaults to 12\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_verse_by_bookname',kwargs)\n        "
    },
    "rapi_bible_search_get_verses_by_bookname": {
        "api_name": "get_verses_by_bookname",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_verses_by_bookname(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param integer chapterId: Chapter number. defaults to 3\n    :param string bookName: Name of the book. defaults to Revelation\n    :param integer verseStart: Beginning verse. defaults to 7\n    :param integer verseEnd: End verse. defaults to 11\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_verses_by_bookname',kwargs)\n        "
    },
    "rapi_bible_search_get_book_by_id": {
        "api_name": "get_book_by_id",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_book_by_id(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param string bookId: Id of the book. defaults to Amos\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_book_by_id',kwargs)\n        "
    },
    "rapi_bible_search_get_chapter_by_bookid": {
        "api_name": "get_chapter_by_bookid",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_chapter_by_bookid(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    :param string bookId: Id of the book. defaults to Mal\n    :param integer chapterId: Chapter number. defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_chapter_by_bookid',kwargs)\n        "
    },
    "rapi_bible_search_get_books": {
        "api_name": "get_books",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_get_books(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bible_search_get_books',kwargs)\n        "
    },
    "rapi_bible_search_random_verse": {
        "api_name": "random_verse",
        "category": "Data",
        "tool_name": "bible_search",
        "code": "async def rapi_bible_search_random_verse(self,*args,**kwargs):\n    '''Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bible_search_random_verse',kwargs)\n        "
    },
    "rapi_risk_management_framework_get_subcontrol_by_control": {
        "api_name": "get_subcontrol_by_control",
        "category": "Data",
        "tool_name": "risk_management_framework",
        "code": "async def rapi_risk_management_framework_get_subcontrol_by_control(self,*args,**kwargs):\n    '''The Risk Management Framework (RMF) makes it easy to view and compare controls and CCIs.\n    \n    \n\n    :param string control:  defaults to AC-1\n    :param string? control:  defaults to AC-1\n    '''\n    return await self._request_rapid_api('rapi_risk_management_framework_get_subcontrol_by_control',kwargs)\n        "
    },
    "rapi_geoapi_get_city_detail": {
        "api_name": "get_city_detail",
        "category": "Data",
        "tool_name": "geoapi",
        "code": "async def rapi_geoapi_get_city_detail(self,*args,**kwargs):\n    '''APIs to get data based on city and countries name.\n- Get Country Details : Get country deatils with country name. Use prefix = true for prefix match.\n- Get Cities in a Country :  Get cities in a country wiht population minimum and maximum filter. \n- Get City Detail :  Get city details with city name.\n    \n    \n\n    :param string name: \n    '''\n    return await self._request_rapid_api('rapi_geoapi_get_city_detail',kwargs)\n        "
    },
    "rapi_geoapi_get_country_details": {
        "api_name": "get_country_details",
        "category": "Data",
        "tool_name": "geoapi",
        "code": "async def rapi_geoapi_get_country_details(self,*args,**kwargs):\n    '''APIs to get data based on city and countries name.\n- Get Country Details : Get country deatils with country name. Use prefix = true for prefix match.\n- Get Cities in a Country :  Get cities in a country wiht population minimum and maximum filter. \n- Get City Detail :  Get city details with city name.\n    \n    \n\n    :param string name: \n    :param boolean? prefix_match:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_geoapi_get_country_details',kwargs)\n        "
    },
    "rapi_indonesia_hotspot_and_fire_location_data_hotspot": {
        "api_name": "hotspot",
        "category": "Data",
        "tool_name": "indonesia_hotspot_and_fire_location_data",
        "code": "async def rapi_indonesia_hotspot_and_fire_location_data_hotspot(self,*args,**kwargs):\n    '''This API provides Hotspot data or fires in the FRS system use MODIS hotspot data processed and published by Indonesian National Institute of Aeronautics and Space (LAPAN).\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_indonesia_hotspot_and_fire_location_data_hotspot',kwargs)\n        "
    },
    "rapi_get_docs_retrieveclaimlistbyuser": {
        "api_name": "retrieveclaimlistbyuser",
        "category": "Data",
        "tool_name": "get_docs",
        "code": "async def rapi_get_docs_retrieveclaimlistbyuser(self,*args,**kwargs):\n    '''data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_get_docs_retrieveclaimlistbyuser',kwargs)\n        "
    },
    "rapi_get_docs_document": {
        "api_name": "document",
        "category": "Data",
        "tool_name": "get_docs",
        "code": "async def rapi_get_docs_document(self,*args,**kwargs):\n    '''data\n    \n    \n\n    :param string? documentId:  defaults to 41aac429-40dd-ea11-a813-000d3a79365a\n    '''\n    return await self._request_rapid_api('rapi_get_docs_document',kwargs)\n        "
    },
    "rapi_iframely_endpoint": {
        "api_name": "endpoint",
        "category": "Data",
        "tool_name": "iframely",
        "code": "async def rapi_iframely_endpoint(self,*args,**kwargs):\n    '''Providing a simple API for embedding content from any URL\n    \n    \n\n    :param string uri: url to extract\n    '''\n    return await self._request_rapid_api('rapi_iframely_endpoint',kwargs)\n        "
    },
    "rapi_axesso_instagram_data_service_accountinfo": {
        "api_name": "accountinfo",
        "category": "Data",
        "tool_name": "axesso_instagram_data_service",
        "code": "async def rapi_axesso_instagram_data_service_accountinfo(self,*args,**kwargs):\n    '''This API returns data from Instagram like posts, comments, replies and different account informations.\n    \n    \n\n    :param string url:  defaults to https://www.instagram.com/walmart/\n    '''\n    return await self._request_rapid_api('rapi_axesso_instagram_data_service_accountinfo',kwargs)\n        "
    },
    "rapi_azure_smartable_getlearningresources": {
        "api_name": "getlearningresources",
        "category": "Data",
        "tool_name": "azure_smartable",
        "code": "async def rapi_azure_smartable_getlearningresources(self,*args,**kwargs):\n    '''The Azure Smartable API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_smartable_getlearningresources',kwargs)\n        "
    },
    "rapi_azure_smartable_getpeople": {
        "api_name": "getpeople",
        "category": "Data",
        "tool_name": "azure_smartable",
        "code": "async def rapi_azure_smartable_getpeople(self,*args,**kwargs):\n    '''The Azure Smartable API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_smartable_getpeople',kwargs)\n        "
    },
    "rapi_azure_smartable_getfutureevents": {
        "api_name": "getfutureevents",
        "category": "Data",
        "tool_name": "azure_smartable",
        "code": "async def rapi_azure_smartable_getfutureevents(self,*args,**kwargs):\n    '''The Azure Smartable API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_smartable_getfutureevents',kwargs)\n        "
    },
    "rapi_azure_smartable_gettopics": {
        "api_name": "gettopics",
        "category": "Data",
        "tool_name": "azure_smartable",
        "code": "async def rapi_azure_smartable_gettopics(self,*args,**kwargs):\n    '''The Azure Smartable API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_azure_smartable_gettopics',kwargs)\n        "
    },
    "rapi_autocomplete_india_autocomplete_pincodes": {
        "api_name": "autocomplete_pincodes",
        "category": "Data",
        "tool_name": "autocomplete_india",
        "code": "async def rapi_autocomplete_india_autocomplete_pincodes(self,*args,**kwargs):\n    '''Autocomplete Indian pincodes, localities, cities, states.\n    \n    \n\n    :param string pincode:  defaults to 110001\n    '''\n    return await self._request_rapid_api('rapi_autocomplete_india_autocomplete_pincodes',kwargs)\n        "
    },
    "rapi_diablo4_smartable_getgames": {
        "api_name": "getgames",
        "category": "Data",
        "tool_name": "diablo4_smartable",
        "code": "async def rapi_diablo4_smartable_getgames(self,*args,**kwargs):\n    '''The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_diablo4_smartable_getgames',kwargs)\n        "
    },
    "rapi_diablo4_smartable_getnews": {
        "api_name": "getnews",
        "category": "Data",
        "tool_name": "diablo4_smartable",
        "code": "async def rapi_diablo4_smartable_getnews(self,*args,**kwargs):\n    '''The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_diablo4_smartable_getnews',kwargs)\n        "
    },
    "rapi_diablo4_smartable_getcommunities": {
        "api_name": "getcommunities",
        "category": "Data",
        "tool_name": "diablo4_smartable",
        "code": "async def rapi_diablo4_smartable_getcommunities(self,*args,**kwargs):\n    '''The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_diablo4_smartable_getcommunities',kwargs)\n        "
    },
    "rapi_diablo4_smartable_getpeople": {
        "api_name": "getpeople",
        "category": "Data",
        "tool_name": "diablo4_smartable",
        "code": "async def rapi_diablo4_smartable_getpeople(self,*args,**kwargs):\n    '''The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_diablo4_smartable_getpeople',kwargs)\n        "
    },
    "rapi_diablo4_smartable_getnewsletters": {
        "api_name": "getnewsletters",
        "category": "Data",
        "tool_name": "diablo4_smartable",
        "code": "async def rapi_diablo4_smartable_getnewsletters(self,*args,**kwargs):\n    '''The Diablo 4 API offers the Diablo IV news, gameplays, guides, top players, and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_diablo4_smartable_getnewsletters',kwargs)\n        "
    },
    "rapi_screenshot_url_to_image_screenshot_endpoint": {
        "api_name": "screenshot_endpoint",
        "category": "Data",
        "tool_name": "screenshot_url_to_image",
        "code": "async def rapi_screenshot_url_to_image_screenshot_endpoint(self,*args,**kwargs):\n    '''Generate screenshots of websites with simple api, accept various parameters such as width, height, full page\n    \n    \n\n    :param string height:  defaults to 1080\n    :param string url:  defaults to https://rapidapi.com/marketplace\n    :param string width:  defaults to 1920\n    :param string? fullscreen:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_screenshot_url_to_image_screenshot_endpoint',kwargs)\n        "
    },
    "rapi_dog_breeds_get_all_dog_breeds": {
        "api_name": "get_all_dog_breeds",
        "category": "Data",
        "tool_name": "dog_breeds",
        "code": "async def rapi_dog_breeds_get_all_dog_breeds(self,*args,**kwargs):\n    '''The API is scraping the Wikipedia pages for dogs in order to collect data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dog_breeds_get_all_dog_breeds',kwargs)\n        "
    },
    "rapi_youtube_video_related_contents": {
        "api_name": "video_related_contents",
        "category": "Data",
        "tool_name": "youtube",
        "code": "async def rapi_youtube_video_related_contents(self,*args,**kwargs):\n    '''With the YouTube Data API, you can add various YouTube features to your app. Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? cursor: Cursor token\n    :param string? id: Video ID defaults to kJQP7kiw5Fk\n    :param string? gl:  defaults to US\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_related_contents',kwargs)\n        "
    },
    "rapi_motivational_content_get_a_specific_quote": {
        "api_name": "get_a_specific_quote",
        "category": "Data",
        "tool_name": "motivational_content",
        "code": "async def rapi_motivational_content_get_a_specific_quote(self,*args,**kwargs):\n    '''Get motivational quotes and motivational pictures.\n    \n    \n\n    :param string id:  defaults to 4\n    '''\n    return await self._request_rapid_api('rapi_motivational_content_get_a_specific_quote',kwargs)\n        "
    },
    "rapi_motivational_content_get_all_motivational_quotes": {
        "api_name": "get_all_motivational_quotes",
        "category": "Data",
        "tool_name": "motivational_content",
        "code": "async def rapi_motivational_content_get_all_motivational_quotes(self,*args,**kwargs):\n    '''Get motivational quotes and motivational pictures.\n    \n    \n\n    :param integer? skip: \n    :param integer? limit: \n    '''\n    return await self._request_rapid_api('rapi_motivational_content_get_all_motivational_quotes',kwargs)\n        "
    },
    "rapi_motivational_content_get_a_specific_picture": {
        "api_name": "get_a_specific_picture",
        "category": "Data",
        "tool_name": "motivational_content",
        "code": "async def rapi_motivational_content_get_a_specific_picture(self,*args,**kwargs):\n    '''Get motivational quotes and motivational pictures.\n    \n    \n\n    :param string id:  defaults to 2710271472860038475\n    '''\n    return await self._request_rapid_api('rapi_motivational_content_get_a_specific_picture',kwargs)\n        "
    },
    "rapi_motivational_content_get_all_motivational_pictures": {
        "api_name": "get_all_motivational_pictures",
        "category": "Data",
        "tool_name": "motivational_content",
        "code": "async def rapi_motivational_content_get_all_motivational_pictures(self,*args,**kwargs):\n    '''Get motivational quotes and motivational pictures.\n    \n    \n\n    :param integer? limit: \n    :param integer? skip: \n    '''\n    return await self._request_rapid_api('rapi_motivational_content_get_all_motivational_pictures',kwargs)\n        "
    },
    "rapi_niv_bible_getsingleverse": {
        "api_name": "getsingleverse",
        "category": "Data",
        "tool_name": "niv_bible",
        "code": "async def rapi_niv_bible_getsingleverse(self,*args,**kwargs):\n    '''An simple and quick web tool that allows you to retrieve data from both Old and New Testament based on a book, chapter or verse. The API provides access to the New International Version (NIV) of the Holy Bible, which is known to be one of the most widely-used translations in the English language.\n    \n    \n\n    :param integer Verse:  defaults to 1\n    :param integer Chapter:  defaults to 1\n    :param string Book:  defaults to Genesis\n    '''\n    return await self._request_rapid_api('rapi_niv_bible_getsingleverse',kwargs)\n        "
    },
    "rapi_social_links_search_search_social_links": {
        "api_name": "search_social_links",
        "category": "Data",
        "tool_name": "social_links_search",
        "code": "async def rapi_social_links_search_search_social_links(self,*args,**kwargs):\n    '''Search for social profile links on the web - Facebook, TikTok, Instagram, Snapchat, Twitter, LinkedIn, Youtube channels, Pinterest and Github.\n    \n    \n\n    :param string query: Social links search query. defaults to John Smith\n    :param string? social_networks: Find social links for the specified social networks, specified as a comma delimited list of the following values: `facebook`, `tiktok`, `instagram`, `snapchat`, `twitter`, `youtube`, `linkedin`, `github`, `pinterest`.\n\n**Default:** *facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github* defaults to facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github,pinterest\n    '''\n    return await self._request_rapid_api('rapi_social_links_search_search_social_links',kwargs)\n        "
    },
    "rapi_url_metadata_opengraph_parse": {
        "api_name": "parse",
        "category": "Data",
        "tool_name": "url_metadata_opengraph",
        "code": "async def rapi_url_metadata_opengraph_parse(self,*args,**kwargs):\n    '''Retrieve comprehensive site metadata effortlessly with our powerful Site Metadata API. Access a wealth of information about any web page, including OpenGraph tags, page title, description, author, image, and more. Whether you're building a content aggregator, social media tool, or SEO analytics platform, our API provides a streamlined solution to gather rich site metadata. Enrich your applications with valuable insights and enhance user experiences using our Site Metadata API.\n    \n    \n\n    :param string url: Url / Endpoint defaults to https://example.com\n    :param boolean? includeSource: Include downloaded website html source defaults to True\n    '''\n    return await self._request_rapid_api('rapi_url_metadata_opengraph_parse',kwargs)\n        "
    },
    "rapi_polish_zip_codes_zip_code_info": {
        "api_name": "zip_code_info",
        "category": "Data",
        "tool_name": "polish_zip_codes",
        "code": "async def rapi_polish_zip_codes_zip_code_info(self,*args,**kwargs):\n    '''Poczta polska - zip codes\n    \n    \n\n    :param string zipCode: A requested zip code defaults to 01-123\n    '''\n    return await self._request_rapid_api('rapi_polish_zip_codes_zip_code_info',kwargs)\n        "
    },
    "rapi_open_brewery_db_get_a_brewery": {
        "api_name": "get_a_brewery",
        "category": "Data",
        "tool_name": "open_brewery_db",
        "code": "async def rapi_open_brewery_db_get_a_brewery(self,*args,**kwargs):\n    '''Looking for a Beer API? Open Brewery DB is a free API for public information on breweries, cideries, brewpubs, and bottleshops. Currently it is focused to the United States, but future plans are to import world-wide data.\n    \n    \n\n    :param string id: ID of Brewery defaults to 5494\n    '''\n    return await self._request_rapid_api('rapi_open_brewery_db_get_a_brewery',kwargs)\n        "
    },
    "rapi_open_brewery_db_autocomplete": {
        "api_name": "autocomplete",
        "category": "Data",
        "tool_name": "open_brewery_db",
        "code": "async def rapi_open_brewery_db_autocomplete(self,*args,**kwargs):\n    '''Looking for a Beer API? Open Brewery DB is a free API for public information on breweries, cideries, brewpubs, and bottleshops. Currently it is focused to the United States, but future plans are to import world-wide data.\n    \n    \n\n    :param string query: Autocomplete a query defaults to dog\n    '''\n    return await self._request_rapid_api('rapi_open_brewery_db_autocomplete',kwargs)\n        "
    },
    "rapi_open_brewery_db_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "open_brewery_db",
        "code": "async def rapi_open_brewery_db_search(self,*args,**kwargs):\n    '''Looking for a Beer API? Open Brewery DB is a free API for public information on breweries, cideries, brewpubs, and bottleshops. Currently it is focused to the United States, but future plans are to import world-wide data.\n    \n    \n\n    :param string? query: Search for a brewery defaults to dog\n    '''\n    return await self._request_rapid_api('rapi_open_brewery_db_search',kwargs)\n        "
    },
    "rapi_indonesian_national_identity_card_validator_data": {
        "api_name": "data",
        "category": "Data",
        "tool_name": "indonesian_national_identity_card_validator",
        "code": "async def rapi_indonesian_national_identity_card_validator_data(self,*args,**kwargs):\n    '''Indonesian NIC Validator & Detail Finder API\n    \n    \n\n    :param string id:  defaults to 3275071201980055\n    '''\n    return await self._request_rapid_api('rapi_indonesian_national_identity_card_validator_data',kwargs)\n        "
    },
    "rapi_token_forwarding_get_token_forwarding_transactions": {
        "api_name": "get_token_forwarding_transactions",
        "category": "Data",
        "tool_name": "token_forwarding",
        "code": "async def rapi_token_forwarding_get_token_forwarding_transactions(self,*args,**kwargs):\n    '''Automatic token forwarding once funds are received. Support BNB, BEP20, ETH and ERC20 tokens.\n    \n    \n\n    :param string? updatedLt:  defaults to 2022-01-11 06:08:17\n    :param string? updatedGte:  defaults to 2023-01-10 06:08:17\n    :param string? id:  defaults to dfe02338-43ae-453f-bd51-6f0ea98e4df9\n    :param integer? offset:  defaults to 0\n    :param integer? limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_token_forwarding_get_token_forwarding_transactions',kwargs)\n        "
    },
    "rapi_token_forwarding_get_usage_quota_for_the_current_month": {
        "api_name": "get_usage_quota_for_the_current_month",
        "category": "Data",
        "tool_name": "token_forwarding",
        "code": "async def rapi_token_forwarding_get_usage_quota_for_the_current_month(self,*args,**kwargs):\n    '''Automatic token forwarding once funds are received. Support BNB, BEP20, ETH and ERC20 tokens.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_token_forwarding_get_usage_quota_for_the_current_month',kwargs)\n        "
    },
    "rapi_token_forwarding_get_gas_fee_funding_wallets": {
        "api_name": "get_gas_fee_funding_wallets",
        "category": "Data",
        "tool_name": "token_forwarding",
        "code": "async def rapi_token_forwarding_get_gas_fee_funding_wallets(self,*args,**kwargs):\n    '''Automatic token forwarding once funds are received. Support BNB, BEP20, ETH and ERC20 tokens.\n    \n    \n\n    :param string? id:  defaults to dfe02338-43ae-453f-bd51-6f0ea98e4df9\n    :param integer? limit:  defaults to 100\n    :param integer? offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_token_forwarding_get_gas_fee_funding_wallets',kwargs)\n        "
    },
    "rapi_token_forwarding_get_token_forwarding_wallets": {
        "api_name": "get_token_forwarding_wallets",
        "category": "Data",
        "tool_name": "token_forwarding",
        "code": "async def rapi_token_forwarding_get_token_forwarding_wallets(self,*args,**kwargs):\n    '''Automatic token forwarding once funds are received. Support BNB, BEP20, ETH and ERC20 tokens.\n    \n    \n\n    :param string? id:  defaults to dfe02338-43ae-453f-bd51-6f0ea98e4df9\n    :param integer? limit:  defaults to 100\n    :param integer? offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_token_forwarding_get_token_forwarding_wallets',kwargs)\n        "
    },
    "rapi_neostrada_domains_domainlist": {
        "api_name": "domainlist",
        "category": "Data",
        "tool_name": "neostrada_domains",
        "code": "async def rapi_neostrada_domains_domainlist(self,*args,**kwargs):\n    '''edit your neostrada domains\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_neostrada_domains_domainlist',kwargs)\n        "
    },
    "rapi_liquidation_report_liquidation_data": {
        "api_name": "liquidation_data",
        "category": "Data",
        "tool_name": "liquidation_report",
        "code": "async def rapi_liquidation_report_liquidation_data(self,*args,**kwargs):\n    '''Crypto liquidation tracking and reporting system. Aggregate data from exchange like Binance, Bybit & OKX\n    \n    \n\n    :param string? coin: Need to specify coin name if type equal to detail\n    :param string? type: Choose type of data. If type equal to **detail**, it will show only 1 coin data. type need to be use with coin\n    '''\n    return await self._request_rapid_api('rapi_liquidation_report_liquidation_data',kwargs)\n        "
    },
    "rapi_liquidation_report_liquidation_report": {
        "api_name": "liquidation_report",
        "category": "Data",
        "tool_name": "liquidation_report",
        "code": "async def rapi_liquidation_report_liquidation_report(self,*args,**kwargs):\n    '''Crypto liquidation tracking and reporting system. Aggregate data from exchange like Binance, Bybit & OKX\n    \n    \n\n    :param string? coin: Not required parameter. If put will show only that coin related data. For example **BTC**\n    '''\n    return await self._request_rapid_api('rapi_liquidation_report_liquidation_report',kwargs)\n        "
    },
    "rapi_referential_db_country_details": {
        "api_name": "country_details",
        "category": "Data",
        "tool_name": "referential_db",
        "code": "async def rapi_referential_db_country_details(self,*args,**kwargs):\n    '''Get global countries, states, and cities data. Filter and display results in multiple languages.\n    \n    \n\n    :param string countryCode:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_referential_db_country_details',kwargs)\n        "
    },
    "rapi_referential_db_states": {
        "api_name": "states",
        "category": "Data",
        "tool_name": "referential_db",
        "code": "async def rapi_referential_db_states(self,*args,**kwargs):\n    '''Get global countries, states, and cities data. Filter and display results in multiple languages.\n    \n    \n\n    :param string countryCode:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_referential_db_states',kwargs)\n        "
    },
    "rapi_referential_db_cities_in_a_state": {
        "api_name": "cities_in_a_state",
        "category": "Data",
        "tool_name": "referential_db",
        "code": "async def rapi_referential_db_cities_in_a_state(self,*args,**kwargs):\n    '''Get global countries, states, and cities data. Filter and display results in multiple languages.\n    \n    \n\n    :param string stateCode:  defaults to CA\n    :param string countryCode:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_referential_db_cities_in_a_state',kwargs)\n        "
    },
    "rapi_referential_db_countries": {
        "api_name": "countries",
        "category": "Data",
        "tool_name": "referential_db",
        "code": "async def rapi_referential_db_countries(self,*args,**kwargs):\n    '''Get global countries, states, and cities data. Filter and display results in multiple languages.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_referential_db_countries',kwargs)\n        "
    },
    "rapi_udemy_course_scrapper_api_course_url": {
        "api_name": "course_url",
        "category": "Data",
        "tool_name": "udemy_course_scrapper_api",
        "code": "async def rapi_udemy_course_scrapper_api_course_url(self,*args,**kwargs):\n    '''We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project. Use this api to fetch all the data you need in a fraction of a second.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_udemy_course_scrapper_api_course_url',kwargs)\n        "
    },
    "rapi_udemy_course_scrapper_api_course_instructor": {
        "api_name": "course_instructor",
        "category": "Data",
        "tool_name": "udemy_course_scrapper_api",
        "code": "async def rapi_udemy_course_scrapper_api_course_instructor(self,*args,**kwargs):\n    '''We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project. Use this api to fetch all the data you need in a fraction of a second.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_udemy_course_scrapper_api_course_instructor',kwargs)\n        "
    },
    "rapi_udemy_course_scrapper_api_course_name": {
        "api_name": "course_name",
        "category": "Data",
        "tool_name": "udemy_course_scrapper_api",
        "code": "async def rapi_udemy_course_scrapper_api_course_name(self,*args,**kwargs):\n    '''We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project. Use this api to fetch all the data you need in a fraction of a second.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_udemy_course_scrapper_api_course_name',kwargs)\n        "
    },
    "rapi_ip_reputation_geoip_and_detect_vpn_ip_reputation": {
        "api_name": "ip_reputation",
        "category": "Data",
        "tool_name": "ip_reputation_geoip_and_detect_vpn",
        "code": "async def rapi_ip_reputation_geoip_and_detect_vpn_ip_reputation(self,*args,**kwargs):\n    '''Block fraud attempts in realtime. This ridiculously effective API provides invaluable information about any IP address.  Detect bots, prevent fraud and abuse by detecting users trying to hide behind a VPN, proxy, or TOR. Geolocate IP addresses to find out which country or city the website visitors are from.\n    \n    \n\n    :param string ip:  defaults to 185.65.135.230\n    '''\n    return await self._request_rapid_api('rapi_ip_reputation_geoip_and_detect_vpn_ip_reputation',kwargs)\n        "
    },
    "rapi_simple_youtube_search_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "simple_youtube_search",
        "code": "async def rapi_simple_youtube_search_search(self,*args,**kwargs):\n    '''Simple api to make easy youtube searches for free.\n    \n    \n\n    :param string query:  defaults to never+gonna+give+you+up\n    :param ENUM? type: \n    :param boolean? safesearch:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_simple_youtube_search_search',kwargs)\n        "
    },
    "rapi_users_list_users_list": {
        "api_name": "users_list",
        "category": "Data",
        "tool_name": "users_list",
        "code": "async def rapi_users_list_users_list(self,*args,**kwargs):\n    '''Provide users data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_users_list_users_list',kwargs)\n        "
    },
    "rapi_subtitles_for_youtube_v3_get_subtitle_in_text_format": {
        "api_name": "get_subtitle_in_text_format",
        "category": "Data",
        "tool_name": "subtitles_for_youtube_v3",
        "code": "async def rapi_subtitles_for_youtube_v3_get_subtitle_in_text_format(self,*args,**kwargs):\n    '''Api for fetching YouTube subtitles\n    \n    \n\n    :param string video_id:  defaults to Wrald_EZgDQ\n    '''\n    return await self._request_rapid_api('rapi_subtitles_for_youtube_v3_get_subtitle_in_text_format',kwargs)\n        "
    },
    "rapi_subtitles_for_youtube_v3_get_subtitle_in_srt_format": {
        "api_name": "get_subtitle_in_srt_format",
        "category": "Data",
        "tool_name": "subtitles_for_youtube_v3",
        "code": "async def rapi_subtitles_for_youtube_v3_get_subtitle_in_srt_format(self,*args,**kwargs):\n    '''Api for fetching YouTube subtitles\n    \n    \n\n    :param string? video_id:  defaults to Wrald_EZgDQ\n    '''\n    return await self._request_rapid_api('rapi_subtitles_for_youtube_v3_get_subtitle_in_srt_format',kwargs)\n        "
    },
    "rapi_human_resources_api_get_all_employees_payment_cards": {
        "api_name": "get_all_employees_payment_cards",
        "category": "Data",
        "tool_name": "human_resources_api",
        "code": "async def rapi_human_resources_api_get_all_employees_payment_cards(self,*args,**kwargs):\n    '''API for supplying demo human resources data of employees and their bank cards.\nUp to 900 samples per table. You can query the employees' table or bank cards' table.\nWith Fast Response. and also paginate through each table, metadata for pagination is included in the response of the pagination route.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_human_resources_api_get_all_employees_payment_cards',kwargs)\n        "
    },
    "rapi_human_resources_api_get_a_specific_employee_by_employee_id": {
        "api_name": "get_a_specific_employee_by_employee_id",
        "category": "Data",
        "tool_name": "human_resources_api",
        "code": "async def rapi_human_resources_api_get_a_specific_employee_by_employee_id(self,*args,**kwargs):\n    '''API for supplying demo human resources data of employees and their bank cards.\nUp to 900 samples per table. You can query the employees' table or bank cards' table.\nWith Fast Response. and also paginate through each table, metadata for pagination is included in the response of the pagination route.\n    \n    \n\n    :param integer id:  defaults to 715505\n    '''\n    return await self._request_rapid_api('rapi_human_resources_api_get_a_specific_employee_by_employee_id',kwargs)\n        "
    },
    "rapi_human_resources_api_get_all_campany_employees_information": {
        "api_name": "get_all_campany_employees_information",
        "category": "Data",
        "tool_name": "human_resources_api",
        "code": "async def rapi_human_resources_api_get_all_campany_employees_information(self,*args,**kwargs):\n    '''API for supplying demo human resources data of employees and their bank cards.\nUp to 900 samples per table. You can query the employees' table or bank cards' table.\nWith Fast Response. and also paginate through each table, metadata for pagination is included in the response of the pagination route.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_human_resources_api_get_all_campany_employees_information',kwargs)\n        "
    },
    "rapi_real_time_news_data_language_list": {
        "api_name": "language_list",
        "category": "Data",
        "tool_name": "real_time_news_data",
        "code": "async def rapi_real_time_news_data_language_list(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.\n    \n    \n\n    :param string country: Country code of the country to get languages for. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_news_data_language_list',kwargs)\n        "
    },
    "rapi_real_time_news_data_topic_headlines": {
        "api_name": "topic_headlines",
        "category": "Data",
        "tool_name": "real_time_news_data",
        "code": "async def rapi_real_time_news_data_topic_headlines(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.\n    \n    \n\n    :param string topic: Topic for which to get news headlines.\n\n**Available topic**\n- WORLD\n- NATIONAL\n- BUSINESS\n- TECHNOLOGY\n- ENTERTAINMENT\n- SPORTS\n- SCIENCE\n- HEALTH\n\nIn addition, topic IDs are also accepted and can be taken from a News topic URL as it appears after the *topics/* path part (e.g. Elon Musk Topic - `/topics/CAAqIggKIhxDQkFTRHdvSkwyMHZNRE51ZW1ZeEVnSmxiaWdBUAE`)  defaults to WORLD\n    :param string? lang: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? country: Country code. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default:** `US`. defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_news_data_topic_headlines',kwargs)\n        "
    },
    "rapi_real_time_news_data_top_headlines": {
        "api_name": "top_headlines",
        "category": "Data",
        "tool_name": "real_time_news_data",
        "code": "async def rapi_real_time_news_data_top_headlines(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.\n    \n    \n\n    :param string? country: Country code. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default:** `US`. defaults to US\n    :param string? lang: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_news_data_top_headlines',kwargs)\n        "
    },
    "rapi_real_time_news_data_local_headlines_geo": {
        "api_name": "local_headlines_geo",
        "category": "Data",
        "tool_name": "real_time_news_data",
        "code": "async def rapi_real_time_news_data_local_headlines_geo(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.\n    \n    \n\n    :param string query: Area, city or country to fetch news for (e.g. *London*). defaults to New-York\n    :param string? lang: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? country: Country code. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default:** `US`. defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_news_data_local_headlines_geo',kwargs)\n        "
    },
    "rapi_real_time_news_data_topic_news_by_section": {
        "api_name": "topic_news_by_section",
        "category": "Data",
        "tool_name": "real_time_news_data",
        "code": "async def rapi_real_time_news_data_topic_news_by_section(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get top news globally or per topic and search for news by query and geographic area in real-time.\n    \n    \n\n    :param string section:  defaults to CAQiW0NCQVNQZ29JTDIwdk1EZGpNWFlTQW1WdUdnSlZVeUlQQ0FRYUN3b0pMMjB2TURKdFpqRnVLaGtLRndvVFIwRkVSMFZVWDFORlExUkpUMDVmVGtGTlJTQUJLQUEqKggAKiYICiIgQ0JBU0Vnb0lMMjB2TURkak1YWVNBbVZ1R2dKVlV5Z0FQAVAB\n    :param string topic: Topic for which to get news headlines.\n\n**Available topic**\n- WORLD\n- NATIONAL\n- BUSINESS\n- TECHNOLOGY\n- ENTERTAINMENT\n- SPORTS\n- SCIENCE\n- HEALTH\n\nIn addition, topic IDs are also accepted and can be taken from a News topic URL as it appears after the *topic/* path part (e.g. Elon Musk Topic - `/topics/CAAqIggKIhxDQkFTRHdvSkwyMHZNRE51ZW1ZeEVnSmxiaWdBUAE`)  defaults to TECHNOLOGY\n    :param string? lang: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? country: Country code. See [all available country codes](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default:** `US`. defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_news_data_topic_news_by_section',kwargs)\n        "
    },
    "rapi_trinidad_covid_19_statistics_getmostrecentday": {
        "api_name": "getmostrecentday",
        "category": "Data",
        "tool_name": "trinidad_covid_19_statistics",
        "code": "async def rapi_trinidad_covid_19_statistics_getmostrecentday(self,*args,**kwargs):\n    '''This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_trinidad_covid_19_statistics_getmostrecentday',kwargs)\n        "
    },
    "rapi_trinidad_covid_19_statistics_getstatsbyyear": {
        "api_name": "getstatsbyyear",
        "category": "Data",
        "tool_name": "trinidad_covid_19_statistics",
        "code": "async def rapi_trinidad_covid_19_statistics_getstatsbyyear(self,*args,**kwargs):\n    '''This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago\n    \n    \n\n    :param string id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_trinidad_covid_19_statistics_getstatsbyyear',kwargs)\n        "
    },
    "rapi_trinidad_covid_19_statistics_getstatsbymonth": {
        "api_name": "getstatsbymonth",
        "category": "Data",
        "tool_name": "trinidad_covid_19_statistics",
        "code": "async def rapi_trinidad_covid_19_statistics_getstatsbymonth(self,*args,**kwargs):\n    '''This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago\n    \n    \n\n    :param string yearId:  defaults to 2022\n    :param string monthId:  defaults to 01\n    '''\n    return await self._request_rapid_api('rapi_trinidad_covid_19_statistics_getstatsbymonth',kwargs)\n        "
    },
    "rapi_lbc_shark_singleoffer": {
        "api_name": "singleoffer",
        "category": "Data",
        "tool_name": "lbc_shark",
        "code": "async def rapi_lbc_shark_singleoffer(self,*args,**kwargs):\n    '''Api of leboncoin\nif you need this api contact me on private XD\n    \n    \n\n    :param string id:  defaults to 1874583655\n    '''\n    return await self._request_rapid_api('rapi_lbc_shark_singleoffer',kwargs)\n        "
    },
    "rapi_age_calculator_usable_time_zones": {
        "api_name": "usable_time_zones",
        "category": "Data",
        "tool_name": "age_calculator",
        "code": "async def rapi_age_calculator_usable_time_zones(self,*args,**kwargs):\n    '''Returns Age calculation based on requested date. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_age_calculator_usable_time_zones',kwargs)\n        "
    },
    "rapi_thai_lottery_result_lottery_results_by_date_id": {
        "api_name": "lottery_results_by_date_id",
        "category": "Data",
        "tool_name": "thai_lottery_result",
        "code": "async def rapi_thai_lottery_result_lottery_results_by_date_id(self,*args,**kwargs):\n    '''Thai lottery results API, Provided by Thailand-API.com\n    \n    \n\n    :param string dateid:  defaults to 20220316\n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_result_lottery_results_by_date_id',kwargs)\n        "
    },
    "rapi_thai_lottery_result_latest_draw_date": {
        "api_name": "latest_draw_date",
        "category": "Data",
        "tool_name": "thai_lottery_result",
        "code": "async def rapi_thai_lottery_result_latest_draw_date(self,*args,**kwargs):\n    '''Thai lottery results API, Provided by Thailand-API.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_result_latest_draw_date',kwargs)\n        "
    },
    "rapi_thai_lottery_result_draw_date_listing": {
        "api_name": "draw_date_listing",
        "category": "Data",
        "tool_name": "thai_lottery_result",
        "code": "async def rapi_thai_lottery_result_draw_date_listing(self,*args,**kwargs):\n    '''Thai lottery results API, Provided by Thailand-API.com\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_result_draw_date_listing',kwargs)\n        "
    },
    "rapi_proxy_spider_proxies_proxies_example_json": {
        "api_name": "proxies_example_json",
        "category": "Data",
        "tool_name": "proxy_spider_proxies",
        "code": "async def rapi_proxy_spider_proxies_proxies_example_json(self,*args,**kwargs):\n    '''The most reliable premium proxy servers list. Http and socks proxies updated daily in IP PORT txt, json, csv and xml format.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_proxy_spider_proxies_proxies_example_json',kwargs)\n        "
    },
    "rapi_youtube_search_channel_details": {
        "api_name": "channel_details",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_channel_details(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string channelId:  defaults to UCXuqSBlHAE6Xw-yeJA0Tunw\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_channel_details',kwargs)\n        "
    },
    "rapi_youtube_search_channel_videos": {
        "api_name": "channel_videos",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_channel_videos(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string channelId:  defaults to UCg6gPGh8HU2U01vaFCAsvmQ\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_channel_videos',kwargs)\n        "
    },
    "rapi_youtube_search_video_details": {
        "api_name": "video_details",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_video_details(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string videoId:  defaults to PuQFESk0BrA\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_video_details',kwargs)\n        "
    },
    "rapi_youtube_search_video_subtitles": {
        "api_name": "video_subtitles",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_video_subtitles(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string videoId:  defaults to PuQFESk0BrA\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_video_subtitles',kwargs)\n        "
    },
    "rapi_youtube_search_video_recommendation_continuation": {
        "api_name": "video_recommendation_continuation",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_video_recommendation_continuation(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string videoId:  defaults to sVF_SlzxBJ4\n    :param string continuationToken:  defaults to CBQSKRILc1ZGX1NsenhCSjTAAQDIAQDgAQGiAg0o____________AUAA-AIAGAAqmwMI4p64qar6ncwdCJnKz6OLgLm4JAj49f2F1o_U6swBCPXHwfaSybHGQgiqtLXfs_W6thMI7Ync68rUsqziAQi045DznPbn7egBCLfT1vT_voC8wgEIyLby7NLUrO3uAQiliPG_5Kej2lgIk_qG093k85v5AQiz9cL9xLOb1nMI5Zyax5W3pfHfAQjWppG9oN3ivVkIxpKI6_edt75SCP7Qv67Pjpnb-gEItYDj_by_5IorCOns-5P5xsj-sgEIxpGhiYj0nNpTCN6Alr-9m866kAEaxgEKC2tIVTQyOWZsZ0Y0GrYBCgtrSFU0MjlmbGdGNBIBMBoLCPXl7IsGELjxnz8iBgjTkfWNBioECA0QAjJZCgQIZBABCgQIaRAPCgUImAEQAQoFCNwBEAcKBQiQAxABCgUIhgcQFgoFCMAHEAEKBQjFBxABCgUIxgcQAQoFCMcHEAEKBQjIBxABCgUIyQcQAQoFCMoHEAE6EwoCCHAKAwjnAgoDCKgDCgMImQhCBwoDCM0BEAJKBwoDCM0BEAJSBwoDCM0BEAJqD3dhdGNoLW5leHQtZmVlZA%3D%3D\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_video_recommendation_continuation',kwargs)\n        "
    },
    "rapi_youtube_search_video_recommendation": {
        "api_name": "video_recommendation",
        "category": "Data",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_video_recommendation(self,*args,**kwargs):\n    '''Youtube API\n    \n    \n\n    :param string videoId:  defaults to JdiuB5yTLKw\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_video_recommendation',kwargs)\n        "
    },
    "rapi_app_store_new_ios_apps": {
        "api_name": "new_ios_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_new_ios_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? country:  defaults to us\n    :param string? category:  defaults to 6016\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_new_ios_apps',kwargs)\n        "
    },
    "rapi_app_store_top_grossing_mac_apps": {
        "api_name": "top_grossing_mac_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_grossing_mac_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? category:  defaults to 6016\n    :param string? country:  defaults to us\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_grossing_mac_apps',kwargs)\n        "
    },
    "rapi_app_store_top_grossing_ipad_apps": {
        "api_name": "top_grossing_ipad_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_grossing_ipad_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? country:  defaults to us\n    :param string? lang:  defaults to en\n    :param string? category:  defaults to 6016\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_grossing_ipad_apps',kwargs)\n        "
    },
    "rapi_app_store_top_grossing_ios_apps": {
        "api_name": "top_grossing_ios_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_grossing_ios_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? country:  defaults to us\n    :param string? category:  defaults to 6016\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_grossing_ios_apps',kwargs)\n        "
    },
    "rapi_app_store_top_paid_mac_apps": {
        "api_name": "top_paid_mac_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_paid_mac_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? category:  defaults to 6016\n    :param string? country:  defaults to us\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_paid_mac_apps',kwargs)\n        "
    },
    "rapi_app_store_top_paid_ipad_apps": {
        "api_name": "top_paid_ipad_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_paid_ipad_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? category:  defaults to 6016\n    :param string? country:  defaults to us\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_paid_ipad_apps',kwargs)\n        "
    },
    "rapi_app_store_top_paid_ios_apps": {
        "api_name": "top_paid_ios_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_paid_ios_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? lang:  defaults to en\n    :param string? category:  defaults to 6016\n    :param string? country:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_paid_ios_apps',kwargs)\n        "
    },
    "rapi_app_store_top_free_mac_apps": {
        "api_name": "top_free_mac_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_free_mac_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? lang:  defaults to en\n    :param string? category:  defaults to 6016\n    :param string? country:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_free_mac_apps',kwargs)\n        "
    },
    "rapi_app_store_top_free_ipad_apps": {
        "api_name": "top_free_ipad_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_free_ipad_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? country:  defaults to us\n    :param string? category:  defaults to 6016\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_free_ipad_apps',kwargs)\n        "
    },
    "rapi_app_store_top_free_ios_apps": {
        "api_name": "top_free_ios_apps",
        "category": "Data",
        "tool_name": "app_store",
        "code": "async def rapi_app_store_top_free_ios_apps(self,*args,**kwargs):\n    '''Unofficial Apple App Store Api\n    \n    \n\n    :param string? lang:  defaults to en\n    :param string? country:  defaults to us\n    :param string? category:  defaults to 6016\n    '''\n    return await self._request_rapid_api('rapi_app_store_top_free_ios_apps',kwargs)\n        "
    },
    "rapi_us_counties_get_basic_county_data_for_all_u_s_counties": {
        "api_name": "get_basic_county_data_for_all_u_s_counties",
        "category": "Data",
        "tool_name": "us_counties",
        "code": "async def rapi_us_counties_get_basic_county_data_for_all_u_s_counties(self,*args,**kwargs):\n    '''Detailed and accurate information about every US county and county equivalent in JSON format.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_us_counties_get_basic_county_data_for_all_u_s_counties',kwargs)\n        "
    },
    "rapi_email_search_search_emails": {
        "api_name": "search_emails",
        "category": "Data",
        "tool_name": "email_search",
        "code": "async def rapi_email_search_search_emails(self,*args,**kwargs):\n    '''Simple and Powerful web search for emails - get emails found on the web given a query and an email domain in real-time.\n    \n    \n\n    :param string email_domain: Email domain - typically a company domain (e.g. wsgr.com) or an email provider domain (e.g. gmail.com). defaults to gmail.com\n    :param string query: Search query.\n\n`e.g.` *`steve smith san francisco ca usa`*\n`e.g.` *`facebook ceo`*\n`e.g.` *`jack blogger new york`*\n`e.g.` *`car dealer california usa`* defaults to car dealer california usa\n    :param integer? limit: Maximum number of emails to return. Accepts values from 1-5000.\n**Default:** 5000 defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_email_search_search_emails',kwargs)\n        "
    },
    "rapi_random_user_by_api_ninjas_v1_randomuser": {
        "api_name": "v1_randomuser",
        "category": "Data",
        "tool_name": "random_user_by_api_ninjas",
        "code": "async def rapi_random_user_by_api_ninjas_v1_randomuser(self,*args,**kwargs):\n    '''Random user data generator for placeholders and testing. See more info at https://api-ninjas.com/api/randomuser\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_user_by_api_ninjas_v1_randomuser',kwargs)\n        "
    },
    "rapi_store_apps_top_paid_apps": {
        "api_name": "top_paid_apps",
        "category": "Data",
        "tool_name": "store_apps",
        "code": "async def rapi_store_apps_top_paid_apps(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.\n    \n    \n\n    :param string? language: The language to use, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? region: The country code of country/region to use, specified as a 2-letter country code - see [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default**: `us`. defaults to us\n    '''\n    return await self._request_rapid_api('rapi_store_apps_top_paid_apps',kwargs)\n        "
    },
    "rapi_store_apps_app_details": {
        "api_name": "app_details",
        "category": "Data",
        "tool_name": "store_apps",
        "code": "async def rapi_store_apps_app_details(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.\n    \n    \n\n    :param string? language: The language to use, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? region: The country code of country/region to use, specified as a 2-letter country code - see [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default**: `us`. defaults to us\n    :param string? app_id: App Id. Batching of up to 100 App Ids is supported by separating multiple ids by comma (e.g. com.snapchat.android,com.microsoft.teams). defaults to com.google.android.apps.subscriptions.red\n    '''\n    return await self._request_rapid_api('rapi_store_apps_app_details',kwargs)\n        "
    },
    "rapi_store_apps_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "store_apps",
        "code": "async def rapi_store_apps_search(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.\n    \n    \n\n    :param string q: Search query. defaults to notes\n    :param string? language: The language to use, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? cursor: Specify a cursor from the previous request to get the next set of results.\n    :param string? region: The country code of country/region to use, specified as a 2-letter country code - see [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default**: `us`. defaults to us\n    '''\n    return await self._request_rapid_api('rapi_store_apps_search',kwargs)\n        "
    },
    "rapi_store_apps_top_free_apps": {
        "api_name": "top_free_apps",
        "category": "Data",
        "tool_name": "store_apps",
        "code": "async def rapi_store_apps_top_free_apps(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.\n    \n    \n\n    :param string? region: The country code of country/region to use, specified as a 2-letter country code - see [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default**: `us`. defaults to us\n    :param string? language: The language to use, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_store_apps_top_free_apps',kwargs)\n        "
    },
    "rapi_store_apps_top_grossing_apps": {
        "api_name": "top_grossing_apps",
        "category": "Data",
        "tool_name": "store_apps",
        "code": "async def rapi_store_apps_top_grossing_apps(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to search and list apps/games top charts on the Google Play Store and get their full details and reviews.\n    \n    \n\n    :param string? language: The language to use, specified as a 2-letter language code - see [ISO 639-1 alpha-2](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default**: `en`. defaults to en\n    :param string? region: The country code of country/region to use, specified as a 2-letter country code - see [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).\n**Default**: `us`. defaults to us\n    '''\n    return await self._request_rapid_api('rapi_store_apps_top_grossing_apps',kwargs)\n        "
    },
    "rapi_emotional_poem_getpoem": {
        "api_name": "getpoem",
        "category": "Data",
        "tool_name": "emotional_poem",
        "code": "async def rapi_emotional_poem_getpoem(self,*args,**kwargs):\n    '''This API'v choice poem from emotional parameters.\n    \n    \n\n    :param string? type: type:only: [\\\"max\\\", \\\"min\\\"]\n defaults to max\n    :param string? method: only: [\\\"cos\\\", \\\"dot\\\", \\\"cross\\\", \\\"euler\\\"]\ndefault:\\\"cos\\\" defaults to cos\n    :param integer? pleasure: pleasure:0.0-1.0\ndefault:0.0 defaults to 0.01\n    :param integer? delight: delight:0.0-1.0\ndefault:0.0 defaults to 0.0\n    :param integer? sorrow: sorrow:0.0-1.0\ndefault:0.0 defaults to 0.1\n    :param integer? anger: anger:0.0-1.0\ndefault:0.0 defaults to 0.0\n    '''\n    return await self._request_rapid_api('rapi_emotional_poem_getpoem',kwargs)\n        "
    },
    "rapi_tomba_enrichment": {
        "api_name": "enrichment",
        "category": "Data",
        "tool_name": "tomba",
        "code": "async def rapi_tomba_enrichment(self,*args,**kwargs):\n    '''Search or verify lists of email addresses in minutes\n    \n    \n\n    :param string email:  defaults to b.mohamed@tomba.io\n    '''\n    return await self._request_rapid_api('rapi_tomba_enrichment',kwargs)\n        "
    },
    "rapi_tomba_domainsearch": {
        "api_name": "domainsearch",
        "category": "Data",
        "tool_name": "tomba",
        "code": "async def rapi_tomba_domainsearch(self,*args,**kwargs):\n    '''Search or verify lists of email addresses in minutes\n    \n    \n\n    :param string domain: Domain name from which you want to find the email addresses. For example, \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stripe.com\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" defaults to stripe.com\n    :param string? department: Get only email addresses for people working in the selected department(s). defaults to pr\n    :param integer? page: Specifies the number of email addresses to skip. The default is 1. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_tomba_domainsearch',kwargs)\n        "
    },
    "rapi_tomba_emailverifier": {
        "api_name": "emailverifier",
        "category": "Data",
        "tool_name": "tomba",
        "code": "async def rapi_tomba_emailverifier(self,*args,**kwargs):\n    '''Search or verify lists of email addresses in minutes\n    \n    \n\n    :param string email: The email address you want to verify. defaults to b.mohamed@tomba.io\n    '''\n    return await self._request_rapid_api('rapi_tomba_emailverifier',kwargs)\n        "
    },
    "rapi_tomba_emailfinder": {
        "api_name": "emailfinder",
        "category": "Data",
        "tool_name": "tomba",
        "code": "async def rapi_tomba_emailfinder(self,*args,**kwargs):\n    '''Search or verify lists of email addresses in minutes\n    \n    \n\n    :param string domain: Domain name from which you want to find the email addresses. For example, \"stripe.com\" defaults to stripe.com\n    :param string first_name: The person's first name. It doesn't need to be in lowercase. defaults to Moskoz\n    :param string last_name: The person's last name. It doesn't need to be in lowercase. defaults to Dustin\n    '''\n    return await self._request_rapid_api('rapi_tomba_emailfinder',kwargs)\n        "
    },
    "rapi_tomba_emailcount": {
        "api_name": "emailcount",
        "category": "Data",
        "tool_name": "tomba",
        "code": "async def rapi_tomba_emailcount(self,*args,**kwargs):\n    '''Search or verify lists of email addresses in minutes\n    \n    \n\n    :param string domain: The email address you want to find sources. defaults to tomba.io\n    '''\n    return await self._request_rapid_api('rapi_tomba_emailcount',kwargs)\n        "
    },
    "rapi_youtube_video_subtitles_list_subtitlelist": {
        "api_name": "subtitlelist",
        "category": "Data",
        "tool_name": "youtube_video_subtitles_list",
        "code": "async def rapi_youtube_video_subtitles_list_subtitlelist(self,*args,**kwargs):\n    '''Youtube video subtitle list\n    \n    \n\n    :param string videoId:  defaults to JY-_GRi56KQ\n    :param string? locale:  defaults to EN\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_subtitles_list_subtitlelist',kwargs)\n        "
    },
    "rapi_ip_geolocation_ipwhois_io_json_endpoint": {
        "api_name": "json_endpoint",
        "category": "Data",
        "tool_name": "ip_geolocation_ipwhois_io",
        "code": "async def rapi_ip_geolocation_ipwhois_io_json_endpoint(self,*args,**kwargs):\n    '''You can use https://ipwhois.io/ to filter out bot traffic, customize content based on visitor's location, display full country names, perform bulk IP geolocation, and more.\n    \n    \n\n    :param string? ip: {ip} can be an IPv4 or IPv6 address, or none to use the current IP address.\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocation_ipwhois_io_json_endpoint',kwargs)\n        "
    },
    "rapi_complete_study_bible_strongs_number_detail_api": {
        "api_name": "strongs_number_detail_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_strongs_number_detail_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    :param string comma-separated-strongs-numbers:  defaults to G4931,G5000\n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_strongs_number_detail_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_full_chapter_api": {
        "api_name": "full_chapter_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_full_chapter_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    :param integer chapter:  defaults to 1\n    :param string translation:  defaults to KJV\n    :param string book:  defaults to John\n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_full_chapter_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_verse_range_api": {
        "api_name": "verse_range_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_verse_range_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    :param string translation:  defaults to KJV\n    :param string verse-end:  defaults to 3\n    :param string chapter:  defaults to 1\n    :param string verse-start:  defaults to 1\n    :param string book:  defaults to Joh\n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_verse_range_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_passage_of_the_day_api": {
        "api_name": "passage_of_the_day_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_passage_of_the_day_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_passage_of_the_day_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_search_exact_phrase_api": {
        "api_name": "search_exact_phrase_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_search_exact_phrase_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    :param string phrase:  defaults to In the beginning\n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_search_exact_phrase_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_search_all_words_api": {
        "api_name": "search_all_words_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_search_all_words_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    :param string words:  defaults to Melchizedek priest\n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_search_all_words_api',kwargs)\n        "
    },
    "rapi_complete_study_bible_book_list_and_chapter_counts_api": {
        "api_name": "book_list_and_chapter_counts_api",
        "category": "Data",
        "tool_name": "complete_study_bible",
        "code": "async def rapi_complete_study_bible_book_list_and_chapter_counts_api(self,*args,**kwargs):\n    '''The most COMPLETE Bible study API available! Strongs, Locations, Dictionaries, and more! \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_complete_study_bible_book_list_and_chapter_counts_api',kwargs)\n        "
    },
    "rapi_cars_by_api_ninjas_v1_cars": {
        "api_name": "v1_cars",
        "category": "Data",
        "tool_name": "cars_by_api_ninjas",
        "code": "async def rapi_cars_by_api_ninjas_v1_cars(self,*args,**kwargs):\n    '''Get detailed data on tens of thousands of vehicle models from dozens of automakers. See more info at https://api-ninjas.com/api/cars.\n    \n    \n\n    :param string? model: Model of vehicle. defaults to corolla\n    :param integer? max_city_mpg: Maximum city fuel efficiency in miles per gallon.\n    :param integer? min_comb_mpg: Minimum combination (city + highway) fuel efficiency in miles per gallon.\n    :param integer? max_hwy_mpg: Maximum highway fuel efficiency in miles per gallon.\n    :param string? fuel_type: Type of fuel used. Possible values: **gas**, **diesel**, **electricity**\n    :param string? limit: How many results to return. Must be between **1** and **30**. Default is **5**\n    :param string? drive: Drive transmission. Possible values: **fwd** (front-wheel drive), **rwd** (rear-wheel drive), **awd** (all-wheel drive), **4wd** (four-wheel drive)\n    :param integer? max_comb_mpg: Maximum combination (city + highway) fuel efficiency in miles per gallon.\n    :param string? make: Vehicle manufacturer.\n    :param string? transmission: Type of transmission. Possible values: **manual**, **automatic**\n    :param string? year: Vehicle model year.\n    :param integer? min_hwy_mpg: Minimum highway fuel efficiency in miles per gallon.\n    :param integer? min_city_mpg: Minimum City fuel efficiency in miles per gallon.\n    :param integer? cylinders: Number of cylinders. Possible values: **2, 3 4, 5, 6, 8, 10, 12, 16**\n    '''\n    return await self._request_rapid_api('rapi_cars_by_api_ninjas_v1_cars',kwargs)\n        "
    },
    "rapi_cat_facts_facts": {
        "api_name": "facts",
        "category": "Data",
        "tool_name": "cat_facts",
        "code": "async def rapi_cat_facts_facts(self,*args,**kwargs):\n    '''Get a list of cat facts.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cat_facts_facts',kwargs)\n        "
    },
    "rapi_all_in_one_crypto_swiss_knife_top_holders": {
        "api_name": "top_holders",
        "category": "Data",
        "tool_name": "all_in_one_crypto_swiss_knife",
        "code": "async def rapi_all_in_one_crypto_swiss_knife_top_holders(self,*args,**kwargs):\n    '''Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!\n    \n    \n\n    :param string id:  defaults to curve\n    :param string? start:  defaults to 0\n    :param string? limit:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_all_in_one_crypto_swiss_knife_top_holders',kwargs)\n        "
    },
    "rapi_all_in_one_crypto_swiss_knife_protocols": {
        "api_name": "protocols",
        "category": "Data",
        "tool_name": "all_in_one_crypto_swiss_knife",
        "code": "async def rapi_all_in_one_crypto_swiss_knife_protocols(self,*args,**kwargs):\n    '''Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!\n    \n    \n\n    :param string? q: Search parameter\n    :param string? chain_id: Supported chains:  \\\"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\\\";\n\nLeave empty for all protocols  defaults to fuse\n    '''\n    return await self._request_rapid_api('rapi_all_in_one_crypto_swiss_knife_protocols',kwargs)\n        "
    },
    "rapi_all_in_one_crypto_swiss_knife_protocol": {
        "api_name": "protocol",
        "category": "Data",
        "tool_name": "all_in_one_crypto_swiss_knife",
        "code": "async def rapi_all_in_one_crypto_swiss_knife_protocol(self,*args,**kwargs):\n    '''Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!\n    \n    \n\n    :param string id:  defaults to curve\n    '''\n    return await self._request_rapid_api('rapi_all_in_one_crypto_swiss_knife_protocol',kwargs)\n        "
    },
    "rapi_all_in_one_crypto_swiss_knife_pools": {
        "api_name": "pools",
        "category": "Data",
        "tool_name": "all_in_one_crypto_swiss_knife",
        "code": "async def rapi_all_in_one_crypto_swiss_knife_pools(self,*args,**kwargs):\n    '''Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!\n    \n    \n\n    :param string id:  defaults to curve\n    :param string? start:  defaults to 0\n    :param string? limit:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_all_in_one_crypto_swiss_knife_pools',kwargs)\n        "
    },
    "rapi_geography_search_countries_by_idd": {
        "api_name": "search_countries_by_idd",
        "category": "Data",
        "tool_name": "geography",
        "code": "async def rapi_geography_search_countries_by_idd(self,*args,**kwargs):\n    '''Powerful APIs for getting information about Countries and Cities\n    \n    \n\n    :param string idd: Idd number starting with + defaults to 91\n    :param integer? limit: The maximum records that can be returned within a page defaults to 10\n    :param integer? offset: The page number from which the search should continue. Its zero indexed, hence, starts with 0\n    :param string? fields: Comma separated fields list to filter response\n    '''\n    return await self._request_rapid_api('rapi_geography_search_countries_by_idd',kwargs)\n        "
    },
    "rapi_geography_search_countries_by_continent": {
        "api_name": "search_countries_by_continent",
        "category": "Data",
        "tool_name": "geography",
        "code": "async def rapi_geography_search_countries_by_continent(self,*args,**kwargs):\n    '''Powerful APIs for getting information about Countries and Cities\n    \n    \n\n    :param string continent: The continent of the country. This search is case insensitive and exact match defaults to North America\n    :param integer? offset: The page number from which the search should continue. Its zero indexed, hence, starts with 0\n    :param string? fields: Comma separated fields list to filter response\n    :param integer? limit: The maximum records that can be returned within a page defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_geography_search_countries_by_continent',kwargs)\n        "
    },
    "rapi_geography_search_countries_by_currency": {
        "api_name": "search_countries_by_currency",
        "category": "Data",
        "tool_name": "geography",
        "code": "async def rapi_geography_search_countries_by_currency(self,*args,**kwargs):\n    '''Powerful APIs for getting information about Countries and Cities\n    \n    \n\n    :param string currency: The Currency used within the country. User can provide both currency code or currency name for searching. This search is case insensitive defaults to usd\n    :param integer? limit: The maximum records that can be returned within a page defaults to 10\n    :param string? fields: Comma separated fields list to filter response\n    :param integer? offset: The page number from which the search should continue. Its zero indexed, hence, starts with 0\n    '''\n    return await self._request_rapid_api('rapi_geography_search_countries_by_currency',kwargs)\n        "
    },
    "rapi_genderizeio_genderize": {
        "api_name": "genderize",
        "category": "Data",
        "tool_name": "genderizeio",
        "code": "async def rapi_genderizeio_genderize(self,*args,**kwargs):\n    '''Predict the gender of a person based on their name.\n    \n    \n\n    :param string name:  defaults to amir\n    '''\n    return await self._request_rapid_api('rapi_genderizeio_genderize',kwargs)\n        "
    },
    "rapi_tiktok_api_collection_videos_details": {
        "api_name": "collection_videos_details",
        "category": "Data",
        "tool_name": "tiktok_api",
        "code": "async def rapi_tiktok_api_collection_videos_details(self,*args,**kwargs):\n    '''Reliable TikTok API\n    \n    \n\n    :param string collection_id:  defaults to (Recipes & Good Eats)-7084615222824045358\n    :param string username:  defaults to abbeychaplain\n    '''\n    return await self._request_rapid_api('rapi_tiktok_api_collection_videos_details',kwargs)\n        "
    },
    "rapi_tiktok_api_search_videos": {
        "api_name": "search_videos",
        "category": "Data",
        "tool_name": "tiktok_api",
        "code": "async def rapi_tiktok_api_search_videos(self,*args,**kwargs):\n    '''Reliable TikTok API\n    \n    \n\n    :param string query:  defaults to mr beast\n    '''\n    return await self._request_rapid_api('rapi_tiktok_api_search_videos',kwargs)\n        "
    },
    "rapi_tiktok_api_video_details": {
        "api_name": "video_details",
        "category": "Data",
        "tool_name": "tiktok_api",
        "code": "async def rapi_tiktok_api_video_details(self,*args,**kwargs):\n    '''Reliable TikTok API\n    \n    \n\n    :param string video_id:  defaults to 7149284958899785006\n    '''\n    return await self._request_rapid_api('rapi_tiktok_api_video_details',kwargs)\n        "
    },
    "rapi_homeless_shelter_by_state_city": {
        "api_name": "by_state_city",
        "category": "Data",
        "tool_name": "homeless_shelter",
        "code": "async def rapi_homeless_shelter_by_state_city(self,*args,**kwargs):\n    '''Introducing our National Registered Homeless Shelters API for the United States, featuring an extensive and up-to-date database.\n    \n    \n\n    :param string state: State full name (e.g., Washington) or abbreviation (e.g., WA)  defaults to Washington\n    :param string city: City name, e.g., Bellevue defaults to Bellevue\n    '''\n    return await self._request_rapid_api('rapi_homeless_shelter_by_state_city',kwargs)\n        "
    },
    "rapi_homeless_shelter_by_location": {
        "api_name": "by_location",
        "category": "Data",
        "tool_name": "homeless_shelter",
        "code": "async def rapi_homeless_shelter_by_location(self,*args,**kwargs):\n    '''Introducing our National Registered Homeless Shelters API for the United States, featuring an extensive and up-to-date database.\n    \n    \n\n    :param string lat: Location latitude defaults to 47.630703\n    :param string radius: Radius in mile (10 miles maximum) defaults to 1.4\n    :param string lng: Location longitude defaults to -122.186370\n    '''\n    return await self._request_rapid_api('rapi_homeless_shelter_by_location',kwargs)\n        "
    },
    "rapi_link_preview_parse_ogp_meta_data": {
        "api_name": "parse_ogp_meta_data",
        "category": "Data",
        "tool_name": "link_preview",
        "code": "async def rapi_link_preview_parse_ogp_meta_data(self,*args,**kwargs):\n    '''Open graph protocol data parser. Can fetch various meta data from an url link.\n    \n    \n\n    :param string url:  defaults to https://www.youtube.com/watch?v=ybJ_R08SogU\n    :param boolean oembed:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_link_preview_parse_ogp_meta_data',kwargs)\n        "
    },
    "rapi_link_preview_parse_minified_ogp_meta_data": {
        "api_name": "parse_minified_ogp_meta_data",
        "category": "Data",
        "tool_name": "link_preview",
        "code": "async def rapi_link_preview_parse_minified_ogp_meta_data(self,*args,**kwargs):\n    '''Open graph protocol data parser. Can fetch various meta data from an url link.\n    \n    \n\n    :param boolean oembed:  defaults to false\n    :param string url:  defaults to https://www.youtube.com/watch?v=ybJ_R08SogU\n    '''\n    return await self._request_rapid_api('rapi_link_preview_parse_minified_ogp_meta_data',kwargs)\n        "
    },
    "rapi_dummydata_overview": {
        "api_name": "overview",
        "category": "Data",
        "tool_name": "dummydata",
        "code": "async def rapi_dummydata_overview(self,*args,**kwargs):\n    '''provides various types of dummy data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dummydata_overview',kwargs)\n        "
    },
    "rapi_electric_vehicle_charging_stations_getbycordsadv": {
        "api_name": "getbycordsadv",
        "category": "Data",
        "tool_name": "electric_vehicle_charging_stations",
        "code": "async def rapi_electric_vehicle_charging_stations_getbycordsadv(self,*args,**kwargs):\n    '''Designed to provide users with the ability to search for and locate electric vehicle charging stations. The API includes a vast database of over 50,000 charging stations, with more being added regularly.\n    \n    \n\n    :param integer radius: Radius in miles defaults to 10\n    :param integer lat:  defaults to 40.733154296875\n    :param integer lng:  defaults to -73.99571228027344\n    :param string? access_param:  defaults to public\n    :param string? ev_connector_type_param:  defaults to J1772\n    :param string? ev_network_param:  defaults to Tesla,Tesla Destination\n    :param integer? per_page:  defaults to 10\n    :param integer? page:  defaults to 1\n    :param string? owner_type_param:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_electric_vehicle_charging_stations_getbycordsadv',kwargs)\n        "
    },
    "rapi_breachdirectory_index": {
        "api_name": "index",
        "category": "Data",
        "tool_name": "breachdirectory",
        "code": "async def rapi_breachdirectory_index(self,*args,**kwargs):\n    '''Check if an email, username, password, or phone number was compromised in a data breach.\n    \n    \n\n    :param string term: Enter the proper search term given the function you selected. defaults to someone@example.com\n    :param string func: Select the function you wish to use from the following:\n- auto: Returns passwords, SHA-1 hashes, and sources given any username or email.\n- sources: Returns sources given username or email.\n- password: Returns how many times a given password has been leaked.\n- domain: Returns passwords, SHA-1 hashes, and sources given any domain (Limited to 1000 results for security).\n- dehash: Attempts to decrypt a given hash. defaults to auto\n    '''\n    return await self._request_rapid_api('rapi_breachdirectory_index',kwargs)\n        "
    },
    "rapi_website_contacts_scraper_scrape_contacts_from_website": {
        "api_name": "scrape_contacts_from_website",
        "category": "Data",
        "tool_name": "website_contacts_scraper",
        "code": "async def rapi_website_contacts_scraper_scrape_contacts_from_website(self,*args,**kwargs):\n    '''Scrape emails, phone numbers and social profiles (Facebook, TikTok, Instagram, Twitter, LinkedIn and more) from a website domain in real-time.\n    \n    \n\n    :param string query: Domain from which to scrape emails and contacts (e.g. wsgr.com). Accepts any valid url and uses its root domain as a starting point for the extraction. defaults to wsgr.com\n    '''\n    return await self._request_rapid_api('rapi_website_contacts_scraper_scrape_contacts_from_website',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_channel_videos": {
        "api_name": "channel_videos",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_channel_videos(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string channelId:  defaults to UCBVjMGOIkavEAhyqpxJ73Dw\n    :param string part:  defaults to snippet,id\n    :param string? maxResults:  defaults to 50\n    :param string? pageToken: \n    :param string? order:  defaults to date\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_channel_videos',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_playlist_details": {
        "api_name": "playlist_details",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_playlist_details(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string id:  defaults to RDZiQo7nAkQHU\n    :param string part:  defaults to snippet\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_playlist_details',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_video_comments": {
        "api_name": "video_comments",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_video_comments(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string videoId:  defaults to 7ghhRHRP6t4\n    :param string part:  defaults to snippet\n    :param integer maxResults:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_video_comments',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_channel_details": {
        "api_name": "channel_details",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_channel_details(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string id:  defaults to UCBVjMGOIkavEAhyqpxJ73Dw\n    :param string part:  defaults to snippet,statistics\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_channel_details',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_video_details": {
        "api_name": "video_details",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_video_details(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string id:  defaults to 7ghhRHRP6t4\n    :param string part:  defaults to contentDetails,snippet,statistics\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_video_details',kwargs)\n        "
    },
    "rapi_youtube_v3_v2_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "youtube_v3_v2",
        "code": "async def rapi_youtube_v3_v2_search(self,*args,**kwargs):\n    '''Get youtube data without any youtube data api key\n    \n    \n\n    :param string part:  defaults to snippet,id\n    :param string q:  defaults to music\n    :param string? pageToken: \n    :param string? order:  defaults to date\n    :param string? regionCode:  defaults to US\n    :param integer? maxResults:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v2_search',kwargs)\n        "
    },
    "rapi_blockit_blockit": {
        "api_name": "blockit",
        "category": "Data",
        "tool_name": "blockit",
        "code": "async def rapi_blockit_blockit(self,*args,**kwargs):\n    '''BlockIt\nBlockIt is detect IP Address a Proxy, Tor, Hosting, Cloud, Bogon and etc.\n    \n    \n\n    :param string ip:  defaults to 34.95.185.149\n    '''\n    return await self._request_rapid_api('rapi_blockit_blockit',kwargs)\n        "
    },
    "rapi_france_2d_history": {
        "api_name": "history",
        "category": "Data",
        "tool_name": "france_2d",
        "code": "async def rapi_france_2d_history(self,*args,**kwargs):\n    '''France 2D\nGet started for free!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_france_2d_history',kwargs)\n        "
    },
    "rapi_france_2d_live": {
        "api_name": "live",
        "category": "Data",
        "tool_name": "france_2d",
        "code": "async def rapi_france_2d_live(self,*args,**kwargs):\n    '''France 2D\nGet started for free!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_france_2d_live',kwargs)\n        "
    },
    "rapi_semantic_quotes_random_quote": {
        "api_name": "random_quote",
        "category": "Data",
        "tool_name": "semantic_quotes",
        "code": "async def rapi_semantic_quotes_random_quote(self,*args,**kwargs):\n    '''Semantic search for quotes. Wondering which celebrities have said something similar? Look no more, this API gives you the power to search for quotes semantically from over 1M+ quotes. The Artificial Intelligence (NLP) engine behind the scene seeks to understand the meaning of your query rather than simply matching keywords. We allows user to flexibly filter the results by the length of the quote, and/or by a large variety of tags.\n    \n    \n\n    :param integer? max_length: Maximum length of the quote. defaults to 4000\n    :param string? tags: Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n         defaults to inspirational,motivational\n    :param integer? min_length: Minimum length of the quote. defaults to 0\n    :param integer? limit: Number of results returned. defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_semantic_quotes_random_quote',kwargs)\n        "
    },
    "rapi_semantic_quotes_search_quotes": {
        "api_name": "search_quotes",
        "category": "Data",
        "tool_name": "semantic_quotes",
        "code": "async def rapi_semantic_quotes_search_quotes(self,*args,**kwargs):\n    '''Semantic search for quotes. Wondering which celebrities have said something similar? Look no more, this API gives you the power to search for quotes semantically from over 1M+ quotes. The Artificial Intelligence (NLP) engine behind the scene seeks to understand the meaning of your query rather than simply matching keywords. We allows user to flexibly filter the results by the length of the quote, and/or by a large variety of tags.\n    \n    \n\n    :param string q: Search term. defaults to Don't give up.\n    :param string? tags: Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n         defaults to inspirational,motivational\n    :param integer? max_length: Maximum length of the quote. defaults to 4000\n    :param integer? limit: Number of results returned. defaults to 3\n    :param integer? min_length: Minimum length of the quote. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_semantic_quotes_search_quotes',kwargs)\n        "
    },
    "rapi_us_zipcodes_code": {
        "api_name": "code",
        "category": "Data",
        "tool_name": "us_zipcodes",
        "code": "async def rapi_us_zipcodes_code(self,*args,**kwargs):\n    '''The API offers detailed data about zip codes in the USA, including geographic coordinates, county, city, and time zone. This information is valuable for targeted marketing, data analysis, and location-based services. Users can retrieve location-specific details about a given zip code using the API.\n    \n    \n\n    :param string code:  defaults to 501\n    '''\n    return await self._request_rapid_api('rapi_us_zipcodes_code',kwargs)\n        "
    },
    "rapi_food_price_inflation_get_all_food_typen": {
        "api_name": "get_all_food_typen",
        "category": "Data",
        "tool_name": "food_price_inflation",
        "code": "async def rapi_food_price_inflation_get_all_food_typen(self,*args,**kwargs):\n    '''This API provides the percent change of the Inflations Rate for the Food Prices in the last 2 Years independent of the Price Index (CPI) for food is a component of the all-items CPI.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_food_price_inflation_get_all_food_typen',kwargs)\n        "
    },
    "rapi_provinces_of_thailand_subdistrict": {
        "api_name": "subdistrict",
        "category": "Data",
        "tool_name": "provinces_of_thailand",
        "code": "async def rapi_provinces_of_thailand_subdistrict(self,*args,**kwargs):\n    '''\u0e08\u0e31\u0e07\u0e2b\u0e27\u0e31\u0e14 \nGET  https://provinces-of-thailand.p.rapidapi.com/province/\nGET  https://provinces-of-thailand.p.rapidapi.com/province/id/{number}\nGET  https://provinces-of-thailand.p.rapidapi.com/province/code/{number}\n\u0e2d\u0e33\u0e40\u0e20\u0e2d \nGET  https://provinces-of-thailand.p.rapidapi.com/district \n\u0e15\u0e33\u0e1a\u0e25\nGET  https://provinces-of-thailand.p.rapidapi.com/subdistrict\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_provinces_of_thailand_subdistrict',kwargs)\n        "
    },
    "rapi_provinces_of_thailand_district": {
        "api_name": "district",
        "category": "Data",
        "tool_name": "provinces_of_thailand",
        "code": "async def rapi_provinces_of_thailand_district(self,*args,**kwargs):\n    '''\u0e08\u0e31\u0e07\u0e2b\u0e27\u0e31\u0e14 \nGET  https://provinces-of-thailand.p.rapidapi.com/province/\nGET  https://provinces-of-thailand.p.rapidapi.com/province/id/{number}\nGET  https://provinces-of-thailand.p.rapidapi.com/province/code/{number}\n\u0e2d\u0e33\u0e40\u0e20\u0e2d \nGET  https://provinces-of-thailand.p.rapidapi.com/district \n\u0e15\u0e33\u0e1a\u0e25\nGET  https://provinces-of-thailand.p.rapidapi.com/subdistrict\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_provinces_of_thailand_district',kwargs)\n        "
    },
    "rapi_provinces_of_thailand_province": {
        "api_name": "province",
        "category": "Data",
        "tool_name": "provinces_of_thailand",
        "code": "async def rapi_provinces_of_thailand_province(self,*args,**kwargs):\n    '''\u0e08\u0e31\u0e07\u0e2b\u0e27\u0e31\u0e14 \nGET  https://provinces-of-thailand.p.rapidapi.com/province/\nGET  https://provinces-of-thailand.p.rapidapi.com/province/id/{number}\nGET  https://provinces-of-thailand.p.rapidapi.com/province/code/{number}\n\u0e2d\u0e33\u0e40\u0e20\u0e2d \nGET  https://provinces-of-thailand.p.rapidapi.com/district \n\u0e15\u0e33\u0e1a\u0e25\nGET  https://provinces-of-thailand.p.rapidapi.com/subdistrict\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_provinces_of_thailand_province',kwargs)\n        "
    },
    "rapi_youtube_v3_v3_activities": {
        "api_name": "activities",
        "category": "Data",
        "tool_name": "youtube_v3_v3",
        "code": "async def rapi_youtube_v3_v3_activities(self,*args,**kwargs):\n    '''YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.\n    \n    \n\n    :param string part: The **part** parameter specifies a comma-separated list of one or more **activity** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an **activity** resource, the **snippet** property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet defaults to snippet\n    :param string channelId: The **channelId** parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities. defaults to UC_x5XG1OV2P6uZZ5FSM9Ttw\n    :param string? regionCode: The **regionCode** parameter instructs the API to return results for the specified country. The parameter value is an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm) country code. YouTube uses this value when the authorized user's previous activity on YouTube does not provide enough information to generate the activity feed.\n    :param string? publishedBefore: The publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) (**YYYY-MM-DDThh:mm:ss.sZ**) format.\n    :param integer? maxResults: The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**. defaults to 5\n    :param string? publishedAfter: The **publishedAfter** parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in [ISO 8601](https://www.w3.org/TR/NOTE-datetime) (**YYYY-MM-DDThh:mm:ss.sZ**) format.\n    :param string? pageToken: The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v3_activities',kwargs)\n        "
    },
    "rapi_youtube_v3_v3_playlists": {
        "api_name": "playlists",
        "category": "Data",
        "tool_name": "youtube_v3_v3",
        "code": "async def rapi_youtube_v3_v3_playlists(self,*args,**kwargs):\n    '''YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.\n    \n    \n\n    :param string part: The **part** parameter specifies a comma-separated list of one or more **playlist** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **playlist** resource, the **snippet** property contains properties like **author**, **title**, **description** and **timeCreated**. As such, if you set **part=snippet**, the API response will contain all of those properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- localizations\n- player\n- snippet\n- status defaults to snippet\n    :param integer? maxResults: The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**. defaults to 5\n    :param string? pageToken: The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.\n    :param string? id: The **id** parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a **playlist** resource, the **id** property specifies the playlist's YouTube playlist ID.\n    :param string? channelId: This value indicates that the API should only return the specified channel's playlists. defaults to UC_x5XG1OV2P6uZZ5FSM9Ttw\n    :param string? hl: The **hl** parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports. The parameter value must be a language code included in the list returned by the `i18nLanguages` method.\n\nIf localized resource details are available in that language, the resource's **snippet.localized** object will contain the localized values. However, if localized details are not available, the **snippet.localized** object will contain resource details in the resource's default language.\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v3_playlists',kwargs)\n        "
    },
    "rapi_youtube_v3_v3_i18nlanguages": {
        "api_name": "i18nlanguages",
        "category": "Data",
        "tool_name": "youtube_v3_v3",
        "code": "async def rapi_youtube_v3_v3_i18nlanguages(self,*args,**kwargs):\n    '''YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.\n    \n    \n\n    :param string part: The **part** parameter specifies the **i18nLanguage** resource properties that the API response will include. Set the parameter value to **snippet**. defaults to snippet\n    :param string? hl: The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**. defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v3_i18nlanguages',kwargs)\n        "
    },
    "rapi_youtube_v3_v3_i18nregions": {
        "api_name": "i18nregions",
        "category": "Data",
        "tool_name": "youtube_v3_v3",
        "code": "async def rapi_youtube_v3_v3_i18nregions(self,*args,**kwargs):\n    '''YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.\n    \n    \n\n    :param string part: The **part** parameter specifies the **i18nRegion** resource properties that the API response will include. Set the parameter value to **snippet**. defaults to snippet\n    :param string? hl: The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**. defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v3_i18nregions',kwargs)\n        "
    },
    "rapi_youtube_v3_v3_videocategories": {
        "api_name": "videocategories",
        "category": "Data",
        "tool_name": "youtube_v3_v3",
        "code": "async def rapi_youtube_v3_v3_videocategories(self,*args,**kwargs):\n    '''YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.\n    \n    \n\n    :param string part: The **part** parameter specifies the **videoCategory** resource properties that the API response will include. Set the parameter value to **snippet**. defaults to snippet\n    :param string? id: The **id** parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.\n    :param string? regionCode: The **regionCode** parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm) country code. defaults to US\n    :param string? hl: The **hl** parameter specifies the language that should be used for text values in the API response. The default value is **en_US**. defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_v3_videocategories',kwargs)\n        "
    },
    "rapi_twitter_tweet_user_favoriters": {
        "api_name": "tweet_user_favoriters",
        "category": "Data",
        "tool_name": "twitter",
        "code": "async def rapi_twitter_tweet_user_favoriters(self,*args,**kwargs):\n    '''Twitter API\n    \n    \n\n    :param string tweet_id:  defaults to 1349129669258448897\n    '''\n    return await self._request_rapid_api('rapi_twitter_tweet_user_favoriters',kwargs)\n        "
    },
    "rapi_twitter_tweet_user_favoriters_continuation": {
        "api_name": "tweet_user_favoriters_continuation",
        "category": "Data",
        "tool_name": "twitter",
        "code": "async def rapi_twitter_tweet_user_favoriters_continuation(self,*args,**kwargs):\n    '''Twitter API\n    \n    \n\n    :param string tweet_id:  defaults to 1349129669258448897\n    :param string continuation_token:  defaults to HBaAgICHncDc4zAAAA==\n    '''\n    return await self._request_rapid_api('rapi_twitter_tweet_user_favoriters_continuation',kwargs)\n        "
    },
    "rapi_twitter_tweet_replies": {
        "api_name": "tweet_replies",
        "category": "Data",
        "tool_name": "twitter",
        "code": "async def rapi_twitter_tweet_replies(self,*args,**kwargs):\n    '''Twitter API\n    \n    \n\n    :param string tweet_id:  defaults to 1349129669258448897\n    '''\n    return await self._request_rapid_api('rapi_twitter_tweet_replies',kwargs)\n        "
    },
    "rapi_sa_rego_check_registration_check": {
        "api_name": "registration_check",
        "category": "Data",
        "tool_name": "sa_rego_check",
        "code": "async def rapi_sa_rego_check_registration_check(self,*args,**kwargs):\n    '''returns the registration details of your South Australia-registered vehicle or boat.\nInformation returned from this check includes:\nMake\nPrimary Colour\nExpiry Date\u00a0\nbody or hull type\ncompulsory third-party (CTP) insurer (vehicles only)\nheavy vehicle details (gross vehicle, combination, or trailer mass).\n    \n    \n\n    :param string rego:  defaults to CC831Y\n    '''\n    return await self._request_rapid_api('rapi_sa_rego_check_registration_check',kwargs)\n        "
    },
    "rapi_hashing_api_sha_text_hash": {
        "api_name": "sha_text_hash",
        "category": "Data",
        "tool_name": "hashing_api",
        "code": "async def rapi_hashing_api_sha_text_hash(self,*args,**kwargs):\n    '''Blake2B/MD5/SHA Text/File/Bytes Hashing\n    \n    \n\n    :param string dataString:  defaults to enter-your-string-here\n    :param integer mode:  defaults to 256\n    '''\n    return await self._request_rapid_api('rapi_hashing_api_sha_text_hash',kwargs)\n        "
    },
    "rapi_hashing_api_blake2b_text_hash_with_key": {
        "api_name": "blake2b_text_hash_with_key",
        "category": "Data",
        "tool_name": "hashing_api",
        "code": "async def rapi_hashing_api_blake2b_text_hash_with_key(self,*args,**kwargs):\n    '''Blake2B/MD5/SHA Text/File/Bytes Hashing\n    \n    \n\n    :param string dataString:  defaults to enter-your-string-here\n    :param string keyString:  defaults to enter-your-key-here\n    '''\n    return await self._request_rapid_api('rapi_hashing_api_blake2b_text_hash_with_key',kwargs)\n        "
    },
    "rapi_domain_whois_lookup_api_domain_name": {
        "api_name": "domain_name",
        "category": "Data",
        "tool_name": "domain_whois_lookup_api",
        "code": "async def rapi_domain_whois_lookup_api_domain_name(self,*args,**kwargs):\n    '''The WHOIS Lookup API is a powerful, RESTful API that allows you to retrieve WHOIS information for any registered domain name. This API provides a simple and fast way to access detailed WHOIS data, including domain owner, registration date, expiration date, and more. Whether you're building a domain search tool, conducting research on domain ownership, or developing a new application that requires WHOIS data, this API is the perfect solution.\n    \n    \n\n    :param string domain_name:  defaults to google.com\n    '''\n    return await self._request_rapid_api('rapi_domain_whois_lookup_api_domain_name',kwargs)\n        "
    },
    "rapi_world_population_getcountriesbycontinent": {
        "api_name": "getcountriesbycontinent",
        "category": "Data",
        "tool_name": "world_population",
        "code": "async def rapi_world_population_getcountriesbycontinent(self,*args,**kwargs):\n    '''Get interesting information about countries' population\n    \n    \n\n    :param string continent:  defaults to Europe\n    :param integer? rank: Order the countries according to the rank. Can take two values:\n\n- 1 = ascending order\n\n-  -1 = descending order defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_world_population_getcountriesbycontinent',kwargs)\n        "
    },
    "rapi_world_population_getpopulationbycountrycode": {
        "api_name": "getpopulationbycountrycode",
        "category": "Data",
        "tool_name": "world_population",
        "code": "async def rapi_world_population_getpopulationbycountrycode(self,*args,**kwargs):\n    '''Get interesting information about countries' population\n    \n    \n\n    :param string countryCode:  defaults to ESP\n    '''\n    return await self._request_rapid_api('rapi_world_population_getpopulationbycountrycode',kwargs)\n        "
    },
    "rapi_whois_lookup_v4_newlyregistereddomains": {
        "api_name": "newlyregistereddomains",
        "category": "Data",
        "tool_name": "whois_lookup_v4",
        "code": "async def rapi_whois_lookup_v4_newlyregistereddomains(self,*args,**kwargs):\n    '''WHOIS API (v1) returns well-parsed WHOIS records with fields in JSON formats for any domain name.\n    \n    \n\n    :param string? exclude: exclude keywords of domain to be searched\n    :param string? date: registered date of domain to be searched defaults to 2023-06-12\n    :param integer? page: page of domain to be searched defaults to 1\n    :param string? keywords: contains keywords of domain to be searched\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v4_newlyregistereddomains',kwargs)\n        "
    },
    "rapi_whois_lookup_v4_whois": {
        "api_name": "whois",
        "category": "Data",
        "tool_name": "whois_lookup_v4",
        "code": "async def rapi_whois_lookup_v4_whois(self,*args,**kwargs):\n    '''WHOIS API (v1) returns well-parsed WHOIS records with fields in JSON formats for any domain name.\n    \n    \n\n    :param string domain: domain name of WhoIS to be searched defaults to peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v4_whois',kwargs)\n        "
    },
    "rapi_whois_lookup_v4_emailvalidation": {
        "api_name": "emailvalidation",
        "category": "Data",
        "tool_name": "whois_lookup_v4",
        "code": "async def rapi_whois_lookup_v4_emailvalidation(self,*args,**kwargs):\n    '''WHOIS API (v1) returns well-parsed WHOIS records with fields in JSON formats for any domain name.\n    \n    \n\n    :param string email: Email to be verified defaults to info@peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v4_emailvalidation',kwargs)\n        "
    },
    "rapi_asin_data_reviews": {
        "api_name": "reviews",
        "category": "Data",
        "tool_name": "asin_data",
        "code": "async def rapi_asin_data_reviews(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type:  defaults to reviews\n    :param string? review_stars: The star rating of reviews to retrieve. Valid values are:\n\n- all_stars \n- five_star\n- four_star\n- three_star\n- two_star\n- one_star\n- all_positive\n- all_critical\n    :param integer? page: The current page of reviews to retrieve. Inspect the pagination.total_pages property in the Reviews results to see how many pages of reviews are available.\n\n**Note that the maximum number of reviews pages served by Amazon is 500.**\n\nupdate value of num to get additional pages\n    :param string? search_term: A search term to use to search reviews.\n    :param boolean? show_different_asins: Sometimes Amazon will return Reviews from ASINs other than the ASIN supplied in the asin request parameter (for example, when the original ASIN is out of stock). `show_different_asins `controls whether you want these other-ASIN review results returned, or not. Can be set to true (the default) to include reviews from other ASINs, or false to hide reviews from ASINs other than the ASIN supplied in the asin parameter. \n\nNote that if you supply a url instead of asin in your request this parameter is ignored.\n\nNote in the event of` show_different_asins=false` and the ASIN shown by Amazon being different from the requested ASIN, then all fields apart from product will be removed from the response.\n    :param string? review_media_type: Filter the reviews to those containing a specific media type. Valid values are:\n\n`all_reviews`\n- Include reviews with text, images or video.\n\n`media_reviews_only`\n- Include only reviews containing images or video.\n    :param string? sort_by: Determines the sort order of reviews to return. \n\nValid values are:  `most_helpful` and `most_recent`\n\n    :param boolean? global_reviews: Determines whether Global Reviews are included, or not Global Reviews are reviews from other Amazon domains outside of the Amazon domain specified in the request. Valid values are:\n\n`true`\n- The  default, Global Reviews are included in the results.\n\n`false`\n- Global reviews are excluded from the results.\n    :param string? review_id: \nA single Review ID, as returned by a prior `type=reviews` request, to retrieve. Useful if you wish to check for the presence of a single review. Use in combination with the amazon_domain parameter.\n    :param string? reviewer_type: The type of reviewer to retrieve reviews from. Valid values are:\n\n`verified_purchase`\n- include reviews by Amazon Verified Purchasers only\n\n`all`\n- include  all reviews, regardless of whether they are from Amazon Verified Purchasers or not)\n    :param string? amazon_domain: The Amazon domain to retrieve Reviews for the product specified in the asin parameter from. For a full list of supported Amazon domains see Supported Amazon Domains.\n\n**Note: If the amazon_domain and asin parameters are supplied then the url parameter is ignored.** defaults to amazon.com\n    :param string? url: The Amazon product-page URL to retrieve Reviews from.\n\n**Note: If the url parameter is supplied then the amazon_domain and asin parameters are ignored.**\n    :param string? review_formats: The type of reviewer to retrieve reviews from. Valid values are:\n\n`all_formats`\n- Include reviews of any product format/variant.\n\n`current_format`\n- Include reviews relating specifically to the current format/variant.\n    :param string? asin: The Amazon ASIN (product ID) to retrieve Reviews for. Used in combination with the amazon_domain parameter.\n\n**Note: If the asin and amazon_domain parameters are supplied then the url parameter is ignored.**\n    '''\n    return await self._request_rapid_api('rapi_asin_data_reviews',kwargs)\n        "
    },
    "rapi_theclique_songkick_concert": {
        "api_name": "songkick_concert",
        "category": "Data",
        "tool_name": "theclique",
        "code": "async def rapi_theclique_songkick_concert(self,*args,**kwargs):\n    '''API for TheClique company\n    \n    \n\n    :param string id_conc:  defaults to 40698227-lumineers-at-aware-super-theatre\n    '''\n    return await self._request_rapid_api('rapi_theclique_songkick_concert',kwargs)\n        "
    },
    "rapi_theclique_songkick_artist": {
        "api_name": "songkick_artist",
        "category": "Data",
        "tool_name": "theclique",
        "code": "async def rapi_theclique_songkick_artist(self,*args,**kwargs):\n    '''API for TheClique company\n    \n    \n\n    :param string artist_id:  defaults to 520117-arctic-monkeys\n    '''\n    return await self._request_rapid_api('rapi_theclique_songkick_artist',kwargs)\n        "
    },
    "rapi_theclique_songkick_festivals": {
        "api_name": "songkick_festivals",
        "category": "Data",
        "tool_name": "theclique",
        "code": "async def rapi_theclique_songkick_festivals(self,*args,**kwargs):\n    '''API for TheClique company\n    \n    \n\n    :param string id_fest:  defaults to 1627549-dreamstate-socal/id/40521898-dreamstate-socal-2022\n    '''\n    return await self._request_rapid_api('rapi_theclique_songkick_festivals',kwargs)\n        "
    },
    "rapi_theclique_songkick_search_artist": {
        "api_name": "songkick_search_artist",
        "category": "Data",
        "tool_name": "theclique",
        "code": "async def rapi_theclique_songkick_search_artist(self,*args,**kwargs):\n    '''API for TheClique company\n    \n    \n\n    :param string artist_name:  defaults to arctic monkeys\n    '''\n    return await self._request_rapid_api('rapi_theclique_songkick_search_artist',kwargs)\n        "
    },
    "rapi_cigars_get_brands": {
        "api_name": "get_brands",
        "category": "Data",
        "tool_name": "cigars",
        "code": "async def rapi_cigars_get_brands(self,*args,**kwargs):\n    '''Data about Cigar brands, Cigars, and country data\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string? search:  defaults to Dominican\n    '''\n    return await self._request_rapid_api('rapi_cigars_get_brands',kwargs)\n        "
    },
    "rapi_cigars_get_cigar_average_ring_gauge": {
        "api_name": "get_cigar_average_ring_gauge",
        "category": "Data",
        "tool_name": "cigars",
        "code": "async def rapi_cigars_get_cigar_average_ring_gauge(self,*args,**kwargs):\n    '''Data about Cigar brands, Cigars, and country data\n    \n    \n\n    :param integer? brandId:  defaults to 13711\n    :param string? filler:  defaults to Nicaragua\n    :param string? wrapper:  defaults to Connecticut Shade, Ecuador\n    :param string? country:  defaults to Nicaragua\n    :param string? color:  defaults to Mild-Medium\n    :param string? strength:  defaults to Colorado Claro\n    :param string? name:  defaults to Maduro\n    '''\n    return await self._request_rapid_api('rapi_cigars_get_cigar_average_ring_gauge',kwargs)\n        "
    },
    "rapi_cigars_get_cigar_by_id": {
        "api_name": "get_cigar_by_id",
        "category": "Data",
        "tool_name": "cigars",
        "code": "async def rapi_cigars_get_cigar_by_id(self,*args,**kwargs):\n    '''Data about Cigar brands, Cigars, and country data\n    \n    \n\n    :param integer cigarId:  defaults to 87160\n    '''\n    return await self._request_rapid_api('rapi_cigars_get_cigar_by_id',kwargs)\n        "
    },
    "rapi_cigars_get_colors": {
        "api_name": "get_colors",
        "category": "Data",
        "tool_name": "cigars",
        "code": "async def rapi_cigars_get_colors(self,*args,**kwargs):\n    '''Data about Cigar brands, Cigars, and country data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cigars_get_colors',kwargs)\n        "
    },
    "rapi_cigars_get_cigars": {
        "api_name": "get_cigars",
        "category": "Data",
        "tool_name": "cigars",
        "code": "async def rapi_cigars_get_cigars(self,*args,**kwargs):\n    '''Data about Cigar brands, Cigars, and country data\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string? color:  defaults to Claro\n    :param string? filler:  defaults to Nicaragua\n    :param string? country:  defaults to Nicaragua\n    :param string? strength:  defaults to Mild\n    :param string? wrapper:  defaults to Connecticut\n    :param string? name: Uses similar search to find a Cigar by name defaults to Connecticut\n    :param integer? brandId:  defaults to 13711\n    '''\n    return await self._request_rapid_api('rapi_cigars_get_cigars',kwargs)\n        "
    },
    "rapi_random_word_generator_generate_a_random_sentence": {
        "api_name": "generate_a_random_sentence",
        "category": "Data",
        "tool_name": "random_word_generator",
        "code": "async def rapi_random_word_generator_generate_a_random_sentence(self,*args,**kwargs):\n    '''Random words and more provided by RandomWordGenerator.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_word_generator_generate_a_random_sentence',kwargs)\n        "
    },
    "rapi_kick_com_api_kick_api_get_channel_links": {
        "api_name": "get_channel_links",
        "category": "Data",
        "tool_name": "kick_com_api_kick_api",
        "code": "async def rapi_kick_com_api_kick_api_get_channel_links(self,*args,**kwargs):\n    '''Detailed Kick.com API. Streamers, categories, chats, users and more.\n    \n    \n\n    :param string? channel_name:  defaults to gmhikaru\n    '''\n    return await self._request_rapid_api('rapi_kick_com_api_kick_api_get_channel_links',kwargs)\n        "
    },
    "rapi_us_gun_laws_get_laws_for_all_states": {
        "api_name": "get_laws_for_all_states",
        "category": "Data",
        "tool_name": "us_gun_laws",
        "code": "async def rapi_us_gun_laws_get_laws_for_all_states(self,*args,**kwargs):\n    '''Query for gun laws by state or retrieve data for all states.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_us_gun_laws_get_laws_for_all_states',kwargs)\n        "
    },
    "rapi_genderize_nationalize_genderize": {
        "api_name": "genderize",
        "category": "Data",
        "tool_name": "genderize_nationalize",
        "code": "async def rapi_genderize_nationalize_genderize(self,*args,**kwargs):\n    '''Get name gender and nationality.\n    \n    \n\n    :param string name: \n    '''\n    return await self._request_rapid_api('rapi_genderize_nationalize_genderize',kwargs)\n        "
    },
    "rapi_location_and_time_calculate_distance_between_cities": {
        "api_name": "calculate_distance_between_cities",
        "category": "Data",
        "tool_name": "location_and_time",
        "code": "async def rapi_location_and_time_calculate_distance_between_cities(self,*args,**kwargs):\n    '''A collection of location and time utilities. You can search for country/city information worldwide, find out distance between two locations/cities, get location data from IP address, solve any time questions regarding different timezones, get sunrise/sunset times at any location, get holiday information worldwide, and much more!\n    \n    \n\n    :param string to_city: Name of the city. defaults to New York\n    :param string from_city: Name of the city. defaults to Los Angeles\n    :param string? unit: Length unit [mi|km] defaults to mi\n    '''\n    return await self._request_rapid_api('rapi_location_and_time_calculate_distance_between_cities',kwargs)\n        "
    },
    "rapi_location_and_time_get_date_and_time_by_city": {
        "api_name": "get_date_and_time_by_city",
        "category": "Data",
        "tool_name": "location_and_time",
        "code": "async def rapi_location_and_time_get_date_and_time_by_city(self,*args,**kwargs):\n    '''A collection of location and time utilities. You can search for country/city information worldwide, find out distance between two locations/cities, get location data from IP address, solve any time questions regarding different timezones, get sunrise/sunset times at any location, get holiday information worldwide, and much more!\n    \n    \n\n    :param string city: Name of the city. defaults to Los Angeles\n    '''\n    return await self._request_rapid_api('rapi_location_and_time_get_date_and_time_by_city',kwargs)\n        "
    },
    "rapi_thai_lotto_new_api_modern_internet": {
        "api_name": "modern_internet",
        "category": "Data",
        "tool_name": "thai_lotto_new_api",
        "code": "async def rapi_thai_lotto_new_api_modern_internet(self,*args,**kwargs):\n    '''Myanmar 2D/3D, Thai Lottery, Myanmar Currency Exchanger  All the entries data is taken from: https://www.set.or.th/th/home\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lotto_new_api_modern_internet',kwargs)\n        "
    },
    "rapi_thai_lotto_new_api_beta_calendar": {
        "api_name": "beta_calendar",
        "category": "Data",
        "tool_name": "thai_lotto_new_api",
        "code": "async def rapi_thai_lotto_new_api_beta_calendar(self,*args,**kwargs):\n    '''Myanmar 2D/3D, Thai Lottery, Myanmar Currency Exchanger  All the entries data is taken from: https://www.set.or.th/th/home\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lotto_new_api_beta_calendar',kwargs)\n        "
    },
    "rapi_thai_lotto_new_api_2d": {
        "api_name": "2d",
        "category": "Data",
        "tool_name": "thai_lotto_new_api",
        "code": "async def rapi_thai_lotto_new_api_2d(self,*args,**kwargs):\n    '''Myanmar 2D/3D, Thai Lottery, Myanmar Currency Exchanger  All the entries data is taken from: https://www.set.or.th/th/home\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lotto_new_api_2d',kwargs)\n        "
    },
    "rapi_thai_lotto_new_api_3": {
        "api_name": "3",
        "category": "Data",
        "tool_name": "thai_lotto_new_api",
        "code": "async def rapi_thai_lotto_new_api_3(self,*args,**kwargs):\n    '''Myanmar 2D/3D, Thai Lottery, Myanmar Currency Exchanger  All the entries data is taken from: https://www.set.or.th/th/home\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lotto_new_api_3',kwargs)\n        "
    },
    "rapi_unicode_codepoints_property": {
        "api_name": "property",
        "category": "Data",
        "tool_name": "unicode_codepoints",
        "code": "async def rapi_unicode_codepoints_property(self,*args,**kwargs):\n    '''A RESTful Interface to Unicode Data, this API gives easy and standardized access to all information from Codepoints.net. The detailed documentation is [available on Github](https://github.com/Boldewyn/Codepoints.net/wiki/API).\n    \n    \n\n    :param string property: The Unicode property to render defaults to block\n    '''\n    return await self._request_rapid_api('rapi_unicode_codepoints_property',kwargs)\n        "
    },
    "rapi_whois_lookup_v3_domain_information": {
        "api_name": "domain_information",
        "category": "Data",
        "tool_name": "whois_lookup_v3",
        "code": "async def rapi_whois_lookup_v3_domain_information(self,*args,**kwargs):\n    '''This API pulls up-to-date records from the original data sources in real time, so you can have access to fresh data.\n    \n    \n\n    :param string search: The domain to search defaults to google.com\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v3_domain_information',kwargs)\n        "
    },
    "rapi_industry_naics_search_filter_and_query_naics_description": {
        "api_name": "filter_and_query_naics_description",
        "category": "Data",
        "tool_name": "industry_naics_search",
        "code": "async def rapi_industry_naics_search_filter_and_query_naics_description(self,*args,**kwargs):\n    '''Find the NAICS code base on free  search or find all description of industry for a given NAICS code\n    \n    \n\n    :param integer? naics: This parameter take full 6 digit NAICS code only.\nOptional if q parameter is present. defaults to 721110\n    :param string? q: When freeform search without NAICS param, minimum 3 character to search.\nOptional if NAICS param is present. defaults to Hotel\n    '''\n    return await self._request_rapid_api('rapi_industry_naics_search_filter_and_query_naics_description',kwargs)\n        "
    },
    "rapi_consumer_reports_products_detail": {
        "api_name": "products_detail",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_products_detail(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer id: The value of _id field returned in .../products/list endpoint defaults to 397144\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_products_detail',kwargs)\n        "
    },
    "rapi_consumer_reports_product_groups_detail": {
        "api_name": "product_groups_detail",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_product_groups_detail(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer id: The value of _id field returned in .../product-groups/list endpoint defaults to 28971\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_product_groups_detail',kwargs)\n        "
    },
    "rapi_consumer_reports_product_groups_list": {
        "api_name": "product_groups_list",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_product_groups_list(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer? size: The number of items per response, for paging purpose. Maximum is 500. defaults to 100\n    :param integer? productGroupTypeId: The value of productGroupTypeId field returned right in this endpoint\n    :param integer? page: The page index starting from 0, for paging purpose\n    :param integer? parentProductGroupId: The value of _id field returned right in this endpoint. \n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_product_groups_list',kwargs)\n        "
    },
    "rapi_consumer_reports_cars_get_images": {
        "api_name": "cars_get_images",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_cars_get_images(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer modelYearId: The value of modelYearId field returned in .../cars/get-models endpoint defaults to 7328\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_cars_get_images',kwargs)\n        "
    },
    "rapi_consumer_reports_cars_get_recalls": {
        "api_name": "cars_get_recalls",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_cars_get_recalls(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer modelYearId: The value of modelYearId field returned in .../cars/get-models endpoint defaults to 7328\n    :param integer? size: The number of items per response, for paging purpose defaults to 20\n    :param integer? page: The page index starting from 0, for paging purpose defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_cars_get_recalls',kwargs)\n        "
    },
    "rapi_consumer_reports_cars_detail": {
        "api_name": "cars_detail",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_cars_detail(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer modelYearId: The value of modelYearId field returned in .../cars/get-models endpoint defaults to 7328\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_cars_detail',kwargs)\n        "
    },
    "rapi_consumer_reports_cars_get_models": {
        "api_name": "cars_get_models",
        "category": "Data",
        "tool_name": "consumer_reports",
        "code": "async def rapi_consumer_reports_cars_get_models(self,*args,**kwargs):\n    '''This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org\n    \n    \n\n    :param integer modelId: The value of carModels -> id field returned in .../search endpoint defaults to 428\n    '''\n    return await self._request_rapid_api('rapi_consumer_reports_cars_get_models',kwargs)\n        "
    },
    "rapi_similarweb_historical_data_api_getcountries": {
        "api_name": "api_getcountries",
        "category": "Data",
        "tool_name": "similarweb_historical_data",
        "code": "async def rapi_similarweb_historical_data_api_getcountries(self,*args,**kwargs):\n    '''More than 36 month visits and countries share SimilarWeb data \n    \n    \n\n    :param string domain: Domain name (like google.com) defaults to google.com\n    '''\n    return await self._request_rapid_api('rapi_similarweb_historical_data_api_getcountries',kwargs)\n        "
    },
    "rapi_similarweb_historical_data_api_getvisits": {
        "api_name": "api_getvisits",
        "category": "Data",
        "tool_name": "similarweb_historical_data",
        "code": "async def rapi_similarweb_historical_data_api_getvisits(self,*args,**kwargs):\n    '''More than 36 month visits and countries share SimilarWeb data \n    \n    \n\n    :param string domain: Domain name (like google.com) defaults to google.com\n    '''\n    return await self._request_rapid_api('rapi_similarweb_historical_data_api_getvisits',kwargs)\n        "
    },
    "rapi_bible_memory_verse_flashcard_get_verses": {
        "api_name": "get_verses",
        "category": "Data",
        "tool_name": "bible_memory_verse_flashcard",
        "code": "async def rapi_bible_memory_verse_flashcard_get_verses(self,*args,**kwargs):\n    '''This KJV Bible API allows users to retrieve verses/chapters in 1 of 6 formats.\n    \n    \n\n    :param string text_mode: MODES:    'full',   'blank',    'first',   'vowels',  'misc',   'ends', \n\n(Not case sensitive) defaults to ends\n    :param string book_name:  defaults to john\n    :param integer? verse_num1: 1ST / starting verse IN POSSIBLE VERSE SEQUENCE defaults to 1\n    :param integer? chapter:  defaults to 1\n    :param integer? verse_num2: Last verse of a possible sequence of verses [EX: IF verse_num1=1 and verse_num2=10\nmeans verses  1,2,3,4,5,6,7,8,9, 10 WILL BE RETURNED] defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_bible_memory_verse_flashcard_get_verses',kwargs)\n        "
    },
    "rapi_bible_memory_verse_flashcard_get_chapter": {
        "api_name": "get_chapter",
        "category": "Data",
        "tool_name": "bible_memory_verse_flashcard",
        "code": "async def rapi_bible_memory_verse_flashcard_get_chapter(self,*args,**kwargs):\n    '''This KJV Bible API allows users to retrieve verses/chapters in 1 of 6 formats.\n    \n    \n\n    :param string book_name:  defaults to numbers\n    :param integer? chapter:  defaults to 1\n    :param string? text_mode: MODES:    'full',   'blank',    'first',   'vowels',   'misc',   'ends', \n\n(Not case sensitive) defaults to vowels\n    '''\n    return await self._request_rapid_api('rapi_bible_memory_verse_flashcard_get_chapter',kwargs)\n        "
    },
    "rapi_realtor_property_details": {
        "api_name": "property_details",
        "category": "Data",
        "tool_name": "realtor",
        "code": "async def rapi_realtor_property_details(self,*args,**kwargs):\n    '''Query real time data of US real estate properties and agents\n    \n    \n\n    :param string? property_id:  defaults to 1497548641\n    :param string? address: \n    '''\n    return await self._request_rapid_api('rapi_realtor_property_details',kwargs)\n        "
    },
    "rapi_realtor_search_for_region": {
        "api_name": "search_for_region",
        "category": "Data",
        "tool_name": "realtor",
        "code": "async def rapi_realtor_search_for_region(self,*args,**kwargs):\n    '''Query real time data of US real estate properties and agents\n    \n    \n\n    :param string location:  defaults to santa monica\n    '''\n    return await self._request_rapid_api('rapi_realtor_search_for_region',kwargs)\n        "
    },
    "rapi_realtor_search_agents": {
        "api_name": "search_agents",
        "category": "Data",
        "tool_name": "realtor",
        "code": "async def rapi_realtor_search_agents(self,*args,**kwargs):\n    '''Query real time data of US real estate properties and agents\n    \n    \n\n    :param string location:  defaults to santa monica\n    :param integer? page:  defaults to 1\n    :param string? price: Price range\nexample for range between 50k to 2m : \n50000_2000000\n    :param string? agentname: \n    :param string? lang: [afrikaans\nalbanian\narabic\narmenian\nasl\nbengali\nbosnian\nbulgarian\nchinese\ncroatian\nczech\nDanish\ndutch\nEstonian\nfarsi\nfilipino\nfinnish\nfrench\ngaelic\ngeorgian\ngerman\ngreek\nhawaiian\nhebrew\nhindi\nhungarian\nindonesian\nitalian\njapanese\nkorean\nlao\nlatvian\nlithuanian\nmalay\nmandarin\nnepali\nnorwegian\npolish\nportuguese\npunjabi\nromanian\nrussian\nserbian\nsindhi\nsinghalese\nslovenian\nspanish\nswahili\nswedish\ntagalog\ntaiwanese\nthai\nturkish\nukrainian\nurdu\nvietnamese\nyugoslavian]\n    :param boolean? photo: If the agent has a photo or not \n1 if yes\n0 if no defaults to 1\n    :param integer? rating: Rating (between 1 and 5)\n    '''\n    return await self._request_rapid_api('rapi_realtor_search_agents',kwargs)\n        "
    },
    "rapi_realtor_agent_details": {
        "api_name": "agent_details",
        "category": "Data",
        "tool_name": "realtor",
        "code": "async def rapi_realtor_agent_details(self,*args,**kwargs):\n    '''Query real time data of US real estate properties and agents\n    \n    \n\n    :param string id:  defaults to 569e892a89a68901006bdb99\n    '''\n    return await self._request_rapid_api('rapi_realtor_agent_details',kwargs)\n        "
    },
    "rapi_animals_by_api_ninjas_v1_animals": {
        "api_name": "v1_animals",
        "category": "Data",
        "tool_name": "animals_by_api_ninjas",
        "code": "async def rapi_animals_by_api_ninjas_v1_animals(self,*args,**kwargs):\n    '''Detailed and interesting facts for thousands of animal species. See more info at https://api-ninjas.com/api/animals.\n    \n    \n\n    :param string name: common name of animal to search. This parameter supports partial matches (e.g. fox will match gray fox and red fox) defaults to cheetah\n    '''\n    return await self._request_rapid_api('rapi_animals_by_api_ninjas_v1_animals',kwargs)\n        "
    },
    "rapi_rest_countries_get_countries": {
        "api_name": "get_countries",
        "category": "Data",
        "tool_name": "rest_countries",
        "code": "async def rapi_rest_countries_get_countries(self,*args,**kwargs):\n    '''Countries' data\u2014name, flag (form Twitter icons), ISO-codes, etc\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rest_countries_get_countries',kwargs)\n        "
    },
    "rapi_fear_and_greed_index_index": {
        "api_name": "index",
        "category": "Data",
        "tool_name": "fear_and_greed_index",
        "code": "async def rapi_fear_and_greed_index_index(self,*args,**kwargs):\n    '''Fear and Greed index. Historical data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fear_and_greed_index_index',kwargs)\n        "
    },
    "rapi_zillow_walk_transit_and_bike_scores": {
        "api_name": "walk_transit_and_bike_scores",
        "category": "Data",
        "tool_name": "zillow",
        "code": "async def rapi_zillow_walk_transit_and_bike_scores(self,*args,**kwargs):\n    '''Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.\n    \n    \n\n    :param string? zpid:  defaults to 20485700\n    '''\n    return await self._request_rapid_api('rapi_zillow_walk_transit_and_bike_scores',kwargs)\n        "
    },
    "rapi_zillow_property_details": {
        "api_name": "property_details",
        "category": "Data",
        "tool_name": "zillow",
        "code": "async def rapi_zillow_property_details(self,*args,**kwargs):\n    '''Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.\n    \n    \n\n    :param integer? zpid: \n    :param string? property_url:  defaults to https://www.zillow.com/homedetails/101-California-Ave-UNIT-303-Santa-Monica-CA-90403/20485700_zpid/\n    '''\n    return await self._request_rapid_api('rapi_zillow_property_details',kwargs)\n        "
    },
    "rapi_zillow_search_agent": {
        "api_name": "search_agent",
        "category": "Data",
        "tool_name": "zillow",
        "code": "async def rapi_zillow_search_agent(self,*args,**kwargs):\n    '''Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.\n    \n    \n\n    :param string? page: \n    :param string? locationText: e.g. `Newport Beach` or zip code `90278` defaults to Newport Beach\n    :param string? name: \n    '''\n    return await self._request_rapid_api('rapi_zillow_search_agent',kwargs)\n        "
    },
    "rapi_zillow_search_for_properties": {
        "api_name": "search_for_properties",
        "category": "Data",
        "tool_name": "zillow",
        "code": "async def rapi_zillow_search_for_properties(self,*args,**kwargs):\n    '''Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.\n    \n    \n\n    :param string location: Location details, address, county, neighborhood or Zip code. defaults to Houston, TX\n    :param integer? isComingSoon: \n    :param integer? buildYearMax: \n    :param integer? isBasementFinished: \n    :param integer? bedsMin: \n    :param integer? bathsMin: \n    :param integer? bathsMax: \n    :param integer? isPendingUnderContract: \n    :param string? sort: For `status_type` = `ForSale` OR `RecentlySold` are available:\n- `Homes_for_You`\n- `Price_High_Low`\n- `Price_Low_High`\n- `Newest`\n- `Bedrooms`\n- `Bathrooms`\n- `Square_Feet`\n- `Lot_Size`\n\ndefault `Homes_for_You`\n\nFor `status_type` = `ForRent` are available:\n- `Verified_Source`\n- `Payment_High_Low`\n- `Payment_Low_High`\n- `Newest`\n- `Bedrooms`\n- `Bathrooms`\n- `Square_Feet`\n- `Lot_Size`\n\ndefault `Verified_Source`\n    :param integer? sqftMax: \n    :param string? home_type: Property type comma-separated or empty for all types:\n- `Multi-family`\n- `Apartments`\n- `Houses`\n- `Manufactured`\n- `Condos`\n- `LotsLand`\n- `Townhomes`\n    :param integer? rentMinPrice: \n    :param integer? isNewConstruction: \n    :param string? keywords: MLS #, yard, etc.\n    :param integer? otherListings: If set to 1, the results will only include data from the `Other Listings` tab.\n    :param integer? isBasementUnfinished: \n    :param ENUM? daysOn: Days on Zillow possible values :\n- empty: Any,\n- 1: 1 day,\n- 7: 7 days,\n- 14: 14 days,\n- 30: 30 days,\n- 90: 90 days,\n- 6m: 6 months,\n- 12m: 12 months,\n- 24m: 24 months,\n- 36m: 36 months\n    :param integer? sqftMin: \n    :param integer? buildYearMin: \n    :param ENUM? soldInLast: Sold In Last\n    :param integer? rentMaxPrice: \n    :param integer? bedsMax: \n    :param integer? minPrice: \n    :param integer? page: Page number if at the previous response `totalPages` > 1\n    :param integer? maxPrice: \n    :param ENUM? status_type: Status type of the properties\n\nDefault : forSale\n\n- forSale\n\n- forRent\n\n- recentlySold\n\n    '''\n    return await self._request_rapid_api('rapi_zillow_search_for_properties',kwargs)\n        "
    },
    "rapi_autocomplete_usa_autocomplete_addresses": {
        "api_name": "autocomplete_addresses",
        "category": "Data",
        "tool_name": "autocomplete_usa",
        "code": "async def rapi_autocomplete_usa_autocomplete_addresses(self,*args,**kwargs):\n    '''USA Address, City, Zip code - Zip4, Zip code Autocomplete\n    \n    \n\n    :param string address:  defaults to 6185 Gar\n    '''\n    return await self._request_rapid_api('rapi_autocomplete_usa_autocomplete_addresses',kwargs)\n        "
    },
    "rapi_autocomplete_usa_autocomplete_zipcodes_lite": {
        "api_name": "autocomplete_zipcodes_lite",
        "category": "Data",
        "tool_name": "autocomplete_usa",
        "code": "async def rapi_autocomplete_usa_autocomplete_zipcodes_lite(self,*args,**kwargs):\n    '''USA Address, City, Zip code - Zip4, Zip code Autocomplete\n    \n    \n\n    :param string zipcode:  defaults to 110\n    '''\n    return await self._request_rapid_api('rapi_autocomplete_usa_autocomplete_zipcodes_lite',kwargs)\n        "
    },
    "rapi_reqres_unknown": {
        "api_name": "unknown",
        "category": "Data",
        "tool_name": "reqres",
        "code": "async def rapi_reqres_unknown(self,*args,**kwargs):\n    '''Reqres\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reqres_unknown',kwargs)\n        "
    },
    "rapi_thesaurus_by_api_ninjas_v1_thesaurus": {
        "api_name": "v1_thesaurus",
        "category": "Data",
        "tool_name": "thesaurus_by_api_ninjas",
        "code": "async def rapi_thesaurus_by_api_ninjas_v1_thesaurus(self,*args,**kwargs):\n    '''Get synonym and antonyms for any word. See more info at https://api-ninjas.com/api/thesaurus.\n    \n    \n\n    :param string word: word to look up. defaults to bright\n    '''\n    return await self._request_rapid_api('rapi_thesaurus_by_api_ninjas_v1_thesaurus',kwargs)\n        "
    },
    "rapi_todo_lsit_get_my_todo_list": {
        "api_name": "get_my_todo_list",
        "category": "Data",
        "tool_name": "todo_lsit",
        "code": "async def rapi_todo_lsit_get_my_todo_list(self,*args,**kwargs):\n    '''Make my own Todo Lsit\n    \n    \n\n    :param string? page: \n    :param string? limit: \n    '''\n    return await self._request_rapid_api('rapi_todo_lsit_get_my_todo_list',kwargs)\n        "
    },
    "rapi_global_patent_search_patent": {
        "api_name": "search_patent",
        "category": "Data",
        "tool_name": "global_patent",
        "code": "async def rapi_global_patent_search_patent(self,*args,**kwargs):\n    '''Search global patents from world-wide countries with your keyword for freemium\n    \n    \n\n    :param string q:  defaults to kettle\n    :param string ds:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_global_patent_search_patent',kwargs)\n        "
    },
    "rapi_currency_exchange_listquotes": {
        "api_name": "listquotes",
        "category": "Data",
        "tool_name": "currency_exchange",
        "code": "async def rapi_currency_exchange_listquotes(self,*args,**kwargs):\n    '''Live currency and foreign exchange rates by specifying source and destination quotes and optionally amount to calculate. Support vast amount of quotes around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_exchange_listquotes',kwargs)\n        "
    },
    "rapi_gloppo_fake_api_people": {
        "api_name": "people",
        "category": "Data",
        "tool_name": "gloppo_fake_api",
        "code": "async def rapi_gloppo_fake_api_people(self,*args,**kwargs):\n    '''Gloppo Fake API is a collection of developer friendly endpoints for returning randomly generated data for testing purposes.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gloppo_fake_api_people',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomcolor": {
        "api_name": "getrandomcolor",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomcolor(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomcolor',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomquote": {
        "api_name": "getrandomquote",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomquote(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param string? category:  defaults to life\n    :param integer? count:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomquote',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomarray": {
        "api_name": "getrandomarray",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomarray(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param string? data_type:  defaults to string\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomarray',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomword": {
        "api_name": "getrandomword",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomword(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param string? type:  defaults to adjective\n    :param integer? count:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomword',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomtvshow": {
        "api_name": "getrandomtvshow",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomtvshow(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomtvshow',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandommovie": {
        "api_name": "getrandommovie",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandommovie(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param integer? count:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandommovie',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomuser": {
        "api_name": "getrandomuser",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomuser(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param integer? count:  defaults to -2\n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomuser',kwargs)\n        "
    },
    "rapi_random_chunk_api_getrandomname": {
        "api_name": "getrandomname",
        "category": "Data",
        "tool_name": "random_chunk_api",
        "code": "async def rapi_random_chunk_api_getrandomname(self,*args,**kwargs):\n    '''A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.\n    \n    \n\n    :param integer? count:  defaults to 2\n    :param string? startingLetter:  defaults to X\n    :param string? type: \n    '''\n    return await self._request_rapid_api('rapi_random_chunk_api_getrandomname',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_vin_decode": {
        "api_name": "vin_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_vin_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to WBAWY32040L678750\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_vin_decode',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_au_decode": {
        "api_name": "au_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_au_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to WVWZZZAUZGW001953\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_au_decode',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_us_decode": {
        "api_name": "us_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_us_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to WBAPE12060WJ88925\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_us_decode',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_pl_decode": {
        "api_name": "pl_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_pl_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to WBAPE12060WJ88925\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_pl_decode',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_nz_decode": {
        "api_name": "nz_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_nz_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to JMFXDGL3WNZ002145\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_nz_decode',kwargs)\n        "
    },
    "rapi_vin_decoder_v4_za_decode": {
        "api_name": "za_decode",
        "category": "Data",
        "tool_name": "vin_decoder_v4",
        "code": "async def rapi_vin_decoder_v4_za_decode(self,*args,**kwargs):\n    '''Get the most accurate data from your VIN globally or specific locale. Our VIN decoder API is used by various automotive businesses: online stores, forums, portals, blogs and VIN decoding services all around the globe. \n    \n    \n\n    :param string vin:  defaults to WBAVA71050PR98497\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_v4_za_decode',kwargs)\n        "
    },
    "rapi_us_cell_coverage_by_zip_code_get_coverage": {
        "api_name": "get_coverage",
        "category": "Data",
        "tool_name": "us_cell_coverage_by_zip_code",
        "code": "async def rapi_us_cell_coverage_by_zip_code_get_coverage(self,*args,**kwargs):\n    '''Check Cell Coverage by zip code for all US networks\n    \n    \n\n    :param string postcode:  defaults to 92101\n    '''\n    return await self._request_rapid_api('rapi_us_cell_coverage_by_zip_code_get_coverage',kwargs)\n        "
    },
    "rapi_world_bank_gdp_list_of_countries_with_income_level": {
        "api_name": "list_of_countries_with_income_level",
        "category": "Data",
        "tool_name": "world_bank_gdp",
        "code": "async def rapi_world_bank_gdp_list_of_countries_with_income_level(self,*args,**kwargs):\n    '''Sourced from World Bank at https://datahelpdesk.worldbank.org/knowledgebase/articles/898581-api-basic-call-structures\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_bank_gdp_list_of_countries_with_income_level',kwargs)\n        "
    },
    "rapi_world_bank_gdp_list_all_countries": {
        "api_name": "list_all_countries",
        "category": "Data",
        "tool_name": "world_bank_gdp",
        "code": "async def rapi_world_bank_gdp_list_all_countries(self,*args,**kwargs):\n    '''Sourced from World Bank at https://datahelpdesk.worldbank.org/knowledgebase/articles/898581-api-basic-call-structures\n    \n    \n\n    :param string iso2Code:  defaults to br\n    '''\n    return await self._request_rapid_api('rapi_world_bank_gdp_list_all_countries',kwargs)\n        "
    },
    "rapi_google_search_2_google_maps_reviews": {
        "api_name": "google_maps_reviews",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_google_maps_reviews(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string data_id:  defaults to 0x89c25090129c363d:0x40c6a5770d25022b\n    :param string? next_page_token: \n    :param string? sort_by: \n    :param string? topic_id: \n    :param string? hl:  defaults to en_us\n    '''\n    return await self._request_rapid_api('rapi_google_search_2_google_maps_reviews',kwargs)\n        "
    },
    "rapi_google_search_2_google_maps_data_id": {
        "api_name": "google_maps_data_id",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_google_maps_data_id(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string query:  defaults to Statue Of Liberty\n    :param string? gl:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_google_search_2_google_maps_data_id',kwargs)\n        "
    },
    "rapi_google_search_2_google_images": {
        "api_name": "google_images",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_google_images(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string query:  defaults to football\n    :param string? gl:  defaults to us\n    :param string? hl:  defaults to en_us\n    :param string? duration: \n    :param string? chips: \n    :param string? lr: \n    :param string? ijn:  defaults to 0\n    :param string? html: \n    :param string? uule: \n    :param string? device:  defaults to desktop\n    :param string? safe: \n    :param string? nfpr: \n    :param string? tbs: \n    '''\n    return await self._request_rapid_api('rapi_google_search_2_google_images',kwargs)\n        "
    },
    "rapi_google_search_2_google_videos": {
        "api_name": "google_videos",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_google_videos(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string query:  defaults to football\n    :param string? uule: \n    :param string? duration: \n    :param string? safe: \n    :param string? hl:  defaults to en_us\n    :param string? num:  defaults to 10\n    :param string? lr: \n    :param string? device:  defaults to desktop\n    :param string? tbs: \n    :param string? nfpr:  defaults to 0\n    :param string? gl:  defaults to us\n    :param string? page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_google_search_2_google_videos',kwargs)\n        "
    },
    "rapi_google_search_2_google_news": {
        "api_name": "google_news",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_google_news(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string? hl:  defaults to en_us\n    :param string? tbs: \n    :param string? lr: \n    :param string? gl:  defaults to us\n    :param string? page:  defaults to 0\n    :param string? uule: \n    :param string? html: \n    :param string? duration: \n    :param string? query:  defaults to football\n    :param string? safe: \n    :param string? device:  defaults to desktop\n    :param string? nfpr:  defaults to 0\n    :param string? num:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_google_search_2_google_news',kwargs)\n        "
    },
    "rapi_google_search_2_autocomplete_results": {
        "api_name": "autocomplete_results",
        "category": "Data",
        "tool_name": "google_search_2",
        "code": "async def rapi_google_search_2_autocomplete_results(self,*args,**kwargs):\n    '''Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. \n    \n    \n\n    :param string query:  defaults to football\n    :param string? hl:  defaults to en_US\n    :param string? gl:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_google_search_2_autocomplete_results',kwargs)\n        "
    },
    "rapi_geodb_cities_countries": {
        "api_name": "countries",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_countries(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param boolean? asciiMode: Display results using ASCII characters\n    :param integer? limit: The maximum number of results to retrieve\n    :param boolean? hateoasMode: Include HATEOAS-style links in results\n    :param integer? offset: The zero-ary offset index into the results\n    :param string? currencyCode: Only countries supporting this currency\n    :param string? languageCode: Display results in this language\n    :param string? sort: How to sort the results. Format: \u00b1SORT_FIELD where SORT_FIELD = code | name\n    :param boolean? namePrefixDefaultLangResults: When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested\n    :param string? namePrefix: Only countries whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_countries',kwargs)\n        "
    },
    "rapi_geodb_cities_time_zones": {
        "api_name": "time_zones",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_time_zones(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param string? offset: The zero-ary offset index into the results\n    :param boolean? hateoasMode: Include HATEOAS-style links in results\n    :param integer? limit: The maximum number of results to retrieve\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_time_zones',kwargs)\n        "
    },
    "rapi_geodb_cities_currencies": {
        "api_name": "currencies",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_currencies(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param string? countryId: Only currencies supported by this country defaults to US\n    :param integer? limit: The maximum number of results to retrieve\n    :param boolean? hateoasMode: Include HATEOAS-style links in results\n    :param integer? offset: The zero-ary offset index into the results\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_currencies',kwargs)\n        "
    },
    "rapi_geodb_cities_city_details": {
        "api_name": "city_details",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_city_details(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param string cityid: The city id (either native id or wikiDataId) defaults to Q60\n    :param string? languageCode: Display results in this language\n    :param boolean? asciiMode: Display results using ASCII characters\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_city_details',kwargs)\n        "
    },
    "rapi_geodb_cities_admin_divisions_near_division": {
        "api_name": "admin_divisions_near_division",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_admin_divisions_near_division(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param string divisionId:  defaults to Q104994\n    :param integer radius: The location radius within which to find divisions defaults to 100\n    :param integer? minPopulation: Only divisions having at least this population\n    :param boolean? hateoasMode: Include HATEOAS-style links in results\n    :param boolean? namePrefixDefaultLangResults: When name-prefix matching, whether or not to match on names in the default language if a non-default language is requested\n    :param integer? maxPopulation: Only divisions having no more than this population\n    :param string? distanceUnit: The unit of distance to use: MI | KM\n    :param boolean? asciiMode: Display results using ASCII characters\n    :param integer? offset: The zero-ary offset into the results\n    :param string? excludedCountryIds: Only divisions NOT in these countries (comma-delimited country codes or WikiData ids)\n    :param string? languageCode: Display results in this language\n    :param integer? limit: The maximum number of results to retrieve\n    :param string? countryIds: Only divisions in these countries (comma-delimited country codes or WikiData ids)\n    :param string? namePrefix: Only divisions whose names start with this prefix. If languageCode is set, the prefix will be matched on the name as it appears in that language.\n    :param string? timeZoneIds: Only divisions in these time-zones\n    :param string? sort: How to sort the results. Format: \u00b1SORT_FIELD,\u00b1SORT_FIELD where SORT_FIELD = countryCode | elevation | name | population\n    :param string? includeDeleted: Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY | SINCE_LAST_WEEK | NONE\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_admin_divisions_near_division',kwargs)\n        "
    },
    "rapi_geodb_cities_languages": {
        "api_name": "languages",
        "category": "Data",
        "tool_name": "geodb_cities",
        "code": "async def rapi_geodb_cities_languages(self,*args,**kwargs):\n    '''Get global city, region, and country data. Filter and display results in multiple languages.\n    \n    \n\n    :param boolean? hateoasMode: Include HATEOAS-style links in results\n    :param integer? offset: The zero-ary offset index into the results\n    :param integer? limit: The maximum number of results to retrieve\n    '''\n    return await self._request_rapid_api('rapi_geodb_cities_languages',kwargs)\n        "
    },
    "rapi_redfin_base_get_location_infomation_by_zipcode": {
        "api_name": "get_location_infomation_by_zipcode",
        "category": "Data",
        "tool_name": "redfin_base",
        "code": "async def rapi_redfin_base_get_location_infomation_by_zipcode(self,*args,**kwargs):\n    '''[IMPROVED SEARCH API]  API Redfin offers a powerful search feature that allows users to easily find their desired properties. With the search tool, users can refine their search based on location, price range, property type, and various other criteria. They can also customize their search by specifying the number of bedrooms and bathrooms, square footage, and other specific features they are looking for in a home. Redfin's search feature provides accurate and up-to-date results, helping users...\n    \n    \n\n    :param string zipcode:  defaults to 01003\n    '''\n    return await self._request_rapid_api('rapi_redfin_base_get_location_infomation_by_zipcode',kwargs)\n        "
    },
    "rapi_redfin_base_get_zipcode_by_county": {
        "api_name": "get_zipcode_by_county",
        "category": "Data",
        "tool_name": "redfin_base",
        "code": "async def rapi_redfin_base_get_zipcode_by_county(self,*args,**kwargs):\n    '''[IMPROVED SEARCH API]  API Redfin offers a powerful search feature that allows users to easily find their desired properties. With the search tool, users can refine their search based on location, price range, property type, and various other criteria. They can also customize their search by specifying the number of bedrooms and bathrooms, square footage, and other specific features they are looking for in a home. Redfin's search feature provides accurate and up-to-date results, helping users...\n    \n    \n\n    :param string county:  defaults to Hampshire\n    '''\n    return await self._request_rapid_api('rapi_redfin_base_get_zipcode_by_county',kwargs)\n        "
    },
    "rapi_redfin_base_get_zipcode_by_city": {
        "api_name": "get_zipcode_by_city",
        "category": "Data",
        "tool_name": "redfin_base",
        "code": "async def rapi_redfin_base_get_zipcode_by_city(self,*args,**kwargs):\n    '''[IMPROVED SEARCH API]  API Redfin offers a powerful search feature that allows users to easily find their desired properties. With the search tool, users can refine their search based on location, price range, property type, and various other criteria. They can also customize their search by specifying the number of bedrooms and bathrooms, square footage, and other specific features they are looking for in a home. Redfin's search feature provides accurate and up-to-date results, helping users...\n    \n    \n\n    :param string city:  defaults to Holtsville\n    '''\n    return await self._request_rapid_api('rapi_redfin_base_get_zipcode_by_city',kwargs)\n        "
    },
    "rapi_netflix_data_season_episodes": {
        "api_name": "season_episodes",
        "category": "Data",
        "tool_name": "netflix_data",
        "code": "async def rapi_netflix_data_season_episodes(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string ids: Season IDs (you can separate with commas) defaults to 80077209,80117715\n    :param string? limit: Episode Limit defaults to 25\n    :param string? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_data_season_episodes',kwargs)\n        "
    },
    "rapi_netflix_data_title_seasons": {
        "api_name": "title_seasons",
        "category": "Data",
        "tool_name": "netflix_data",
        "code": "async def rapi_netflix_data_title_seasons(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string ids: Title IDs (you can separate with commas) defaults to 80057281\n    :param integer? limit: Season Limit defaults to 25\n    :param integer? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_data_title_seasons',kwargs)\n        "
    },
    "rapi_twitter_pack_v2_search_screen_name": {
        "api_name": "search_screen_name",
        "category": "Data",
        "tool_name": "twitter_pack_v2",
        "code": "async def rapi_twitter_pack_v2_search_screen_name(self,*args,**kwargs):\n    '''Complete pack to get any public information on twitter, includes Twitter Trends, Search Tweet, User Activity\n    \n    \n\n    :param string screen_name:  defaults to elonmusk\n    '''\n    return await self._request_rapid_api('rapi_twitter_pack_v2_search_screen_name',kwargs)\n        "
    },
    "rapi_twitter_pack_v2_trend_id": {
        "api_name": "trend_id",
        "category": "Data",
        "tool_name": "twitter_pack_v2",
        "code": "async def rapi_twitter_pack_v2_trend_id(self,*args,**kwargs):\n    '''Complete pack to get any public information on twitter, includes Twitter Trends, Search Tweet, User Activity\n    \n    \n\n    :param integer woeid:  defaults to 2514815\n    '''\n    return await self._request_rapid_api('rapi_twitter_pack_v2_trend_id',kwargs)\n        "
    },
    "rapi_twitter_pack_v2_trend_list": {
        "api_name": "trend_list",
        "category": "Data",
        "tool_name": "twitter_pack_v2",
        "code": "async def rapi_twitter_pack_v2_trend_list(self,*args,**kwargs):\n    '''Complete pack to get any public information on twitter, includes Twitter Trends, Search Tweet, User Activity\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_twitter_pack_v2_trend_list',kwargs)\n        "
    },
    "rapi_google_trends_us_get_trending_result": {
        "api_name": "get_trending_result",
        "category": "Data",
        "tool_name": "google_trends_us",
        "code": "async def rapi_google_trends_us_get_trending_result(self,*args,**kwargs):\n    '''Gives the list of trending search results in the United States at the current time.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_google_trends_us_get_trending_result',kwargs)\n        "
    },
    "rapi_generate_linkedin_leads_get_available_job_titles": {
        "api_name": "get_available_job_titles",
        "category": "Data",
        "tool_name": "generate_linkedin_leads",
        "code": "async def rapi_generate_linkedin_leads_get_available_job_titles(self,*args,**kwargs):\n    '''The top-rated Lead Generation API on RapidAPI that gives valid business emails among all profiles downloaded. Our system downloads the profiles instantly after the API is called, ensuring the data is always fresh and up-to-date.\n    \n    \n\n    :param string name:  defaults to fou\n    '''\n    return await self._request_rapid_api('rapi_generate_linkedin_leads_get_available_job_titles',kwargs)\n        "
    },
    "rapi_generate_linkedin_leads_get_available_locations": {
        "api_name": "get_available_locations",
        "category": "Data",
        "tool_name": "generate_linkedin_leads",
        "code": "async def rapi_generate_linkedin_leads_get_available_locations(self,*args,**kwargs):\n    '''The top-rated Lead Generation API on RapidAPI that gives valid business emails among all profiles downloaded. Our system downloads the profiles instantly after the API is called, ensuring the data is always fresh and up-to-date.\n    \n    \n\n    :param string name:  defaults to United\n    '''\n    return await self._request_rapid_api('rapi_generate_linkedin_leads_get_available_locations',kwargs)\n        "
    },
    "rapi_generate_linkedin_leads_get_available_companies": {
        "api_name": "get_available_companies",
        "category": "Data",
        "tool_name": "generate_linkedin_leads",
        "code": "async def rapi_generate_linkedin_leads_get_available_companies(self,*args,**kwargs):\n    '''The top-rated Lead Generation API on RapidAPI that gives valid business emails among all profiles downloaded. Our system downloads the profiles instantly after the API is called, ensuring the data is always fresh and up-to-date.\n    \n    \n\n    :param string name:  defaults to app\n    '''\n    return await self._request_rapid_api('rapi_generate_linkedin_leads_get_available_companies',kwargs)\n        "
    },
    "rapi_local_businesses_by_outscraper_get_places_reviews": {
        "api_name": "get_places_reviews",
        "category": "Data",
        "tool_name": "local_businesses_by_outscraper",
        "code": "async def rapi_local_businesses_by_outscraper_get_places_reviews(self,*args,**kwargs):\n    '''Get Local Businesses' information with simple and reliable Maps Places API provided by Outscraper.\n    \n    \n\n    :param string query: The parameter defines the query you want to search. You can use anything that you would use on a regular Maps site. Additionally, you can use `feature_id`, `place_id`, or `CID`. The example of valid queries: `Real estate agency, Rome, Italy`, `The NoMad Restaurant, NY, USA`, `restaurants, Brooklyn 11203`, `0x886916e8bc273979:0x5141fcb11460b226`, `ChIJrZhup4lZwokRUr_5sLoFlDw`, etc.\n\nIt supports batching by sending arrays with up to 25 queries (e.g., `query=text1&query=text2&query=text3`). It allows multiple queries to be sent in one request and save on network latency time.\n defaults to The NoMad Restaurant, NY, USA\n    :param string? language: The parameter specifies the language to use.\n\nAvailable languages: `en`, `de`, `es`, `es-419`, `fr`, `hr`, `it`, `nl`, `pl`, `pt-BR`, `pt-PT`, `vi`, `tr`, `ru`, `ar`, `th`, `ko`, `zh-CN`, `zh-TW`, `ja`, `ach`, `af`, `ak`, `ig`, `az`, `ban`, `ceb`, `xx-bork`, `bs`, `br`, `ca`, `cs`, `sn`, `co`, `cy`, `da`, `yo`, `et`, `xx-elmer`, `eo`, `eu`, `ee`, `tl`, `fil`, `fo`, `fy`, `gaa`, `ga`, `gd`, `gl`, `gn`, `xx-hacker`, `ht`, `ha`, `haw`, `bem`, `rn`, `id`, `ia`, `xh`, `zu`, `is`, `jw`, `rw`, `sw`, `tlh`, `kg`, `mfe`, `kri`, `la`, `lv`, `to`, `lt`, `ln`, `loz`, `lua`, `lg`, `hu`, `mg`, `mt`, `mi`, `ms`, `pcm`, `no`, `nso`, `ny`, `nn`, `uz`, `oc`, `om`, `xx-pirate`, `ro`, `rm`, `qu`, `nyn`, `crs`, `sq`, `sk`, `sl`, `so`, `st`, `sr-ME`, `sr-Latn`, `su`, `fi`, `sv`, `tn`, `tum`, `tk`, `tw`, `wo`, `el`, `be`, `bg`, `ky`, `kk`, `mk`, `mn`, `sr`, `tt`, `tg`, `uk`, `ka`, `hy`, `yi`, `iw`, `ug`, `ur`, `ps`, `sd`, `fa`, `ckb`, `ti`, `am`, `ne`, `mr`, `hi`, `bn`, `pa`, `gu`, `or`, `ta`, `te`, `kn`, `ml`, `si`, `lo`, `my`, `km`, `chr`. defaults to en\n    :param string? fields: The parameter defines which fields you want to include with each item returned in the response. By default, it returns all fields. Use `&fields=query,name` to return only the specific ones.\n    :param integer? limit: The parameter specifies the limit of places to take from one query search. defaults to 1\n    :param string? reviewsQuery: The parameter specifies the query to search among the reviews (e.g. `wow`, `amazing`, `horrible place`). defaults to amazing\n    :param integer? reviewsLimit: The parameter specifies the limit of reviews to get from one place (0 - unlimited).\n\nIf using more than 20 reviews per request each additional 10 reviews will be counted as one search. defaults to 10\n    :param integer? cutoffRating: The parameter specifies the maximum for `lowest_rating` sorting or the minimum for `highest_rating` sorting rating for reviews.\n\nUsing the cutoffRating requires sorting to be set to `lowest_rating` or `highest_rating.`\n\n    :param string? sort: The parameter specifies one of the sorting types: `most_relevant`, `newest`, `highest_rating`, `lowest_rating`.\n defaults to most_relevant\n    :param boolean? ignoreEmpty: The parameter specifies whether to ignore reviews without text or not.\n    :param string? region: The parameter specifies the country to use.\n\nAvailable countries: `AF`, `AL`, `DZ`, `AS`, `AD`, `AO`, `AI`, `AG`, `AR`, `AM`, `AU`, `AT`, `AZ`, `BS`, `BH`, `BD`, `BY`, `BE`, `BZ`, `BJ`, `BT`, `BO`, `BA`, `BW`, `BR`, `VG`, `BN`, `BG`, `BF`, `BI`, `KH`, `CM`, `CA`, `CV`, `CF`, `TD`, `CL`, `CN`, `CO`, `CG`, `CD`, `CK`, `CR`, `CI`, `HR`, `CU`, `CY`, `CZ`, `DK`, `DJ`, `DM`, `DO`, `EC`, `EG`, `SV`, `EE`, `ET`, `FJ`, `FI`, `FR`, `GA`, `GM`, `GE`, `DE`, `GH`, `GI`, `GR`, `GL`, `GT`, `GG`, `GY`, `HT`, `HN`, `HK`, `HU`, `IS`, `IN`, `ID`, `IQ`, `IE`, `IM`, `IL`, `IT`, `JM`, `JP`, `JE`, `JO`, `KZ`, `KE`, `KI`, `KW`, `KG`, `LA`, `LV`, `LB`, `LS`, `LY`, `LI`, `LT`, `LU`, `MG`, `MW`, `MY`, `MV`, `ML`, `MT`, `MU`, `MX`, `FM`, `MD`, `MN`, `ME`, `MS`, `MA`, `MQ`, `MZ`, `MM`, `NA`, `NR`, `NP`, `NL`, `NZ`, `NI`, `NE`, `NG`, `NU`, `MK`, `NO`, `OM`, `PK`, `PS`, `PA`, `PG`, `PY`, `PE`, `PH`, `PN`, `PL`, `PT`, `PR`, `QA`, `RO`, `RU`, `RW`, `WS`, `SM`, `ST`, `SA`, `SN`, `RS`, `SC`, `SL`, `SG`, `SK`, `SI`, `SB`, `SO`, `ZA`, `KR`, `ES`, `LK`, `SH`, `VC`, `SR`, `SE`, `CH`, `TW`, `TJ`, `TZ`, `TH`, `TL`, `TG`, `TO`, `TT`, `TN`, `TR`, `TM`, `VI`, `UG`, `UA`, `AE`, `GB`, `US`, `UY`, `UZ`, `VU`, `VE`, `VN`, `ZM`, `ZW`. defaults to US\n    :param integer? start: The parameter specifies the start timestamp value for reviews. The current timestamp is used when the value is not provided.\n\nUsing the start parameter overwrites the `sort` parameter to `newest`. Therefore, the latest reviews will be at the beginning.\n\n    :param string? cutoff: The parameter specifies the oldest timestamp value for reviews.\n\nUsing the cutoff parameter overwrites the `sort` parameter to `newest`. Therefore, the latest reviews will be at the beginning.\n    :param integer? skip: The parameter specifies the number of items to skip. It's commonly used in pagination. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_local_businesses_by_outscraper_get_places_reviews',kwargs)\n        "
    },
    "rapi_google_local_rank_tracker_keyword_search_at_coordinates": {
        "api_name": "keyword_search_at_coordinates",
        "category": "Data",
        "tool_name": "google_local_rank_tracker",
        "code": "async def rapi_google_local_rank_tracker_keyword_search_at_coordinates(self,*args,**kwargs):\n    '''Real-Time overview of your Google Local Ranking across multiple coordinate points in a Grid View. Accurate and fast SERP results and ranking of your business by keyword and location. Get results for a single geopoint coordinate or for an entire grid. See how you stack up against your competitors and Track your progress over time. \n    \n    \n\n    :param string query: The **Google Place ID** of the business or the **Business Name** to match against in results. Use the **match_type** parameter to specify. defaults to web design\n    :param integer lng: Grid **center** coordinate point **longitude** value. defaults to -121.938314\n    :param integer lat: Grid **center** coordinate point **latitude** value. defaults to 37.341759\n    :param integer? zoom: Google Maps **zoom level **to use for search on each grid point.\n\n**Allowed values**: 0-18.\n**Default**: 13. defaults to 13\n    '''\n    return await self._request_rapid_api('rapi_google_local_rank_tracker_keyword_search_at_coordinates',kwargs)\n        "
    },
    "rapi_car_data_cars": {
        "api_name": "cars",
        "category": "Data",
        "tool_name": "car_data",
        "code": "async def rapi_car_data_cars(self,*args,**kwargs):\n    '''Use this API to pull relevant automobile data such as the car make, model, type, and year.\n    \n    \n\n    :param string page:  defaults to 0\n    :param string limit:  defaults to 10\n    :param string? make: \n    :param string? year: \n    :param string? model: \n    :param string? type: \n    '''\n    return await self._request_rapid_api('rapi_car_data_cars',kwargs)\n        "
    },
    "rapi_car_data_years": {
        "api_name": "years",
        "category": "Data",
        "tool_name": "car_data",
        "code": "async def rapi_car_data_years(self,*args,**kwargs):\n    '''Use this API to pull relevant automobile data such as the car make, model, type, and year.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_car_data_years',kwargs)\n        "
    },
    "rapi_filepursuit_pursuit": {
        "api_name": "pursuit",
        "category": "Data",
        "tool_name": "filepursuit",
        "code": "async def rapi_filepursuit_pursuit(self,*args,**kwargs):\n    '''Search the web for files, videos, audios, eBooks & much more.\n    \n    \n\n    :param string q: Search Query \n    :param string? filetype: File Extension, only one file extension accepted per query\n    :param string? type: Type of files (Accepted values: video, audio, ebook, archive, mobile)\n    :param string? sort: Sort by ascending or descending values (Accepted values: sizeasc, sizedesc, dateasc, datedesc, fileasc, filedesc), only one accepted per query. By default datedesc is selected.\n    :param integer? start: Start results from count (for pagination)\n    '''\n    return await self._request_rapid_api('rapi_filepursuit_pursuit',kwargs)\n        "
    },
    "rapi_filepursuit_discover": {
        "api_name": "discover",
        "category": "Data",
        "tool_name": "filepursuit",
        "code": "async def rapi_filepursuit_discover(self,*args,**kwargs):\n    '''Search the web for files, videos, audios, eBooks & much more.\n    \n    \n\n    :param integer? start: Start results from count (for pagination)\n    :param string? type: Type of result (Accepted values: filelinks, all)\n    :param string? link: Link you wish to discover \n    '''\n    return await self._request_rapid_api('rapi_filepursuit_discover',kwargs)\n        "
    },
    "rapi_crypto_gem_finder_trending": {
        "api_name": "trending",
        "category": "Data",
        "tool_name": "crypto_gem_finder",
        "code": "async def rapi_crypto_gem_finder_trending(self,*args,**kwargs):\n    '''Find your next gem crypto! Browse popular today, trending and recently added coins\n    \n    \n\n    :param string? page:  defaults to 1\n    :param string? limit:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_crypto_gem_finder_trending',kwargs)\n        "
    },
    "rapi_crypto_gem_finder_today_best": {
        "api_name": "today_best",
        "category": "Data",
        "tool_name": "crypto_gem_finder",
        "code": "async def rapi_crypto_gem_finder_today_best(self,*args,**kwargs):\n    '''Find your next gem crypto! Browse popular today, trending and recently added coins\n    \n    \n\n    :param string? limit:  defaults to 10\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_crypto_gem_finder_today_best',kwargs)\n        "
    },
    "rapi_crypto_gem_finder_fresh_potential_gems": {
        "api_name": "fresh_potential_gems",
        "category": "Data",
        "tool_name": "crypto_gem_finder",
        "code": "async def rapi_crypto_gem_finder_fresh_potential_gems(self,*args,**kwargs):\n    '''Find your next gem crypto! Browse popular today, trending and recently added coins\n    \n    \n\n    :param string? limit:  defaults to 10\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_crypto_gem_finder_fresh_potential_gems',kwargs)\n        "
    },
    "rapi_get_population_get_country_population": {
        "api_name": "get_country_population",
        "category": "Data",
        "tool_name": "get_population",
        "code": "async def rapi_get_population_get_country_population(self,*args,**kwargs):\n    '''Get world population in realtime.  \ud83c\udf0d\n    \n    \n\n    :param string country:  defaults to Egypt\n    '''\n    return await self._request_rapid_api('rapi_get_population_get_country_population',kwargs)\n        "
    },
    "rapi_lorem_ipsum_api_sentence": {
        "api_name": "sentence",
        "category": "Data",
        "tool_name": "lorem_ipsum_api",
        "code": "async def rapi_lorem_ipsum_api_sentence(self,*args,**kwargs):\n    '''Generate Lorem Ipsum placeholder text for your applications.\n    \n    \n\n    :param integer? amount:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_lorem_ipsum_api_sentence',kwargs)\n        "
    },
    "rapi_lorem_ipsum_api_paragraph": {
        "api_name": "paragraph",
        "category": "Data",
        "tool_name": "lorem_ipsum_api",
        "code": "async def rapi_lorem_ipsum_api_paragraph(self,*args,**kwargs):\n    '''Generate Lorem Ipsum placeholder text for your applications.\n    \n    \n\n    :param integer? amount:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_lorem_ipsum_api_paragraph',kwargs)\n        "
    },
    "rapi_lorem_ipsum_api_word": {
        "api_name": "word",
        "category": "Data",
        "tool_name": "lorem_ipsum_api",
        "code": "async def rapi_lorem_ipsum_api_word(self,*args,**kwargs):\n    '''Generate Lorem Ipsum placeholder text for your applications.\n    \n    \n\n    :param integer amount:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_lorem_ipsum_api_word',kwargs)\n        "
    },
    "rapi_wayback_machine_content": {
        "api_name": "content",
        "category": "Data",
        "tool_name": "wayback_machine",
        "code": "async def rapi_wayback_machine_content(self,*args,**kwargs):\n    '''The Wayback Machine Internet Archive API allows developers to access and retrieve archived web pages from the Internet Archive's extensive collection. It provides a convenient way to explore the evolution of websites over time and integrate web archival functionality into applications.\n    \n    \n\n    :param string url: Web URL defaults to https://www.google.com/\n    :param string? date: Date must be in YYYY-MM-DD or YYYY-MM-DD HH:MM:SS format defaults to 2023-04-15 00:00:16\n    '''\n    return await self._request_rapid_api('rapi_wayback_machine_content',kwargs)\n        "
    },
    "rapi_seeding_data_creditcards": {
        "api_name": "creditcards",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_creditcards(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    :param string _locale:  defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_creditcards',kwargs)\n        "
    },
    "rapi_seeding_data_custom": {
        "api_name": "custom",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_custom(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param string vatId:  defaults to vat\n    :param integer _quantity:  defaults to 100\n    :param string birthday:  defaults to date\n    :param string from:  defaults to country\n    :param string name:  defaults to firstName\n    :param string surname:  defaults to lastName\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_custom',kwargs)\n        "
    },
    "rapi_seeding_data_places": {
        "api_name": "places",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_places(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_places',kwargs)\n        "
    },
    "rapi_seeding_data_persons": {
        "api_name": "persons",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_persons(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param string _locale:  defaults to en_US\n    :param integer _quantity:  defaults to 100\n    :param string _gender:  defaults to female\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_persons',kwargs)\n        "
    },
    "rapi_seeding_data_users": {
        "api_name": "users",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_users(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    :param string _gender:  defaults to male\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_users',kwargs)\n        "
    },
    "rapi_seeding_data_addresses": {
        "api_name": "addresses",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_addresses(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    :param string _locale:  defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_addresses',kwargs)\n        "
    },
    "rapi_seeding_data_texts": {
        "api_name": "texts",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_texts(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    :param string _locale:  defaults to it_IT\n    :param integer _characters:  defaults to 250\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_texts',kwargs)\n        "
    },
    "rapi_seeding_data_companies": {
        "api_name": "companies",
        "category": "Data",
        "tool_name": "seeding_data",
        "code": "async def rapi_seeding_data_companies(self,*args,**kwargs):\n    '''Completely APIs that helps web developers and web designers generate fake data in a fast and easy way.\n    \n    \n\n    :param integer _quantity:  defaults to 100\n    :param string _locale:  defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_seeding_data_companies',kwargs)\n        "
    },
    "rapi_watchsignals_get_all_watch_brands": {
        "api_name": "get_all_watch_brands",
        "category": "Data",
        "tool_name": "watchsignals",
        "code": "async def rapi_watchsignals_get_all_watch_brands(self,*args,**kwargs):\n    '''Watchsignals is a data-driven platform for luxury watches (new &amp; pre owned) and services, empowering customers with an AI driven valuation tool. We help customers to enjoy a high value shopping experience, without overpaying for their goods. A unique feature will be our value prediction model, based on Artificial Intelligence / Machine Learning algorithms. We will initially focus on jewelry, watches, clothes, shoes, bags and eventually yachts, cars and jets.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_watchsignals_get_all_watch_brands',kwargs)\n        "
    },
    "rapi_watchsignals_get_reference_numbers_of_a_specific_brand": {
        "api_name": "get_reference_numbers_of_a_specific_brand",
        "category": "Data",
        "tool_name": "watchsignals",
        "code": "async def rapi_watchsignals_get_reference_numbers_of_a_specific_brand(self,*args,**kwargs):\n    '''Watchsignals is a data-driven platform for luxury watches (new &amp; pre owned) and services, empowering customers with an AI driven valuation tool. We help customers to enjoy a high value shopping experience, without overpaying for their goods. A unique feature will be our value prediction model, based on Artificial Intelligence / Machine Learning algorithms. We will initially focus on jewelry, watches, clothes, shoes, bags and eventually yachts, cars and jets.\n    \n    \n\n    :param string id:  defaults to 382\n    '''\n    return await self._request_rapid_api('rapi_watchsignals_get_reference_numbers_of_a_specific_brand',kwargs)\n        "
    },
    "rapi_watchsignals_get_exchange_rates": {
        "api_name": "get_exchange_rates",
        "category": "Data",
        "tool_name": "watchsignals",
        "code": "async def rapi_watchsignals_get_exchange_rates(self,*args,**kwargs):\n    '''Watchsignals is a data-driven platform for luxury watches (new &amp; pre owned) and services, empowering customers with an AI driven valuation tool. We help customers to enjoy a high value shopping experience, without overpaying for their goods. A unique feature will be our value prediction model, based on Artificial Intelligence / Machine Learning algorithms. We will initially focus on jewelry, watches, clothes, shoes, bags and eventually yachts, cars and jets.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_watchsignals_get_exchange_rates',kwargs)\n        "
    },
    "rapi_youtube_video_info_info": {
        "api_name": "info",
        "category": "Data",
        "tool_name": "youtube_video_info",
        "code": "async def rapi_youtube_video_info_info(self,*args,**kwargs):\n    '''Get YouTube Video Information including the Audio and Video Streams!\n    \n    \n\n    :param string url:  defaults to https://www.youtube.com/watch?v=9FCRaSwU3W8\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_info_info',kwargs)\n        "
    },
    "rapi_personator_personator_endpoint": {
        "api_name": "personator_endpoint",
        "category": "Data",
        "tool_name": "personator",
        "code": "async def rapi_personator_personator_endpoint(self,*args,**kwargs):\n    '''Easily verify a person\u2019s information, lookup and check customer data. Personator is a lightweight, flexible, and powerful customer verification and enrichment API. Personator all-in-one cloud solution verifies contact data (name, address, e-mail, phone number), appends missing information, updates addresses with geolocation data and augments with numerous demographic traits as well.\n    \n    \n\n    :param string act: Actions (Check, Verify, Append, Move) defaults to check,verify,append,move\n    :param string? last: Last Name\n    :param string? lastline: Last Line (City, State, Postal)\n    :param string? mak: Melissa Address Key\n    :param string? state: State (State and City required OR postal) defaults to ca\n    :param string? comp: Company Name\n    :param string? ip: IP Address\n    :param string? a2: Address Line 2\n    :param string? ctry: Country\n    :param string? bmo: Birth Month\n    :param string? bday: Birth Day\n    :param string? byr: Birth Year\n    :param string? ss: Social Security Number\n    :param string? first: First Name\n    :param string? format: Format of Response defaults to json\n    :param string? a1: Address Line 1 defaults to 22382 avenida empresa\n    :param string? postal: Postal Code\n    :param string? phone: Phone Number\n    :param string? full: Full Name\n    :param string? email: Email Address\n    :param string? city: City defaults to rsm\n    :param string? ff: Free Form\n    '''\n    return await self._request_rapid_api('rapi_personator_personator_endpoint',kwargs)\n        "
    },
    "rapi_openblur_retrieve_listings": {
        "api_name": "retrieve_listings",
        "category": "Data",
        "tool_name": "openblur",
        "code": "async def rapi_openblur_retrieve_listings(self,*args,**kwargs):\n    '''Unofficial Listings API for blur.io\n\n- For Blur V1 endpoints use this API: https://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.gg/Yezs2VDhBV\n    \n    \n\n    :param integer pageSize:  defaults to 20\n    :param integer? pageNumber:  defaults to 1\n    :param string? orderBy: Listing Price: ASC or DESC defaults to ASC\n    :param string? contractAddress: \n    '''\n    return await self._request_rapid_api('rapi_openblur_retrieve_listings',kwargs)\n        "
    },
    "rapi_openblur_issuspicious": {
        "api_name": "issuspicious",
        "category": "Data",
        "tool_name": "openblur",
        "code": "async def rapi_openblur_issuspicious(self,*args,**kwargs):\n    '''Unofficial Listings API for blur.io\n\n- For Blur V1 endpoints use this API: https://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.gg/Yezs2VDhBV\n    \n    \n\n    :param string? contractAddress: \n    :param integer? afterID: \n    :param integer? pageSize:  defaults to 50\n    :param integer? beforeID: \n    '''\n    return await self._request_rapid_api('rapi_openblur_issuspicious',kwargs)\n        "
    },
    "rapi_fresh_linkedin_profile_data_get_profile_recent_activity_time": {
        "api_name": "get_profile_recent_activity_time",
        "category": "Data",
        "tool_name": "fresh_linkedin_profile_data",
        "code": "async def rapi_fresh_linkedin_profile_data_get_profile_recent_activity_time(self,*args,**kwargs):\n    '''One-stop API for all LinkedIn Scraping Needs: profiles, companies, activities/posts, and job posts. This API scrapes data directly from LinkedIn upon request so that you'll get real-time data. Say goodbye to stale data!\n\nWe're active and responsive on this platform, please don't hesitate to drop a message in the Discussions or PM channels.\n    \n    \n\n    :param string linkedin_url:  defaults to https://www.linkedin.com/in/williamhgates/\n    '''\n    return await self._request_rapid_api('rapi_fresh_linkedin_profile_data_get_profile_recent_activity_time',kwargs)\n        "
    },
    "rapi_fresh_linkedin_profile_data_get_open_profile_status": {
        "api_name": "get_open_profile_status",
        "category": "Data",
        "tool_name": "fresh_linkedin_profile_data",
        "code": "async def rapi_fresh_linkedin_profile_data_get_open_profile_status(self,*args,**kwargs):\n    '''One-stop API for all LinkedIn Scraping Needs: profiles, companies, activities/posts, and job posts. This API scrapes data directly from LinkedIn upon request so that you'll get real-time data. Say goodbye to stale data!\n\nWe're active and responsive on this platform, please don't hesitate to drop a message in the Discussions or PM channels.\n    \n    \n\n    :param string linkedin_url:  defaults to https://www.linkedin.com/in/williamhgates/\n    '''\n    return await self._request_rapid_api('rapi_fresh_linkedin_profile_data_get_open_profile_status',kwargs)\n        "
    },
    "rapi_fresh_linkedin_profile_data_get_supported_countries": {
        "api_name": "get_supported_countries",
        "category": "Data",
        "tool_name": "fresh_linkedin_profile_data",
        "code": "async def rapi_fresh_linkedin_profile_data_get_supported_countries(self,*args,**kwargs):\n    '''One-stop API for all LinkedIn Scraping Needs: profiles, companies, activities/posts, and job posts. This API scrapes data directly from LinkedIn upon request so that you'll get real-time data. Say goodbye to stale data!\n\nWe're active and responsive on this platform, please don't hesitate to drop a message in the Discussions or PM channels.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fresh_linkedin_profile_data_get_supported_countries',kwargs)\n        "
    },
    "rapi_dogs_by_api_ninjas_v1_dogs": {
        "api_name": "v1_dogs",
        "category": "Data",
        "tool_name": "dogs_by_api_ninjas",
        "code": "async def rapi_dogs_by_api_ninjas_v1_dogs(self,*args,**kwargs):\n    '''Detailed, qualitative information on over 200 different breeds of dogs. See more info at https://api-ninjas.com/api/dogs.\n    \n    \n\n    :param integer? offset: number of results to offset for pagination.\n    :param integer? energy: How much energy the breed has. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates low energy and 5 indicates high energy.\n    :param integer? protectiveness: How likely the breed is to alert strangers. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates minimal alerting and 5 indicates maximum alerting.\n    :param integer? max_weight: maximum weight in pounds.\n    :param integer? min_weight: minimum weight in pounds.\n    :param integer? trainability: How easy it is to train the breed. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates the breed is very difficult to train and 5 indicates the breed is very easy to train.\n    :param integer? shedding: How much hair the breed sheds. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates no shedding and 5 indicates maximum shedding.\n    :param string? name: name of the breed. defaults to golden retriever\n    :param integer? min_height: minimum height in inches.\n    :param integer? barking: How vocal the breed is. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates minimal barking and 5 indicates maximum barking.\n    :param integer? max_height: maximum height in inches.\n    :param integer? max_life_expectancy: maximum life expectancy in years.\n    :param integer? min_life_expectancy: minimum life expectancy in years.\n    '''\n    return await self._request_rapid_api('rapi_dogs_by_api_ninjas_v1_dogs',kwargs)\n        "
    },
    "rapi_rich_nft_api_metadata_traits_for_collection": {
        "api_name": "traits_for_collection",
        "category": "Data",
        "tool_name": "rich_nft_api_metadata",
        "code": "async def rapi_rich_nft_api_metadata_traits_for_collection(self,*args,**kwargs):\n    '''Rich NFT API. Browse collections, tokens, metadata, holders, activities, transfers\n    \n    \n\n    :param string chain_id:  defaults to eth\n    :param string id:  defaults to 0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb\n    '''\n    return await self._request_rapid_api('rapi_rich_nft_api_metadata_traits_for_collection',kwargs)\n        "
    },
    "rapi_rich_nft_api_metadata_collections": {
        "api_name": "collections",
        "category": "Data",
        "tool_name": "rich_nft_api_metadata",
        "code": "async def rapi_rich_nft_api_metadata_collections(self,*args,**kwargs):\n    '''Rich NFT API. Browse collections, tokens, metadata, holders, activities, transfers\n    \n    \n\n    :param string chain_id:  defaults to eth\n    :param string? limit:  defaults to 20\n    :param string? start:  defaults to 0\n    :param string? q: \n    '''\n    return await self._request_rapid_api('rapi_rich_nft_api_metadata_collections',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_credit_card": {
        "api_name": "random_credit_card",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_credit_card(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_credit_card',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_crypto": {
        "api_name": "random_crypto",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_crypto(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_crypto',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_crypto_by_id": {
        "api_name": "random_crypto_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_crypto_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_crypto_by_id',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_post": {
        "api_name": "random_post",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_post(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_post',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_address_by_id": {
        "api_name": "random_address_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_address_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_address_by_id',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_profiles": {
        "api_name": "random_profiles",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_profiles(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_profiles',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_profile_by_id": {
        "api_name": "random_profile_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_profile_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_profile_by_id',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_bank_by_id": {
        "api_name": "random_bank_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_bank_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_bank_by_id',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_credit_card_by_id": {
        "api_name": "random_credit_card_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_credit_card_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_credit_card_by_id',kwargs)\n        "
    },
    "rapi_fake_data_generator_random_post_by_id": {
        "api_name": "random_post_by_id",
        "category": "Data",
        "tool_name": "fake_data_generator",
        "code": "async def rapi_fake_data_generator_random_post_by_id(self,*args,**kwargs):\n    '''With this API you can generate fake random data with different predefined layouts or define your own layout.\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fake_data_generator_random_post_by_id',kwargs)\n        "
    },
    "rapi_domain_da_pa_check_url_metrics": {
        "api_name": "url_metrics",
        "category": "Data",
        "tool_name": "domain_da_pa_check",
        "code": "async def rapi_domain_da_pa_check_url_metrics(self,*args,**kwargs):\n    '''Domain authority score & page authority score, backlink count, moz rank information.\n    \n    \n\n    :param string target: Target URL, page or domain defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_domain_da_pa_check_url_metrics',kwargs)\n        "
    },
    "rapi_car_utils_estimate_market_value": {
        "api_name": "estimate_market_value",
        "category": "Data",
        "tool_name": "car_utils",
        "code": "async def rapi_car_utils_estimate_market_value(self,*args,**kwargs):\n    '''FREE resources for checking VIN, getting the market value of your car, estimating the cost of ownership in US,  checking fuel economy, and more to come.\n    \n    \n\n    :param string vin: [Vehicle identification number](https://www.autocheck.com/vehiclehistory/vin-basics). defaults to 5N3AA08D68N901917\n    :param integer? mileage: Current mileage of the car.  If unspecified, an estimate will be used. defaults to 50000\n    '''\n    return await self._request_rapid_api('rapi_car_utils_estimate_market_value',kwargs)\n        "
    },
    "rapi_car_utils_get_fuel_economy_information": {
        "api_name": "get_fuel_economy_information",
        "category": "Data",
        "tool_name": "car_utils",
        "code": "async def rapi_car_utils_get_fuel_economy_information(self,*args,**kwargs):\n    '''FREE resources for checking VIN, getting the market value of your car, estimating the cost of ownership in US,  checking fuel economy, and more to come.\n    \n    \n\n    :param string model: The vehicle model. Use /models endpoint to get supported models for the specified make. defaults to Chiron\n    :param string make: The vehicle make. Use /makes endpoint to get supported makes. defaults to Bugatti\n    :param string? year: Model year. Currently support model years from 1985 to 2023. defaults to 2023\n    '''\n    return await self._request_rapid_api('rapi_car_utils_get_fuel_economy_information',kwargs)\n        "
    },
    "rapi_car_utils_get_vehicle_makes": {
        "api_name": "get_vehicle_makes",
        "category": "Data",
        "tool_name": "car_utils",
        "code": "async def rapi_car_utils_get_vehicle_makes(self,*args,**kwargs):\n    '''FREE resources for checking VIN, getting the market value of your car, estimating the cost of ownership in US,  checking fuel economy, and more to come.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_car_utils_get_vehicle_makes',kwargs)\n        "
    },
    "rapi_asn_details_get_details_by_asn_number": {
        "api_name": "get_details_by_asn_number",
        "category": "Data",
        "tool_name": "asn_details",
        "code": "async def rapi_asn_details_get_details_by_asn_number(self,*args,**kwargs):\n    '''Get details about Autonomous System Numbers (ASN), find ASN of IPs/CIDRs, find ASNs of each country etc\n    \n    \n\n    :param integer asn_number: ASN Number to retrieve its details defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_asn_details_get_details_by_asn_number',kwargs)\n        "
    },
    "rapi_asn_details_get_asn_by_ip": {
        "api_name": "get_asn_by_ip",
        "category": "Data",
        "tool_name": "asn_details",
        "code": "async def rapi_asn_details_get_asn_by_ip(self,*args,**kwargs):\n    '''Get details about Autonomous System Numbers (ASN), find ASN of IPs/CIDRs, find ASNs of each country etc\n    \n    \n\n    :param string ip_address: IP Address to retrieve its ASN details defaults to 8.8.8.8\n    '''\n    return await self._request_rapid_api('rapi_asn_details_get_asn_by_ip',kwargs)\n        "
    },
    "rapi_player_data_search_by_weight": {
        "api_name": "search_by_weight",
        "category": "Data",
        "tool_name": "player_data",
        "code": "async def rapi_player_data_search_by_weight(self,*args,**kwargs):\n    '''SSCB players\n    \n    \n\n    :param string? input_weight: \n    '''\n    return await self._request_rapid_api('rapi_player_data_search_by_weight',kwargs)\n        "
    },
    "rapi_player_data_searchplayer": {
        "api_name": "searchplayer",
        "category": "Data",
        "tool_name": "player_data",
        "code": "async def rapi_player_data_searchplayer(self,*args,**kwargs):\n    '''SSCB players\n    \n    \n\n    :param string? player_input: \n    '''\n    return await self._request_rapid_api('rapi_player_data_searchplayer',kwargs)\n        "
    },
    "rapi_house_plants_getalllite": {
        "api_name": "getalllite",
        "category": "Data",
        "tool_name": "house_plants",
        "code": "async def rapi_house_plants_getalllite(self,*args,**kwargs):\n    '''HOUSE PLANT DATABASE & RESTful API for house plant data (Over 300+ plant details/images) along with their description and information on how to best take care of them (ideal temperature, light, etc.)\n\nNEW ROUTES COMING SOON (GetAllLite, GetByLatinName, GetByCommonName, GetCategories, GetAllByCategory)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_house_plants_getalllite',kwargs)\n        "
    },
    "rapi_house_plants_getbyid": {
        "api_name": "getbyid",
        "category": "Data",
        "tool_name": "house_plants",
        "code": "async def rapi_house_plants_getbyid(self,*args,**kwargs):\n    '''HOUSE PLANT DATABASE & RESTful API for house plant data (Over 300+ plant details/images) along with their description and information on how to best take care of them (ideal temperature, light, etc.)\n\nNEW ROUTES COMING SOON (GetAllLite, GetByLatinName, GetByCommonName, GetCategories, GetAllByCategory)\n    \n    \n\n    :param string id:  defaults to 53417c12-4824-5995-bce0-b81984ebbd1d\n    '''\n    return await self._request_rapid_api('rapi_house_plants_getbyid',kwargs)\n        "
    },
    "rapi_indeed_company_jobs": {
        "api_name": "company_jobs",
        "category": "Data",
        "tool_name": "indeed",
        "code": "async def rapi_indeed_company_jobs(self,*args,**kwargs):\n    '''Get company and job information from indeed\n    \n    \n\n    :param string company_id:  defaults to Ubisoft\n    :param ENUM? locality: Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'\n    :param integer? start: Use to control the pagination of results. If omitted return the first page defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_indeed_company_jobs',kwargs)\n        "
    },
    "rapi_indeed_jobs_search": {
        "api_name": "jobs_search",
        "category": "Data",
        "tool_name": "indeed",
        "code": "async def rapi_indeed_jobs_search(self,*args,**kwargs):\n    '''Get company and job information from indeed\n    \n    \n\n    :param string query: Keyword used to search jobs defaults to manager\n    :param string location:  defaults to chicago\n    :param integer? fromage: Number of days.\nFilter jobs that was updated between now and **fromage** days. defaults to 3\n    :param ENUM? locality: Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'\n    :param integer? page_id: Use to control the pagination of results. If omitted return the first page defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_indeed_jobs_search',kwargs)\n        "
    },
    "rapi_indeed_company_search": {
        "api_name": "company_search",
        "category": "Data",
        "tool_name": "indeed",
        "code": "async def rapi_indeed_company_search(self,*args,**kwargs):\n    '''Get company and job information from indeed\n    \n    \n\n    :param string company_name:  defaults to Microsoft\n    :param ENUM? locality: Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'\n    '''\n    return await self._request_rapid_api('rapi_indeed_company_search',kwargs)\n        "
    },
    "rapi_indeed_job_details": {
        "api_name": "job_details",
        "category": "Data",
        "tool_name": "indeed",
        "code": "async def rapi_indeed_job_details(self,*args,**kwargs):\n    '''Get company and job information from indeed\n    \n    \n\n    :param string job_id: You can retrieve jobs ids from on jobs searches defaults to b762b8d1132bd276\n    :param ENUM? locality: Default value if missing is 'us'\n    '''\n    return await self._request_rapid_api('rapi_indeed_job_details',kwargs)\n        "
    },
    "rapi_powerbi_getnews": {
        "api_name": "getnews",
        "category": "Data",
        "tool_name": "powerbi",
        "code": "async def rapi_powerbi_getnews(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_powerbi_getnews',kwargs)\n        "
    },
    "rapi_powerbi_getcommunities": {
        "api_name": "getcommunities",
        "category": "Data",
        "tool_name": "powerbi",
        "code": "async def rapi_powerbi_getcommunities(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_powerbi_getcommunities',kwargs)\n        "
    },
    "rapi_powerbi_getlearningresources": {
        "api_name": "getlearningresources",
        "category": "Data",
        "tool_name": "powerbi",
        "code": "async def rapi_powerbi_getlearningresources(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_powerbi_getlearningresources',kwargs)\n        "
    },
    "rapi_powerbi_getsamples": {
        "api_name": "getsamples",
        "category": "Data",
        "tool_name": "powerbi",
        "code": "async def rapi_powerbi_getsamples(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_powerbi_getsamples',kwargs)\n        "
    },
    "rapi_powerbi_getpeople": {
        "api_name": "getpeople",
        "category": "Data",
        "tool_name": "powerbi",
        "code": "async def rapi_powerbi_getpeople(self,*args,**kwargs):\n    '''The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_powerbi_getpeople',kwargs)\n        "
    },
    "rapi_commodity_rates_api_historical_rates": {
        "api_name": "historical_rates",
        "category": "Data",
        "tool_name": "commodity_rates_api",
        "code": "async def rapi_commodity_rates_api_historical_rates(self,*args,**kwargs):\n    '''The Commodity Rates API provides real-time and historical pricing data for various commodity markets, including metals, energy, and agricultural products. It allows users to access market data and perform advanced analytics, such as price forecasting and trend analysis. \n    \n    \n\n    :param string base:  defaults to USD\n    :param string symbols:  defaults to COTTON\n    :param string date:  defaults to 2022-01-19\n    '''\n    return await self._request_rapid_api('rapi_commodity_rates_api_historical_rates',kwargs)\n        "
    },
    "rapi_commodity_rates_api_latest_rates": {
        "api_name": "latest_rates",
        "category": "Data",
        "tool_name": "commodity_rates_api",
        "code": "async def rapi_commodity_rates_api_latest_rates(self,*args,**kwargs):\n    '''The Commodity Rates API provides real-time and historical pricing data for various commodity markets, including metals, energy, and agricultural products. It allows users to access market data and perform advanced analytics, such as price forecasting and trend analysis. \n    \n    \n\n    :param string symbols: Enter a list of comma-separated currency codes or commodity codes to limit output codes. Check Symbols endpoint defaults to BRENTOIL\n    :param string base: Enter the three-letter currency code or commodity code of your preferred base currency. Check Symbols endpoint defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_commodity_rates_api_latest_rates',kwargs)\n        "
    },
    "rapi_twitter_data_users_by_rest_ids": {
        "api_name": "users_by_rest_ids",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_users_by_rest_ids(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string ids: Users IDs (you can separate with commas) defaults to 44196397,155659213\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_users_by_rest_ids',kwargs)\n        "
    },
    "rapi_twitter_data_user_tweets": {
        "api_name": "user_tweets",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_user_tweets(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the User By Screen Name endpoint to find the ID from a username. defaults to 44196397\n    :param string? cursor: Cursor for other results\n    :param integer? count: Number of results defaults to 40\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_user_tweets',kwargs)\n        "
    },
    "rapi_twitter_data_user_likes": {
        "api_name": "user_likes",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_user_likes(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the User By Screen Name endpoint to find the ID from a username. defaults to 44196397\n    :param string? cursor: Cursor for other results\n    :param integer? count: Number of results defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_user_likes',kwargs)\n        "
    },
    "rapi_twitter_data_user_media": {
        "api_name": "user_media",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_user_media(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the User By Screen Name endpoint to find the ID from a username. defaults to 44196397\n    :param string? cursor: Cursor for other results\n    :param integer? count: Number of results defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_user_media',kwargs)\n        "
    },
    "rapi_twitter_data_user_followers": {
        "api_name": "user_followers",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_user_followers(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the User By Screen Name endpoint to find the ID from a username. defaults to 44196397\n    :param integer? count: Number of results defaults to 20\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_user_followers',kwargs)\n        "
    },
    "rapi_twitter_data_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_search(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string q: Search query\n\nYou can use advanced search queries. E.g. dogecoin (from:elonmusk) Check out for more information: https://twitter.com/search-advanced defaults to dogecoin\n    :param ENUM? result_filter: Result filter\n    :param string? cursor: Cursor for other results\n    :param ENUM? tweet_search_mode: Popular (default) or latest (live) tweets\n    :param integer? count: Number of Tweet results defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_search',kwargs)\n        "
    },
    "rapi_twitter_data_auto_complete": {
        "api_name": "auto_complete",
        "category": "Data",
        "tool_name": "twitter_data",
        "code": "async def rapi_twitter_data_auto_complete(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string q: Search query defaults to Elon\n    '''\n    return await self._request_rapid_api('rapi_twitter_data_auto_complete',kwargs)\n        "
    },
    "rapi_url_intelligence_rip": {
        "api_name": "rip",
        "category": "Data",
        "tool_name": "url_intelligence",
        "code": "async def rapi_url_intelligence_rip(self,*args,**kwargs):\n    '''Extracts links from a target URL and provides linking metadata \n    \n    \n\n    :param string target: The URL to extract links and info from defaults to https://www.nytimes.com\n    '''\n    return await self._request_rapid_api('rapi_url_intelligence_rip',kwargs)\n        "
    },
    "rapi_image_search_image_search": {
        "api_name": "image_search",
        "category": "Data",
        "tool_name": "image_search",
        "code": "async def rapi_image_search_image_search(self,*args,**kwargs):\n    '''Online Image Search API\n    \n    \n\n    :param string q: Search Query\n    :param string? cursor: Cursor\n    :param string? hl: Language Code defaults to en\n    :param string? suggestion_query: Suggestion Query\n    '''\n    return await self._request_rapid_api('rapi_image_search_image_search',kwargs)\n        "
    },
    "rapi_covid_19_live_data_global_statistics": {
        "api_name": "global_statistics",
        "category": "Data",
        "tool_name": "covid_19_live_data",
        "code": "async def rapi_covid_19_live_data_global_statistics(self,*args,**kwargs):\n    '''Global COVID-19 Tracker\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_live_data_global_statistics',kwargs)\n        "
    },
    "rapi_pocket_cube_solver_getrandomsolution": {
        "api_name": "getrandomsolution",
        "category": "Data",
        "tool_name": "pocket_cube_solver",
        "code": "async def rapi_pocket_cube_solver_getrandomsolution(self,*args,**kwargs):\n    '''Returns the list of all optimal solutions ( QTM not HTM ) for a given pocket cube ( 2x2x2 ) position.\n    \n    \n\n    :param string position:  defaults to GBWGYOGYRYOORWROBRWYGWBB\n    '''\n    return await self._request_rapid_api('rapi_pocket_cube_solver_getrandomsolution',kwargs)\n        "
    },
    "rapi_pocket_cube_solver_getallsolutions": {
        "api_name": "getallsolutions",
        "category": "Data",
        "tool_name": "pocket_cube_solver",
        "code": "async def rapi_pocket_cube_solver_getallsolutions(self,*args,**kwargs):\n    '''Returns the list of all optimal solutions ( QTM not HTM ) for a given pocket cube ( 2x2x2 ) position.\n    \n    \n\n    :param string position:  defaults to GBWGYOGYRYOORWROBRWYGWBB\n    '''\n    return await self._request_rapid_api('rapi_pocket_cube_solver_getallsolutions',kwargs)\n        "
    },
    "rapi_blogsapi_blogs_by_category": {
        "api_name": "blogs_by_category",
        "category": "Data",
        "tool_name": "blogsapi",
        "code": "async def rapi_blogsapi_blogs_by_category(self,*args,**kwargs):\n    '''Get evergreen blogs for your mobile apps.\n    \n    \n\n    :param integer category:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_blogsapi_blogs_by_category',kwargs)\n        "
    },
    "rapi_blogsapi_single_category": {
        "api_name": "single_category",
        "category": "Data",
        "tool_name": "blogsapi",
        "code": "async def rapi_blogsapi_single_category(self,*args,**kwargs):\n    '''Get evergreen blogs for your mobile apps.\n    \n    \n\n    :param integer id:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_blogsapi_single_category',kwargs)\n        "
    },
    "rapi_blogsapi_categories": {
        "api_name": "categories",
        "category": "Data",
        "tool_name": "blogsapi",
        "code": "async def rapi_blogsapi_categories(self,*args,**kwargs):\n    '''Get evergreen blogs for your mobile apps.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_blogsapi_categories',kwargs)\n        "
    },
    "rapi_blogsapi_single_blog": {
        "api_name": "single_blog",
        "category": "Data",
        "tool_name": "blogsapi",
        "code": "async def rapi_blogsapi_single_blog(self,*args,**kwargs):\n    '''Get evergreen blogs for your mobile apps.\n    \n    \n\n    :param integer id:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_blogsapi_single_blog',kwargs)\n        "
    },
    "rapi_domain_analysis_domain_analysis": {
        "api_name": "domain_analysis",
        "category": "Data",
        "tool_name": "domain_analysis",
        "code": "async def rapi_domain_analysis_domain_analysis(self,*args,**kwargs):\n    '''Analyze and evaluate domain names for their value and ROI with enriched Whois API data for domainrs and SEO professionals - More at: bishopi.io\n    \n    \n\n    :param string? domain:  defaults to dailynews.com\n    '''\n    return await self._request_rapid_api('rapi_domain_analysis_domain_analysis',kwargs)\n        "
    },
    "rapi_africa_api_sizes_all_countries": {
        "api_name": "sizes_all_countries",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_sizes_all_countries(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_africa_api_sizes_all_countries',kwargs)\n        "
    },
    "rapi_africa_api_resources_per_country": {
        "api_name": "resources_per_country",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_resources_per_country(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to kenya\n    '''\n    return await self._request_rapid_api('rapi_africa_api_resources_per_country',kwargs)\n        "
    },
    "rapi_africa_api_countries_allcontries": {
        "api_name": "countries_allcontries",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_countries_allcontries(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_africa_api_countries_allcontries',kwargs)\n        "
    },
    "rapi_africa_api_tourism_allcountries": {
        "api_name": "tourism_allcountries",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_tourism_allcountries(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_africa_api_tourism_allcountries',kwargs)\n        "
    },
    "rapi_africa_api_languages_allcountries": {
        "api_name": "languages_allcountries",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_languages_allcountries(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_africa_api_languages_allcountries',kwargs)\n        "
    },
    "rapi_africa_api_province_state_county_percountry": {
        "api_name": "province_state_county_percountry",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_province_state_county_percountry(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to kenya\n    '''\n    return await self._request_rapid_api('rapi_africa_api_province_state_county_percountry',kwargs)\n        "
    },
    "rapi_africa_api_independence_per_country": {
        "api_name": "independence_per_country",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_independence_per_country(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to kenya\n    '''\n    return await self._request_rapid_api('rapi_africa_api_independence_per_country',kwargs)\n        "
    },
    "rapi_africa_api_resources_allcontries": {
        "api_name": "resources_allcontries",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_resources_allcontries(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_africa_api_resources_allcontries',kwargs)\n        "
    },
    "rapi_africa_api_country_specific_country": {
        "api_name": "country_specific_country",
        "category": "Data",
        "tool_name": "africa_api",
        "code": "async def rapi_africa_api_country_specific_country(self,*args,**kwargs):\n    '''Africa-Api is a comprehensive project that provides a vast range of data about Africa, including countries, languages, tourism destinations, colonial history, and much more. This project offers a user-friendly interface that enables users to easily access and retrieve data about different African countries and their respective histories, languages, and cultures.  The Africa-Api project is an invaluable resource for individuals or organizations looking to learn more about the African continent...\n    \n    \n\n    :param string country_name:  defaults to kenya\n    '''\n    return await self._request_rapid_api('rapi_africa_api_country_specific_country',kwargs)\n        "
    },
    "rapi_barcodes_lookup_search_product_details": {
        "api_name": "search_product_details",
        "category": "Data",
        "tool_name": "barcodes_lookup",
        "code": "async def rapi_barcodes_lookup_search_product_details(self,*args,**kwargs):\n    '''Search over 500 million products with UPC, EAN, JAN, ISBN barcodes.\n    \n    \n\n    :param string query: **Barcode** or **search term**\n    :param integer? page: If you want search results - **page number**\nIf you are querying for a barcode, leave it blank.\n\nIf you leave it blank (if you are querying for a search term), the first page will be returned.\n    '''\n    return await self._request_rapid_api('rapi_barcodes_lookup_search_product_details',kwargs)\n        "
    },
    "rapi_api_telecom_products": {
        "api_name": "products",
        "category": "Data",
        "tool_name": "api_telecom",
        "code": "async def rapi_api_telecom_products(self,*args,**kwargs):\n    '''servicio de prueba api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_api_telecom_products',kwargs)\n        "
    },
    "rapi_youtube_v3_lite_playlist_items": {
        "api_name": "playlist_items",
        "category": "Data",
        "tool_name": "youtube_v3_lite",
        "code": "async def rapi_youtube_v3_lite_playlist_items(self,*args,**kwargs):\n    '''Lite version of Youtube Data API v3. Get Youtube data without any Youtube api key\n    \n    \n\n    :param string part:  defaults to snippet\n    :param string playlistId: Playlist id defaults to PLMC9KNkIncKseYxDN2niH6glGRWKsLtde\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_lite_playlist_items',kwargs)\n        "
    },
    "rapi_youtube_v3_lite_channels": {
        "api_name": "channels",
        "category": "Data",
        "tool_name": "youtube_v3_lite",
        "code": "async def rapi_youtube_v3_lite_channels(self,*args,**kwargs):\n    '''Lite version of Youtube Data API v3. Get Youtube data without any Youtube api key\n    \n    \n\n    :param string? part:  defaults to snippet,contentDetails,statistics\n    :param string? id: Channel Id. \nIf channel id is not available, then provide `forUsername` defaults to UCq-Fj5jknLsUf-MWSy4_brA\n    :param string? forUsername: Channel username.\nIf channel username is not available, then provide `id`\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_lite_channels',kwargs)\n        "
    },
    "rapi_lowest_bins_api_info_endpoint": {
        "api_name": "info_endpoint",
        "category": "Data",
        "tool_name": "lowest_bins_api",
        "code": "async def rapi_lowest_bins_api_info_endpoint(self,*args,**kwargs):\n    '''Hypixel Lowest bins api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lowest_bins_api_info_endpoint',kwargs)\n        "
    },
    "rapi_lowest_bins_api_fetch_lowest_bins": {
        "api_name": "fetch_lowest_bins",
        "category": "Data",
        "tool_name": "lowest_bins_api",
        "code": "async def rapi_lowest_bins_api_fetch_lowest_bins(self,*args,**kwargs):\n    '''Hypixel Lowest bins api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lowest_bins_api_fetch_lowest_bins',kwargs)\n        "
    },
    "rapi_opensea_data_query_retrieving_a_collection": {
        "api_name": "retrieving_a_collection",
        "category": "Data",
        "tool_name": "opensea_data_query",
        "code": "async def rapi_opensea_data_query_retrieving_a_collection(self,*args,**kwargs):\n    '''Get opensea data without any api key\n    \n    \n\n    :param string collection_slug:  defaults to ongakucraft\n    '''\n    return await self._request_rapid_api('rapi_opensea_data_query_retrieving_a_collection',kwargs)\n        "
    },
    "rapi_opensea_data_query_retrieving_collection_stats": {
        "api_name": "retrieving_collection_stats",
        "category": "Data",
        "tool_name": "opensea_data_query",
        "code": "async def rapi_opensea_data_query_retrieving_collection_stats(self,*args,**kwargs):\n    '''Get opensea data without any api key\n    \n    \n\n    :param string collection_slug:  defaults to ongakucraft\n    '''\n    return await self._request_rapid_api('rapi_opensea_data_query_retrieving_collection_stats',kwargs)\n        "
    },
    "rapi_opensea_data_query_retrieving_assets": {
        "api_name": "retrieving_assets",
        "category": "Data",
        "tool_name": "opensea_data_query",
        "code": "async def rapi_opensea_data_query_retrieving_assets(self,*args,**kwargs):\n    '''Get opensea data without any api key\n    \n    \n\n    :param string? owner: \n    :param string? order_direction:  defaults to desc\n    :param string? asset_contract_address: \n    :param integer? limit:  defaults to 20\n    :param string? collection_slug: \n    :param string? cursor: \n    :param integer? token_ids: \n    :param string? asset_contract_addresses: \n    :param string? collection:  defaults to ongakucraft\n    :param boolean? include_orders: \n    :param string? collection_editor: \n    '''\n    return await self._request_rapid_api('rapi_opensea_data_query_retrieving_assets',kwargs)\n        "
    },
    "rapi_opensea_data_query_retrieving_events": {
        "api_name": "retrieving_events",
        "category": "Data",
        "tool_name": "opensea_data_query",
        "code": "async def rapi_opensea_data_query_retrieving_events(self,*args,**kwargs):\n    '''Get opensea data without any api key\n    \n    \n\n    :param string? collection_slug: \n    :param string? auction_type: \n    :param string? asset_contract_address:  defaults to 0x4372f4d950d30c6f12c7228ade77d6cc019404c9\n    :param integer? token_id:  defaults to 309\n    :param string? collection_editor: \n    :param integer? occurred_after: \n    :param string? cursor: \n    :param string? account_address: \n    :param integer? occurred_before:  defaults to 1644800000\n    :param boolean? only_opensea:  defaults to false\n    :param string? event_type: \n    '''\n    return await self._request_rapid_api('rapi_opensea_data_query_retrieving_events',kwargs)\n        "
    },
    "rapi_leetcode_compensation_get_information_of_a_particular_post": {
        "api_name": "get_information_of_a_particular_post",
        "category": "Data",
        "tool_name": "leetcode_compensation",
        "code": "async def rapi_leetcode_compensation_get_information_of_a_particular_post(self,*args,**kwargs):\n    '''An API service to obtain HOT posts of Leetcode Discuss Compensation\n    \n    \n\n    :param string postid:  defaults to 2796025\n    '''\n    return await self._request_rapid_api('rapi_leetcode_compensation_get_information_of_a_particular_post',kwargs)\n        "
    },
    "rapi_world_countries_get_all_countries": {
        "api_name": "get_all_countries",
        "category": "Data",
        "tool_name": "world_countries",
        "code": "async def rapi_world_countries_get_all_countries(self,*args,**kwargs):\n    '''World countries available in multiple languages, with associated alpha-2, alpha-3, and numeric codes as defined by the ISO 3166 standard\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_countries_get_all_countries',kwargs)\n        "
    },
    "rapi_whois_lookup_v5_nslookup": {
        "api_name": "nslookup",
        "category": "Data",
        "tool_name": "whois_lookup_v5",
        "code": "async def rapi_whois_lookup_v5_nslookup(self,*args,**kwargs):\n    '''Whois Lookup API in Json or Xml\n    \n    \n\n    :param string domain:  defaults to newz.ai\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v5_nslookup',kwargs)\n        "
    },
    "rapi_best_backlink_checker_api_exact_url_non_english": {
        "api_name": "exact_url_non_english",
        "category": "Data",
        "tool_name": "best_backlink_checker_api",
        "code": "async def rapi_best_backlink_checker_api_exact_url_non_english(self,*args,**kwargs):\n    '''Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc\n    \n    \n\n    :param string domain:  defaults to https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/\n    '''\n    return await self._request_rapid_api('rapi_best_backlink_checker_api_exact_url_non_english',kwargs)\n        "
    },
    "rapi_best_backlink_checker_api_new_backlinks": {
        "api_name": "new_backlinks",
        "category": "Data",
        "tool_name": "best_backlink_checker_api",
        "code": "async def rapi_best_backlink_checker_api_new_backlinks(self,*args,**kwargs):\n    '''Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc\n    \n    \n\n    :param string domain:  defaults to getecz.com\n    '''\n    return await self._request_rapid_api('rapi_best_backlink_checker_api_new_backlinks',kwargs)\n        "
    },
    "rapi_best_backlink_checker_api_poor_backlinks": {
        "api_name": "poor_backlinks",
        "category": "Data",
        "tool_name": "best_backlink_checker_api",
        "code": "async def rapi_best_backlink_checker_api_poor_backlinks(self,*args,**kwargs):\n    '''Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc\n    \n    \n\n    :param string domain:  defaults to getecz.com\n    '''\n    return await self._request_rapid_api('rapi_best_backlink_checker_api_poor_backlinks',kwargs)\n        "
    },
    "rapi_best_backlink_checker_api_top_backlinks": {
        "api_name": "top_backlinks",
        "category": "Data",
        "tool_name": "best_backlink_checker_api",
        "code": "async def rapi_best_backlink_checker_api_top_backlinks(self,*args,**kwargs):\n    '''Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc\n    \n    \n\n    :param string domain:  defaults to getecz.com\n    '''\n    return await self._request_rapid_api('rapi_best_backlink_checker_api_top_backlinks',kwargs)\n        "
    },
    "rapi_best_backlink_checker_api_exact_url": {
        "api_name": "exact_url",
        "category": "Data",
        "tool_name": "best_backlink_checker_api",
        "code": "async def rapi_best_backlink_checker_api_exact_url(self,*args,**kwargs):\n    '''Best Backlink checker, You can check Top backlinks, New backlinks, Poor Backlinks, etc\n    \n    \n\n    :param string domain:  defaults to https://codeconia.com/2021/05/28/html-form-to-email-with-attachment-using-php/\n    '''\n    return await self._request_rapid_api('rapi_best_backlink_checker_api_exact_url',kwargs)\n        "
    },
    "rapi_consulta_cnpj_gr_tis_consulta_unificada": {
        "api_name": "consulta_unificada",
        "category": "Data",
        "tool_name": "consulta_cnpj_gr_tis",
        "code": "async def rapi_consulta_cnpj_gr_tis_consulta_unificada(self,*args,**kwargs):\n    '''API Gratuita de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string CNPJ: CNPJ da Empresa defaults to 00000000000191\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_gr_tis_consulta_unificada',kwargs)\n        "
    },
    "rapi_consulta_cnpj_gr_tis_consulta_estabelecimento": {
        "api_name": "consulta_estabelecimento",
        "category": "Data",
        "tool_name": "consulta_cnpj_gr_tis",
        "code": "async def rapi_consulta_cnpj_gr_tis_consulta_estabelecimento(self,*args,**kwargs):\n    '''API Gratuita de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string CNPJ:  defaults to 37335118000180\n    :param boolean? simples: Adiciona informa\u00e7\u00f5es do Simples Nacional defaults to false\n    :param string? registrations: UFs separadas por v\u00edrgula para adicionar informa\u00e7\u00f5es do Cadastro de Contribuintes, utilize 'BR' para considerar todas.\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_gr_tis_consulta_estabelecimento',kwargs)\n        "
    },
    "rapi_uers_api_get_all_users": {
        "api_name": "get_all_users",
        "category": "Data",
        "tool_name": "uers_api",
        "code": "async def rapi_uers_api_get_all_users(self,*args,**kwargs):\n    '''Fake users data for Employee Management\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_uers_api_get_all_users',kwargs)\n        "
    },
    "rapi_crypto_prices_api_prices_and_up_and_down": {
        "api_name": "prices_and_up_and_down",
        "category": "Data",
        "tool_name": "crypto_prices_api",
        "code": "async def rapi_crypto_prices_api_prices_and_up_and_down(self,*args,**kwargs):\n    '''Crypto prices API is an API that provides updates on the status of your favorite crypto coins. It's designed to be used by developers who are building apps and websites that need to know the information on a cryptocurrency.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_prices_api_prices_and_up_and_down',kwargs)\n        "
    },
    "rapi_thai_lottery_get_lottery_result_by_date": {
        "api_name": "get_lottery_result_by_date",
        "category": "Data",
        "tool_name": "thai_lottery",
        "code": "async def rapi_thai_lottery_get_lottery_result_by_date(self,*args,**kwargs):\n    '''Api for serve result of Thailand lottory. - API \u0e2a\u0e4d\u0e32\u0e2b\u0e23\u0e31\u0e1a\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e01\u0e34\u0e19\u0e41\u0e1a\u0e48\u0e07\u0e23\u0e31\u0e10\u0e1a\u0e32\u0e25 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e2d\u0e14\u0e35\u0e15 \u0e08\u0e19\u0e16\u0e36\u0e07\u0e07\u0e27\u0e14\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 \u0e2d\u0e31\u0e1e\u0e40\u0e14\u0e17\u0e17\u0e31\u0e19\u0e17\u0e35\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e32\u0e07\u0e01\u0e32\u0e23\n    \n    \n\n    :param string date:  defaults to 2022-10-16\n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_get_lottery_result_by_date',kwargs)\n        "
    },
    "rapi_thai_lottery_get_all_round_dates": {
        "api_name": "get_all_round_dates",
        "category": "Data",
        "tool_name": "thai_lottery",
        "code": "async def rapi_thai_lottery_get_all_round_dates(self,*args,**kwargs):\n    '''Api for serve result of Thailand lottory. - API \u0e2a\u0e4d\u0e32\u0e2b\u0e23\u0e31\u0e1a\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e01\u0e34\u0e19\u0e41\u0e1a\u0e48\u0e07\u0e23\u0e31\u0e10\u0e1a\u0e32\u0e25 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e2d\u0e14\u0e35\u0e15 \u0e08\u0e19\u0e16\u0e36\u0e07\u0e07\u0e27\u0e14\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 \u0e2d\u0e31\u0e1e\u0e40\u0e14\u0e17\u0e17\u0e31\u0e19\u0e17\u0e35\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e32\u0e07\u0e01\u0e32\u0e23\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_get_all_round_dates',kwargs)\n        "
    },
    "rapi_thai_lottery_get_latest_lottery_result": {
        "api_name": "get_latest_lottery_result",
        "category": "Data",
        "tool_name": "thai_lottery",
        "code": "async def rapi_thai_lottery_get_latest_lottery_result(self,*args,**kwargs):\n    '''Api for serve result of Thailand lottory. - API \u0e2a\u0e4d\u0e32\u0e2b\u0e23\u0e31\u0e1a\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e01\u0e34\u0e19\u0e41\u0e1a\u0e48\u0e07\u0e23\u0e31\u0e10\u0e1a\u0e32\u0e25 \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e2d\u0e14\u0e35\u0e15 \u0e08\u0e19\u0e16\u0e36\u0e07\u0e07\u0e27\u0e14\u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 \u0e2d\u0e31\u0e1e\u0e40\u0e14\u0e17\u0e17\u0e31\u0e19\u0e17\u0e35\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e1c\u0e25\u0e2a\u0e25\u0e32\u0e01\u0e2d\u0e2d\u0e01\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e32\u0e07\u0e01\u0e32\u0e23\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_get_latest_lottery_result',kwargs)\n        "
    },
    "rapi_chain49_get_balance_history_v2": {
        "api_name": "get_balance_history_v2",
        "category": "Data",
        "tool_name": "chain49",
        "code": "async def rapi_chain49_get_balance_history_v2(self,*args,**kwargs):\n    '''Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)\n    \n    \n\n    :param string addressOrXpub: Address or XPUB defaults to 321x69Cb9HZLWwAWGiUBT1U81r1zPLnEjL\n    :param string blockchain: Blockchain name defaults to bitcoin\n    :param integer? groupBy: an interval in seconds, to group results by. Default is 3600 seconds defaults to 3600\n    :param string? fiatcurrency: if specified, the response will contain secondary (fiat) rate at the time of transaction. If not, all available currencies will be returned defaults to usd\n    :param string? fromDate: specifies a start date as a Unix timestamp defaults to 1578391200\n    :param string? toDate: specifies an end date as a Unix timestamp defaults to 1599053802\n    '''\n    return await self._request_rapid_api('rapi_chain49_get_balance_history_v2',kwargs)\n        "
    },
    "rapi_chain49_blockchain_info_summary": {
        "api_name": "blockchain_info_summary",
        "category": "Data",
        "tool_name": "chain49",
        "code": "async def rapi_chain49_blockchain_info_summary(self,*args,**kwargs):\n    '''Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)\n    \n    \n\n    :param string blockchain: Blockchain name defaults to bitcoin\n    '''\n    return await self._request_rapid_api('rapi_chain49_blockchain_info_summary',kwargs)\n        "
    },
    "rapi_chain49_get_mempool_v2": {
        "api_name": "get_mempool_v2",
        "category": "Data",
        "tool_name": "chain49",
        "code": "async def rapi_chain49_get_mempool_v2(self,*args,**kwargs):\n    '''Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)\n    \n    \n\n    :param string blockchain: Blockchain name defaults to bitcoin\n    :param integer? pageSize: number of transactions returned by call (default and maximum 1000) defaults to 1000\n    :param integer? page: specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_chain49_get_mempool_v2',kwargs)\n        "
    },
    "rapi_data_police_uk_crime_categories": {
        "api_name": "crime_categories",
        "category": "Data",
        "tool_name": "data_police_uk",
        "code": "async def rapi_data_police_uk_crime_categories(self,*args,**kwargs):\n    '''This is the unofficial documentation for the Data.Police.UK API.\n    \n    \n\n    :param string date:  defaults to 2013-06\n    '''\n    return await self._request_rapid_api('rapi_data_police_uk_crime_categories',kwargs)\n        "
    },
    "rapi_data_police_uk_street_level_outcomes": {
        "api_name": "street_level_outcomes",
        "category": "Data",
        "tool_name": "data_police_uk",
        "code": "async def rapi_data_police_uk_street_level_outcomes(self,*args,**kwargs):\n    '''This is the unofficial documentation for the Data.Police.UK API.\n    \n    \n\n    :param string date:  defaults to 2013-01\n    :param string lat:  defaults to 52.629729\n    :param string lng:  defaults to -1.131592\n    '''\n    return await self._request_rapid_api('rapi_data_police_uk_street_level_outcomes',kwargs)\n        "
    },
    "rapi_data_police_uk_street_level_availability": {
        "api_name": "street_level_availability",
        "category": "Data",
        "tool_name": "data_police_uk",
        "code": "async def rapi_data_police_uk_street_level_availability(self,*args,**kwargs):\n    '''This is the unofficial documentation for the Data.Police.UK API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_data_police_uk_street_level_availability',kwargs)\n        "
    },
    "rapi_data_police_uk_forces": {
        "api_name": "forces",
        "category": "Data",
        "tool_name": "data_police_uk",
        "code": "async def rapi_data_police_uk_forces(self,*args,**kwargs):\n    '''This is the unofficial documentation for the Data.Police.UK API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_data_police_uk_forces',kwargs)\n        "
    },
    "rapi_zillow_base_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "zillow_base",
        "code": "async def rapi_zillow_base_search(self,*args,**kwargs):\n    '''[IMPROVED SEARCH API] These APIs provide a powerful and user-friendly real estate search feature. Users can enter an address, city, state, or ZIP code to search for apartments, houses, land, and homes for rent or sale in the United States. Additionally, they can customize their search results by using filters to specify price, square footage, property type, number of bedrooms and bathrooms, construction year, and various other criteria. Furthermore, users can view detailed information about e...\n    \n    \n\n    :param string location: \nLocation details, address, county, Zip code. defaults to Brownsville, TX\n    :param boolean? is_city_view: `is_city_view`= City(View)\n    :param ENUM? days_on_zillow: Days on Z. Use with \nstatus_type=**ForSale** OR **ForRent**\n    :param boolean? is_water_view: `is_water_view`= Water(View)\n    :param boolean? has_basement_unfinished: `has_basement_unfinished`=Has basement unfinished\n    :param boolean? is_mountain_view: `is_mountain_view`= Mountain(View)\n    :param boolean? has_basement_finished: `has_basement_finished`=Has basement finished\n    :param string? keywords: Filter with keywords: MLS #, yard, etc.\n    :param boolean? has_pool: `has_pool`=Must have pool (Other Amenities)\n    :param boolean? is_park_view: `is_park_view`= Park(View)\n    :param boolean? is_waterfront: `is_waterfront`=Waterfront (Other Amenities)\n    :param boolean? has_single_story_only: `has_single_story_only`:  Single-story only (Number Of Stories)\n    :param integer? min_year_built: Format: YYYY,  For instance: 2021\n    :param integer? max_year_built: Format: YYYY,  For instance: 2023\n    :param boolean? has_air_conditioning: `has_air_conditioning`=Must have A/C (Other Amenities)\n    :param integer? max_lot_size: Available values:\n\n- `2000`=2,000 sqft\n- `3000`=3,000 sqft\n- `4000`=4,000 sqft\n- `5000`=5,000 sqft\n- `7500`=7,500 sqft\n- `10890`=1/4 acre/10,890 sqft\n- `21780`=1/2 acre\n- `43560`=1 acre\n- `87120`=2 acres\n- `217800`=5 acres\n- `435600`=10 acres\n- `871200`=20 acres\n- `2178000`=50 acres\n- `4356000`=100 acres\n    :param integer? min_lot_size: Available values:\n\n- `1000`=1,000 sqft\n- `2000`=2,000 sqft\n- `3000`=3,000 sqft\n- `4000`=4,000 sqft\n- `5000`=5,000 sqft\n- `7500`=7,500 sqft\n- `10890`=1/4 acre/10,890 sqft\n- `21780`=1/2 acre\n- `43560`=1 acre\n- `87120`=2 acres\n- `217800`=5 acres\n- `435600`=10 acres\n- `871200`=20 acres\n- `2178000`=50 acres\n- `4356000`=100 acres\n    :param integer? max_square_feet: \n    :param integer? min_square_feet: \n    :param integer? has_garage: \u25c6`has_garage`=Must have garage(Parking Spots)\n\u25c6For status_type = **ForSale** OR **RecentlySold**\n    :param integer? parking_spots: \u25c6`min_parking_spots`=Parking Spots\n\u25c6For status_type = **ForSale** OR **RecentlySold**\n    :param boolean? has_3d_tour: \u25c6`has_3d_tour`= Must have 3D Tour (Tours )\n\u25c6For status_type = **ForSale** OR **ForRent**\n    :param boolean? has_open_house: \u25c6`has_open_house`= Must have open house (Tours )\n\u25c6For status_type = **ForSale**\n    :param boolean? has_incomplete_hoa: \u25c6has_incomplete_hoa =  Include homes with incomplete HOA data\n\u25c6For status_type = **ForSale** OR **RecentlySold**\n\u25c6Default - `true`\n    :param string? max_hoa: For status_type =**ForSale** OR **RecentlySold**\n- `Any`: Any\n- `0`: No HOA Fee\n- `50`: $50/month\n- `100`: $100/month\n- `200`: $200/month\n- `300`: $300/month\n- `400`: $400/month\n- `500`: $500/month\n- `600`: $600/month\n- `700`: $700/month\n- `800`: $800/month\n- `900`: $900/month\n- `1000 `$1000/month\n    :param integer? max_baths: \n    :param integer? min_baths: \n    :param string? home_type: Property type comma-separated or empty for all types\n**For Rent**\n- `Houses`: Houses\n- `ApartmentOrCondo`: Apartments/Condos/Co-ops\n- `Townhomes`: Townhomes\n\n**For others:**\n- `Houses`: Houses\n- `Townhomes`: Townhomes\n- `Multifamily`: Multi-family\n- `CondosOrCoops`: Condos/Co-ops\n- `LotsLand`: Lots/Land\n- `Apartments`: Apartments\n- `Manufactured`: Manufactured\n    :param integer? max_beds: \n    :param integer? min_beds: \n    :param string? sort_by: **ForSale** OR **RecentlySold** are available:\n\n- Homes_for_You\n- Price_High_Low\n- Price_Low_High\n- Newest:\n- Bedrooms\n- Bathrooms\n- Square_Feet\n- Lot_Size\ndefault: Homes_for_You\n\n**ForRent** are available:\n\n- Verified_Source\n- Payment_High_Low\n- Payment_Low_High\n- Newest\n- Bedrooms\n- Bathrooms\n- Square_Feet\n- Lot_Size\ndefault: Verified_Source defaults to Homes_For_You\n    :param integer? page:  defaults to 1\n    :param integer? min_price: \n    :param integer? max_price: \n    :param ENUM? status_type: \n    '''\n    return await self._request_rapid_api('rapi_zillow_base_search',kwargs)\n        "
    },
    "rapi_zillow_base_property_details": {
        "api_name": "property_details",
        "category": "Data",
        "tool_name": "zillow_base",
        "code": "async def rapi_zillow_base_property_details(self,*args,**kwargs):\n    '''[IMPROVED SEARCH API] These APIs provide a powerful and user-friendly real estate search feature. Users can enter an address, city, state, or ZIP code to search for apartments, houses, land, and homes for rent or sale in the United States. Additionally, they can customize their search results by using filters to specify price, square footage, property type, number of bedrooms and bathrooms, construction year, and various other criteria. Furthermore, users can view detailed information about e...\n    \n    \n\n    :param string zpid:  defaults to 61975204\n    '''\n    return await self._request_rapid_api('rapi_zillow_base_property_details',kwargs)\n        "
    },
    "rapi_shopify_stores_info_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "shopify_stores_info",
        "code": "async def rapi_shopify_stores_info_search(self,*args,**kwargs):\n    '''This API returns a info such as email, phone number, etc for shopify stores. You can use this for a lead Generation.\n    \n    \n\n    :param string search: the query to search defaults to jewelry\n    :param string? page: default is 1\n    '''\n    return await self._request_rapid_api('rapi_shopify_stores_info_search',kwargs)\n        "
    },
    "rapi_shopify_stores_info_get_store_info": {
        "api_name": "get_store_info",
        "category": "Data",
        "tool_name": "shopify_stores_info",
        "code": "async def rapi_shopify_stores_info_get_store_info(self,*args,**kwargs):\n    '''This API returns a info such as email, phone number, etc for shopify stores. You can use this for a lead Generation.\n    \n    \n\n    :param string? page: max pag is 100. To load faster it returns the first page normally with 10 results.\n    '''\n    return await self._request_rapid_api('rapi_shopify_stores_info_get_store_info',kwargs)\n        "
    },
    "rapi_restaurant_restaurant": {
        "api_name": "restaurant",
        "category": "Data",
        "tool_name": "restaurant",
        "code": "async def rapi_restaurant_restaurant(self,*args,**kwargs):\n    '''List of restaurant\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_restaurant_restaurant',kwargs)\n        "
    },
    "rapi_books_get_all_books": {
        "api_name": "get_all_books",
        "category": "Data",
        "tool_name": "books",
        "code": "async def rapi_books_get_all_books(self,*args,**kwargs):\n    '''books\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_books_get_all_books',kwargs)\n        "
    },
    "rapi_phishing_url_risk_api_phishing_url_detection_api": {
        "api_name": "phishing_url_detection_api",
        "category": "Data",
        "tool_name": "phishing_url_risk_api",
        "code": "async def rapi_phishing_url_risk_api_phishing_url_detection_api(self,*args,**kwargs):\n    '''This API helps you detect if the URL is legitimate or a phishing link, It prevents against phishing, Suspicious URL and fraudulent link. API check url Redirecting risk, SubDomains, HTTPS, Domain Regulation Length, IframeRedirection, Age of Domain, DNS Recording, WebsiteTraffic.\n    \n    \n\n    :param string? url:  defaults to appleid.apple.com-sa.pm\n    '''\n    return await self._request_rapid_api('rapi_phishing_url_risk_api_phishing_url_detection_api',kwargs)\n        "
    },
    "rapi_flowers_show_image": {
        "api_name": "show_image",
        "category": "Data",
        "tool_name": "flowers",
        "code": "async def rapi_flowers_show_image(self,*args,**kwargs):\n    '''Information about flowers.\n    \n    \n\n    :param string id:  defaults to 6383808bff3dde72b0fc35d6\n    '''\n    return await self._request_rapid_api('rapi_flowers_show_image',kwargs)\n        "
    },
    "rapi_flowers_list": {
        "api_name": "list",
        "category": "Data",
        "tool_name": "flowers",
        "code": "async def rapi_flowers_list(self,*args,**kwargs):\n    '''Information about flowers.\n    \n    \n\n    :param string? pageIndex:  defaults to 0\n    :param string? pageSize: Boundary is up to 500. defaults to 10\n    :param string? name: Search by containing name defaults to African Daisy\n    :param string? scientificName: Search by containing scientific name defaults to Osteospermum\n    '''\n    return await self._request_rapid_api('rapi_flowers_list',kwargs)\n        "
    },
    "rapi_flowers_get_by_id": {
        "api_name": "get_by_id",
        "category": "Data",
        "tool_name": "flowers",
        "code": "async def rapi_flowers_get_by_id(self,*args,**kwargs):\n    '''Information about flowers.\n    \n    \n\n    :param string id:  defaults to 6383808bff3dde72b0fc34ab\n    '''\n    return await self._request_rapid_api('rapi_flowers_get_by_id',kwargs)\n        "
    },
    "rapi_opensea_v2_rarity_tools": {
        "api_name": "rarity_tools",
        "category": "Data",
        "tool_name": "opensea_v2",
        "code": "async def rapi_opensea_v2_rarity_tools(self,*args,**kwargs):\n    '''Opensea / Blur / Looksrare / x2y2  API - 1,000+  requests/min\n\nSimple & high performance Opensea / Blur / Looksrare / x2y2  API, backed by rotating proxies & API keys\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.g...\n    \n    \n\n    :param string slug:  defaults to women-ape-yacht-club\n    '''\n    return await self._request_rapid_api('rapi_opensea_v2_rarity_tools',kwargs)\n        "
    },
    "rapi_youtube_trending_trending": {
        "api_name": "trending",
        "category": "Data",
        "tool_name": "youtube_trending",
        "code": "async def rapi_youtube_trending_trending(self,*args,**kwargs):\n    '''Unofficial API to gather video information from the trending section of Youtube\n    \n    \n\n    :param string? type: enum for video type:\n- default\n- music\n- gaming\n- movies defaults to gaming\n    :param string? country: Country code to retrieve trending videos for the provided country.\nE.g, US, DE, JP etc. defaults to US\n    '''\n    return await self._request_rapid_api('rapi_youtube_trending_trending',kwargs)\n        "
    },
    "rapi_italian_pharmacy_getpharmaciesusingget": {
        "api_name": "getpharmaciesusingget",
        "category": "Data",
        "tool_name": "italian_pharmacy",
        "code": "async def rapi_italian_pharmacy_getpharmaciesusingget(self,*args,**kwargs):\n    '''API to find the list of Italian pharmacies, dynamic filters are used\n    \n    \n\n    :param integer? size: size defaults to 20\n    :param string? filterOr: filterOr\n    :param string? orders: orders\n    :param string? filterAnd: filterAnd\n    :param integer? page: page defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_italian_pharmacy_getpharmaciesusingget',kwargs)\n        "
    },
    "rapi_climate_change_live_api_get_all_climate_change_news": {
        "api_name": "get_all_climate_change_news",
        "category": "Data",
        "tool_name": "climate_change_live_api",
        "code": "async def rapi_climate_change_live_api_get_all_climate_change_news(self,*args,**kwargs):\n    '''This API shows climate change news all over the world\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_climate_change_live_api_get_all_climate_change_news',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_video_details": {
        "api_name": "video_details",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_video_details(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string id: Video id defaults to dQw4w9WgXcQ\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_video_details',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_comments": {
        "api_name": "comments",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_comments(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string id: Video Id defaults to 1gxf6flnvNA\n    :param ENUM? sort_by: Available options:\n**newest**\n**top**  [default]\n    :param string? token: Pagination token\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_comments',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_playlist": {
        "api_name": "playlist",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_playlist(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string id: Playlist Id defaults to PLMC9KNkIncKseYxDN2niH6glGRWKsLtde\n    :param string? token: Pagination Token\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_playlist',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_search(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string query: Search term defaults to cat\n    :param ENUM? duration: Duration filter options:\n**short**  - less than 4 min\n**medium**  - 4 to 20 min\n**long**  - more than 20 min\n    :param string? lang: Locale/language for request. Like en, gb, hi, etc defaults to en\n    :param ENUM? type: Search type filter options:\n**video**\n**channel**\n**playlist**\n**movie**\n**show**\n    :param string? features: Video Features options:\n**HD**\n**subtitles**\n**CCommons**\n**3D**\n**Live**\n**Purchased**\n**4K**\n**360**\n**Location**\n**HDR**\n**VR180**\n\nMultiple features could be joined by ','\nFor example: HD,subtitles\n    :param string? geo: ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc. defaults to US\n    :param ENUM? sort_by: Results Sort options:\n**relevance**  [default]\n**rating**\n**date**\n**views**\n    :param string? token: Pagination Token\n    :param ENUM? upload_date: Upload Date filter options:\n**hour**\n**today**\n**week**\n**month**\n**year**\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_search',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_channel": {
        "api_name": "channel",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_channel(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string id: Channel Id defaults to UCTwECeGqMZee77BjdoYtI2Q\n    :param string? token: Pagination token\n    :param ENUM? sort_by: Sorts the channel videos. Available options: \n**newest**  [default]\n**oldest**\n**popular**\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_channel',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_trending": {
        "api_name": "trending",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_trending(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string geo: ISO 3166-2 country code of the region for which you want the trending data. Like US (default), UK, CA, IN, etc. defaults to US\n    :param string? lang: Locale/language for request. Like en, gb, hi, etc defaults to en\n    :param ENUM? type: Trending type:\n**now**\n**music**\n**games**\n**movies**\n\nDefault is **now**\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_trending',kwargs)\n        "
    },
    "rapi_youtube_v3_alternative_related_videos": {
        "api_name": "related_videos",
        "category": "Data",
        "tool_name": "youtube_v3_alternative",
        "code": "async def rapi_youtube_v3_alternative_related_videos(self,*args,**kwargs):\n    '''Get data similar to YouTube Data API v3 from this API. Check latest version: [YT-API](https://rapidapi.com/ytjar/api/yt-api)\n    \n    \n\n    :param string id: Video id defaults to dQw4w9WgXcQ\n    :param string? geo: ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc. defaults to US\n    :param string? lang: Locale/language for request. Like en, gb, hi, etc defaults to en\n    :param string? token: Pagination token\n    '''\n    return await self._request_rapid_api('rapi_youtube_v3_alternative_related_videos',kwargs)\n        "
    },
    "rapi_runs_tech_getalltech": {
        "api_name": "getalltech",
        "category": "Data",
        "tool_name": "runs_tech",
        "code": "async def rapi_runs_tech_getalltech(self,*args,**kwargs):\n    '''Find the technologies that powers a company\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_runs_tech_getalltech',kwargs)\n        "
    },
    "rapi_covid_19_india_get_info": {
        "api_name": "get_info",
        "category": "Data",
        "tool_name": "covid_19_india",
        "code": "async def rapi_covid_19_india_get_info(self,*args,**kwargs):\n    '''COVID-19 Updated using Goverment Database | Coded With \u2764\ufe0f By Hritik R\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_india_get_info',kwargs)\n        "
    },
    "rapi_covid_19_india_get_details": {
        "api_name": "get_details",
        "category": "Data",
        "tool_name": "covid_19_india",
        "code": "async def rapi_covid_19_india_get_details(self,*args,**kwargs):\n    '''COVID-19 Updated using Goverment Database | Coded With \u2764\ufe0f By Hritik R\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_india_get_details',kwargs)\n        "
    },
    "rapi_covid_19_india_get_latest_updates": {
        "api_name": "get_latest_updates",
        "category": "Data",
        "tool_name": "covid_19_india",
        "code": "async def rapi_covid_19_india_get_latest_updates(self,*args,**kwargs):\n    '''COVID-19 Updated using Goverment Database | Coded With \u2764\ufe0f By Hritik R\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_india_get_latest_updates',kwargs)\n        "
    },
    "rapi_real_time_lens_data_image_search": {
        "api_name": "image_search",
        "category": "Data",
        "tool_name": "real_time_lens_data",
        "code": "async def rapi_real_time_lens_data_image_search(self,*args,**kwargs):\n    '''Fast and Simple image searches - get visual matches, knowledge graph, text and OCR, object detections and additional data available on Google Lens.\n    \n    \n\n    :param string url: URL of an image to perform Google Lens search. defaults to https://i.imgur.com/HBrB8p0.png\n    :param string? country: Set the country for the search.\n\n**Allowed values:** 2-letter country code, see [ISO 3166](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes).\n**Default:** us. defaults to us\n    :param string? language: Set the language of the results (Google's **hl** parameter).\n\n**Allowed values:** 2-letter language code, see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default:** en. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_lens_data_image_search',kwargs)\n        "
    },
    "rapi_real_time_lens_data_object_detection": {
        "api_name": "object_detection",
        "category": "Data",
        "tool_name": "real_time_lens_data",
        "code": "async def rapi_real_time_lens_data_object_detection(self,*args,**kwargs):\n    '''Fast and Simple image searches - get visual matches, knowledge graph, text and OCR, object detections and additional data available on Google Lens.\n    \n    \n\n    :param string url: URL of an image to perform Google Lens object detection. defaults to https://thumbs.dreamstime.com/b/giraffe-zebra-1533191.jpg\n    '''\n    return await self._request_rapid_api('rapi_real_time_lens_data_object_detection',kwargs)\n        "
    },
    "rapi_real_time_lens_data_image_to_text_ocr": {
        "api_name": "image_to_text_ocr",
        "category": "Data",
        "tool_name": "real_time_lens_data",
        "code": "async def rapi_real_time_lens_data_image_to_text_ocr(self,*args,**kwargs):\n    '''Fast and Simple image searches - get visual matches, knowledge graph, text and OCR, object detections and additional data available on Google Lens.\n    \n    \n\n    :param string url: URL of an image from which to extract text. defaults to https://s3-us-west-2.amazonaws.com/courses-images/wp-content/uploads/sites/1844/2017/06/15213029/images-textwrap-topbottom.png\n    :param string? language: Set the language of the results.\n\n**Allowed values:** 2-letter language code, see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n**Default:** en. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_lens_data_image_to_text_ocr',kwargs)\n        "
    },
    "rapi_keyword_research_for_youtube_keyword_research": {
        "api_name": "keyword_research",
        "category": "Data",
        "tool_name": "keyword_research_for_youtube",
        "code": "async def rapi_keyword_research_for_youtube_keyword_research(self,*args,**kwargs):\n    '''Unlock the Power of Youtube Keyword Research for Your Youtube Channel with our API. Get Accurate Monthly Search Volume, Keyword Difficulty, and Competition Details to Drive Traffic and Boost Views!\n    \n    \n\n    :param string keyword:  defaults to Email Marketing\n    '''\n    return await self._request_rapid_api('rapi_keyword_research_for_youtube_keyword_research',kwargs)\n        "
    },
    "rapi_azure_getpastevents": {
        "api_name": "getpastevents",
        "category": "Data",
        "tool_name": "azure",
        "code": "async def rapi_azure_getpastevents(self,*args,**kwargs):\n    '''The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_getpastevents',kwargs)\n        "
    },
    "rapi_azure_getfutureevents": {
        "api_name": "getfutureevents",
        "category": "Data",
        "tool_name": "azure",
        "code": "async def rapi_azure_getfutureevents(self,*args,**kwargs):\n    '''The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_getfutureevents',kwargs)\n        "
    },
    "rapi_azure_getevents": {
        "api_name": "getevents",
        "category": "Data",
        "tool_name": "azure",
        "code": "async def rapi_azure_getevents(self,*args,**kwargs):\n    '''The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_getevents',kwargs)\n        "
    },
    "rapi_azure_getpeople": {
        "api_name": "getpeople",
        "category": "Data",
        "tool_name": "azure",
        "code": "async def rapi_azure_getpeople(self,*args,**kwargs):\n    '''The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_azure_getpeople',kwargs)\n        "
    },
    "rapi_azure_gettopics": {
        "api_name": "gettopics",
        "category": "Data",
        "tool_name": "azure",
        "code": "async def rapi_azure_gettopics(self,*args,**kwargs):\n    '''The Azure Every Day API offers the Microsoft Azure news, learning resources, events, influencers and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_azure_gettopics',kwargs)\n        "
    },
    "rapi_global_address_global_address": {
        "api_name": "global_address",
        "category": "Data",
        "tool_name": "global_address",
        "code": "async def rapi_global_address_global_address(self,*args,**kwargs):\n    '''Easily verify, check or lookup address. The Global Address JSON API takes in any global address in one line or multiple lines, and matches it against the best postal reference sources (246 countries and territories) to correct, verify and standardize U.S., Canadian and international addresses.\n    \n    \n\n    :param string ctry: Country Code / Country Name defaults to DEU\n    :param string? format: Format of the Response (XML or JSON) defaults to json\n    :param string? a5: Address Line 5\n    :param string? a1: Address Line 1 defaults to Gie\u00dfener Str. 30\n    :param string? DeliveryLines: Specify if the Address Lines 1-8 should contain just the delivery address or entire address. defaults to Off\n    :param string? a2: Address Line 2 defaults to Frankfurt am Main\n    :param string? a3: Address Line 3\n    :param string? admarea: Administrative Area\n    :param string? a7: Address Line 7\n    :param string? a6: Address Line 6\n    :param string? postal: Postal Code defaults to 60435\n    :param string? a8: Address Line 8\n    :param string? loc: Locality\n    :param string? a4: Address Line 4\n    '''\n    return await self._request_rapid_api('rapi_global_address_global_address',kwargs)\n        "
    },
    "rapi_4d_dream_dictionary_get_dream_number": {
        "api_name": "get_dream_number",
        "category": "Data",
        "tool_name": "4d_dream_dictionary",
        "code": "async def rapi_4d_dream_dictionary_get_dream_number(self,*args,**kwargs):\n    '''Interpretation of your dream to 4/3 digits lucky draw number.\uff08\u4e07\u5b57\u68a6\u5883\u8f9e\u5178\uff09\n    \n    \n\n    :param string keyword: Keyword of dream to search for. defaults to money\n    :param ENUM digit: Number digit of lucky draw to search.\n    :param ENUM language: Language of keyword.\n**en** for English, **zh** for Chinese (simplified)\n    '''\n    return await self._request_rapid_api('rapi_4d_dream_dictionary_get_dream_number',kwargs)\n        "
    },
    "rapi_wa_rego_check_expiry_date_enquiry": {
        "api_name": "expiry_date_enquiry",
        "category": "Data",
        "tool_name": "wa_rego_check",
        "code": "async def rapi_wa_rego_check_expiry_date_enquiry(self,*args,**kwargs):\n    '''Western Australia vehicle license expiry date query, data from DoTDirect\nhttps://csnb.net/wa-rego-check-api/\n    \n    \n\n    :param string rego:  defaults to 1HNT923\n    '''\n    return await self._request_rapid_api('rapi_wa_rego_check_expiry_date_enquiry',kwargs)\n        "
    },
    "rapi_cat_breeds_group_breed_data_by_property": {
        "api_name": "group_breed_data_by_property",
        "category": "Data",
        "tool_name": "cat_breeds",
        "code": "async def rapi_cat_breeds_group_breed_data_by_property(self,*args,**kwargs):\n    '''The API is scraping the Wikipedia pages for cats in order to collect data \n    \n    \n\n    :param string property:  defaults to origin\n    :param string property_value:  defaults to united states\n    '''\n    return await self._request_rapid_api('rapi_cat_breeds_group_breed_data_by_property',kwargs)\n        "
    },
    "rapi_cat_breeds_get_all_cat_breeds": {
        "api_name": "get_all_cat_breeds",
        "category": "Data",
        "tool_name": "cat_breeds",
        "code": "async def rapi_cat_breeds_get_all_cat_breeds(self,*args,**kwargs):\n    '''The API is scraping the Wikipedia pages for cats in order to collect data \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cat_breeds_get_all_cat_breeds',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_gera_vis_o_da_rua": {
        "api_name": "gera_vis_o_da_rua",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_gera_vis_o_da_rua(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string CNPJ:  defaults to 37335118000180\n    :param integer? fov: \n    :param integer? height: \n    :param integer? width: \n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_gera_vis_o_da_rua',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_gera_mapa_dos_arredores": {
        "api_name": "gera_mapa_dos_arredores",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_gera_mapa_dos_arredores(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string CNPJ:  defaults to 37335118000180\n    :param integer? height: \n    :param integer? zoom: \n    :param integer? width: \n    :param integer? scale: \n    :param string? type:  defaults to hybrid\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_gera_mapa_dos_arredores',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_gera_comprovante_rfb": {
        "api_name": "gera_comprovante_rfb",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_gera_comprovante_rfb(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string taxId:  defaults to 37335118000180\n    :param string? pages:  defaults to REGISTRATION,MEMBERS\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_gera_comprovante_rfb',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_consulta_estabelecimento": {
        "api_name": "consulta_estabelecimento",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_consulta_estabelecimento(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string CNPJ:  defaults to 84447804000123\n    :param integer? maxAge:  defaults to 30\n    :param boolean? simplesHistory:  defaults to false\n    :param string? registrations: UFs separadas por v\u00edrgula para adicionar informa\u00e7\u00f5es do Cadastro de Contribuintes, utilize 'BR' para considerar todas. defaults to BR\n    :param boolean? simples:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_consulta_estabelecimento',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_consulta_cadastro_de_contribuintes": {
        "api_name": "consulta_cadastro_de_contribuintes",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_consulta_cadastro_de_contribuintes(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string taxId:  defaults to 84447804000123\n    :param integer? maxAge:  defaults to 30\n    :param string? states: UFs separadas por v\u00edrgula para adicionar informa\u00e7\u00f5es do Cadastro de Contribuintes, utilize 'BR' para considerar todas. defaults to BR\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_consulta_cadastro_de_contribuintes',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_gera_comprovante_simples": {
        "api_name": "gera_comprovante_simples",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_gera_comprovante_simples(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string taxId:  defaults to 37335118000180\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_gera_comprovante_simples',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_consulta_simples_nacional": {
        "api_name": "consulta_simples_nacional",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_consulta_simples_nacional(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string taxId:  defaults to 37335118000180\n    :param integer? maxAge:  defaults to 30\n    :param boolean? history:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_consulta_simples_nacional',kwargs)\n        "
    },
    "rapi_consulta_cnpj_tempo_real_consulta_pessoa": {
        "api_name": "consulta_pessoa",
        "category": "Data",
        "tool_name": "consulta_cnpj_tempo_real",
        "code": "async def rapi_consulta_cnpj_tempo_real_consulta_pessoa(self,*args,**kwargs):\n    '''API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).\n    \n    \n\n    :param string id:  defaults to 5af3f1d4-f889-4a95-8b8a-bc4cfeaf1a5a\n    '''\n    return await self._request_rapid_api('rapi_consulta_cnpj_tempo_real_consulta_pessoa',kwargs)\n        "
    },
    "rapi_hull_id_boat_hin_decoder_hin_decoder_return_json": {
        "api_name": "hin_decoder_return_json",
        "category": "Data",
        "tool_name": "hull_id_boat_hin_decoder",
        "code": "async def rapi_hull_id_boat_hin_decoder_hin_decoder_return_json(self,*args,**kwargs):\n    '''Decode the 12 digit HIN and check if it is valid. HINDecoder is used by many State DMV's and has been running for 7+ years.\n    \n    \n\n    :param string HIN:  defaults to MVIPK003G607\n    '''\n    return await self._request_rapid_api('rapi_hull_id_boat_hin_decoder_hin_decoder_return_json',kwargs)\n        "
    },
    "rapi_hull_id_boat_hin_decoder_year_make_lookup_returns_json": {
        "api_name": "year_make_lookup_returns_json",
        "category": "Data",
        "tool_name": "hull_id_boat_hin_decoder",
        "code": "async def rapi_hull_id_boat_hin_decoder_year_make_lookup_returns_json(self,*args,**kwargs):\n    '''Decode the 12 digit HIN and check if it is valid. HINDecoder is used by many State DMV's and has been running for 7+ years.\n    \n    \n\n    :param integer year: The year you want to look for the boat builders. format YYYY.  From 1970 to present year. defaults to 1970\n    '''\n    return await self._request_rapid_api('rapi_hull_id_boat_hin_decoder_year_make_lookup_returns_json',kwargs)\n        "
    },
    "rapi_hull_id_boat_hin_decoder_mic_lookup": {
        "api_name": "mic_lookup",
        "category": "Data",
        "tool_name": "hull_id_boat_hin_decoder",
        "code": "async def rapi_hull_id_boat_hin_decoder_mic_lookup(self,*args,**kwargs):\n    '''Decode the 12 digit HIN and check if it is valid. HINDecoder is used by many State DMV's and has been running for 7+ years.\n    \n    \n\n    :param string MIC:  defaults to YAM\n    '''\n    return await self._request_rapid_api('rapi_hull_id_boat_hin_decoder_mic_lookup',kwargs)\n        "
    },
    "rapi_hull_id_boat_hin_decoder_hin_decoder_return_html": {
        "api_name": "hin_decoder_return_html",
        "category": "Data",
        "tool_name": "hull_id_boat_hin_decoder",
        "code": "async def rapi_hull_id_boat_hin_decoder_hin_decoder_return_html(self,*args,**kwargs):\n    '''Decode the 12 digit HIN and check if it is valid. HINDecoder is used by many State DMV's and has been running for 7+ years.\n    \n    \n\n    :param string HIN:  defaults to MVIPK003G607\n    :param string? usertable: setting usertable to 1 will give an html output instead of json defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_hull_id_boat_hin_decoder_hin_decoder_return_html',kwargs)\n        "
    },
    "rapi_zillow_data_v2_property_details": {
        "api_name": "property_details",
        "category": "Data",
        "tool_name": "zillow_data_v2",
        "code": "async def rapi_zillow_data_v2_property_details(self,*args,**kwargs):\n    '''Real-time data, unofficial API Zillow com, search for-sale and rental listings\n\nZillow is a leading real estate website in the United States that provides information on buying, selling, renting, and investing in properties such as homes, apartments, and condos.\n\n    \n    \n\n    :param string? zpid: `zpid`:  zpid  defaults to 78842146\n    '''\n    return await self._request_rapid_api('rapi_zillow_data_v2_property_details',kwargs)\n        "
    },
    "rapi_zillow_data_v2_get_zip_code_by_city": {
        "api_name": "get_zip_code_by_city",
        "category": "Data",
        "tool_name": "zillow_data_v2",
        "code": "async def rapi_zillow_data_v2_get_zip_code_by_city(self,*args,**kwargs):\n    '''Real-time data, unofficial API Zillow com, search for-sale and rental listings\n\nZillow is a leading real estate website in the United States that provides information on buying, selling, renting, and investing in properties such as homes, apartments, and condos.\n\n    \n    \n\n    :param string? city:  defaults to Moody\n    '''\n    return await self._request_rapid_api('rapi_zillow_data_v2_get_zip_code_by_city',kwargs)\n        "
    },
    "rapi_phone_validation_phone": {
        "api_name": "phone",
        "category": "Data",
        "tool_name": "phone_validation",
        "code": "async def rapi_phone_validation_phone(self,*args,**kwargs):\n    '''Mobile phone validation with extended checks\n    \n    \n\n    :param string phone: Provided number should be in E.164 format. (E.164 numbers can have a maximum of fifteen digits and are usually written as follows: [+][country code][subscriber number including area code].)\n    '''\n    return await self._request_rapid_api('rapi_phone_validation_phone',kwargs)\n        "
    },
    "rapi_indian_mobile_info_getinfo": {
        "api_name": "getinfo",
        "category": "Data",
        "tool_name": "indian_mobile_info",
        "code": "async def rapi_indian_mobile_info_getinfo(self,*args,**kwargs):\n    '''The Indian Mobile Info API is a powerful tool for those who need quick and easy access to important information about Indian mobile numbers. With this API, you can enter any 10 digit Indian mobile number and get detailed information such as location, provider, type, and more. This API is especially useful for businesses, researchers, and anyone else who needs to gather data on Indian mobile numbers.\nRecently, on Aug-23-2018, this API has been updated and bugs fixed, ensuring that the data pro...\n    \n    \n\n    :param integer mobno: Enter your 10 digit mobile number. defaults to 9090909090\n    '''\n    return await self._request_rapid_api('rapi_indian_mobile_info_getinfo',kwargs)\n        "
    },
    "rapi_domain_seo_analysis_domain_seo_analysis": {
        "api_name": "domain_seo_analysis",
        "category": "Data",
        "tool_name": "domain_seo_analysis",
        "code": "async def rapi_domain_seo_analysis_domain_seo_analysis(self,*args,**kwargs):\n    '''Bishopi's advanced and real-time proprietary SEO metrics for domain names investors, keywords research and SEO professionals. - More on Bishopi.io \n    \n    \n\n    :param string domain:  defaults to apify.com\n    :param string? country: Specify the proxy location for the search. Supported countries. 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR' defaults to us\n    '''\n    return await self._request_rapid_api('rapi_domain_seo_analysis_domain_seo_analysis',kwargs)\n        "
    },
    "rapi_quotes_v2_get_available_authors": {
        "api_name": "get_available_authors",
        "category": "Data",
        "tool_name": "quotes_v2",
        "code": "async def rapi_quotes_v2_get_available_authors(self,*args,**kwargs):\n    '''A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes. It provides a convenient way to access a wide range of quotes from various authors, categories, or topics.Using a Quotes API, developers can integrate inspiring, motivational, or thought-provoking quotes into their applications, websites, or projects. The API typically offers endpoints that allow developers to fetch random quotes, search for quotes based on keywords or ca...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotes_v2_get_available_authors',kwargs)\n        "
    },
    "rapi_quotes_v2_quotes_by_authors": {
        "api_name": "quotes_by_authors",
        "category": "Data",
        "tool_name": "quotes_v2",
        "code": "async def rapi_quotes_v2_quotes_by_authors(self,*args,**kwargs):\n    '''A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes. It provides a convenient way to access a wide range of quotes from various authors, categories, or topics.Using a Quotes API, developers can integrate inspiring, motivational, or thought-provoking quotes into their applications, websites, or projects. The API typically offers endpoints that allow developers to fetch random quotes, search for quotes based on keywords or ca...\n    \n    \n\n    :param string author:  defaults to Albert-Einstein\n    '''\n    return await self._request_rapid_api('rapi_quotes_v2_quotes_by_authors',kwargs)\n        "
    },
    "rapi_quotes_v2_random_quotes": {
        "api_name": "random_quotes",
        "category": "Data",
        "tool_name": "quotes_v2",
        "code": "async def rapi_quotes_v2_random_quotes(self,*args,**kwargs):\n    '''A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes. It provides a convenient way to access a wide range of quotes from various authors, categories, or topics.Using a Quotes API, developers can integrate inspiring, motivational, or thought-provoking quotes into their applications, websites, or projects. The API typically offers endpoints that allow developers to fetch random quotes, search for quotes based on keywords or ca...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotes_v2_random_quotes',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_student_property_to_rent_detail": {
        "api_name": "student_property_to_rent_detail",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_student_property_to_rent_detail(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string id: id from student-property-to-rent endpoint  defaults to 132688508\n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_student_property_to_rent_detail',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_student_property_to_rent": {
        "api_name": "student_property_to_rent",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_student_property_to_rent(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string location:  defaults to Chinatown, Birmingham\n    :param ENUM? sort_by: \n    :param integer? page: \n    :param string? search_radius: 0.0\n0.25\n0.5\n1.0\n3.0\n5.0\n10.0\n15.0\n20.0\n30.0\n40.0 defaults to 0.0\n    :param integer? max_price: \n    :param integer? max_bedroom: \n    :param string? property_type: Property type comma-separated\nEx: Bungalow,StudentHalls\nDetached,SemiDetached,Terraced,Flat,Bungalow,StudentHalls\n    :param integer? min_bedroom: \n    :param integer? min_price: \n    :param string? furnished_type: Furnished type comma-separated\nEx: PartFurnished,Unfurnished\n\nFurnished,PartFurnished,Unfurnished\n    :param boolean? has_parking: \n    :param boolean? has_garden: \n    :param boolean? do_not_show_house_share: \n    :param boolean? has_house_share: \n    :param boolean? has_include_let_agreed: \n    :param string? keywords: Keywords comma-separated\nEx: pool, garden\n    :param ENUM? added_to_site: \n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_student_property_to_rent',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_property_to_rent_detail": {
        "api_name": "property_to_rent_detail",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_property_to_rent_detail(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string id: id from property-to-rent endpoint  defaults to 135161867\n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_property_to_rent_detail',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_property_to_rent": {
        "api_name": "property_to_rent",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_property_to_rent(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string location:  defaults to Chinatown, Birmingham\n    :param ENUM? sort_by: \n    :param integer? page: \n    :param integer? min_bedroom: \n    :param string? search_radius: 0.0\n0.25\n0.5\n1.0\n3.0\n5.0\n10.0\n15.0\n20.0\n30.0\n40.0 defaults to 0.0\n    :param boolean? has_retirement_home: \n    :param boolean? do_not_show_student_accommodation: \n    :param boolean? has_student_accommodation: \n    :param boolean? do_not_show_house_share: \n    :param boolean? has_include_let_agreed: \n    :param string? keywords: Keywords comma-separated\nEx: pool, garden\n    :param boolean? do_not_show_retirement_home: \n    :param boolean? has_parking: \n    :param integer? max_price: \n    :param integer? min_price: \n    :param integer? max_bedroom: \n    :param string? furnished_type: Furnished type comma-separated\nEx: Furnished,PartFurnished\n\nFurnished,PartFurnished,Unfurnished\n    :param string? property_type: Property type comma-separated\nEx: Detached,SemiDetached\n\nDetached\nSemiDetached\nTerraced\nFlat\nBungalow\nLand\nParkHome\nStudentHalls\n    :param boolean? has_garden: \n    :param ENUM? added_to_site: \n    :param ENUM? type_of_let: \n    :param boolean? has_house_share: \n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_property_to_rent',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_property_for_sale_detail": {
        "api_name": "property_for_sale_detail",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_property_for_sale_detail(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string id: id from property-for-sale endpoint defaults to 126451514\n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_property_for_sale_detail',kwargs)\n        "
    },
    "rapi_uk_real_estate_rightmove_property_for_sale": {
        "api_name": "property_for_sale",
        "category": "Data",
        "tool_name": "uk_real_estate_rightmove",
        "code": "async def rapi_uk_real_estate_rightmove_property_for_sale(self,*args,**kwargs):\n    '''Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK\n    \n    \n\n    :param string location:  defaults to Chillwell Road Tram Stop\n    :param integer? page: \n    :param ENUM? sort_by: \n    :param string? search_radius: 0.0\n0.25\n0.5\n1.0\n3.0\n5.0\n10.0\n15.0\n20.0\n30.0\n40.0 defaults to 0.0\n    :param integer? min_price: \n    :param integer? min_bedroom: \n    :param string? property_type: Property type comma-separated \nEx:  Detached,SemiDetached,Flat\n\nDetached\nSemiDetached\nTerraced\nFlat\nBungalow\nLand\nParkHome\n    :param integer? max_price: \n    :param ENUM? added_to_site: \n    :param boolean? has_new_home: \n    :param boolean? has_auction_property: \n    :param boolean? do_not_show_new_home: \n    :param boolean? has_include_under_offer_sold_stc: \n    :param boolean? do_not_show_buying_schemes: \n    :param boolean? do_not_show_retirement_home: \n    :param boolean? has_retirement_home: \n    :param boolean? has_parking: \n    :param integer? max_bedroom: \n    :param boolean? has_garden: \n    :param boolean? has_buying_schemes: \n    :param string? keywords: Keywords comma-separated\nEx: pool, garden\n    '''\n    return await self._request_rapid_api('rapi_uk_real_estate_rightmove_property_for_sale',kwargs)\n        "
    },
    "rapi_hedonometer_timeseries": {
        "api_name": "timeseries",
        "category": "Data",
        "tool_name": "hedonometer",
        "code": "async def rapi_hedonometer_timeseries(self,*args,**kwargs):\n    '''With hedonometer.org we\u2019ve created an instrument that measures the happiness of large populations in real time.\r\nOur hedonometer is based on people\u2019s online expressions, capitalizing on data-rich social media, and we\u2019re measuring how people present themselves to the outside world. For our first version of hedonometer.org, we\u2019re using Twitter as a source but in principle we can expand to any data source in any language\n    \n    \n\n    :param string format:  defaults to json\n    :param string? limit:  defaults to 10\n    :param string? offset:  defaults to 2100\n    '''\n    return await self._request_rapid_api('rapi_hedonometer_timeseries',kwargs)\n        "
    },
    "rapi_whois_lookup_v2_whois_lookup": {
        "api_name": "whois_lookup",
        "category": "Data",
        "tool_name": "whois_lookup_v2",
        "code": "async def rapi_whois_lookup_v2_whois_lookup(self,*args,**kwargs):\n    '''Whois Lookup API in JSON\n    \n    \n\n    :param string domain:  defaults to facebook.com\n    '''\n    return await self._request_rapid_api('rapi_whois_lookup_v2_whois_lookup',kwargs)\n        "
    },
    "rapi_dicolink_get_definitions": {
        "api_name": "get_definitions",
        "category": "Data",
        "tool_name": "dicolink",
        "code": "async def rapi_dicolink_get_definitions(self,*args,**kwargs):\n    '''Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...\n    \n    \n\n    :param string mot: Set the word you want to search defaults to cheval\n    '''\n    return await self._request_rapid_api('rapi_dicolink_get_definitions',kwargs)\n        "
    },
    "rapi_dicolink_get_lexical_field": {
        "api_name": "get_lexical_field",
        "category": "Data",
        "tool_name": "dicolink",
        "code": "async def rapi_dicolink_get_lexical_field(self,*args,**kwargs):\n    '''Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...\n    \n    \n\n    :param string mot:  defaults to cheval\n    :param string? limite:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_dicolink_get_lexical_field',kwargs)\n        "
    },
    "rapi_dicolink_get_citations": {
        "api_name": "get_citations",
        "category": "Data",
        "tool_name": "dicolink",
        "code": "async def rapi_dicolink_get_citations(self,*args,**kwargs):\n    '''Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...\n    \n    \n\n    :param string mot: Set the word you want to search defaults to cheval\n    :param string? limite:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_dicolink_get_citations',kwargs)\n        "
    },
    "rapi_dicolink_get_expressions": {
        "api_name": "get_expressions",
        "category": "Data",
        "tool_name": "dicolink",
        "code": "async def rapi_dicolink_get_expressions(self,*args,**kwargs):\n    '''Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...\n    \n    \n\n    :param string mot:  defaults to cheval\n    :param string? limite:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_dicolink_get_expressions',kwargs)\n        "
    },
    "rapi_dicolink_get_synonyms": {
        "api_name": "get_synonyms",
        "category": "Data",
        "tool_name": "dicolink",
        "code": "async def rapi_dicolink_get_synonyms(self,*args,**kwargs):\n    '''Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...\n    \n    \n\n    :param string mot:  defaults to cheval\n    :param string? limite:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_dicolink_get_synonyms',kwargs)\n        "
    },
    "rapi_email_analysis": {
        "api_name": "analysis",
        "category": "Data",
        "tool_name": "email",
        "code": "async def rapi_email_analysis(self,*args,**kwargs):\n    '''Analyse the content of an Email Address and check if it is valid or not. Email API can recode the Email Address if any common error or misspelling is found. The API can also check for invalid or fake DNS. [This API is under maintenance and is not working properly] \n    \n    \n\n    :param string email: Email Address defaults to support@acme,com\n    '''\n    return await self._request_rapid_api('rapi_email_analysis',kwargs)\n        "
    },
    "rapi_addressr_addresses": {
        "api_name": "addresses",
        "category": "Data",
        "tool_name": "addressr",
        "code": "async def rapi_addressr_addresses(self,*args,**kwargs):\n    '''Australian Address Validation, Search and Autocomplete\n    \n    \n\n    :param string q: search string\n    '''\n    return await self._request_rapid_api('rapi_addressr_addresses',kwargs)\n        "
    },
    "rapi_joj_web_search_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "joj_web_search",
        "code": "async def rapi_joj_web_search_search(self,*args,**kwargs):\n    '''JoJ Web Search API. Search the world's information, including webpages, related keywords and more.\n    \n    \n\n    :param string query: Search query. You can use Google Search parameters.\n\ne.g. `adele site:youtube.com`\ne.g. `harry potter filetype:pdf`\ne.g. `inurl:store`\ne.g. `ronaldo -cristiano` defaults to Nike\n    :param string? related_keywords: Shows related keywords. Default: `false`\n\n*Entering `true`, increases API latency* defaults to true\n    :param integer? limit: Max results number. Max recommended value is `300`. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_joj_web_search_search',kwargs)\n        "
    },
    "rapi_crops_crops_list": {
        "api_name": "crops_list",
        "category": "Data",
        "tool_name": "crops",
        "code": "async def rapi_crops_crops_list(self,*args,**kwargs):\n    '''Plants for agricultural purposes in Spain: info about taxonomy, growing period, fruit type, categorization, and other. Total of 293 species. Being possible to filter by any of the characteristics mentioned above.\n    \n    \n\n    :param string? subcategory:  defaults to De invierno\n    :param string? family:  defaults to Poaceae\n    :param string? commonName:  defaults to Trigo\n    :param string? specieName:  defaults to Triticum\n    :param string? consistency:  defaults to herb\u00e1cea\n    :param string? cropCycle:  defaults to anual\n    :param string? fruitType:  defaults to cariopsis\n    :param string? category:  defaults to Cereales de grano\n    '''\n    return await self._request_rapid_api('rapi_crops_crops_list',kwargs)\n        "
    },
    "rapi_mzansi_loadshedding_api_town": {
        "api_name": "town",
        "category": "Data",
        "tool_name": "mzansi_loadshedding_api",
        "code": "async def rapi_mzansi_loadshedding_api_town(self,*args,**kwargs):\n    '''Get load sheding schedule for any area by simply searching  the town name. Very Easy to use.\n    \n    \n\n    :param string town:  defaults to kagiso\n    '''\n    return await self._request_rapid_api('rapi_mzansi_loadshedding_api_town',kwargs)\n        "
    },
    "rapi_country_location_api_country_location_api": {
        "api_name": "country_location_api",
        "category": "Data",
        "tool_name": "country_location_api",
        "code": "async def rapi_country_location_api_country_location_api(self,*args,**kwargs):\n    '''The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies.\n    \n    \n\n    :param string? country:  defaults to canada\n    '''\n    return await self._request_rapid_api('rapi_country_location_api_country_location_api',kwargs)\n        "
    },
    "rapi_feku_json_getbookbyid": {
        "api_name": "getbookbyid",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_getbookbyid(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_feku_json_getbookbyid',kwargs)\n        "
    },
    "rapi_feku_json_getbooks": {
        "api_name": "getbooks",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_getbooks(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string? sortDir:  defaults to asc\n    :param string? sortBy:  defaults to id\n    :param integer? pageSize:  defaults to 10\n    :param integer? pageNumber:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_feku_json_getbooks',kwargs)\n        "
    },
    "rapi_feku_json_getproductbyid": {
        "api_name": "getproductbyid",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_getproductbyid(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_feku_json_getproductbyid',kwargs)\n        "
    },
    "rapi_feku_json_getproducts": {
        "api_name": "getproducts",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_getproducts(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string? sortDir:  defaults to asc\n    :param integer? pageNumber:  defaults to 0\n    :param string? sortBy:  defaults to id\n    :param integer? pageSize:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_feku_json_getproducts',kwargs)\n        "
    },
    "rapi_feku_json_getuserbyid": {
        "api_name": "getuserbyid",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_getuserbyid(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_feku_json_getuserbyid',kwargs)\n        "
    },
    "rapi_feku_json_get_users": {
        "api_name": "get_users",
        "category": "Data",
        "tool_name": "feku_json",
        "code": "async def rapi_feku_json_get_users(self,*args,**kwargs):\n    '''Free Feku ( Fake ) API for Testing and Prototyping.\n    \n    \n\n    :param string? sortDir:  defaults to asc\n    :param integer? pageSize:  defaults to 10\n    :param integer? pageNumber:  defaults to 0\n    :param string? sortBy:  defaults to id\n    '''\n    return await self._request_rapid_api('rapi_feku_json_get_users',kwargs)\n        "
    },
    "rapi_domain_info_full_information": {
        "api_name": "full_information",
        "category": "Data",
        "tool_name": "domain_info",
        "code": "async def rapi_domain_info_full_information(self,*args,**kwargs):\n    '''This API returns informations on any domain online.\n    \n    \n\n    :param string domain: \n    '''\n    return await self._request_rapid_api('rapi_domain_info_full_information',kwargs)\n        "
    },
    "rapi_domain_info_check_domain_info": {
        "api_name": "check_domain_info",
        "category": "Data",
        "tool_name": "domain_info",
        "code": "async def rapi_domain_info_check_domain_info(self,*args,**kwargs):\n    '''This API returns informations on any domain online.\n    \n    \n\n    :param string domain: \n    '''\n    return await self._request_rapid_api('rapi_domain_info_check_domain_info',kwargs)\n        "
    },
    "rapi_cats_by_api_ninjas_v1_cats": {
        "api_name": "v1_cats",
        "category": "Data",
        "tool_name": "cats_by_api_ninjas",
        "code": "async def rapi_cats_by_api_ninjas_v1_cats(self,*args,**kwargs):\n    '''Get detailed facts for every cat breed. See more info at https://api-ninjas.com/api/cats.\n    \n    \n\n    :param integer? max_life_expectancy: maximum life expectancy in years.\n    :param integer? playfulness: How playful the cat is. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates serious and stern and 5 indicates maximum playfulness.\n    :param integer? grooming: How much work is required to properly groom the cat. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates maximum grooming effort and 5 indicates minimum grooming effort.\n    :param integer? min_life_expectancy: minimum life expectancy in years.\n    :param integer? max_weight: maximum weight in pounds.\n    :param integer? family_friendly: How affectionate the cat is to family. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates minimal affection and 5 indicates maximum affection.\n    :param integer? min_weight: minimum weight in pounds.\n    :param integer? offset: number of results to offset for pagination.\n    :param integer? children_friendly: How well the cat gets along with children. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates the cat does not get along well with kids and 5 indicates the cat is very kid-friendly.\n    :param integer? other_pets_friendly: How well the cat gets along with other pets in the household (for example, dogs). Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates the cat isn't very friendly to other pets and 5 indicates the cat gets along very well with other pets.\n    :param integer? shedding: How much hair the cat sheds. Possible values: 0, 1, 2, 3, 4, 5, where 0 indicates no shedding and 5 indicates maximum shedding.\n    :param string? name: the name of cat breed. defaults to aegean\n    '''\n    return await self._request_rapid_api('rapi_cats_by_api_ninjas_v1_cats',kwargs)\n        "
    },
    "rapi_free_stopwords_stopwords": {
        "api_name": "stopwords",
        "category": "Data",
        "tool_name": "free_stopwords",
        "code": "async def rapi_free_stopwords_stopwords(self,*args,**kwargs):\n    '''StopwordAPI.com offers an easy solution for you to retrive words that you want to remove from a string. This filtering process is common in NLP (Natural Language Processing) algoritms and whenever you want to remove words from user input in your software application. StopwordAPI.com has ordered the words into useful categories making it easy for you to only download the words you need - eventhough you do not know the language.\n    \n    \n\n    :param string? langs: Comma seperated list of language isocodes\n    :param boolean? details: Boolean (1 or 0) indication weather you want details about each word defaults to 0\n    :param string? categories: Comma seperated list of categories. Use /categories to get ID's\n    '''\n    return await self._request_rapid_api('rapi_free_stopwords_stopwords',kwargs)\n        "
    },
    "rapi_free_stopwords_languages": {
        "api_name": "languages",
        "category": "Data",
        "tool_name": "free_stopwords",
        "code": "async def rapi_free_stopwords_languages(self,*args,**kwargs):\n    '''StopwordAPI.com offers an easy solution for you to retrive words that you want to remove from a string. This filtering process is common in NLP (Natural Language Processing) algoritms and whenever you want to remove words from user input in your software application. StopwordAPI.com has ordered the words into useful categories making it easy for you to only download the words you need - eventhough you do not know the language.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_free_stopwords_languages',kwargs)\n        "
    },
    "rapi_dns_lookup_nslookup": {
        "api_name": "nslookup",
        "category": "Data",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_nslookup(self,*args,**kwargs):\n    '''NsLookup queries the specified DNS server and retrieves records associated with the domain name you provided.\n    \n    \n\n    :param string domain:  defaults to google.com\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_nslookup',kwargs)\n        "
    },
    "rapi_sign_hexagram_get_sign_hexagram": {
        "api_name": "get_sign_hexagram",
        "category": "Data",
        "tool_name": "sign_hexagram",
        "code": "async def rapi_sign_hexagram_get_sign_hexagram(self,*args,**kwargs):\n    '''\u63d0\u4f9b\u7075\u7b7e\u5728\u7ebf\u62bd\u7b7e\u89e3\u7b7e\u3001\u7075\u7b7e\u795e\u5366\u5360\u535c\u3002\n    \n    \n\n    :param ENUM category: Category ID\n    '''\n    return await self._request_rapid_api('rapi_sign_hexagram_get_sign_hexagram',kwargs)\n        "
    },
    "rapi_moodring_quizzes": {
        "api_name": "quizzes",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_quizzes(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moodring_quizzes',kwargs)\n        "
    },
    "rapi_moodring_quiz": {
        "api_name": "quiz",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_quiz(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    :param string quizId:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_moodring_quiz',kwargs)\n        "
    },
    "rapi_moodring_users": {
        "api_name": "users",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_users(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moodring_users',kwargs)\n        "
    },
    "rapi_moodring_user": {
        "api_name": "user",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_user(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    :param string userId:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_moodring_user',kwargs)\n        "
    },
    "rapi_moodring_responses": {
        "api_name": "responses",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_responses(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moodring_responses',kwargs)\n        "
    },
    "rapi_moodring_responses_from_a_question": {
        "api_name": "responses_from_a_question",
        "category": "Data",
        "tool_name": "moodring",
        "code": "async def rapi_moodring_responses_from_a_question(self,*args,**kwargs):\n    '''Get the mood from Storybox's MoodRing\n    \n    \n\n    :param string questionId:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_moodring_responses_from_a_question',kwargs)\n        "
    },
    "rapi_top_nft_collections_trending_with_pagination": {
        "api_name": "trending_with_pagination",
        "category": "Data",
        "tool_name": "top_nft_collections",
        "code": "async def rapi_top_nft_collections_trending_with_pagination(self,*args,**kwargs):\n    '''Provides up-to-date information on the top NFT collections across various networks, including Ethereum, BNB Chain, Polygon, Arbitrum, Optimism, and Solana.\n    \n    \n\n    :param integer? limit:  defaults to 50\n    :param integer? offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_top_nft_collections_trending_with_pagination',kwargs)\n        "
    },
    "rapi_top_nft_collections_trending": {
        "api_name": "trending",
        "category": "Data",
        "tool_name": "top_nft_collections",
        "code": "async def rapi_top_nft_collections_trending(self,*args,**kwargs):\n    '''Provides up-to-date information on the top NFT collections across various networks, including Ethereum, BNB Chain, Polygon, Arbitrum, Optimism, and Solana.\n    \n    \n\n    :param string? time:  defaults to ONE_HOUR\n    :param string? chain: \n    :param string? sortBy:  defaults to ONE_HOUR_VOLUME\n    :param integer? count:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_top_nft_collections_trending',kwargs)\n        "
    },
    "rapi_top_nft_collections_top_ranking": {
        "api_name": "top_ranking",
        "category": "Data",
        "tool_name": "top_nft_collections",
        "code": "async def rapi_top_nft_collections_top_ranking(self,*args,**kwargs):\n    '''Provides up-to-date information on the top NFT collections across various networks, including Ethereum, BNB Chain, Polygon, Arbitrum, Optimism, and Solana.\n    \n    \n\n    :param string? sortBy:  defaults to ONE_HOUR_VOLUME\n    :param string? time:  defaults to ONE_HOUR\n    :param string? chain: \n    :param integer? count:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_top_nft_collections_top_ranking',kwargs)\n        "
    },
    "rapi_blur_retrieve_active_loans_offers": {
        "api_name": "retrieve_active_loans_offers",
        "category": "Data",
        "tool_name": "blur",
        "code": "async def rapi_blur_retrieve_active_loans_offers(self,*args,**kwargs):\n    '''Unofficial API for blur.io - 1,000+  requests/min\n\nSimple & high performance Blur API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Looksrare / x2y2 API as well\nhttps://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & fin...\n    \n    \n\n    :param string collection:  defaults to 0xed5af388653567af2f388e6224dc7c4b3241c544\n    '''\n    return await self._request_rapid_api('rapi_blur_retrieve_active_loans_offers',kwargs)\n        "
    },
    "rapi_blur_retrieve_rewards": {
        "api_name": "retrieve_rewards",
        "category": "Data",
        "tool_name": "blur",
        "code": "async def rapi_blur_retrieve_rewards(self,*args,**kwargs):\n    '''Unofficial API for blur.io - 1,000+  requests/min\n\nSimple & high performance Blur API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Looksrare / x2y2 API as well\nhttps://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & fin...\n    \n    \n\n    :param string slug:  defaults to nakamigos\n    '''\n    return await self._request_rapid_api('rapi_blur_retrieve_rewards',kwargs)\n        "
    },
    "rapi_gis_engine_get_districts": {
        "api_name": "get_districts",
        "category": "Data",
        "tool_name": "gis_engine",
        "code": "async def rapi_gis_engine_get_districts(self,*args,**kwargs):\n    '''Provide regions, cities and districts per countries\n    \n    \n\n    :param string city_num:  defaults to 151245\n    :param string region_code:  defaults to pam\n    :param string country_code:  defaults to ph\n    '''\n    return await self._request_rapid_api('rapi_gis_engine_get_districts',kwargs)\n        "
    },
    "rapi_gis_engine_get_region_details": {
        "api_name": "get_region_details",
        "category": "Data",
        "tool_name": "gis_engine",
        "code": "async def rapi_gis_engine_get_region_details(self,*args,**kwargs):\n    '''Provide regions, cities and districts per countries\n    \n    \n\n    :param string region_code:  defaults to abr\n    :param string country_code:  defaults to ph\n    '''\n    return await self._request_rapid_api('rapi_gis_engine_get_region_details',kwargs)\n        "
    },
    "rapi_gis_engine_get_regions": {
        "api_name": "get_regions",
        "category": "Data",
        "tool_name": "gis_engine",
        "code": "async def rapi_gis_engine_get_regions(self,*args,**kwargs):\n    '''Provide regions, cities and districts per countries\n    \n    \n\n    :param string country_code:  defaults to ph\n    '''\n    return await self._request_rapid_api('rapi_gis_engine_get_regions',kwargs)\n        "
    },
    "rapi_gis_engine_get_country_details": {
        "api_name": "get_country_details",
        "category": "Data",
        "tool_name": "gis_engine",
        "code": "async def rapi_gis_engine_get_country_details(self,*args,**kwargs):\n    '''Provide regions, cities and districts per countries\n    \n    \n\n    :param string country_code:  defaults to ph\n    '''\n    return await self._request_rapid_api('rapi_gis_engine_get_country_details',kwargs)\n        "
    },
    "rapi_gis_engine_get_all_countries": {
        "api_name": "get_all_countries",
        "category": "Data",
        "tool_name": "gis_engine",
        "code": "async def rapi_gis_engine_get_all_countries(self,*args,**kwargs):\n    '''Provide regions, cities and districts per countries\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gis_engine_get_all_countries',kwargs)\n        "
    },
    "rapi_bigbox_product": {
        "api_name": "product",
        "category": "Data",
        "tool_name": "bigbox",
        "code": "async def rapi_bigbox_product(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type:  defaults to product\n    :param string? gtin: The GTIN/ISBN/UPC code to look up a matching product on Home Depot for. If the gtin parameter is supplied then the item_id parameter is ignored. GTIN-based requests work by looking up the GTIN/ISBN/UPC on Home Depot first, then retrieving the product details for the first matching item_id. defaults to 317061059\n    :param string? url: The Home Depot product-page URL to retrieve product details from.\n\nUse either `item_id` OR `url`. \n\nIf the item_id is included, do **NOT** include the URL\n\n**Note: If the url parameter is supplied then the item_id and gtin parameters are ignored (the url overrides other parameters).**\n    :param string? output: Determines the format in which results are returned: `JSON`, `HTML` or `CSV`\n\nJSON is the default \n    :param integer? item_id: The Home Depot Item ID to retrieve product details for.\n    '''\n    return await self._request_rapid_api('rapi_bigbox_product',kwargs)\n        "
    },
    "rapi_bigbox_questions": {
        "api_name": "questions",
        "category": "Data",
        "tool_name": "bigbox",
        "code": "async def rapi_bigbox_questions(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type:  defaults to questions\n    :param string? output: Determines the format in which results are returned: `JSON`, `HTML` or `CSV`\n\nJSON is the default \n    :param string? page: The current page of questions to retrieve. Inspect the pagination.total_pages property in the Questions results to see how many pages of questions are available.\n\n**Note the maximum number of questions per page is 10 (this is a Home Depot limit).**\n\nupdate value of num to get additional pages\n    :param string? sort_by: Determines the sort order of questions to return. Valid values are:\n\n- newest_to_oldest\n- oldest_to_newest\n- most_answered\n- most_helpful\n- featured_questions\n- can_you_answer\n- filter first [questions with no answer yet]\n    :param string? gtin: The GTIN/ISBN/UPC code to look up a matching product on Home Depot for to retrieve questions for. If the gtin parameter is supplied then the `item_id `parameter is ignored. GTIN-based requests work by looking up the GTIN/ISBN/UPC on Home Depot first, then retrieving the questions for the first matching `item_id`\n    :param integer? item_id: The Home Depot Item ID to retrieve Questions for.\n\n**Note: If the item_id parameter is supplied then the url parameter is ignored.** defaults to 317061059\n    :param string? url: The Home Depot questions-page URL to retrieve Questions from.\n    :param string? search_term: A search term to use to search questions.\n    '''\n    return await self._request_rapid_api('rapi_bigbox_questions',kwargs)\n        "
    },
    "rapi_bigbox_category": {
        "api_name": "category",
        "category": "Data",
        "tool_name": "bigbox",
        "code": "async def rapi_bigbox_category(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string category_id: A category ID to retrieve results from. You may supply any arbitary value in the category_id parameter however we recommend using a category ID returned from the Categories API as these are known-good category IDs from Home Depot. defaults to N-5yc1vZbzb3\n    :param string type:  defaults to category\n    :param string? sort_by: Determines how the results are sorted. Valid values are:\n\n- best_seller\n- most_popular\n- price_high_to_low\n- price_low_to_high\n- highest_rating\n    :param string? output: Determines the format in which results are returned: `JSON`, `HTML` or `CSV`\n\nJSON is the default \n    :param string? max_price: \nDetermines the maximum price of results to return, expressed in dollars and cents (i.e. `min_price=39.99` for $39.99).\n    :param string? min_price: \nDetermines the maximum price of results to return, expressed in dollars and cents (i.e. `min_price=39.99` for $39.99).\n    :param string? page: The current page of results to retrieve. Inspect the pagination results property for details on the number of pages available.\n\nupdate value of num to get additional pages defaults to 2\n    :param string? url: The Home Depot category results page to retrieve results from.\n\n**Note: If the url parameter is supplied then all other parameters are ignored as they are overriden be those specified in the url parameter.**\n    '''\n    return await self._request_rapid_api('rapi_bigbox_category',kwargs)\n        "
    },
    "rapi_bigbox_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "bigbox",
        "code": "async def rapi_bigbox_search(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string search_term: A search term to use to search for Home Depot items.\nEither the search_term or url parameter must be supplied. defaults to lawn mower\n    :param string type:  defaults to search\n    :param string? output: Determines the format in which results are returned: `JSON`, `HTML` or `CSV`\n\nJSON is the default \n    :param string? max_price: Determines the maximum price of results to return, expressed in dollars and cents (i.e. `max_price=39.99` for $39.99). defaults to max_price=500\n    :param string? sort_by: Determines how the results are sorted. Valid values are:\n\n- best_seller\n- most_popular\n- price_high_to_low\n- price_low_to_high\n- highest_rating\n    :param string? url: The Home Depot search results page to retrieve results from.\n\n**Note: If the url parameter is supplied then all other parameters are ignored as they are overriden be those specified in the url parameter**\n    :param integer? page: The current page of results to retrieve. Inspect the pagination results property for details on the number of pages available.\n\nupdate value of num to get additional pages\n    :param string? min_price: Determines the minimum price of results to return, expressed in dollars and cents (i.e. `min_price=2.99` for $2.99).\n    '''\n    return await self._request_rapid_api('rapi_bigbox_search',kwargs)\n        "
    },
    "rapi_ev_charging_stations_get_stations_within_1_km": {
        "api_name": "get_stations_within_1_km",
        "category": "Data",
        "tool_name": "ev_charging_stations",
        "code": "async def rapi_ev_charging_stations_get_stations_within_1_km(self,*args,**kwargs):\n    '''Electric vehicle charging stations full information.\n    \n    \n\n    :param ENUM region: us=United States, ca=Canada, uk=United Kingdom, nz=New Zealand, hk=Hong Kong\n    :param integer latitude:  defaults to 40.733\n    :param integer longitude:  defaults to -74.202\n    '''\n    return await self._request_rapid_api('rapi_ev_charging_stations_get_stations_within_1_km',kwargs)\n        "
    },
    "rapi_api_plaque_immatriculation_siv_get_vehicule_info2": {
        "api_name": "get_vehicule_info2",
        "category": "Data",
        "tool_name": "api_plaque_immatriculation_siv",
        "code": "async def rapi_api_plaque_immatriculation_siv_get_vehicule_info2(self,*args,**kwargs):\n    '''Immatriculation API (France) \n\nNotre service Web permettra \u00e0 votre site Internet ou \u00e0 vos applications d\u2019identifier les motos et les scooters en utilisant leur plaque d\u2019immatriculation. Cette m\u00e9thode est largement utilis\u00e9e par la plupart des boutiques en ligne de pi\u00e8ces d\u00e9tach\u00e9es pour identifier les v\u00e9hicules de leurs clients, afin d\u2019\u00e9viter les erreurs d\u2019identification, les insatisfactions clients et les retours de marchandise.\n\n\u00cates-vous \u00e0 la recherche de plaques d\u2019immatriculation fran\u00e7aises...\n    \n    \n\n    :param string? immatriculation:  defaults to AA-123-BC\n    :param string? token:  defaults to TokenDemoRapidapi\n    :param string? host_name:  defaults to https://apiplaqueimmatriculation.com\n    '''\n    return await self._request_rapid_api('rapi_api_plaque_immatriculation_siv_get_vehicule_info2',kwargs)\n        "
    },
    "rapi_api_plaque_immatriculation_siv_get_vehicule_info": {
        "api_name": "get_vehicule_info",
        "category": "Data",
        "tool_name": "api_plaque_immatriculation_siv",
        "code": "async def rapi_api_plaque_immatriculation_siv_get_vehicule_info(self,*args,**kwargs):\n    '''Immatriculation API (France) \n\nNotre service Web permettra \u00e0 votre site Internet ou \u00e0 vos applications d\u2019identifier les motos et les scooters en utilisant leur plaque d\u2019immatriculation. Cette m\u00e9thode est largement utilis\u00e9e par la plupart des boutiques en ligne de pi\u00e8ces d\u00e9tach\u00e9es pour identifier les v\u00e9hicules de leurs clients, afin d\u2019\u00e9viter les erreurs d\u2019identification, les insatisfactions clients et les retours de marchandise.\n\n\u00cates-vous \u00e0 la recherche de plaques d\u2019immatriculation fran\u00e7aises...\n    \n    \n\n    :param string? token:  defaults to TokenDemoRapidapi\n    :param string? host_name:  defaults to https://apiplaqueimmatriculation.com\n    :param string? immatriculation:  defaults to AA-123-BC\n    '''\n    return await self._request_rapid_api('rapi_api_plaque_immatriculation_siv_get_vehicule_info',kwargs)\n        "
    },
    "rapi_unofficial_efteling_api_retrieve_the_latest_blogs": {
        "api_name": "retrieve_the_latest_blogs",
        "category": "Data",
        "tool_name": "unofficial_efteling_api",
        "code": "async def rapi_unofficial_efteling_api_retrieve_the_latest_blogs(self,*args,**kwargs):\n    '''An Unofficial Efteling API is a software tool that allows developers to access real-time queue times and news from the Efteling amusement park, located in the Netherlands. The API provides a simple and easy-to-use interface for retrieving data, which can be integrated into third-party applications, websites, or services. With this API, users can stay up-to-date with the latest information on ride wait times and park news, making it easier to plan their visit to the park. This API is not offic...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unofficial_efteling_api_retrieve_the_latest_blogs',kwargs)\n        "
    },
    "rapi_unofficial_efteling_api_retrieve_all_queue_times": {
        "api_name": "retrieve_all_queue_times",
        "category": "Data",
        "tool_name": "unofficial_efteling_api",
        "code": "async def rapi_unofficial_efteling_api_retrieve_all_queue_times(self,*args,**kwargs):\n    '''An Unofficial Efteling API is a software tool that allows developers to access real-time queue times and news from the Efteling amusement park, located in the Netherlands. The API provides a simple and easy-to-use interface for retrieving data, which can be integrated into third-party applications, websites, or services. With this API, users can stay up-to-date with the latest information on ride wait times and park news, making it easier to plan their visit to the park. This API is not offic...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unofficial_efteling_api_retrieve_all_queue_times',kwargs)\n        "
    },
    "rapi_metaapi_mindfulness_quotes_getmindfulnessquote": {
        "api_name": "getmindfulnessquote",
        "category": "Data",
        "tool_name": "metaapi_mindfulness_quotes",
        "code": "async def rapi_metaapi_mindfulness_quotes_getmindfulnessquote(self,*args,**kwargs):\n    '''Get a random quote about mindfulness from a list of 100 quotes.\n    \n    \n\n    :param string? author: \n    :param string? category: \n    '''\n    return await self._request_rapid_api('rapi_metaapi_mindfulness_quotes_getmindfulnessquote',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_list_playlist_videos": {
        "api_name": "list_playlist_videos",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_list_playlist_videos(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `playlistId` will be ignored.\n    :param string? playlistId:  defaults to PLeCdlPO-XhWFzEVynMsmosfdRsIZXhZi0\n    :param string? lang: Language code (ISO-639) for localized results. Default to be `en-US`. Unsupported code will **fallback** to `en-US`.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_list_playlist_videos',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_search_for_channels": {
        "api_name": "search_for_channels",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_search_for_channels(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `keyword` and `sortBy` will be ignored.\n    :param ENUM? sortBy: Sorting metrics. Defaults to `relevance`.\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param string? keyword: Keyword for search. defaults to Rick Astley\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_search_for_channels',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_search_for_playlists": {
        "api_name": "search_for_playlists",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_search_for_playlists(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `keyword` and `sortBy` will be ignored.\n    :param string? keyword: Keyword for search. defaults to Rick Astley\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param ENUM? sortBy: Sorting metrics. Defaults to `relevance`.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_search_for_playlists',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_search_for_videos_movies": {
        "api_name": "search_for_videos_movies",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_search_for_videos_movies(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param boolean? movie: Search for movies only. Defaults to `false`.\n    :param ENUM? duration: * `all` - **No duration limit** (default value)\n* `short` - **Under 4 minutes**\n* `medium` - **4 - 20 minutes**\n* `long` - **Over 20 minutes**\n    :param ENUM? sortBy: Sorting metrics. Defaults to `relevance`.\n    :param string? keyword: Keyword for search. defaults to Rick Astley\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param ENUM? uploadDate: Upload date. Defaults to `all`.\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `keyword`, `movie`, `uploadDate`, `duration` and `sortBy` will be ignored.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_search_for_videos_movies',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_list_autocomplete_suggestions": {
        "api_name": "list_autocomplete_suggestions",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_list_autocomplete_suggestions(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string keyword: Keyword for search. defaults to musi\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`.\n    :param string? region: Region code (ISO 3166 alpha-2) for localized results. Defaults to `US`.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_list_autocomplete_suggestions',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_list_related_videos_and_playlists": {
        "api_name": "list_related_videos_and_playlists",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_list_related_videos_and_playlists(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string? videoId: YouTube video id. The value of `v` in YouTube player URL query parameters. defaults to dQw4w9WgXcQ\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `videoId` will be ignored.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_list_related_videos_and_playlists',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_get_video_details": {
        "api_name": "get_video_details",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_get_video_details(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param string videoId: YouTube video id. The value of `v` in YouTube player URL query parameters. defaults to G33j5Qi4rE8\n    :param boolean? related: Whether to get information of related videos and playlists. Defaults to `true`.\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param boolean? audios: Whether to get audio URLs. Defaults to `true`.\n    :param boolean? videos: Whether to get video URLs. Defaults to `true`.\n    :param boolean? subtitles: Whether to get subtitle URLs. Defaults to `true`.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_get_video_details',kwargs)\n        "
    },
    "rapi_youtube_media_downloader_list_video_comments": {
        "api_name": "list_video_comments",
        "category": "Data",
        "tool_name": "youtube_media_downloader",
        "code": "async def rapi_youtube_media_downloader_list_video_comments(self,*args,**kwargs):\n    '''A scraper API for YouTube search and download. Get videos, subtitles, comments without age or region limits (proxy URL supported).\n    \n    \n\n    :param ENUM? sortBy: Sorting metrics. Defaults to `top`.\n    :param string? lang: Language code (ISO-639) for localized results. Defaults to `en-US`. Unsupported code will **fallback** to `en-US`.\n    :param string? videoId: YouTube video id. The value of `v` in YouTube player URL query parameters. defaults to dQw4w9WgXcQ\n    :param string? nextToken: A string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `videoId` and `sortBy` will be ignored.\n    '''\n    return await self._request_rapid_api('rapi_youtube_media_downloader_list_video_comments',kwargs)\n        "
    },
    "rapi_ios_store_get_similar_apps": {
        "api_name": "get_similar_apps",
        "category": "Data",
        "tool_name": "ios_store",
        "code": "async def rapi_ios_store_get_similar_apps(self,*args,**kwargs):\n    '''Get API access to iOS Store data\n    \n    \n\n    :param string id:  defaults to 880047117\n    '''\n    return await self._request_rapid_api('rapi_ios_store_get_similar_apps',kwargs)\n        "
    },
    "rapi_ios_store_get_ios_app": {
        "api_name": "get_ios_app",
        "category": "Data",
        "tool_name": "ios_store",
        "code": "async def rapi_ios_store_get_ios_app(self,*args,**kwargs):\n    '''Get API access to iOS Store data\n    \n    \n\n    :param string id:  defaults to 880047117\n    '''\n    return await self._request_rapid_api('rapi_ios_store_get_ios_app',kwargs)\n        "
    },
    "rapi_ios_store_search": {
        "api_name": "search",
        "category": "Data",
        "tool_name": "ios_store",
        "code": "async def rapi_ios_store_search(self,*args,**kwargs):\n    '''Get API access to iOS Store data\n    \n    \n\n    :param string country:  defaults to us\n    :param string search:  defaults to angry birds\n    :param string page:  defaults to 1\n    :param string limit:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_ios_store_search',kwargs)\n        "
    },
    "rapi_indian_names_get_names": {
        "api_name": "get_names",
        "category": "Data",
        "tool_name": "indian_names",
        "code": "async def rapi_indian_names_get_names(self,*args,**kwargs):\n    '''API for fetching Indian Names\n    \n    \n\n    :param boolean? first:  defaults to true\n    :param string? gender:  defaults to male\n    :param boolean? last:  defaults to true\n    :param integer? number:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_indian_names_get_names',kwargs)\n        "
    },
    "rapi_fastapi_project_interests": {
        "api_name": "interests",
        "category": "Data",
        "tool_name": "fastapi_project",
        "code": "async def rapi_fastapi_project_interests(self,*args,**kwargs):\n    '''Python FastAPI Test Project\n    \n    \n\n    :param string? lang:  defaults to ta\n    '''\n    return await self._request_rapid_api('rapi_fastapi_project_interests',kwargs)\n        "
    },
    "rapi_anime_db_get_all": {
        "api_name": "get_all",
        "category": "Movies",
        "tool_name": "anime_db",
        "code": "async def rapi_anime_db_get_all(self,*args,**kwargs):\n    '''Complete anime data. Ranking, synopsis, genre, search by title. Over 20k data updated everyday\n    \n    \n\n    :param string page:  defaults to 1\n    :param string size:  defaults to 10\n    :param string? types: Anime type, separated by comma\n    :param string? genres: genres separated by comma defaults to Fantasy,Drama\n    :param string? sortBy: ranking or title defaults to ranking\n    :param string? sortOrder: asc or desc defaults to asc\n    :param string? search: Search by title or alternative titles. Search will ignore sort defaults to Fullmetal\n    '''\n    return await self._request_rapid_api('rapi_anime_db_get_all',kwargs)\n        "
    },
    "rapi_anime_db_get_by_id": {
        "api_name": "get_by_id",
        "category": "Movies",
        "tool_name": "anime_db",
        "code": "async def rapi_anime_db_get_by_id(self,*args,**kwargs):\n    '''Complete anime data. Ranking, synopsis, genre, search by title. Over 20k data updated everyday\n    \n    \n\n    :param integer id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_anime_db_get_by_id',kwargs)\n        "
    },
    "rapi_anime_db_get_genres": {
        "api_name": "get_genres",
        "category": "Movies",
        "tool_name": "anime_db",
        "code": "async def rapi_anime_db_get_genres(self,*args,**kwargs):\n    '''Complete anime data. Ranking, synopsis, genre, search by title. Over 20k data updated everyday\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_anime_db_get_genres',kwargs)\n        "
    },
    "rapi_anime_db_get_one_anime_by_ranking": {
        "api_name": "get_one_anime_by_ranking",
        "category": "Movies",
        "tool_name": "anime_db",
        "code": "async def rapi_anime_db_get_one_anime_by_ranking(self,*args,**kwargs):\n    '''Complete anime data. Ranking, synopsis, genre, search by title. Over 20k data updated everyday\n    \n    \n\n    :param integer rank:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_anime_db_get_one_anime_by_ranking',kwargs)\n        "
    },
    "rapi_similar_movies_get_id": {
        "api_name": "get_id",
        "category": "Movies",
        "tool_name": "similar_movies",
        "code": "async def rapi_similar_movies_get_id(self,*args,**kwargs):\n    '''Find similar movies and series\n    \n    \n\n    :param string q:  defaults to titanic\n    '''\n    return await self._request_rapid_api('rapi_similar_movies_get_id',kwargs)\n        "
    },
    "rapi_netflix_v2_season_episodes": {
        "api_name": "season_episodes",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_season_episodes(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string ids: Season IDs (you can separate with commas) defaults to 80077209,80117715\n    :param string? lang:  defaults to en\n    :param integer? limit: Episode Limit defaults to 25\n    :param integer? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_season_episodes',kwargs)\n        "
    },
    "rapi_netflix_v2_title_trailers": {
        "api_name": "title_trailers",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_title_trailers(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string id: Title ID defaults to 80057281\n    :param string? lang:  defaults to en\n    :param integer? limit: Trailer Limit defaults to 25\n    :param integer? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_title_trailers',kwargs)\n        "
    },
    "rapi_netflix_v2_title_similars": {
        "api_name": "title_similars",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_title_similars(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string id: Title ID defaults to 80057281\n    :param integer? limit: Title Limit defaults to 25\n    :param string? lang:  defaults to en\n    :param integer? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_title_similars',kwargs)\n        "
    },
    "rapi_netflix_v2_title_details": {
        "api_name": "title_details",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_title_details(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string ids: Title IDs (you can separate with commas) defaults to 80057281\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_title_details',kwargs)\n        "
    },
    "rapi_netflix_v2_search": {
        "api_name": "search",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_search(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    :param string query: Search Query defaults to stranger\n    :param string? lang:  defaults to en\n    :param integer? limit_titles: Title Limit defaults to 50\n    :param integer? limit_suggestions: Suggestion Limit defaults to 20\n    :param integer? offset: Offset defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_search',kwargs)\n        "
    },
    "rapi_netflix_v2_languages": {
        "api_name": "languages",
        "category": "Movies",
        "tool_name": "netflix_v2",
        "code": "async def rapi_netflix_v2_languages(self,*args,**kwargs):\n    '''Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_netflix_v2_languages',kwargs)\n        "
    },
    "rapi_films_searchinventory": {
        "api_name": "searchinventory",
        "category": "Movies",
        "tool_name": "films",
        "code": "async def rapi_films_searchinventory(self,*args,**kwargs):\n    '''Films\n    \n    \n\n    :param string? searchString: pass an optional search string for looking up inventory defaults to string\n    :param integer? limit: maximum number of records to return\n    :param integer? skip: number of records to skip for pagination\n    '''\n    return await self._request_rapid_api('rapi_films_searchinventory',kwargs)\n        "
    },
    "rapi_streaming_availability_search_basic_free": {
        "api_name": "search_basic_free",
        "category": "Movies",
        "tool_name": "streaming_availability",
        "code": "async def rapi_streaming_availability_search_basic_free(self,*args,**kwargs):\n    '''Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries\n    \n    \n\n    :param string services: A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\n\nSyntax of the values supplied in the list can be as the followings:\n\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\n\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\n\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\n\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\n\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\n\nSome sample list values:\n\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\n\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription. defaults to netflix,prime.buy,hulu.addon.hbo,peacock.free\n    :param string country: 2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries. defaults to us\n    :param string? cursor: Cursor is used for pagination. After each request, the response includes a `hasMore` boolean field to tell if there are more results that did not fit the returned list size. If it is set as true, to get the rest of the result set, send a new request (with the same parameters for other fields such as show_type, services etc.), and set the cursor parameter as the `nextCursor` value of the previous request response. Do not forget to escape the cursor value before putting it into the query as it might contain characters such as `?`, `&`.\n\nThe first request naturally does not require a `cursor` parameter.\n    :param string? show_original_language: A 2 letter ISO 639-1 language code to only search within the shows whose original language matches with the provided language. defaults to en\n    :param string? genre: A genre id to only search within the shows in that genre. See `/v2/genres` endpoint to see available genres and ids. defaults to 18\n    :param string? keyword: A keyword to only search within the shows have that keyword in their overview or title. defaults to zombie\n    :param string? output_language: 2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported. defaults to en\n    :param string? show_type: Type of shows to search in. Accepted values are `movie`, `series` or `all`. The default value is `all`. defaults to movie\n    '''\n    return await self._request_rapid_api('rapi_streaming_availability_search_basic_free',kwargs)\n        "
    },
    "rapi_streaming_availability_services_free": {
        "api_name": "services_free",
        "category": "Movies",
        "tool_name": "streaming_availability",
        "code": "async def rapi_streaming_availability_services_free(self,*args,**kwargs):\n    '''Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_streaming_availability_services_free',kwargs)\n        "
    },
    "rapi_streaming_availability_get_basic_free": {
        "api_name": "get_basic_free",
        "category": "Movies",
        "tool_name": "streaming_availability",
        "code": "async def rapi_streaming_availability_get_basic_free(self,*args,**kwargs):\n    '''Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries\n    \n    \n\n    :param string country:  defaults to us\n    :param string? imdb_id:  defaults to tt1877830\n    :param string? output_language: 2 letter iso code of the output language. Default is `en`. See the about page to see the list of languages supported. defaults to en\n    :param string? tmdb_id: \n    '''\n    return await self._request_rapid_api('rapi_streaming_availability_get_basic_free',kwargs)\n        "
    },
    "rapi_streaming_availability_genres_free": {
        "api_name": "genres_free",
        "category": "Movies",
        "tool_name": "streaming_availability",
        "code": "async def rapi_streaming_availability_genres_free(self,*args,**kwargs):\n    '''Netflix, Prime, Disney, HBO, Hulu and many others. Lookup which shows are available on streaming services across 60 countries\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_streaming_availability_genres_free',kwargs)\n        "
    },
    "rapi_star_wars_characters_get_all_characters": {
        "api_name": "get_all_characters",
        "category": "Movies",
        "tool_name": "star_wars_characters",
        "code": "async def rapi_star_wars_characters_get_all_characters(self,*args,**kwargs):\n    '''list of star wars characters + details\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_star_wars_characters_get_all_characters',kwargs)\n        "
    },
    "rapi_advanced_movie_search_genre_list": {
        "api_name": "genre_list",
        "category": "Movies",
        "tool_name": "advanced_movie_search",
        "code": "async def rapi_advanced_movie_search_genre_list(self,*args,**kwargs):\n    '''Search for movies via advanced queries like genre, name, etc. And get all their details\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_advanced_movie_search_genre_list',kwargs)\n        "
    },
    "rapi_advanced_movie_search_get_detailed_response": {
        "api_name": "get_detailed_response",
        "category": "Movies",
        "tool_name": "advanced_movie_search",
        "code": "async def rapi_advanced_movie_search_get_detailed_response(self,*args,**kwargs):\n    '''Search for movies via advanced queries like genre, name, etc. And get all their details\n    \n    \n\n    :param integer movie_id:  defaults to 399566\n    '''\n    return await self._request_rapid_api('rapi_advanced_movie_search_get_detailed_response',kwargs)\n        "
    },
    "rapi_ott_details_advanced_search": {
        "api_name": "advanced_search",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_advanced_search(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param integer? start_year: Enter any year between 1970 to 2020 to get results. defaults to 1970\n    :param integer? page:  defaults to 1\n    :param integer? max_imdb:  defaults to 7.8\n    :param string? type: Enter type 'movie' or 'show' defaults to movie\n    :param string? sort: Enter values highestrated , lowestrated , latest , oldest to  sort results accodingly . defaults to latest\n    :param integer? min_imdb:  defaults to 6\n    :param string? genre: use comma seperated values to enter multiple genre eg : action,horror defaults to action\n    :param string? language: use comma seperated values to enter multiple values , eg : english,german defaults to english\n    :param integer? end_year: Enter any year from 1970 to 2020 to  get results. defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_ott_details_advanced_search',kwargs)\n        "
    },
    "rapi_ott_details_basic_info": {
        "api_name": "basic_info",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_basic_info(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param string peopleid:  defaults to nm0000375\n    '''\n    return await self._request_rapid_api('rapi_ott_details_basic_info',kwargs)\n        "
    },
    "rapi_ott_details_params": {
        "api_name": "params",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_params(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param string param: input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search . defaults to genre\n    '''\n    return await self._request_rapid_api('rapi_ott_details_params',kwargs)\n        "
    },
    "rapi_ott_details_title_details": {
        "api_name": "title_details",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_title_details(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param string imdbid:  defaults to tt9904802\n    '''\n    return await self._request_rapid_api('rapi_ott_details_title_details',kwargs)\n        "
    },
    "rapi_ott_details_additional_title_details": {
        "api_name": "additional_title_details",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_additional_title_details(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param string imdbid:  defaults to tt7286456\n    '''\n    return await self._request_rapid_api('rapi_ott_details_additional_title_details',kwargs)\n        "
    },
    "rapi_ott_details_ott_providers": {
        "api_name": "ott_providers",
        "category": "Movies",
        "tool_name": "ott_details",
        "code": "async def rapi_ott_details_ott_providers(self,*args,**kwargs):\n    '''Get Streaming details of Movie and TV Shows. We support 150+ Streaming platforms in US and India such as HBO, YouTube, Netflix , Primve Video, Hotstar, Hulu, etc . (use our OTT Providers endpoint to get the full list OTT providers we support) . In additon to streaming info we also provide basic details on any given movie title. \n    \n    \n\n    :param string region: currently only USA and India region is supported enter param 'US' for USA and 'IN' for India. defaults to IN\n    '''\n    return await self._request_rapid_api('rapi_ott_details_ott_providers',kwargs)\n        "
    },
    "rapi_imdb_api_get_movies_by_cast_name": {
        "api_name": "get_movies_by_cast_name",
        "category": "Movies",
        "tool_name": "imdb_api",
        "code": "async def rapi_imdb_api_get_movies_by_cast_name(self,*args,**kwargs):\n    '''This API is a powerful tool that provides access to the top 250 movies as rated by IMDB users. With this API, you can search for movies by title, year, directors, and cast. Retrieve detailed information about each movie, including ratings, genres, and more. By integrating our API into your applications or services, you can offer users an enhanced movie search and discovery experience, opening up exciting possibilities for building movie-related platforms.\n    \n    \n\n    :param string? cast_name: \n    '''\n    return await self._request_rapid_api('rapi_imdb_api_get_movies_by_cast_name',kwargs)\n        "
    },
    "rapi_imdb_api_get_movies_by_director": {
        "api_name": "get_movies_by_director",
        "category": "Movies",
        "tool_name": "imdb_api",
        "code": "async def rapi_imdb_api_get_movies_by_director(self,*args,**kwargs):\n    '''This API is a powerful tool that provides access to the top 250 movies as rated by IMDB users. With this API, you can search for movies by title, year, directors, and cast. Retrieve detailed information about each movie, including ratings, genres, and more. By integrating our API into your applications or services, you can offer users an enhanced movie search and discovery experience, opening up exciting possibilities for building movie-related platforms.\n    \n    \n\n    :param string? movie_director: \n    '''\n    return await self._request_rapid_api('rapi_imdb_api_get_movies_by_director',kwargs)\n        "
    },
    "rapi_imdb_api_get_movies_by_name": {
        "api_name": "get_movies_by_name",
        "category": "Movies",
        "tool_name": "imdb_api",
        "code": "async def rapi_imdb_api_get_movies_by_name(self,*args,**kwargs):\n    '''This API is a powerful tool that provides access to the top 250 movies as rated by IMDB users. With this API, you can search for movies by title, year, directors, and cast. Retrieve detailed information about each movie, including ratings, genres, and more. By integrating our API into your applications or services, you can offer users an enhanced movie search and discovery experience, opening up exciting possibilities for building movie-related platforms.\n    \n    \n\n    :param string? Movie_name: \n    '''\n    return await self._request_rapid_api('rapi_imdb_api_get_movies_by_name',kwargs)\n        "
    },
    "rapi_movie_and_tv_shows_quotes_get_a_random_quote": {
        "api_name": "get_a_random_quote",
        "category": "Movies",
        "tool_name": "movie_and_tv_shows_quotes",
        "code": "async def rapi_movie_and_tv_shows_quotes_get_a_random_quote(self,*args,**kwargs):\n    '''This API helps query for Famous Movies and TV shows quotes.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_movie_and_tv_shows_quotes_get_a_random_quote',kwargs)\n        "
    },
    "rapi_movie_and_tv_shows_quotes_get_quote_by_year": {
        "api_name": "get_quote_by_year",
        "category": "Movies",
        "tool_name": "movie_and_tv_shows_quotes",
        "code": "async def rapi_movie_and_tv_shows_quotes_get_quote_by_year(self,*args,**kwargs):\n    '''This API helps query for Famous Movies and TV shows quotes.\n    \n    \n\n    :param integer year:  defaults to 1939\n    '''\n    return await self._request_rapid_api('rapi_movie_and_tv_shows_quotes_get_quote_by_year',kwargs)\n        "
    },
    "rapi_moviesdatabase_titles_episode_id": {
        "api_name": "titles_episode_id",
        "category": "Movies",
        "tool_name": "moviesdatabase",
        "code": "async def rapi_moviesdatabase_titles_episode_id(self,*args,**kwargs):\n    '''MoviesDatabase provides complete and updated data for over 9 million titles ( movies, series and episodes) and 11 million actors / crew and cast members\n    \n    \n\n    :param string id: Episode Imdb Id\n    :param string? info: Info type structure (default: mini-info) -> base_info / mini_info / image / ...\n    '''\n    return await self._request_rapid_api('rapi_moviesdatabase_titles_episode_id',kwargs)\n        "
    },
    "rapi_moviesdatabase_titles": {
        "api_name": "titles",
        "category": "Movies",
        "tool_name": "moviesdatabase",
        "code": "async def rapi_moviesdatabase_titles(self,*args,**kwargs):\n    '''MoviesDatabase provides complete and updated data for over 9 million titles ( movies, series and episodes) and 11 million actors / crew and cast members\n    \n    \n\n    :param string? genre: Year filter ex: ?genre=Drama\n    :param integer? startYear: Year range filter -from- ex: ?startYear=2020\n    :param string? titleType: Filter by type of title\n    :param string? list: Selected list -> most_pop_movies / most_pop_series / top_rated_series_250 / ...\n    :param integer? year: Year filter ex: ?year=2020\n    :param string? sort: Add sorting (incr, decr) -> year.incr /year.decr\n    :param string? page: Page number\n    :param string? info: Info type structure (default: mini-info) -> base_info / mini_info / image / ...\n    :param integer? endYear: Year range filter -to- ex: ?endYear=2020\n    :param integer? limit: Number of titles per page (default: 10) -> 10 max \n    '''\n    return await self._request_rapid_api('rapi_moviesdatabase_titles',kwargs)\n        "
    },
    "rapi_api_video_get_analytics_videos_videoid": {
        "api_name": "get_analytics_videos_videoid",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_analytics_videos_videoid(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string videoId: \n    :param array? metadata: Metadata and Dynamic Metadata filter.\n(Dynamic metadata filter are available for  Business plans only) defaults to []\n    :param string? period: Period must have one of the following formats: \n\n- For a day : 2018-01-01,\n- For a week: 2018-W01, \n- For a month: 2018-01\n- For a year: 2018\n\nFor a range period: \n-  Date range: 2018-01-01/2018-01-15\n\n    :param integer? currentPage: Number of the page to display defaults to 1\n    :param integer? pageSize: Expected number of items to display on the page. Might be lower on the last page defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_api_video_get_analytics_videos_videoid',kwargs)\n        "
    },
    "rapi_api_video_get_analytics_sessions_sessionid_events": {
        "api_name": "get_analytics_sessions_sessionid_events",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_analytics_sessions_sessionid_events(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string sessionId: \n    :param integer? currentPage: Number of the page to display defaults to 1\n    :param integer? pageSize: Expected number of items to display on the page. Might be lower on the last page defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_api_video_get_analytics_sessions_sessionid_events',kwargs)\n        "
    },
    "rapi_api_video_get_videos_videoid_chapters_language": {
        "api_name": "get_videos_videoid_chapters_language",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_videos_videoid_chapters_language(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string videoId: \n    :param string language: A valid BCP 47 language representation\n    '''\n    return await self._request_rapid_api('rapi_api_video_get_videos_videoid_chapters_language',kwargs)\n        "
    },
    "rapi_api_video_get_players": {
        "api_name": "get_players",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_players(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param integer? pageSize: Expected number of items to display on the page. Might be lower on the last page defaults to 25\n    :param string? sortBy:  defaults to createdAt\n    :param integer? currentPage: Number of the page to display defaults to 1\n    :param string? sortOrder: Allowed: asc, desc defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_api_video_get_players',kwargs)\n        "
    },
    "rapi_api_video_get_live_streams_livestreamid": {
        "api_name": "get_live_streams_livestreamid",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_live_streams_livestreamid(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string liveStreamId: \n    '''\n    return await self._request_rapid_api('rapi_api_video_get_live_streams_livestreamid',kwargs)\n        "
    },
    "rapi_api_video_list_videos": {
        "api_name": "list_videos",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_list_videos(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param integer? currentPage: Search results page. Minimum value: 1 defaults to 1\n    :param string? liveStreamId: \n    :param string? sortOrder: Allowed: asc, desc\n    :param string? tags: \n    :param integer? pageSize: Results per page. Allowed values 1-100, default is 25. defaults to 25\n    :param string? sortBy: Allowed: publishedAt, title\n    :param string? description: \n    :param string? title: \n    :param array? metadata: metadata[foo]=bar defaults to []\n    '''\n    return await self._request_rapid_api('rapi_api_video_list_videos',kwargs)\n        "
    },
    "rapi_api_video_get_video_status": {
        "api_name": "get_video_status",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_video_status(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string videoId: \n    '''\n    return await self._request_rapid_api('rapi_api_video_get_video_status',kwargs)\n        "
    },
    "rapi_api_video_get_live_streams": {
        "api_name": "get_live_streams",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_live_streams(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param integer? currentPage: Number of the page to display defaults to 1\n    :param string? sortBy: Allowed: createdAt, publishedAt, name\n    :param string? streamKey: \n    :param string? name: \n    :param integer? pageSize: Expected number of items to display on the page. Might be lower on the last page defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_api_video_get_live_streams',kwargs)\n        "
    },
    "rapi_api_video_get_players_playerid": {
        "api_name": "get_players_playerid",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_players_playerid(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string playerId: \n    '''\n    return await self._request_rapid_api('rapi_api_video_get_players_playerid',kwargs)\n        "
    },
    "rapi_api_video_get_video": {
        "api_name": "get_video",
        "category": "Video_Images",
        "tool_name": "api_video",
        "code": "async def rapi_api_video_get_video(self,*args,**kwargs):\n    '''api.video is the end-to-end solution that enables you to easily build, scale, and operate on-demand and live-streaming videos in your app, software, or platform. Test it for free on our Sandbox environment.\n    \n    \n\n    :param string videoId: \n    '''\n    return await self._request_rapid_api('rapi_api_video_get_video',kwargs)\n        "
    },
    "rapi_deep_image_rest_api_deep_image_result_jobhash": {
        "api_name": "rest_api_deep_image_result_jobhash",
        "category": "Video_Images",
        "tool_name": "deep_image",
        "code": "async def rapi_deep_image_rest_api_deep_image_result_jobhash(self,*args,**kwargs):\n    '''Deep Image Rest API\n    \n    \n\n    :param string jobHash: \n    '''\n    return await self._request_rapid_api('rapi_deep_image_rest_api_deep_image_result_jobhash',kwargs)\n        "
    },
    "rapi_tes_loginuser": {
        "api_name": "loginuser",
        "category": "Video_Images",
        "tool_name": "tes",
        "code": "async def rapi_tes_loginuser(self,*args,**kwargs):\n    '''test\n    \n    \n\n    :param string password: The password for login in clear text\n    :param string username: The user name for login\n    '''\n    return await self._request_rapid_api('rapi_tes_loginuser',kwargs)\n        "
    },
    "rapi_tes_getinventory": {
        "api_name": "getinventory",
        "category": "Video_Images",
        "tool_name": "tes",
        "code": "async def rapi_tes_getinventory(self,*args,**kwargs):\n    '''test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tes_getinventory',kwargs)\n        "
    },
    "rapi_nowyapi_rereer": {
        "api_name": "rereer",
        "category": "Video_Images",
        "tool_name": "nowyapi",
        "code": "async def rapi_nowyapi_rereer(self,*args,**kwargs):\n    '''henAPI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nowyapi_rereer',kwargs)\n        "
    },
    "rapi_astro_gallery_get_astro_photo_info_randomly": {
        "api_name": "get_astro_photo_info_randomly",
        "category": "Video_Images",
        "tool_name": "astro_gallery",
        "code": "async def rapi_astro_gallery_get_astro_photo_info_randomly(self,*args,**kwargs):\n    '''Astro Photo Gallery\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_astro_gallery_get_astro_photo_info_randomly',kwargs)\n        "
    },
    "rapi_mlemapi_new_mlem": {
        "api_name": "new_mlem",
        "category": "Video_Images",
        "tool_name": "mlemapi",
        "code": "async def rapi_mlemapi_new_mlem(self,*args,**kwargs):\n    '''A free public service API which provides pictures of animals with mlems/bleps.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mlemapi_new_mlem',kwargs)\n        "
    },
    "rapi_mlemapi_mlem_id": {
        "api_name": "mlem_id",
        "category": "Video_Images",
        "tool_name": "mlemapi",
        "code": "async def rapi_mlemapi_mlem_id(self,*args,**kwargs):\n    '''A free public service API which provides pictures of animals with mlems/bleps.\n    \n    \n\n    :param integer mlemid: Mlem ID\n    '''\n    return await self._request_rapid_api('rapi_mlemapi_mlem_id',kwargs)\n        "
    },
    "rapi_mlemapi_tags": {
        "api_name": "tags",
        "category": "Video_Images",
        "tool_name": "mlemapi",
        "code": "async def rapi_mlemapi_tags(self,*args,**kwargs):\n    '''A free public service API which provides pictures of animals with mlems/bleps.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mlemapi_tags',kwargs)\n        "
    },
    "rapi_mlemapi_random_mlem": {
        "api_name": "random_mlem",
        "category": "Video_Images",
        "tool_name": "mlemapi",
        "code": "async def rapi_mlemapi_random_mlem(self,*args,**kwargs):\n    '''A free public service API which provides pictures of animals with mlems/bleps.\n    \n    \n\n    :param string? brightness: Image brightness: dark or bright\n    :param integer? maxheight: Maximum height\n    :param integer? minwidth: Maximum width\n    :param integer? minheight: Minimum height\n    :param string? tag: Tag of mlem\n    :param integer? maxwidth: Minimum width\n    :param string? orientation: Image orientation: square, landscape, portrait\n    '''\n    return await self._request_rapid_api('rapi_mlemapi_random_mlem',kwargs)\n        "
    },
    "rapi_mikuapi_getimage": {
        "api_name": "getimage",
        "category": "Video_Images",
        "tool_name": "mikuapi",
        "code": "async def rapi_mikuapi_getimage(self,*args,**kwargs):\n    '''An API that provides you with Images of the popular Japanese Popstar Hatsune Miku. \n    \n    \n\n    :param string fileId: \n    '''\n    return await self._request_rapid_api('rapi_mikuapi_getimage',kwargs)\n        "
    },
    "rapi_mikuapi_getrandomimage": {
        "api_name": "getrandomimage",
        "category": "Video_Images",
        "tool_name": "mikuapi",
        "code": "async def rapi_mikuapi_getrandomimage(self,*args,**kwargs):\n    '''An API that provides you with Images of the popular Japanese Popstar Hatsune Miku. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mikuapi_getrandomimage',kwargs)\n        "
    },
    "rapi_youtube_search_search": {
        "api_name": "search",
        "category": "Video_Images",
        "tool_name": "youtube_search",
        "code": "async def rapi_youtube_search_search(self,*args,**kwargs):\n    '''Introducing our API for obtaining YouTube Shorts URLs, the perfect solution to unlock an ocean of opportunities and boost your revenue! Our API is designed to seamlessly fetch YouTube Shorts URLs based on specific keywords, allowing you to retrieve multiple videos at once that match your search criteria. This feature empowers users to download and integrate a curated selection of YouTube Shorts into various platforms, applications, or projects. By leveraging the power of YouTube Shorts, you c...\n    \n    \n\n    :param string q:  defaults to cats\n    :param string? c:  defaults to continuation_token\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_search',kwargs)\n        "
    },
    "rapi_bing_video_search_trending": {
        "api_name": "trending",
        "category": "Video_Images",
        "tool_name": "bing_video_search",
        "code": "async def rapi_bing_video_search_trending(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that turns any app into a video search resource.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bing_video_search_trending',kwargs)\n        "
    },
    "rapi_bing_video_search_video_details": {
        "api_name": "video_details",
        "category": "Video_Images",
        "tool_name": "bing_video_search",
        "code": "async def rapi_bing_video_search_video_details(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that turns any app into a video search resource.\n    \n    \n\n    :param string modules:  defaults to A comma-delimited list of one or more insights to request.\n    :param string id:  defaults to An ID that uniquely identifies a video. The Video object's videoId field contains the ID that you set this parameter to.\n    '''\n    return await self._request_rapid_api('rapi_bing_video_search_video_details',kwargs)\n        "
    },
    "rapi_bing_video_search_video_search": {
        "api_name": "video_search",
        "category": "Video_Images",
        "tool_name": "bing_video_search",
        "code": "async def rapi_bing_video_search_video_search(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that turns any app into a video search resource.\n    \n    \n\n    :param string q: The user's search query string\n    :param string? safeSearch: A filter used to filter results for adult content.\n    :param string? mkt: The market where the results come from. Typically, this is the country where the user is making the request from; however, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form -. For example, en-US.\n\nFull list of supported markets:\nes-AR, en-AU, de-AT, nl-BE, fr-BE, pt-BR, en-CA, fr-CA, es-CL, da-DK, fi-FI, fr-FR, de-DE, zh-HK, en-IN, en-ID, en-IE, it-IT, ja-JP, ko-KR, en-MY, es-MX, nl-NL, en-NZ, no-NO, zh-CN, pl-PL, pt-PT, en-PH, ru-RU, ar-SA, en-ZA, es-ES, sv-SE, fr-CH, de-CH, zh-TW, tr-TR, en-GB, en-US, es-US\n    :param integer? count: The number of video results to return in the response. The actual number delivered may be less than requested.\n    :param integer? offset: The zero-based offset that indicates the number of video results to skip before returning results.\n    '''\n    return await self._request_rapid_api('rapi_bing_video_search_video_search',kwargs)\n        "
    },
    "rapi_nsfw_nude_detection_nsfw_detection": {
        "api_name": "nsfw_detection",
        "category": "Video_Images",
        "tool_name": "nsfw_nude_detection",
        "code": "async def rapi_nsfw_nude_detection_nsfw_detection(self,*args,**kwargs):\n    '''An API to detect NSFW or nudity within an image (as URL).\n    \n    \n\n    :param string url:  defaults to https://images.unsplash.com/photo-1571960614803-734d9b71e96e\n    '''\n    return await self._request_rapid_api('rapi_nsfw_nude_detection_nsfw_detection',kwargs)\n        "
    },
    "rapi_webp_image_converter_convert": {
        "api_name": "convert",
        "category": "Video_Images",
        "tool_name": "webp_image_converter",
        "code": "async def rapi_webp_image_converter_convert(self,*args,**kwargs):\n    '''Convert any image to a webp image.\n    \n    \n\n    :param string image_url:  defaults to https://static.vecteezy.com/packs/media/components/global/search-explore-nav/img/vectors/term-bg-1-666de2d941529c25aa511dc18d727160.jpg\n    '''\n    return await self._request_rapid_api('rapi_webp_image_converter_convert',kwargs)\n        "
    },
    "rapi_video_builder_video_videoid": {
        "api_name": "video_videoid",
        "category": "Video_Images",
        "tool_name": "video_builder",
        "code": "async def rapi_video_builder_video_videoid(self,*args,**kwargs):\n    '''Create dynamic videos using images as source.\n\nThis API provides an friendly way to generate MP4 videos using FFMPEG.\nIt's in initial stage, so you may feel that it don't have too much features yet.\n\n-- Important notes:\n* The requested videos are added to queue and will not be generated immediately\n* If you want to be notified about the requested video build finish, it's important to send a valid personal e-mail on \"notifyEmail\" field\n* You can check periodically the video status and the down...\n    \n    \n\n    :param integer videoId: \n    '''\n    return await self._request_rapid_api('rapi_video_builder_video_videoid',kwargs)\n        "
    },
    "rapi_image_diffusion_image_anime_diffusion": {
        "api_name": "image_anime_diffusion",
        "category": "Video_Images",
        "tool_name": "image_diffusion",
        "code": "async def rapi_image_diffusion_image_anime_diffusion(self,*args,**kwargs):\n    '''Diffusion APIs\n    \n    \n\n    :param integer steps: maximum 50 defaults to 25\n    :param integer image_num: maximum 4 defaults to 1\n    :param integer width: maximum width/height 1024 defaults to 512\n    :param integer cfg: maximum 20 defaults to 7.5\n    :param integer height: maximum width/height 1024 defaults to 512\n    :param string prompt: Describe your fantasy in prompt defaults to 1girl\n    :param string? negative_prompt: negative prompt. v2 dont need this parameter.\n    '''\n    return await self._request_rapid_api('rapi_image_diffusion_image_anime_diffusion',kwargs)\n        "
    },
    "rapi_image_service_profile_image": {
        "api_name": "profile_image",
        "category": "Video_Images",
        "tool_name": "image_service",
        "code": "async def rapi_image_service_profile_image(self,*args,**kwargs):\n    '''Various image utilities like get palette and blurhash\n    \n    \n\n    :param string name: Users name, or any other text\n    '''\n    return await self._request_rapid_api('rapi_image_service_profile_image',kwargs)\n        "
    },
    "rapi_thai_lottery_result_image_gen_image": {
        "api_name": "gen_image",
        "category": "Video_Images",
        "tool_name": "thai_lottery_result_image",
        "code": "async def rapi_thai_lottery_result_image_gen_image(self,*args,**kwargs):\n    '''Thai Lottery Result Image\n    \n    \n\n    :param string? date:  defaults to 01062564\n    :param string? bgimg: \n    :param boolean? rmber:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_thai_lottery_result_image_gen_image',kwargs)\n        "
    },
    "rapi_image_charcoal_image_charcoal_get": {
        "api_name": "charcoal_image_charcoal_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_charcoal_image_charcoal_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string url: \n    '''\n    return await self._request_rapid_api('rapi_image_charcoal_image_charcoal_get',kwargs)\n        "
    },
    "rapi_image_test_app_deepfry_get": {
        "api_name": "test_app_deepfry_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_test_app_deepfry_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string? url:  defaults to https://dagbot-is.the-be.st/logo.png\n    '''\n    return await self._request_rapid_api('rapi_image_test_app_deepfry_get',kwargs)\n        "
    },
    "rapi_image_get_thought_image_thoughtimage_get": {
        "api_name": "get_thought_image_thoughtimage_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_get_thought_image_thoughtimage_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string url: \n    :param string text: \n    '''\n    return await self._request_rapid_api('rapi_image_get_thought_image_thoughtimage_get',kwargs)\n        "
    },
    "rapi_image_obama_image_obama_get": {
        "api_name": "obama_image_obama_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_obama_image_obama_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string url: \n    '''\n    return await self._request_rapid_api('rapi_image_obama_image_obama_get',kwargs)\n        "
    },
    "rapi_image_get_captcha_image_captcha_get": {
        "api_name": "get_captcha_image_captcha_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_get_captcha_image_captcha_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string url: \n    :param string text: \n    '''\n    return await self._request_rapid_api('rapi_image_get_captcha_image_captcha_get',kwargs)\n        "
    },
    "rapi_image_gay_image_gay_get": {
        "api_name": "gay_image_gay_get",
        "category": "Video_Images",
        "tool_name": "image",
        "code": "async def rapi_image_gay_image_gay_get(self,*args,**kwargs):\n    '''a powerful and fast Image manipulation. Perfect for discord bots or web apps. https://dagpi.xyz\n    \n    \n\n    :param string url: \n    '''\n    return await self._request_rapid_api('rapi_image_gay_image_gay_get',kwargs)\n        "
    },
    "rapi_quality_porn_pornstar_search": {
        "api_name": "pornstar_search",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_pornstar_search(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    :param string query:  defaults to abella\n    :param integer? responseImagesBase64:  defaults to 1\n    :param integer? responseImages:  defaults to 1\n    :param integer? responseProfileImageBase64:  defaults to 1\n    :param integer? responseProfileImage:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_quality_porn_pornstar_search',kwargs)\n        "
    },
    "rapi_quality_porn_pornstar_by_name": {
        "api_name": "pornstar_by_name",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_pornstar_by_name(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    :param string name:  defaults to Anastasia_Plyaskina\n    :param integer? responseProfileImageBase64:  defaults to 1\n    :param integer? responseImagesBase64:  defaults to 1\n    :param integer? responseImages:  defaults to 1\n    :param integer? responseProfileImage:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_quality_porn_pornstar_by_name',kwargs)\n        "
    },
    "rapi_quality_porn_docs": {
        "api_name": "docs",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_docs(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quality_porn_docs',kwargs)\n        "
    },
    "rapi_quality_porn_supported_sites": {
        "api_name": "supported_sites",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_supported_sites(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quality_porn_supported_sites',kwargs)\n        "
    },
    "rapi_quality_porn_video_search": {
        "api_name": "video_search",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_video_search(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    :param string query:  defaults to amateur\n    :param string? site: \n    :param integer? timeout:  defaults to 5000\n    :param integer? page:  defaults to 1\n    :param string? filter: Filter the site results.\n    :param string? quality: Set minimum quality\n    '''\n    return await self._request_rapid_api('rapi_quality_porn_video_search',kwargs)\n        "
    },
    "rapi_quality_porn_top_10_search_queries": {
        "api_name": "top_10_search_queries",
        "category": "Video_Images",
        "tool_name": "quality_porn",
        "code": "async def rapi_quality_porn_top_10_search_queries(self,*args,**kwargs):\n    '''JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quality_porn_top_10_search_queries',kwargs)\n        "
    },
    "rapi_porn_gallery_search_for_any_category_or_star": {
        "api_name": "search_for_any_category_or_star",
        "category": "Video_Images",
        "tool_name": "porn_gallery",
        "code": "async def rapi_porn_gallery_search_for_any_category_or_star(self,*args,**kwargs):\n    '''this api returns high quality pictures of any porn category or pornstar name\n    \n    \n\n    :param string search:  defaults to Natasha Nice\n    '''\n    return await self._request_rapid_api('rapi_porn_gallery_search_for_any_category_or_star',kwargs)\n        "
    },
    "rapi_list_movies_with_rt_ratings": {
        "api_name": "with_rt_ratings",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_with_rt_ratings(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param boolean with_rt_ratings:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_list_movies_with_rt_ratings',kwargs)\n        "
    },
    "rapi_list_movies_order_by": {
        "api_name": "order_by",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_order_by(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param string order_by:  defaults to desc\n    '''\n    return await self._request_rapid_api('rapi_list_movies_order_by',kwargs)\n        "
    },
    "rapi_list_movies_sort_by": {
        "api_name": "sort_by",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_sort_by(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param string sort_by:  defaults to date_added\n    '''\n    return await self._request_rapid_api('rapi_list_movies_sort_by',kwargs)\n        "
    },
    "rapi_list_movies_genre": {
        "api_name": "genre",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_genre(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param string genre:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_list_movies_genre',kwargs)\n        "
    },
    "rapi_list_movies_quality": {
        "api_name": "quality",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_quality(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param string quality:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_list_movies_quality',kwargs)\n        "
    },
    "rapi_list_movies_page": {
        "api_name": "page",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_page(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_list_movies_page',kwargs)\n        "
    },
    "rapi_list_movies_limit": {
        "api_name": "limit",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_limit(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    :param integer limit:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_list_movies_limit',kwargs)\n        "
    },
    "rapi_list_movies_list_movies": {
        "api_name": "list_movies",
        "category": "Video_Images",
        "tool_name": "list_movies",
        "code": "async def rapi_list_movies_list_movies(self,*args,**kwargs):\n    '''An API used to list and search through out all the available movies. Can sort, filter, search and order the results\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_list_movies_list_movies',kwargs)\n        "
    },
    "rapi_petey_vid_video_search_api_video_search_api": {
        "api_name": "video_search_api",
        "category": "Video_Images",
        "tool_name": "petey_vid_video_search_api",
        "code": "async def rapi_petey_vid_video_search_api_video_search_api(self,*args,**kwargs):\n    '''Access Petey Vid search engine, search over 600 million videos from 70+ platform providers\n    \n    \n\n    :param string q:  defaults to trump\n    :param string? dur: \n    :param string? sort: \n    :param string? media:  defaults to Y\n    '''\n    return await self._request_rapid_api('rapi_petey_vid_video_search_api_video_search_api',kwargs)\n        "
    },
    "rapi_youtube_videos_mp4": {
        "api_name": "mp4",
        "category": "Video_Images",
        "tool_name": "youtube_videos",
        "code": "async def rapi_youtube_videos_mp4(self,*args,**kwargs):\n    '''An easy-to-use API to fetch videos from Youtube in MP4 format.\n    \n    \n\n    :param string videoId:  defaults to M0VWroX0gZA\n    '''\n    return await self._request_rapid_api('rapi_youtube_videos_mp4',kwargs)\n        "
    },
    "rapi_random_anime_img_random_img_anime": {
        "api_name": "random_img_anime",
        "category": "Video_Images",
        "tool_name": "random_anime_img",
        "code": "async def rapi_random_anime_img_random_img_anime(self,*args,**kwargs):\n    '''An API generates a short link for an anime image\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_anime_img_random_img_anime',kwargs)\n        "
    },
    "rapi_random_anime_img_5000img": {
        "api_name": "5000img",
        "category": "Video_Images",
        "tool_name": "random_anime_img",
        "code": "async def rapi_random_anime_img_5000img(self,*args,**kwargs):\n    '''An API generates a short link for an anime image\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_anime_img_5000img',kwargs)\n        "
    },
    "rapi_unofficial_icons8_search_search": {
        "api_name": "search",
        "category": "Video_Images",
        "tool_name": "unofficial_icons8_search",
        "code": "async def rapi_unofficial_icons8_search_search(self,*args,**kwargs):\n    '''Search the Icons8 repository of icons to get the icons you're looking for!\n    \n    \n\n    :param string term: Search term defaults to apple\n    :param integer? size: Size of icon in px defaults to 64\n    :param integer? limit:  defaults to 20\n    :param string? color: Color of icon defaults to ff0000\n    :param integer? offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_unofficial_icons8_search_search',kwargs)\n        "
    },
    "rapi_ykapi_search": {
        "api_name": "search",
        "category": "Video_Images",
        "tool_name": "ykapi",
        "code": "async def rapi_ykapi_search(self,*args,**kwargs):\n    '''ykapi description\n    \n    \n\n    :param string searchQuery:  defaults to cocomelon\n    '''\n    return await self._request_rapid_api('rapi_ykapi_search',kwargs)\n        "
    },
    "rapi_any_anime_anime_gif": {
        "api_name": "anime_gif",
        "category": "Video_Images",
        "tool_name": "any_anime",
        "code": "async def rapi_any_anime_anime_gif(self,*args,**kwargs):\n    '''Get random anime pfp and gif's using the anyanime api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_any_anime_anime_gif',kwargs)\n        "
    },
    "rapi_any_anime_anime_img": {
        "api_name": "anime_img",
        "category": "Video_Images",
        "tool_name": "any_anime",
        "code": "async def rapi_any_anime_anime_img(self,*args,**kwargs):\n    '''Get random anime pfp and gif's using the anyanime api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_any_anime_anime_img',kwargs)\n        "
    },
    "rapi_any_anime_anime": {
        "api_name": "anime",
        "category": "Video_Images",
        "tool_name": "any_anime",
        "code": "async def rapi_any_anime_anime(self,*args,**kwargs):\n    '''Get random anime pfp and gif's using the anyanime api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_any_anime_anime',kwargs)\n        "
    },
    "rapi_pattern_monster_get_svg_pattern": {
        "api_name": "get_svg_pattern",
        "category": "Video_Images",
        "tool_name": "pattern_monster",
        "code": "async def rapi_pattern_monster_get_svg_pattern(self,*args,**kwargs):\n    '''Create customizable SVG patterns for your projects\n    \n    \n\n    :param string? name: Name of the pattern specified at https://pattern.monster/api\n(Default: Random name if not specified) defaults to waves-1\n    :param integer? scale: 0.5 to Max Scale of the pattern specified at https://pattern.monster/api\n(Default: Random scale if not specified) defaults to 2\n    :param integer? moveLeft: 0 - 100 ( Default: 0 ) defaults to 0\n    :param integer? angle: 0 - 360 (Default: Random angle if not specified) defaults to 100\n    :param string? strokeJoin: round or square \n(Default: round)\nValid only for patterns with Stroke Join as specified at https://pattern.monster/api defaults to round\n    :param integer? moveTop: 0 - 100 ( Default: 0 ) defaults to 0\n    :param string? colors: 2 to Max Colors of the pattern specified at https://pattern.monster/api\nFormat: Color1|Color2|Color3|Color4|Color5\nAt least, two colors are required if specified\n(Default: Random colors if not specified)\nAccepted color values: \nCSS colors ( eg. aqua, red )\nRGB or RGBA colors ( eg. rgb(59,130,246), rgba(234,179,8,0.7) )\nHSL or HSLA colors ( eg. hsl(300, 76%, 72%), hsla(147,50%,47%,0.5) )\nHEX colors without the hash symbol ( eg. E11D48, 2563eb ) defaults to E11D48|rgb(234,179,8)\n    :param string? spacing: Horizontal Spacing | Vertical Spacing\n(Default: 0|0)\nMax Spacing of the pattern specified at https://pattern.monster/api\nValid only for patterns with Max Spacing other than 0|0\n defaults to 0|0\n    :param integer? stroke: 0.5 to Max Stroke of the pattern specified at https://pattern.monster/api\n(Default: Random stroke if not specified)\nValid only for patterns with Mode as Stroke defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_pattern_monster_get_svg_pattern',kwargs)\n        "
    },
    "rapi_alt_bichinhos_get_all_languages": {
        "api_name": "get_all_languages",
        "category": "Video_Images",
        "tool_name": "alt_bichinhos",
        "code": "async def rapi_alt_bichinhos_get_all_languages(self,*args,**kwargs):\n    '''A collection of pet images with alt text!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_alt_bichinhos_get_all_languages',kwargs)\n        "
    },
    "rapi_alt_bichinhos_get_german_alt_text": {
        "api_name": "get_german_alt_text",
        "category": "Video_Images",
        "tool_name": "alt_bichinhos",
        "code": "async def rapi_alt_bichinhos_get_german_alt_text(self,*args,**kwargs):\n    '''A collection of pet images with alt text!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_alt_bichinhos_get_german_alt_text',kwargs)\n        "
    },
    "rapi_alt_bichinhos_get_spanish_alt_text": {
        "api_name": "get_spanish_alt_text",
        "category": "Video_Images",
        "tool_name": "alt_bichinhos",
        "code": "async def rapi_alt_bichinhos_get_spanish_alt_text(self,*args,**kwargs):\n    '''A collection of pet images with alt text!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_alt_bichinhos_get_spanish_alt_text',kwargs)\n        "
    },
    "rapi_alt_bichinhos_get_portuguese_alt_text": {
        "api_name": "get_portuguese_alt_text",
        "category": "Video_Images",
        "tool_name": "alt_bichinhos",
        "code": "async def rapi_alt_bichinhos_get_portuguese_alt_text(self,*args,**kwargs):\n    '''A collection of pet images with alt text!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_alt_bichinhos_get_portuguese_alt_text',kwargs)\n        "
    },
    "rapi_alt_bichinhos_get_english_alt_text": {
        "api_name": "get_english_alt_text",
        "category": "Video_Images",
        "tool_name": "alt_bichinhos",
        "code": "async def rapi_alt_bichinhos_get_english_alt_text(self,*args,**kwargs):\n    '''A collection of pet images with alt text!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_alt_bichinhos_get_english_alt_text',kwargs)\n        "
    },
    "rapi_flaticon_totaliconsselection": {
        "api_name": "totaliconsselection",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_totaliconsselection(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flaticon_totaliconsselection',kwargs)\n        "
    },
    "rapi_flaticon_searchpacks": {
        "api_name": "searchpacks",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_searchpacks(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param string q: term to search for\n    :param string orderBy: Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/packs/added?q=media&stroke=2&styleName=gradient&packId=1554346&limit=15`\n defaults to priority\n    :param string? styleName: Filter the results by the name of style.\n    :param integer? page: Page number\n    :param string? categoryName: Filter the results by category name.\n    :param string? iconType: Filter the results by icon type, valid values are `standard` and  `stickers`\n    :param integer? limit: Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default. defaults to 100\n    :param integer? familyId: Filter the results by family id.\n    :param integer? color: Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.\n    :param string? tagsId: Filter the results by a list of tag ids separated by comma\n    :param integer? categoryId: Filter the results by category id.\n    :param string? url: pack url to search for\n    :param integer? stroke: Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.\n    :param string? familyName: Filter the results by family name.\n    :param integer? designerId: Filter the results by designer id.\n    :param integer? styleId: Filter the results by style id.\n    :param string? designerName: Filter the results by designer name.\n    :param integer? packId: Filter the results by pack id.\n    '''\n    return await self._request_rapid_api('rapi_flaticon_searchpacks',kwargs)\n        "
    },
    "rapi_flaticon_searchicons": {
        "api_name": "searchicons",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_searchicons(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param string q: term to search for\n    :param string orderBy: Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n defaults to priority\n    :param integer? packId: Filter the results by pack id.\n    :param string? categoryName: Filter the results by category name.\n    :param integer? designerId: Filter the results by designer id.\n    :param integer? page: Page number\n    :param integer? categoryId: Filter the results by category id.\n    :param string? tagsId: Filter the results by a list of tag ids separated by comma\n    :param integer? familyId: Filter the results by family id.\n    :param string? url: icon url to search for\n    :param string? designerName: Filter the results by designer name.\n    :param integer? color: Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.\n    :param string? iconType: Filter the results by icon type, valid values are `standard` and `stickers`\n    :param integer? stroke: Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.\n    :param string? familyName: Filter the results by family name.\n    :param integer? limit: Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default. defaults to 100\n    :param integer? styleId: Filter the results by style id.\n    :param string? styleName: Filter the results by the name of style.\n    '''\n    return await self._request_rapid_api('rapi_flaticon_searchicons',kwargs)\n        "
    },
    "rapi_flaticon_pack": {
        "api_name": "pack",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_pack(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_flaticon_pack',kwargs)\n        "
    },
    "rapi_flaticon_packs": {
        "api_name": "packs",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_packs(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param string q: term to search for\n    :param string orderBy: Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n defaults to priority\n    :param string? designerName: Filter the results by designer name.\n    :param integer? page: Page number\n    :param string? styleName: Filter the results by the name of style.\n    :param string? categoryName: Filter the results by category name.\n    :param integer? categoryId: Filter the results by category id.\n    :param string? url: icon url to search for\n    :param integer? stroke: Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.\n    :param integer? styleId: Filter the results by style id.\n    :param integer? packId: Filter the results by pack id.\n    :param string? tagsId: Filter the results by a list of tag ids separated by comma\n    :param string? familyName: Filter the results by family name.\n    :param integer? familyId: Filter the results by family id.\n    :param integer? color: Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.\n    :param string? iconType: Filter the results by icon type, valid values are `standard` and `stickers`\n    :param integer? designerId: Filter the results by designer id.\n    :param integer? limit: Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default. defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_flaticon_packs',kwargs)\n        "
    },
    "rapi_flaticon_icons": {
        "api_name": "icons",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_icons(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param string orderBy: Order by in results from Flaticon API. You can choose between order the results between 'priority' or 'added'. Priority order will return items ordered by an algorithm based on the downloads ratio. Added order will return items ordered by the date they were added to Flaticon.\nFor example: `https://api.flaticon.com/v2/search/icons/added?q=arrow&stroke=2&styleName=gradient&packId=1554346&limit=15`\n defaults to priority\n    :param string q: term to search for\n    :param integer? designerId: Filter the results by designer id.\n    :param integer? page: Page number\n    :param string? categoryName: Filter the results by category name.\n    :param integer? styleId: Filter the results by style id.\n    :param integer? limit: Number of max. items returned per request. In case it isn\u2019t requested, it will return 100 packs by default. defaults to 100\n    :param string? styleName: Filter the results by the name of style.\n    :param string? designerName: Filter the results by designer name.\n    :param integer? stroke: Filter the results by stroke id. Stroke id `1` means filled. Stroke id `2` means linear.\n    :param string? familyName: Filter the results by family name.\n    :param integer? categoryId: Filter the results by category id.\n    :param string? tagsId: Filter the results by a list of tag ids separated by comma\n    :param integer? packId: Filter the results by pack id.\n    :param integer? familyId: Filter the results by family id.\n    :param string? iconType: Filter the results by icon type, valid values are `standard` and `stickers`\n    :param integer? color: Filter the results by color id. Color id `1` means monocolor. Color id `2` means multicolor.\n    :param string? url: icon url to search for\n    '''\n    return await self._request_rapid_api('rapi_flaticon_icons',kwargs)\n        "
    },
    "rapi_flaticon_styles": {
        "api_name": "styles",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_styles(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    :param integer? limit: Number of max. authors returned per request. In case it isn\u2019t requested, it will return 100 styles by default. defaults to 100\n    :param integer? page: Page about which the request is made. In case it doesn\u2019t exist, it will return page 1.\n    '''\n    return await self._request_rapid_api('rapi_flaticon_styles',kwargs)\n        "
    },
    "rapi_flaticon_totalicons": {
        "api_name": "totalicons",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_totalicons(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flaticon_totalicons',kwargs)\n        "
    },
    "rapi_flaticon_totaliconspremium": {
        "api_name": "totaliconspremium",
        "category": "Video_Images",
        "tool_name": "flaticon",
        "code": "async def rapi_flaticon_totaliconspremium(self,*args,**kwargs):\n    '''5M+ icons and vectors at your fingertips\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flaticon_totaliconspremium',kwargs)\n        "
    },
    "rapi_currency_v2_exchange": {
        "api_name": "exchange",
        "category": "Financial",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_exchange(self,*args,**kwargs):\n    '''Find currency and bitcoin prices.\n    \n    \n\n    :param string base: Currency Code (USD, EUR etc.) defaults to USD\n    :param string to: Target Currency Code defaults to EUR\n    :param string? int: Amount of Money (default: 1) defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_currency_v2_exchange',kwargs)\n        "
    },
    "rapi_currency_v2_currencytoall": {
        "api_name": "currencytoall",
        "category": "Financial",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_currencytoall(self,*args,**kwargs):\n    '''Find currency and bitcoin prices.\n    \n    \n\n    :param string base: Currency Code (USD,EUR etc.) defaults to USD\n    :param string? int: Amount of Money (default 1) defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_currency_v2_currencytoall',kwargs)\n        "
    },
    "rapi_currency_v2_symbols": {
        "api_name": "symbols",
        "category": "Financial",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_symbols(self,*args,**kwargs):\n    '''Find currency and bitcoin prices.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_v2_symbols',kwargs)\n        "
    },
    "rapi_marketci_analytics_price_probability": {
        "api_name": "price_probability",
        "category": "Financial",
        "tool_name": "marketci_analytics",
        "code": "async def rapi_marketci_analytics_price_probability(self,*args,**kwargs):\n    '''Stock Market Endpoint for Price Forecasts, Probability, Cash Flow Models , and Peer Comps \n    \n    \n\n    :param string symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_marketci_analytics_price_probability',kwargs)\n        "
    },
    "rapi_marketci_analytics_peer_metrics_average": {
        "api_name": "peer_metrics_average",
        "category": "Financial",
        "tool_name": "marketci_analytics",
        "code": "async def rapi_marketci_analytics_peer_metrics_average(self,*args,**kwargs):\n    '''Stock Market Endpoint for Price Forecasts, Probability, Cash Flow Models , and Peer Comps \n    \n    \n\n    :param string symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_marketci_analytics_peer_metrics_average',kwargs)\n        "
    },
    "rapi_marketci_analytics_peer_ratio_averages": {
        "api_name": "peer_ratio_averages",
        "category": "Financial",
        "tool_name": "marketci_analytics",
        "code": "async def rapi_marketci_analytics_peer_ratio_averages(self,*args,**kwargs):\n    '''Stock Market Endpoint for Price Forecasts, Probability, Cash Flow Models , and Peer Comps \n    \n    \n\n    :param string symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_marketci_analytics_peer_ratio_averages',kwargs)\n        "
    },
    "rapi_stocks_get_the_stock_history_by_exchange_code_and_stock_code": {
        "api_name": "get_the_stock_history_by_exchange_code_and_stock_code",
        "category": "Financial",
        "tool_name": "stocks",
        "code": "async def rapi_stocks_get_the_stock_history_by_exchange_code_and_stock_code(self,*args,**kwargs):\n    '''Get the the stocks informations using a REST API simple and free.\n    \n    \n\n    :param string date:  defaults to 2023-02-01\n    :param string exchangeCode:  defaults to NASDAQ\n    :param string stockCode:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stocks_get_the_stock_history_by_exchange_code_and_stock_code',kwargs)\n        "
    },
    "rapi_stocks_get_the_current_stock_by_code": {
        "api_name": "get_the_current_stock_by_code",
        "category": "Financial",
        "tool_name": "stocks",
        "code": "async def rapi_stocks_get_the_current_stock_by_code(self,*args,**kwargs):\n    '''Get the the stocks informations using a REST API simple and free.\n    \n    \n\n    :param string stockCode:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stocks_get_the_current_stock_by_code',kwargs)\n        "
    },
    "rapi_insiders_gedetailedtinsiders": {
        "api_name": "gedetailedtinsiders",
        "category": "Financial",
        "tool_name": "insiders",
        "code": "async def rapi_insiders_gedetailedtinsiders(self,*args,**kwargs):\n    '''Detailed inside transactions for publicly listed companies. Includes SEC URLS to original documents. Updated every 30 seconds \n    \n    \n\n    :param string ticker:  defaults to BRK.A\n    '''\n    return await self._request_rapid_api('rapi_insiders_gedetailedtinsiders',kwargs)\n        "
    },
    "rapi_currencyapi_net_currencies": {
        "api_name": "currencies",
        "category": "Financial",
        "tool_name": "currencyapi_net",
        "code": "async def rapi_currencyapi_net_currencies(self,*args,**kwargs):\n    '''Real-time currency conversion on 152 currencies and cryptos\n    \n    \n\n    :param string? output: The output of the response. Either JSON or XML defaults to JSON\n    '''\n    return await self._request_rapid_api('rapi_currencyapi_net_currencies',kwargs)\n        "
    },
    "rapi_currencyapi_net_rates": {
        "api_name": "rates",
        "category": "Financial",
        "tool_name": "currencyapi_net",
        "code": "async def rapi_currencyapi_net_rates(self,*args,**kwargs):\n    '''Real-time currency conversion on 152 currencies and cryptos\n    \n    \n\n    :param string? output: The output of the response. Either JSON or XML defaults to JSON\n    :param string? base: Change the base currency. Eg GBP or BTC defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_currencyapi_net_rates',kwargs)\n        "
    },
    "rapi_barpatterns_rsi_oversold": {
        "api_name": "rsi_oversold",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_rsi_oversold(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_rsi_oversold',kwargs)\n        "
    },
    "rapi_barpatterns_morning_star": {
        "api_name": "morning_star",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_morning_star(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_morning_star',kwargs)\n        "
    },
    "rapi_barpatterns_inverted_hammer": {
        "api_name": "inverted_hammer",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_inverted_hammer(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_inverted_hammer',kwargs)\n        "
    },
    "rapi_barpatterns_falling_three_methods": {
        "api_name": "falling_three_methods",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_falling_three_methods(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_falling_three_methods',kwargs)\n        "
    },
    "rapi_barpatterns_bearish_harami": {
        "api_name": "bearish_harami",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_bearish_harami(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_bearish_harami',kwargs)\n        "
    },
    "rapi_barpatterns_dark_cloud_cover": {
        "api_name": "dark_cloud_cover",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_dark_cloud_cover(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_dark_cloud_cover',kwargs)\n        "
    },
    "rapi_barpatterns_bullish_harami": {
        "api_name": "bullish_harami",
        "category": "Financial",
        "tool_name": "barpatterns",
        "code": "async def rapi_barpatterns_bullish_harami(self,*args,**kwargs):\n    '''Screener for stock candlestick patterns & indicator signals. \nScreening 21 candlestick patterns & 6 indicator signals (supertrend, macd, rsi)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_barpatterns_bullish_harami',kwargs)\n        "
    },
    "rapi_luhn_algorithm_validate_card_number": {
        "api_name": "validate_card_number",
        "category": "Financial",
        "tool_name": "luhn_algorithm",
        "code": "async def rapi_luhn_algorithm_validate_card_number(self,*args,**kwargs):\n    '''Validate card numbers with Luhn algorithm\n    \n    \n\n    :param string number:  defaults to 4024007197756652\n    '''\n    return await self._request_rapid_api('rapi_luhn_algorithm_validate_card_number',kwargs)\n        "
    },
    "rapi_fmpcloud_income_statement": {
        "api_name": "income_statement",
        "category": "Financial",
        "tool_name": "fmpcloud",
        "code": "async def rapi_fmpcloud_income_statement(self,*args,**kwargs):\n    '''Access stock prices. Financial statements, real stock price values. SEC EDGAR API with all filings in real time. Free stock API to discover financial data instantly more at https://fmpcloud.io/ \n    \n    \n\n    :param string stock:  defaults to AAPL\n    :param string apikey: get your apikey at https://fmpcloud.io/register defaults to demo\n    :param string? period: annual / quarter defaults to quarter\n    '''\n    return await self._request_rapid_api('rapi_fmpcloud_income_statement',kwargs)\n        "
    },
    "rapi_fmpcloud_cash_flow_statement": {
        "api_name": "cash_flow_statement",
        "category": "Financial",
        "tool_name": "fmpcloud",
        "code": "async def rapi_fmpcloud_cash_flow_statement(self,*args,**kwargs):\n    '''Access stock prices. Financial statements, real stock price values. SEC EDGAR API with all filings in real time. Free stock API to discover financial data instantly more at https://fmpcloud.io/ \n    \n    \n\n    :param string stock:  defaults to AAPL\n    :param string apikey: get your apikey at https://fmpcloud.io/register defaults to demo\n    :param string? period: period / annual defaults to quarter\n    '''\n    return await self._request_rapid_api('rapi_fmpcloud_cash_flow_statement',kwargs)\n        "
    },
    "rapi_chart_img_advanced_chart": {
        "api_name": "advanced_chart",
        "category": "Financial",
        "tool_name": "chart_img",
        "code": "async def rapi_chart_img_advanced_chart(self,*args,**kwargs):\n    '''CHART-IMG.COM API designed to take screenshots of the most popular crypto charts and tools.\n    \n    \n\n    :param string? symbol: `The field must be valid tradingview symbol.`\n\nExample: `BINANCE:BTCUSDT`, `BINANCE:BTCUSDTPERP` defaults to BINANCE:BTCUSDT\n    :param string? studies: `The field support multiple values.`\n\n| Indicator                             | Study    | Default                       |\n| ------------------------------------- | -------- | ----------------------------- |\n| Accumulation Distribution             | ACCD     | -                             |\n| Advance Decline Ratio                 | ADR      | ADR:9                         |\n| Aroon                                 | AROON    | AROON:14                      |\n| Average True Range                    | ATR      | ATR:14,RMA                    |\n| Awesome Oscillator                    | AO       | -                             |\n| Bollinger Bands                       | BB       | BB:20,close,2                 |\n| Bollinger Bands %B                    | BBR      | BBR:20,close,2                |\n| Bollinger Bands Width                 | BBW      | BBW:20,close,2                |\n| Chaikin Money Flow                    | CMF      | CMF:20                        |\n| Chaikin Oscillator                    | CO       | CO:3,10                       |\n| Chande Momentum Oscillator            | CMO      | CMO:9,close                   |\n| Choppiness Index                      | CHOP     | CHOP:14                       |\n| Commodity Channel Index               | CCI      | CCI:20,close                  |\n| Connors RSI                           | CRSI     | CRSI:3,2,100                  |\n| Correlation Coefficient               | CC       | CC:BINANCE:BTCUSDT,close,20   |\n| Detrended Price Oscillator            | DPO      | DPO:21,false                  |\n| Directional Movement Index            | DMI      | DMI:14,14                     |\n| Donchian Channels                     | DONCH    | DONCH:20                      |\n| Double EMA                            | DEMA     | DEMA:9                        |\n| Ease Of Movement                      | EOM      | EOM:14,10000                  |\n| Elders Force Index                    | EFI      | EFI:13                        |\n| Exponential Moving Average            | EMA      | EMA:9,close                   |\n| Envelope                              | ENV      | ENV:20,10,close,false         |\n| Fisher Transform                      | FISHER   | FISHER:9                      |\n| Historical Volatility                 | HV       | HV:10                         |\n| Hull Moving Average                   | HMA      | HMA:9,close                   |\n| Ichimoku Cloud                        | IC       | IC:9,26,52,26                 |\n| Keltner Channels                      | KC       | KC:20,1,close,true range      |\n| Know Sure Thing                       | KST      | KST:10,15,20,30,10,10,10,15,9 |\n| Linear Regression                     | LR       | LR:2,-2,100,close             |\n| Moving Average Convergence Divergence | MACD     | MACD:12,26,close,9            |\n| Momentum                              | MOM      | MOM:10,close                  |\n| Money Flow Index                      | MFI      | MFI:14                        |\n| Moon Phases                           | MP       | -                             |\n| Moving Average                        | MA       | MA:9,close                    |\n| On Balance Volume                     | OBV      | -                             |\n| Pivot Points High Low                 | PPHL     | PPHL:10,10                    |\n| Pivot Points Standard                 | PPS      | PPS:Traditional,Auto,15       |\n| Price Oscillator                      | PPO      | PPO:10,21,close               |\n| Price Volume Trend                    | PVT      | -                             |\n| Rate of Change                        | ROC      | ROC:9,close                   |\n| Relative Strength Index               | RSI      | RSI:14,close                  |\n| Vigor Index                           | RVGI     | RVGI:10                       |\n| Volatility Index                      | RVI      | RVI:10                        |\n| Parabolic SAR                         | SAR      | SAR:0.02,0.02,0.02            |\n| SMI Ergodic Indicator                 | SMII     | SMII:20,5,5                   |\n| SMI Ergodic Oscillator                | SMIO     | SMIO:20,5,5                   |\n| Stochastic                            | STOCH    | STOCH:14,3,3                  |\n| Stochastic RSI                        | STOCHRSI | STOCHRSI:3,3,14,14,close      |\n| Triple EMA                            | TEMA     | TEMA:9                        |\n| Triple Exponential Average            | TRIX     | TRIX:18                       |\n| Ultimate Oscillator                   | UO       | UO:7,14,28                    |\n| Volatility Stop                       | VSTOP    | VSTOP:20,close,2              |\n| Volume                                | VOL      | VOL:20                        |\n| Volume Weighted Average               | VWAP     | VWAP:Session,hlc3             |\n| Volume Weighted Moving Average        | VWMA     | VWMA:20,close                 |\n| Weighted Moving Average               | WMA      | WMA:9,close                   |\n| Williams Alligator                    | WA       | WA:13,8,5                     |\n| William %R                            | WR       | WR:14,close                   |\n| Williams Fractal                      | WF       | -                             |\n| Zig Zag                               | ZZ       | -                             | defaults to MACD\n    :param string? format: `The field must be valid format.`\n\nSupport: `png`, `jpeg` defaults to png\n    :param string? theme: `The field must be valid color theme.`\n\nSupport: `light`, `dark` defaults to dark\n    :param string? interval: `The field must be valid interval.`\n\nSupport: `1m`,`3m`,`5m`,`15m`,`30m`,`45m`,`1h`,`2h`,`3h`,`4h`,`1d`,`1w` defaults to 1d\n    :param integer? width: `The field must be within the valid range.`\n\nMinimum: `320`\n\n| Plan  | Max width |\n| ----- | --------- |\n| BASIC | 800 | defaults to 800\n    :param integer? height: `The field must be within the valid range.`\n\nMinimum: `240`\n\n| Plan  | Max height |\n| ----- | --------- |\n| BASIC | 600 | defaults to 600\n    :param string? timezone: `The field must be valid timezone.`\n\n| Timezone                       | Description                 |\n| ------------------------------ | --------------------------- |\n| Etc/UTC                        | UTC                         |\n| Pacific/Honolulu               | (UTC-10) Honolulu           |\n| America/Juneau                 | (UTC-9) Juneau              |\n| America/Los_Angeles            | (UTC-8) Los Angeles         |\n| America/Vancouver              | (UTC-8) Vancouver           |\n| US/Mountain                    | (UTC-7) Denver              |\n| America/Phoenix                | (UTC-7) Phoenix             |\n| America/Chicago                | (UTC-6) Chicago             |\n| America/Mexico_City            | (UTC-6) Mexico City         |\n| America/El_Salvador            | (UTC-6) San Salvador        |\n| America/Bogota                 | (UTC-5) Bogota              |\n| America/Lima                   | (UTC-5) Lima                |\n| America/New_York               | (UTC-5) New York            |\n| America/Toronto                | (UTC-5) Toronto             |\n| America/Caracas                | (UTC-4) Caracas             |\n| America/Argentina/Buenos_Aires | (UTC-3) Buenos Aires        |\n| America/Santiago               | (UTC-3) Santiago            |\n| America/Sao_Paulo              | (UTC-3) Sao Paulo           |\n| Europe/Dublin                  | (UTC) Dublin                |\n| Europe/Lisbon                  | (UTC) Lisbon                |\n| Europe/London                  | (UTC) London                |\n| Atlantic/Reykjavik             | (UTC) Reykjavik             |\n| Europe/Amsterdam               | (UTC+1) Amsterdam           |\n| Europe/Belgrade                | (UTC+1) Belgrade            |\n| Europe/Berlin                  | (UTC+1) Berlin              |\n| Europe/Brussels                | (UTC+1) Brussels            |\n| Europe/Copenhagen              | (UTC+1) Copenhagen          |\n| Africa/Lagos                   | (UTC+1) Lagos               |\n| Europe/Luxembourg              | (UTC+1) Luxembourg          |\n| Europe/Madrid                  | (UTC+1) Madrid              |\n| Europe/Malta                   | (UTC+1) Malta               |\n| Europe/Oslo                    | (UTC+1) Oslo                |\n| Europe/Paris                   | (UTC+1) Paris               |\n| Europe/Rome                    | (UTC+1) Rome                |\n| Europe/Stockholm               | (UTC+1) Stockholm           |\n| Europe/Warsaw                  | (UTC+1) Warsaw              |\n| Europe/Zurich                  | (UTC+1) Zurich              |\n| Europe/Athens                  | (UTC+2) Athens              |\n| Africa/Cairo                   | (UTC+2) Cairo               |\n| Europe/Helsinki                | (UTC+2) Helsinki            |\n| Asia/Jerusalem                 | (UTC+2) Jerusalem           |\n| Africa/Johannesburg            | (UTC+2) Johannesburg        |\n| Europe/Riga                    | (UTC+2) Riga                |\n| Europe/Tallinn                 | (UTC+2) Tallinn             |\n| Europe/Vilnius                 | (UTC+2) Vilnius             |\n| Asia/Bahrain                   | (UTC+3) Bahrain             |\n| Europe/Istanbul                | (UTC+3) Istanbul            |\n| Asia/Kuwait                    | (UTC+3) Kuwait              |\n| Europe/Moscow                  | (UTC+3) Moscow              |\n| Asia/Qatar                     | (UTC+3) Qatar               |\n| Asia/Riyadh                    | (UTC+3) Riyadh              |\n| Asia/Tehran                    | (UTC+3:30) Tehran           |\n| Asia/Dubai                     | (UTC+4) Dubai               |\n| Asia/Muscat                    | (UTC+4) Muscat              |\n| Asia/Ashkhabad                 | (UTC+5) Ashgabat            |\n| Asia/Kolkata                   | (UTC+5:30) Kolkata          |\n| Asia/Almaty                    | (UTC+6) Almaty              |\n| Asia/Bangkok                   | (UTC+7) Bangkok             |\n| Asia/Ho_Chi_Minh               | (UTC+7) Ho Chi Minh         |\n| Asia/Jakarta                   | (UTC+7) Jakarta             |\n| Asia/Chongqing                 | (UTC+8) Chongqing           |\n| Asia/Hong_Kong                 | (UTC+8) Hong Kong           |\n| Australia/Perth                | (UTC+8) Perth               |\n| Asia/Shanghai                  | (UTC+8) Shanghai            |\n| Asia/Singapore                 | (UTC+8) Singapore           |\n| Asia/Taipei                    | (UTC+8) Taipei              |\n| Asia/Seoul                     | (UTC+9) Seoul               |\n| Asia/Tokyo                     | (UTC+9) Tokyo               |\n| Australia/Brisbane             | (UTC+10) Brisbane           |\n| Australia/Adelaide             | (UTC+10:30) Adelaide        |\n| Australia/Sydney               | (UTC+11) Sydney             |\n| Pacific/Norfolk                | (UTC+12) Norfolk Island     |\n| Pacific/Auckland               | (UTC+13) New Zealand        |\n| Pacific/Fakaofo                | (UTC+13) Tokelau            |\n| Pacific/Chatham                | (UTC+13:45) Chatham Islands | defaults to Etc/UTC\n    '''\n    return await self._request_rapid_api('rapi_chart_img_advanced_chart',kwargs)\n        "
    },
    "rapi_chart_img_mini_chart": {
        "api_name": "mini_chart",
        "category": "Financial",
        "tool_name": "chart_img",
        "code": "async def rapi_chart_img_mini_chart(self,*args,**kwargs):\n    '''CHART-IMG.COM API designed to take screenshots of the most popular crypto charts and tools.\n    \n    \n\n    :param integer? width: `The field must be within the valid range.`\n\nMinimum: `320`\n\n| Plan  | Max width |\n| ----- | --------- |\n| BASIC | 800 | defaults to 800\n    :param string? format: `The field must be valid format.`\n\nSupport: `png`, `jpeg` defaults to png\n    :param string? symbol: `The field must be valid tradingview symbol.`\n\nExample: `BINANCE:BTCUSDT`, `BINANCE:BTCUSDTPERP` defaults to BINANCE:BTCUSDT\n    :param string? interval: `The field must be valid interval.`\n\nSupport: `1d`,`1M`, `3M`, `1Y`, `5Y`, `all` defaults to 1M\n    :param string? theme: `The field must be valid color theme.`\n\nSupport: `light`, `dark` defaults to dark\n    :param integer? height: `The field must be within the valid range.`\n\nMinimum: `220`\n\n| Plan  | Max height |\n| ----- | --------- |\n| BASIC | 600 | defaults to 400\n    '''\n    return await self._request_rapid_api('rapi_chart_img_mini_chart',kwargs)\n        "
    },
    "rapi_number2text_get_text_from_number": {
        "api_name": "get_text_from_number",
        "category": "Financial",
        "tool_name": "number2text",
        "code": "async def rapi_number2text_get_text_from_number(self,*args,**kwargs):\n    '''This API helps to convert the numbers into equivalent words in different languages (English, French, German, Romanian, Spanish, Portuguese, Hungarian, Italian, Danish, Polish)\n    \n    \n\n    :param string language:  defaults to en\n    :param integer number:  defaults to 1200.50\n    :param string? currency:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_number2text_get_text_from_number',kwargs)\n        "
    },
    "rapi_alpha_vantage_busca_por_simbolo": {
        "api_name": "busca_por_simbolo",
        "category": "Financial",
        "tool_name": "alpha_vantage",
        "code": "async def rapi_alpha_vantage_busca_por_simbolo(self,*args,**kwargs):\n    '''Bolsa de valores\n    \n    \n\n    :param string function:  defaults to TIME_SERIES_DAILY\n    :param string apikey:  defaults to NMITMJSJJ77WJPCF\n    :param string outputsize:  defaults to compact\n    :param string symbol:  defaults to VINO11.SA\n    '''\n    return await self._request_rapid_api('rapi_alpha_vantage_busca_por_simbolo',kwargs)\n        "
    },
    "rapi_job_salary_data_job_salary": {
        "api_name": "job_salary",
        "category": "Financial",
        "tool_name": "job_salary_data",
        "code": "async def rapi_job_salary_data_job_salary(self,*args,**kwargs):\n    '''Extremely Fast and Simple API to get Job Salary/Pay Estimations from all major publishers - Payscale, Glassdoor, Salary.com, ZipRecruiter and many others, all in a single API.\n    \n    \n\n    :param string job_title: Job title for which to get salary estimation defaults to nodejs developer\n    :param string location: Free-text location/area in which to get salary estimation defaults to new york, usa\n    :param string? radius: Search radius in km (measured from *location*).\nDefault: `200`. defaults to 200\n    '''\n    return await self._request_rapid_api('rapi_job_salary_data_job_salary',kwargs)\n        "
    },
    "rapi_yahoo_finance_news": {
        "api_name": "news",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_news(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_news',kwargs)\n        "
    },
    "rapi_yahoo_finance_trend": {
        "api_name": "trend",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_trend(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbl:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_trend',kwargs)\n        "
    },
    "rapi_yahoo_finance_index": {
        "api_name": "index",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_index(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_index',kwargs)\n        "
    },
    "rapi_yahoo_finance_historic_data": {
        "api_name": "historic_data",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_historic_data(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to tsla\n    :param string interval:  defaults to 1d\n    :param string range:  defaults to 15d\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_historic_data',kwargs)\n        "
    },
    "rapi_yahoo_finance_balance_sheet": {
        "api_name": "balance_sheet",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_balance_sheet(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_balance_sheet',kwargs)\n        "
    },
    "rapi_yahoo_finance_price": {
        "api_name": "price",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_price(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to eth-usd\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_price',kwargs)\n        "
    },
    "rapi_yahoo_finance_esg": {
        "api_name": "esg",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_esg(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symb:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_esg',kwargs)\n        "
    },
    "rapi_yahoo_finance_finance_analytics": {
        "api_name": "finance_analytics",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_finance_analytics(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symb:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_finance_analytics',kwargs)\n        "
    },
    "rapi_yahoo_finance_earnings": {
        "api_name": "earnings",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_earnings(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symb:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_earnings',kwargs)\n        "
    },
    "rapi_yahoo_finance_statistics": {
        "api_name": "statistics",
        "category": "Financial",
        "tool_name": "yahoo_finance",
        "code": "async def rapi_yahoo_finance_statistics(self,*args,**kwargs):\n    '''Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more\n    \n    \n\n    :param string symbol:  defaults to tsla\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_statistics',kwargs)\n        "
    },
    "rapi_calcx_investment_api_get_calculate_investment": {
        "api_name": "get_calculate_investment",
        "category": "Financial",
        "tool_name": "calcx_investment_api",
        "code": "async def rapi_calcx_investment_api_get_calculate_investment(self,*args,**kwargs):\n    '''This API calculates the simple interest, compound interest, investment returns, return on investment, capital gains tax, and annual percentage yield of an investment based on the input parameters.\n    \n    \n\n    :param integer rate: The interest rate of the investment defaults to 6.5\n    :param integer principal: The amount of money invested defaults to 50000.00\n    :param integer time: The length of the investment in months defaults to 36\n    :param string? compounding: The frequency of compounding interest. Valid options are **yearly**, **semi-annually**, **quarterly**, and **monthly**. Default is **yearly** defaults to yearly\n    :param string? format: Whether to format the result. Valid options are **yes** and **no**. Default is **yes** defaults to yes\n    :param string? to_currency: The currency to convert the result to. Default is USD\n\nCurrencies currently supported include:\nCurrency\tCode\tName\nNOK\tkr\tNorwegian Krone\nEUR\t\u20ac\tEuro\nHKD\t$\tHong Kong Dollar\nCZK\tK\u010d\tCzech Koruna\nTHB\t\u0e3f\tThai Baht\nCHF\tCHF\tSwiss Franc\nUSD\t$\tUS Dollar\nISK\tkr\tIcelandic Kr\u00f3na\nGBP\t\u00a3\tBritish Pound Sterling\nJPY\t\u00a5\tJapanese Yen\nBGN\t\u043b\u0432\tBulgarian Lev\nCNY\t\u00a5\tChinese Yuan\nIDR\tRp\tIndonesian Rupiah\nTRY\t\u20ba\tTurkish Lira\nNZD\t$\tNew Zealand Dollar\nSGD\t$\tSingapore Dollar\nDKK\tkr\tDanish Krone\nAUD\t$\tAustralian Dollar\nBRL\tR$\tBrazilian Real\nILS\t\u20aa\tIsraeli Shekel\nSEK\tkr\tSwedish Krona\nCAD\t$\tCanadian Dollar\nHUF\tFt\tHungarian Forint\nZAR\tR\tSouth African Rand\nMYR\tRM\tMalaysian Ringgit\nKRW\t\u20a9\tSouth Korean Won\nMXN\t$\tMexican Peso\nINR\t\u20b9\tIndian Rupee\nPHP\t\u20b1\tPhilippine Peso\nPLN\tz\u0142\tPolish Zloty\nRON\tlei\tRomanian Leu defaults to USD\n    :param string? in_currency: The currency of the investment. Default is USD\n\nCurrencies currently supported include:\nCurrency\tCode\tName\nNOK\tkr\tNorwegian Krone\nEUR\t\u20ac\tEuro\nHKD\t$\tHong Kong Dollar\nCZK\tK\u010d\tCzech Koruna\nTHB\t\u0e3f\tThai Baht\nCHF\tCHF\tSwiss Franc\nUSD\t$\tUS Dollar\nISK\tkr\tIcelandic Kr\u00f3na\nGBP\t\u00a3\tBritish Pound Sterling\nJPY\t\u00a5\tJapanese Yen\nBGN\t\u043b\u0432\tBulgarian Lev\nCNY\t\u00a5\tChinese Yuan\nIDR\tRp\tIndonesian Rupiah\nTRY\t\u20ba\tTurkish Lira\nNZD\t$\tNew Zealand Dollar\nSGD\t$\tSingapore Dollar\nDKK\tkr\tDanish Krone\nAUD\t$\tAustralian Dollar\nBRL\tR$\tBrazilian Real\nILS\t\u20aa\tIsraeli Shekel\nSEK\tkr\tSwedish Krona\nCAD\t$\tCanadian Dollar\nHUF\tFt\tHungarian Forint\nZAR\tR\tSouth African Rand\nMYR\tRM\tMalaysian Ringgit\nKRW\t\u20a9\tSouth Korean Won\nMXN\t$\tMexican Peso\nINR\t\u20b9\tIndian Rupee\nPHP\t\u20b1\tPhilippine Peso\nPLN\tz\u0142\tPolish Zloty\nRON\tlei\tRomanian Leu defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_calcx_investment_api_get_calculate_investment',kwargs)\n        "
    },
    "rapi_stock_api_stock_getlateststock": {
        "api_name": "stock_getlateststock",
        "category": "Financial",
        "tool_name": "stock_api",
        "code": "async def rapi_stock_api_stock_getlateststock(self,*args,**kwargs):\n    '''Provide Stock API\n- Get Korean Gold Share\n- Get Stock Overview\n    \n    \n\n    :param string tickerId: tickerId\n    '''\n    return await self._request_rapid_api('rapi_stock_api_stock_getlateststock',kwargs)\n        "
    },
    "rapi_stock_api_ping": {
        "api_name": "ping",
        "category": "Financial",
        "tool_name": "stock_api",
        "code": "async def rapi_stock_api_ping(self,*args,**kwargs):\n    '''Provide Stock API\n- Get Korean Gold Share\n- Get Stock Overview\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stock_api_ping',kwargs)\n        "
    },
    "rapi_stock_api_stock_getoverview": {
        "api_name": "stock_getoverview",
        "category": "Financial",
        "tool_name": "stock_api",
        "code": "async def rapi_stock_api_stock_getoverview(self,*args,**kwargs):\n    '''Provide Stock API\n- Get Korean Gold Share\n- Get Stock Overview\n    \n    \n\n    :param string tickerId: tickerId\n    '''\n    return await self._request_rapid_api('rapi_stock_api_stock_getoverview',kwargs)\n        "
    },
    "rapi_economic_events_calendar_events": {
        "api_name": "events",
        "category": "Financial",
        "tool_name": "economic_events_calendar",
        "code": "async def rapi_economic_events_calendar_events(self,*args,**kwargs):\n    '''Get complete list of all economic events. Filter by countries & dates\n    \n    \n\n    :param string? to: \n    :param string? from: \n    :param string? countries:  defaults to US,GB\n    '''\n    return await self._request_rapid_api('rapi_economic_events_calendar_events',kwargs)\n        "
    },
    "rapi_open_defi_web_pair_details": {
        "api_name": "web_pair_details",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_pair_details(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    :param string chain_slug: Blockchain slug, e.g, \"ethereum\" defaults to ethereum\n    :param string pair_slug: \nTrading pair friendly presentation (token0 symbol - token1 symbol) or pair pool contract address.\n\nSymbols can be in any order: base token - quote token or quote token - base token.\n\nIf multiple trading pairs match the same symbol the one with the highest volume is returned\n(assuming other trading pairs are ones with a fake token).\n\nExamples of accepted `pair_slugs`:\n- `ETH-USDC`\n- `eth-usdc`\n- `WETH-USDC`\n- `USDC-WETH`\n- `0xB4e16d0168e52d35CaCD2c6185b44281Ec28C9Dc`\n\nThe response is a composite of pair summary information, additional trading volume numbers and related links.\n defaults to ETH-USDC\n    :param string exchange_slug: Exchange path slug e.g, `sushiswap`\n defaults to sushiswap\n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_pair_details',kwargs)\n        "
    },
    "rapi_open_defi_web_exchanges": {
        "api_name": "web_exchanges",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_exchanges(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    :param string? sort: \nWhat kind of sort options is available for the output.\n\nThe default `usd_volume_30d` sorts the exchanges based on their monthly volume.\n defaults to usd_volume_30d\n    :param string? direction: Sort order:\n * `asc` - Ascending, from A to Z\n * `desc` - Descending, from Z to A\n defaults to desc\n    :param boolean? filter_zero_volume: When set, do not return exchanegs which have had no volume for last 30 days.\n\nThis will speed up the response a bit, as most exchanges are ghost exchanges.\n\n    :param string? chain_slug: Blockchain slug, e.g, `ethereum` for Ethereum mainnet.\n\nIf present, list exchanges only for this chain.\n\n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_exchanges',kwargs)\n        "
    },
    "rapi_open_defi_web_impressive_numbers": {
        "api_name": "web_impressive_numbers",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_impressive_numbers(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_impressive_numbers',kwargs)\n        "
    },
    "rapi_open_defi_web_chains": {
        "api_name": "web_chains",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_chains(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_chains',kwargs)\n        "
    },
    "rapi_open_defi_web_chain_details": {
        "api_name": "web_chain_details",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_chain_details(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    :param string chain_slug: Blockchain slug, e.g, `ethereum` for Ethereum mainnet\n defaults to ethereum\n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_chain_details',kwargs)\n        "
    },
    "rapi_open_defi_web_top_momentum": {
        "api_name": "web_top_momentum",
        "category": "Financial",
        "tool_name": "open_defi",
        "code": "async def rapi_open_defi_web_top_momentum(self,*args,**kwargs):\n    '''Open DeFi API gives you access to decentralised exchange trading data, liquidity and tokens across multiple blockchains.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_open_defi_web_top_momentum',kwargs)\n        "
    },
    "rapi_ohlc_history_forex_get_symbols": {
        "api_name": "get_symbols",
        "category": "Financial",
        "tool_name": "ohlc_history_forex",
        "code": "async def rapi_ohlc_history_forex_get_symbols(self,*args,**kwargs):\n    '''Api to fetch forex Open High Low Close prices for a variety of currency pairs \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ohlc_history_forex_get_symbols',kwargs)\n        "
    },
    "rapi_candlestick_chart_binance_charts": {
        "api_name": "binance_charts",
        "category": "Financial",
        "tool_name": "candlestick_chart",
        "code": "async def rapi_candlestick_chart_binance_charts(self,*args,**kwargs):\n    '''This API returns candlestick charts images (base64) so you can use them wherever you want!\n    \n    \n\n    :param string symbol: Symbol for the traiding pair\n\nYou can see every traiding pair available [here](https://coinmarketcap.com/en/exchanges/binance) defaults to BTCUSDT\n    :param integer? limit: Amount of candles in the chart\n\n- Default: 16\n- Type: Integer. Maximum 1000 defaults to 16\n    :param string? interval: Time interval for each candle.\n\n- Default: 1m\n\n## Time intervals\n- m: Minutes\n- h: Hours\n- d: Days\n- w: Weeks\n- M: Months\n\nList of intervals:\n- 1m\n- 3m\n- 5m\n- 15m\n- 30m\n- 1h\n- 2h\n- 4h\n- 6h\n- 8h\n- 12h\n- 1d\n- 3d\n- 1w\n- 1M defaults to 1m\n    :param integer? lastPrice: The last price that the chart must have. This could be useful if there is some delay between your analysis and the call to this API, and that delay could make a difference between the numbers and the chart. If not given, the chart will be created with Binance last price\n\n- Type: Number defaults to 57500\n    '''\n    return await self._request_rapid_api('rapi_candlestick_chart_binance_charts',kwargs)\n        "
    },
    "rapi_currency_converter_v2_supported_currencies": {
        "api_name": "supported_currencies",
        "category": "Financial",
        "tool_name": "currency_converter_v2",
        "code": "async def rapi_currency_converter_v2_supported_currencies(self,*args,**kwargs):\n    '''Convert between 160+ Currencies\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_converter_v2_supported_currencies',kwargs)\n        "
    },
    "rapi_currency_converter_v3_converter": {
        "api_name": "converter",
        "category": "Financial",
        "tool_name": "currency_converter_v3",
        "code": "async def rapi_currency_converter_v3_converter(self,*args,**kwargs):\n    '''It allows you to convert one currency to another based on the current exchange rate. It is possible to perform currency conversion to multiple currencies at once\n    \n    \n\n    :param string target: This parameter specifies the currency code of the currency that you want to convert to. It is a mandatory parameter and should be a valid three-letter currency code. If there are multiple target currencies, they should be separated by a comma (',') . defaults to EUR,INR,JPY\n    :param string source: This parameter represents the currency from which you want to convert. It is a mandatory parameter and should be a valid three-letter currency code, such as USD (United States Dollar) or EUR (Euro) or many others. defaults to USD\n    :param integer? amount: This parameter represents the amount that you want to convert from the source currency to the target currency. It is an optional parameter, and if not provided, the default value will be set to 1 defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_currency_converter_v3_converter',kwargs)\n        "
    },
    "rapi_currency_converter_v3_currencies": {
        "api_name": "currencies",
        "category": "Financial",
        "tool_name": "currency_converter_v3",
        "code": "async def rapi_currency_converter_v3_currencies(self,*args,**kwargs):\n    '''It allows you to convert one currency to another based on the current exchange rate. It is possible to perform currency conversion to multiple currencies at once\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_converter_v3_currencies',kwargs)\n        "
    },
    "rapi_cion_prices_api_git_all_world_currencies_prices": {
        "api_name": "git_all_world_currencies_prices",
        "category": "Financial",
        "tool_name": "cion_prices_api",
        "code": "async def rapi_cion_prices_api_git_all_world_currencies_prices(self,*args,**kwargs):\n    '''An api showing current prices of coins \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cion_prices_api_git_all_world_currencies_prices',kwargs)\n        "
    },
    "rapi_crypto_symbols_by_api_ninjas_v1_cryptosymbols": {
        "api_name": "v1_cryptosymbols",
        "category": "Financial",
        "tool_name": "crypto_symbols_by_api_ninjas",
        "code": "async def rapi_crypto_symbols_by_api_ninjas_v1_cryptosymbols(self,*args,**kwargs):\n    '''Get a complete list of hundreds of cryptocurrency ticker symbols. See more info at https://api-ninjas.com/api/cryptosymbols.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_symbols_by_api_ninjas_v1_cryptosymbols',kwargs)\n        "
    },
    "rapi_currenciesexchangerateapi_4_date_endpoint": {
        "api_name": "4_date_endpoint",
        "category": "Financial",
        "tool_name": "currenciesexchangerateapi",
        "code": "async def rapi_currenciesexchangerateapi_4_date_endpoint(self,*args,**kwargs):\n    '''CurrenciesRatesAPI is a RESTful API that provides currency conversion and exchange rate information.This API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses.\n    \n    \n\n    :param string base:  defaults to eur\n    :param string symbols:  defaults to usd\n    :param DATE (YYYY-MM-DD)? date:  defaults to 2023-02-01\n    '''\n    return await self._request_rapid_api('rapi_currenciesexchangerateapi_4_date_endpoint',kwargs)\n        "
    },
    "rapi_currenciesexchangerateapi_6_timeseries_endpoint": {
        "api_name": "6_timeseries_endpoint",
        "category": "Financial",
        "tool_name": "currenciesexchangerateapi",
        "code": "async def rapi_currenciesexchangerateapi_6_timeseries_endpoint(self,*args,**kwargs):\n    '''CurrenciesRatesAPI is a RESTful API that provides currency conversion and exchange rate information.This API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses.\n    \n    \n\n    :param DATE (YYYY-MM-DD) end_date:  defaults to 2023-02-02\n    :param DATE (YYYY-MM-DD) start_date:  defaults to 2023-01-01\n    :param string? base:  defaults to usd\n    :param string? symbols:  defaults to eur\n    '''\n    return await self._request_rapid_api('rapi_currenciesexchangerateapi_6_timeseries_endpoint',kwargs)\n        "
    },
    "rapi_currenciesexchangerateapi_3_fluctuation_endpoint": {
        "api_name": "3_fluctuation_endpoint",
        "category": "Financial",
        "tool_name": "currenciesexchangerateapi",
        "code": "async def rapi_currenciesexchangerateapi_3_fluctuation_endpoint(self,*args,**kwargs):\n    '''CurrenciesRatesAPI is a RESTful API that provides currency conversion and exchange rate information.This API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses.\n    \n    \n\n    :param DATE (YYYY-MM-DD) end_date:  defaults to 2023-02-28\n    :param string base:  defaults to eur\n    :param DATE (YYYY-MM-DD) start_date:  defaults to 2023-01-01\n    :param string? symbols:  defaults to usd\n    '''\n    return await self._request_rapid_api('rapi_currenciesexchangerateapi_3_fluctuation_endpoint',kwargs)\n        "
    },
    "rapi_currenciesexchangerateapi_2_convert_endpoint": {
        "api_name": "2_convert_endpoint",
        "category": "Financial",
        "tool_name": "currenciesexchangerateapi",
        "code": "async def rapi_currenciesexchangerateapi_2_convert_endpoint(self,*args,**kwargs):\n    '''CurrenciesRatesAPI is a RESTful API that provides currency conversion and exchange rate information.This API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses.\n    \n    \n\n    :param integer amount:  defaults to 100\n    :param string from:  defaults to EUR\n    :param string to:  defaults to USD\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_currenciesexchangerateapi_2_convert_endpoint',kwargs)\n        "
    },
    "rapi_cryptoinfo_get_last_5_news": {
        "api_name": "get_last_5_news",
        "category": "Financial",
        "tool_name": "cryptoinfo",
        "code": "async def rapi_cryptoinfo_get_last_5_news(self,*args,**kwargs):\n    '''We collect news from more than 30 crypto/financial sources and process them using neural networks. We estimate news sentiment and uniqueness and provide text summarization along with other informative indicators.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptoinfo_get_last_5_news',kwargs)\n        "
    },
    "rapi_cryptoinfo_get_last_5_economic_calendar_news": {
        "api_name": "get_last_5_economic_calendar_news",
        "category": "Financial",
        "tool_name": "cryptoinfo",
        "code": "async def rapi_cryptoinfo_get_last_5_economic_calendar_news(self,*args,**kwargs):\n    '''We collect news from more than 30 crypto/financial sources and process them using neural networks. We estimate news sentiment and uniqueness and provide text summarization along with other informative indicators.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptoinfo_get_last_5_economic_calendar_news',kwargs)\n        "
    },
    "rapi_cryptoinfo_get_economic_calendar_news_over_a_period_of_time": {
        "api_name": "get_economic_calendar_news_over_a_period_of_time",
        "category": "Financial",
        "tool_name": "cryptoinfo",
        "code": "async def rapi_cryptoinfo_get_economic_calendar_news_over_a_period_of_time(self,*args,**kwargs):\n    '''We collect news from more than 30 crypto/financial sources and process them using neural networks. We estimate news sentiment and uniqueness and provide text summarization along with other informative indicators.\n    \n    \n\n    :param string? time_start:  defaults to 2022-12-20 17:34:58+00:00\n    :param string? time_finish:  defaults to 2023-02-13 19:34:58+00:00\n    '''\n    return await self._request_rapid_api('rapi_cryptoinfo_get_economic_calendar_news_over_a_period_of_time',kwargs)\n        "
    },
    "rapi_cleardil_fetchallassociationsbelongingtoamatch": {
        "api_name": "fetchallassociationsbelongingtoamatch",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_fetchallassociationsbelongingtoamatch(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string customer_a_id:  defaults to customer_a_id\n    :param string screening_a_id:  defaults to screening_a_id\n    :param string match_id:  defaults to match_id\n    '''\n    return await self._request_rapid_api('rapi_cleardil_fetchallassociationsbelongingtoamatch',kwargs)\n        "
    },
    "rapi_cleardil_searchscreeningsdone": {
        "api_name": "searchscreeningsdone",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_searchscreeningsdone(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string status:  defaults to DONE\n    '''\n    return await self._request_rapid_api('rapi_cleardil_searchscreeningsdone',kwargs)\n        "
    },
    "rapi_cleardil_searchverificationsdone": {
        "api_name": "searchverificationsdone",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_searchverificationsdone(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string status:  defaults to DONE\n    '''\n    return await self._request_rapid_api('rapi_cleardil_searchverificationsdone',kwargs)\n        "
    },
    "rapi_cleardil_fetchaverification": {
        "api_name": "fetchaverification",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_fetchaverification(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string verification_a_id:  defaults to verification_a_id\n    :param string customer_a_id:  defaults to customer_a_id\n    '''\n    return await self._request_rapid_api('rapi_cleardil_fetchaverification',kwargs)\n        "
    },
    "rapi_cleardil_fetchamatch": {
        "api_name": "fetchamatch",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_fetchamatch(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string customer_a_id:  defaults to customer_a_id\n    :param string match_1_id:  defaults to match_1_id\n    :param string screening_a_id:  defaults to screening_a_id\n    '''\n    return await self._request_rapid_api('rapi_cleardil_fetchamatch',kwargs)\n        "
    },
    "rapi_cleardil_fetchallmatches": {
        "api_name": "fetchallmatches",
        "category": "Financial",
        "tool_name": "cleardil",
        "code": "async def rapi_cleardil_fetchallmatches(self,*args,**kwargs):\n    '''The End-to-End KYC compliance solution An integrated platform to effortlessly meet all your Anti-Money Laundering and KYC requirements - on the back of a modern Web Portal and a developer-friendly API.\n    \n    \n\n    :param string screening_a_id:  defaults to screening_a_id\n    :param string customer_a_id:  defaults to customer_a_id\n    '''\n    return await self._request_rapid_api('rapi_cleardil_fetchallmatches',kwargs)\n        "
    },
    "rapi_stockseyes_get_latest_quote": {
        "api_name": "get_latest_quote",
        "category": "Financial",
        "tool_name": "stockseyes",
        "code": "async def rapi_stockseyes_get_latest_quote(self,*args,**kwargs):\n    '''stocksEyes is a comprehensive API that provides real-time candlestick data (OHLCV - open, high, low, close, volume) for stocks and other securities. With stocksEyes, you have access to live prices and last traded prices, as well as a wealth of historical data. This powerful tool is ideal for traders and investors looking to stay up-to-date on the latest market trends and make informed investment decisions. With its user-friendly interface and reliable data sources, stocksEyes is the go-to sol...\n    \n    \n\n    :param string tradingSymbol: Check the list of all supported tradingSymbols at [https://stockseyes.com/group/all](https://stockseyes.com/group/all) , you can download as csv also. Mainly, all major stocks which are part of nifty500, nifty 50, nifty next 50, nifty midcap50, nifty sector indices, nifty bank are supported. For exact details check the link.\n defaults to RELIANCE\n    '''\n    return await self._request_rapid_api('rapi_stockseyes_get_latest_quote',kwargs)\n        "
    },
    "rapi_stockseyes_get_last_n_candles_nse": {
        "api_name": "get_last_n_candles_nse",
        "category": "Financial",
        "tool_name": "stockseyes",
        "code": "async def rapi_stockseyes_get_last_n_candles_nse(self,*args,**kwargs):\n    '''stocksEyes is a comprehensive API that provides real-time candlestick data (OHLCV - open, high, low, close, volume) for stocks and other securities. With stocksEyes, you have access to live prices and last traded prices, as well as a wealth of historical data. This powerful tool is ideal for traders and investors looking to stay up-to-date on the latest market trends and make informed investment decisions. With its user-friendly interface and reliable data sources, stocksEyes is the go-to sol...\n    \n    \n\n    :param integer numberOfCandles: Number of candles to be fetched (max 100). defaults to 10\n    :param string tradingSymbol: Check the list of all supported tradingSymbols at [https://stockseyes.com/group/all](https://stockseyes.com/group/all) , you can download as csv also. Mainly, all major stocks which are part of nifty500, nifty 50, nifty next 50, nifty midcap50, nifty sector indices, nifty bank are supported. For exact details check the link.\n defaults to RELIANCE\n    :param string timeFrame: 1m -> 1 minute candle\n5m -> 5 minute candle\n15m -> 15 minute candle\n1h -> 1 hour candle defaults to 1m\n    '''\n    return await self._request_rapid_api('rapi_stockseyes_get_last_n_candles_nse',kwargs)\n        "
    },
    "rapi_crypto_news_v2_yahoofinance": {
        "api_name": "yahoofinance",
        "category": "Financial",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_yahoofinance(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources. (non-scraped)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_yahoofinance',kwargs)\n        "
    },
    "rapi_crypto_news_v2_coinjournal": {
        "api_name": "coinjournal",
        "category": "Financial",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_coinjournal(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources. (non-scraped)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_coinjournal',kwargs)\n        "
    },
    "rapi_crypto_news_v2_cointelegraph": {
        "api_name": "cointelegraph",
        "category": "Financial",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_cointelegraph(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources. (non-scraped)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_cointelegraph',kwargs)\n        "
    },
    "rapi_crypto_news_v2_coindesk": {
        "api_name": "coindesk",
        "category": "Financial",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_coindesk(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources. (non-scraped)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_coindesk',kwargs)\n        "
    },
    "rapi_crypto_news_v2_all_news": {
        "api_name": "all_news",
        "category": "Financial",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_all_news(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources. (non-scraped)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_all_news',kwargs)\n        "
    },
    "rapi_bank_swift_codes_swift_codes_by_country": {
        "api_name": "swift_codes_by_country",
        "category": "Financial",
        "tool_name": "bank_swift_codes",
        "code": "async def rapi_bank_swift_codes_swift_codes_by_country(self,*args,**kwargs):\n    '''Lookup country banks and their SWIFT codes\n    \n    \n\n    :param string country_code:  defaults to AU\n    '''\n    return await self._request_rapid_api('rapi_bank_swift_codes_swift_codes_by_country',kwargs)\n        "
    },
    "rapi_bank_swift_codes_banks_by_country": {
        "api_name": "banks_by_country",
        "category": "Financial",
        "tool_name": "bank_swift_codes",
        "code": "async def rapi_bank_swift_codes_banks_by_country(self,*args,**kwargs):\n    '''Lookup country banks and their SWIFT codes\n    \n    \n\n    :param string country_code:  defaults to AU\n    '''\n    return await self._request_rapid_api('rapi_bank_swift_codes_banks_by_country',kwargs)\n        "
    },
    "rapi_bank_swift_codes_swift_code": {
        "api_name": "swift_code",
        "category": "Financial",
        "tool_name": "bank_swift_codes",
        "code": "async def rapi_bank_swift_codes_swift_code(self,*args,**kwargs):\n    '''Lookup country banks and their SWIFT codes\n    \n    \n\n    :param string swift_code:  defaults to NATAAU33033\n    '''\n    return await self._request_rapid_api('rapi_bank_swift_codes_swift_code',kwargs)\n        "
    },
    "rapi_redstone_prices": {
        "api_name": "prices",
        "category": "Financial",
        "tool_name": "redstone",
        "code": "async def rapi_redstone_prices(self,*args,**kwargs):\n    '''RedStone API provides pricing data for crypto, stocks, currencies and commodities\n    \n    \n\n    :param string provider:  defaults to redstone\n    :param string? symbol:  defaults to AR\n    :param string? symbols:  defaults to BTC,USD,AR,ETH,BNB\n    '''\n    return await self._request_rapid_api('rapi_redstone_prices',kwargs)\n        "
    },
    "rapi_futures_supported_assets": {
        "api_name": "supported_assets",
        "category": "Financial",
        "tool_name": "futures",
        "code": "async def rapi_futures_supported_assets(self,*args,**kwargs):\n    '''Get daily and historical futures prices for 26 major financial assets and their monthly futures contracts. Lithium, WTI Oil, Brent Crude, Wheat, etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_futures_supported_assets',kwargs)\n        "
    },
    "rapi_futures_latest_contracts_for_symbol": {
        "api_name": "latest_contracts_for_symbol",
        "category": "Financial",
        "tool_name": "futures",
        "code": "async def rapi_futures_latest_contracts_for_symbol(self,*args,**kwargs):\n    '''Get daily and historical futures prices for 26 major financial assets and their monthly futures contracts. Lithium, WTI Oil, Brent Crude, Wheat, etc.\n    \n    \n\n    :param string symbol:  defaults to CL\n    :param integer? month:  defaults to 7\n    '''\n    return await self._request_rapid_api('rapi_futures_latest_contracts_for_symbol',kwargs)\n        "
    },
    "rapi_crypto_update_live_get_top_50_cryptocurrencies_details": {
        "api_name": "get_top_50_cryptocurrencies_details",
        "category": "Financial",
        "tool_name": "crypto_update_live",
        "code": "async def rapi_crypto_update_live_get_top_50_cryptocurrencies_details(self,*args,**kwargs):\n    '''This API gives live updates about cryptocurrency prices and the latest news regarding it.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_update_live_get_top_50_cryptocurrencies_details',kwargs)\n        "
    },
    "rapi_crypto_update_live_get_cryptocurrency_details": {
        "api_name": "get_cryptocurrency_details",
        "category": "Financial",
        "tool_name": "crypto_update_live",
        "code": "async def rapi_crypto_update_live_get_cryptocurrency_details(self,*args,**kwargs):\n    '''This API gives live updates about cryptocurrency prices and the latest news regarding it.\n    \n    \n\n    :param string crypto-name: \n    '''\n    return await self._request_rapid_api('rapi_crypto_update_live_get_cryptocurrency_details',kwargs)\n        "
    },
    "rapi_crypto_update_live_get_latest_news_on_cryptocurrency": {
        "api_name": "get_latest_news_on_cryptocurrency",
        "category": "Financial",
        "tool_name": "crypto_update_live",
        "code": "async def rapi_crypto_update_live_get_latest_news_on_cryptocurrency(self,*args,**kwargs):\n    '''This API gives live updates about cryptocurrency prices and the latest news regarding it.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_update_live_get_latest_news_on_cryptocurrency',kwargs)\n        "
    },
    "rapi_crypto_update_live_get_top_50_cryptocurrencies_list": {
        "api_name": "get_top_50_cryptocurrencies_list",
        "category": "Financial",
        "tool_name": "crypto_update_live",
        "code": "async def rapi_crypto_update_live_get_top_50_cryptocurrencies_list(self,*args,**kwargs):\n    '''This API gives live updates about cryptocurrency prices and the latest news regarding it.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_update_live_get_top_50_cryptocurrencies_list',kwargs)\n        "
    },
    "rapi_pikwy_api_documentation": {
        "api_name": "api_documentation",
        "category": "Media",
        "tool_name": "pikwy",
        "code": "async def rapi_pikwy_api_documentation(self,*args,**kwargs):\n    '''Capture a website screenshot online\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pikwy_api_documentation',kwargs)\n        "
    },
    "rapi_colorful_get_random_named_color": {
        "api_name": "get_random_named_color",
        "category": "Media",
        "tool_name": "colorful",
        "code": "async def rapi_colorful_get_random_named_color(self,*args,**kwargs):\n    '''Get random colors with information, convert between color codes, and more.\n    \n    \n\n    :param integer? quantity:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_colorful_get_random_named_color',kwargs)\n        "
    },
    "rapi_colorful_get_a_random_color": {
        "api_name": "get_a_random_color",
        "category": "Media",
        "tool_name": "colorful",
        "code": "async def rapi_colorful_get_a_random_color(self,*args,**kwargs):\n    '''Get random colors with information, convert between color codes, and more.\n    \n    \n\n    :param integer? quantity:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_colorful_get_a_random_color',kwargs)\n        "
    },
    "rapi_cheap_youtube_api_search_suggestions": {
        "api_name": "search_suggestions",
        "category": "Media",
        "tool_name": "cheap_youtube_api",
        "code": "async def rapi_cheap_youtube_api_search_suggestions(self,*args,**kwargs):\n    '''100% Uptime & Reliable | Blazing fast | Fully Featured | 1000x cheaper than Youtube API v3\n    \n    \n\n    :param string q:  defaults to crypto\n    '''\n    return await self._request_rapid_api('rapi_cheap_youtube_api_search_suggestions',kwargs)\n        "
    },
    "rapi_cheap_youtube_api_trending_music_gaming_news_movies": {
        "api_name": "trending_music_gaming_news_movies",
        "category": "Media",
        "tool_name": "cheap_youtube_api",
        "code": "async def rapi_cheap_youtube_api_trending_music_gaming_news_movies(self,*args,**kwargs):\n    '''100% Uptime & Reliable | Blazing fast | Fully Featured | 1000x cheaper than Youtube API v3\n    \n    \n\n    :param string? type:  defaults to gaming\n    :param string? region:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_cheap_youtube_api_trending_music_gaming_news_movies',kwargs)\n        "
    },
    "rapi_cheap_youtube_api_playlist": {
        "api_name": "playlist",
        "category": "Media",
        "tool_name": "cheap_youtube_api",
        "code": "async def rapi_cheap_youtube_api_playlist(self,*args,**kwargs):\n    '''100% Uptime & Reliable | Blazing fast | Fully Featured | 1000x cheaper than Youtube API v3\n    \n    \n\n    :param string id:  defaults to PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb\n    '''\n    return await self._request_rapid_api('rapi_cheap_youtube_api_playlist',kwargs)\n        "
    },
    "rapi_shazam_artist_top_tracks": {
        "api_name": "artist_top_tracks",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_artist_top_tracks(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer limit:  defaults to 5\n    :param integer artist_id:  defaults to 40543550\n    '''\n    return await self._request_rapid_api('rapi_shazam_artist_top_tracks',kwargs)\n        "
    },
    "rapi_shazam_top_track_by_city": {
        "api_name": "top_track_by_city",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_top_track_by_city(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param string city_name:  defaults to Moscow\n    :param string country_code:  defaults to RU\n    :param integer? limit:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_shazam_top_track_by_city',kwargs)\n        "
    },
    "rapi_shazam_top_track_by_country": {
        "api_name": "top_track_by_country",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_top_track_by_country(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer limit:  defaults to 2\n    :param string country_code:  defaults to RU\n    '''\n    return await self._request_rapid_api('rapi_shazam_top_track_by_country',kwargs)\n        "
    },
    "rapi_shazam_track_recommendations": {
        "api_name": "track_recommendations",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_track_recommendations(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer track_id:  defaults to 296831279\n    :param integer limit:  defaults to 4\n    '''\n    return await self._request_rapid_api('rapi_shazam_track_recommendations',kwargs)\n        "
    },
    "rapi_shazam_search_track": {
        "api_name": "search_track",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_search_track(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer limit:  defaults to 5\n    :param string track:  defaults to Love Yourself\n    '''\n    return await self._request_rapid_api('rapi_shazam_search_track',kwargs)\n        "
    },
    "rapi_shazam_track_info": {
        "api_name": "track_info",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_track_info(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer track_id:  defaults to 296831279\n    '''\n    return await self._request_rapid_api('rapi_shazam_track_info',kwargs)\n        "
    },
    "rapi_shazam_artist_search": {
        "api_name": "artist_search",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_artist_search(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer limit:  defaults to 5\n    :param string artist:  defaults to Justin Bieber\n    '''\n    return await self._request_rapid_api('rapi_shazam_artist_search',kwargs)\n        "
    },
    "rapi_shazam_artist_info": {
        "api_name": "artist_info",
        "category": "Media",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_artist_info(self,*args,**kwargs):\n    '''Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.\n    \n    \n\n    :param integer artist_id:  defaults to 40543550\n    '''\n    return await self._request_rapid_api('rapi_shazam_artist_info',kwargs)\n        "
    },
    "rapi_streamlinewatch_streaming_guide_shows_id_episodes": {
        "api_name": "shows_id_episodes",
        "category": "Media",
        "tool_name": "streamlinewatch_streaming_guide",
        "code": "async def rapi_streamlinewatch_streaming_guide_shows_id_episodes(self,*args,**kwargs):\n    '''StreamlineWatch's streaming guide APIs for Movies and Shows\n    \n    \n\n    :param string platform: Retrieve sources from the specified platform.\n*required, possible values: ios, android, androidtv, web* defaults to ios\n    :param integer id: The id of the show defaults to 82856\n    :param integer? offset: Skips this number of records.\n*optional, default: 0* defaults to 0\n    :param string? region: Filter by region.\n*optional, default: US*\n*possible values: US, FR*\n defaults to US\n    :param integer? limit: Number of records to return per request.\n*optional, default: 25, max: 100* defaults to 25\n    :param string? sort: Sort the records in regular order or reverse order to get most recent episodes first.\n*optional, default: regular*\n*possible values: regular, reverse* defaults to regular\n    :param integer? season: A particular season for a show. Do not specify any value to get the episodes from all the seasons.\n*optional* defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_streamlinewatch_streaming_guide_shows_id_episodes',kwargs)\n        "
    },
    "rapi_streamlinewatch_streaming_guide_movies": {
        "api_name": "movies",
        "category": "Media",
        "tool_name": "streamlinewatch_streaming_guide",
        "code": "async def rapi_streamlinewatch_streaming_guide_movies(self,*args,**kwargs):\n    '''StreamlineWatch's streaming guide APIs for Movies and Shows\n    \n    \n\n    :param integer? limit: Number of records to return per request.\n*optional, default: 25, max: 100* defaults to 5\n    :param string? sources: Filter records by source. Multiple sources may be comma-separated.\n*optional*\n*possible values: free, tv_everywhere, subscription, purchase, a specific source such as netflix or hulu* defaults to netflix,hulu\n    :param string? region: Filter by region.\n*optional, default: US*\n*possible values: US, FR*\n defaults to US\n    :param integer? offset: Skips this number of records.\n*optional, default: 0* defaults to 0\n    :param string? sort: Method to sort the records.\n*optional, default: alphabetical*\n*possible values:alphabetical, popularity*\n defaults to popularity\n    '''\n    return await self._request_rapid_api('rapi_streamlinewatch_streaming_guide_movies',kwargs)\n        "
    },
    "rapi_streamlinewatch_streaming_guide_sources": {
        "api_name": "sources",
        "category": "Media",
        "tool_name": "streamlinewatch_streaming_guide",
        "code": "async def rapi_streamlinewatch_streaming_guide_sources(self,*args,**kwargs):\n    '''StreamlineWatch's streaming guide APIs for Movies and Shows\n    \n    \n\n    :param string region: Filter by region.\n*required, possible values: US, FR* defaults to US\n    '''\n    return await self._request_rapid_api('rapi_streamlinewatch_streaming_guide_sources',kwargs)\n        "
    },
    "rapi_bruzu_image_generation_endpoint": {
        "api_name": "image_generation_endpoint",
        "category": "Media",
        "tool_name": "bruzu",
        "code": "async def rapi_bruzu_image_generation_endpoint(self,*args,**kwargs):\n    '''Image Generation API\n    \n    \n\n    :param integer? width:  defaults to 500\n    :param string? backgroundImage:  defaults to https://source.unsplash.com/500x500/\n    :param integer? height:  defaults to 500\n    '''\n    return await self._request_rapid_api('rapi_bruzu_image_generation_endpoint',kwargs)\n        "
    },
    "rapi_giphy_search": {
        "api_name": "search",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_search(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string q: search query term or phrase defaults to funny cat\n    :param string? limit: number of results to return, maximum 100. Default 25.\n    :param string? offset: results offset, defaults to 0.\n    :param string? rating: limit results to those rated (y,g, pg, pg-13 or r)\n    '''\n    return await self._request_rapid_api('rapi_giphy_search',kwargs)\n        "
    },
    "rapi_giphy_get_gif_by_id": {
        "api_name": "get_gif_by_id",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_get_gif_by_id(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string gif_id:  defaults to feqkVgjJpYtjy\n    '''\n    return await self._request_rapid_api('rapi_giphy_get_gif_by_id',kwargs)\n        "
    },
    "rapi_giphy_get_gifs_by_id": {
        "api_name": "get_gifs_by_id",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_get_gifs_by_id(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string ids:  defaults to feqkVgjJpYtjy,7rzbxdu0ZEXLy\n    '''\n    return await self._request_rapid_api('rapi_giphy_get_gifs_by_id',kwargs)\n        "
    },
    "rapi_giphy_translate": {
        "api_name": "translate",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_translate(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string s: term or phrase to translate into a GIF defaults to superman\n    :param string? rating: limit results to those rated (y,g, pg, pg-13 or r).\n    '''\n    return await self._request_rapid_api('rapi_giphy_translate',kwargs)\n        "
    },
    "rapi_giphy_random": {
        "api_name": "random",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_random(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string tag: the GIF tag to limit randomness by\n    :param string? rating: limit results to those rated (y,g, pg, pg-13 or r).\n    '''\n    return await self._request_rapid_api('rapi_giphy_random',kwargs)\n        "
    },
    "rapi_giphy_sticker_search": {
        "api_name": "sticker_search",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_sticker_search(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string q: search query term or phrase defaults to cat\n    :param string? limit: number of results to return, maximum 100. Default 25\n    :param string? offset: results offset, defaults to 0\n    :param string? rating: limit results to those rated (y,g, pg, pg-13 or r).\n    '''\n    return await self._request_rapid_api('rapi_giphy_sticker_search',kwargs)\n        "
    },
    "rapi_giphy_sticker_roulette": {
        "api_name": "sticker_roulette",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_sticker_roulette(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string tag:  defaults to oops\n    '''\n    return await self._request_rapid_api('rapi_giphy_sticker_roulette',kwargs)\n        "
    },
    "rapi_giphy_sticker_trending": {
        "api_name": "sticker_trending",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_sticker_trending(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string s: term or phrase to translate into a GIF defaults to hungry\n    :param string? limit: number of results to return, maximum 100. Default: 25\n    :param string? offset: results offset, defaults to 0\n    :param string? fmt: return results in html or json format.\n    :param string? rating: limit results to those rated (y,g, pg, pg-13 or r).\n    '''\n    return await self._request_rapid_api('rapi_giphy_sticker_trending',kwargs)\n        "
    },
    "rapi_giphy_sticker_translate": {
        "api_name": "sticker_translate",
        "category": "Media",
        "tool_name": "giphy",
        "code": "async def rapi_giphy_sticker_translate(self,*args,**kwargs):\n    '''Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.\n    \n    \n\n    :param string s: term or phrase to translate into a gif defaults to hungry\n    '''\n    return await self._request_rapid_api('rapi_giphy_sticker_translate',kwargs)\n        "
    },
    "rapi_vimeo_getrelatedchannels": {
        "api_name": "getrelatedchannels",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getrelatedchannels(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string category: Category name\n    :param string format: json or xml or php\n    :param integer? page: The page number to show.\n    :param integer? per_page: Number of items to show on each page. Max 50.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getrelatedchannels',kwargs)\n        "
    },
    "rapi_vimeo_getvideosbytag": {
        "api_name": "getvideosbytag",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getvideosbytag(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string format: json/php/xml\n    :param string tag: The tag to get\n    :param integer? page: Page number to show\n    :param string? per_page: Number of items to show on each page. Max 50.\n    :param boolean? summary_response: Set this parameter to get back more information.\n    :param boolean? full_response: Set this parameter to get back the full video information.\n    :param string? sort: Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked. defaults to most_commented\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getvideosbytag',kwargs)\n        "
    },
    "rapi_vimeo_getallchannels": {
        "api_name": "getallchannels",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getallchannels(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string format: json/xml/php\n    :param string per_page: Number of items to show on each page. Max 50.\n    :param string? sort: Method to sort by: newest, oldest, alphabetical, most_videos, most_subscribed, or most_recently_updated. defaults to most_recently_updated\n    :param integer? page: The page number to show.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getallchannels',kwargs)\n        "
    },
    "rapi_vimeo_getrelatedtags": {
        "api_name": "getrelatedtags",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getrelatedtags(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string category: The Name of category\n    :param string format: json or xml or php\n    :param integer? page: The page number to show\n    :param integer? per_page: Number of items to show on each page. Max 50.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getrelatedtags',kwargs)\n        "
    },
    "rapi_vimeo_searchvideos": {
        "api_name": "searchvideos",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_searchvideos(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string format: json/xml/php\n    :param string query: The search terms\n    :param string? user_id: The ID number or username of the user.\n    :param integer? page: The page number to show.\n    :param integer? per_page: Number of items to show on each page. Max 50.\n    :param boolean? summary_response: Set this parameter to get back more information.\n    :param boolean? full_response: Set this parameter to get back the full video information.\n    :param string? sort: Method to sort by: relevant, newest, oldest, most_played, most_commented, or most_liked.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_searchvideos',kwargs)\n        "
    },
    "rapi_vimeo_getchannelinfo": {
        "api_name": "getchannelinfo",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getchannelinfo(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string format: json/xml/php\n    :param string channel_id: The numeric id of the channel or its url name.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getchannelinfo',kwargs)\n        "
    },
    "rapi_vimeo_getrelatedpeople": {
        "api_name": "getrelatedpeople",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getrelatedpeople(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string category: The name of the category.\n    :param string format: json or xml or php defaults to json\n    :param integer? page: The page number to show.\n    :param integer? per_page: Number of items to show on each page. Max 50.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getrelatedpeople',kwargs)\n        "
    },
    "rapi_vimeo_getvideoscomment": {
        "api_name": "getvideoscomment",
        "category": "Media",
        "tool_name": "vimeo",
        "code": "async def rapi_vimeo_getvideoscomment(self,*args,**kwargs):\n    '''Vimeo API\n    \n    \n\n    :param string format: json/php/xml\n    :param string video_id: The ID of the video.\n    :param integer? page: The page number to show.\n    :param integer? per_page: Number of items to show on each page. Max 50.\n    '''\n    return await self._request_rapid_api('rapi_vimeo_getvideoscomment',kwargs)\n        "
    },
    "rapi_youtube_video_info_get_video_info": {
        "api_name": "get_video_info",
        "category": "Media",
        "tool_name": "youtube_video_info",
        "code": "async def rapi_youtube_video_info_get_video_info(self,*args,**kwargs):\n    '''\nThe YouTube API is a powerful tool that provides developers with access to a wide range of information about videos on the YouTube platform. With the API, developers can retrieve data such as video views, likes, dislikes,  and other relevant information. This allows them to create applications and services that leverage this data to enhance user experiences or perform various analytical tasks.\n    \n    \n\n    :param string videoId:  defaults to h1PYEJOhAiI\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_info_get_video_info',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_categories": {
        "api_name": "get_categories",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_categories(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_categories',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_user_posts": {
        "api_name": "get_user_posts",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_user_posts(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    :param string username:  defaults to kleido007\n    :param string? counter: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n    :param string? after: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_user_posts',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_user_profile": {
        "api_name": "get_user_profile",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_user_profile(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    :param string username:  defaults to kleido007\n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_user_profile',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_post_data_download_video_photo": {
        "api_name": "get_post_data_download_video_photo",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_post_data_download_video_photo(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    :param string? post_id:  defaults to adPXX3Q\n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_post_data_download_video_photo',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_posts_from_page": {
        "api_name": "get_posts_from_page",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_posts_from_page(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    :param string category: Supports categories returned from the /get_pages endpoint\n defaults to trending\n    :param string? counter: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n\n    :param string? after: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n\n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_posts_from_page',kwargs)\n        "
    },
    "rapi_9gag_api_detailed_get_posts_from_category": {
        "api_name": "get_posts_from_category",
        "category": "Media",
        "tool_name": "9gag_api_detailed",
        "code": "async def rapi_9gag_api_detailed_get_posts_from_category(self,*args,**kwargs):\n    '''Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.\n    \n    \n\n    :param string category:  defaults to sports\n    :param string? counter: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n\n    :param string? after: leave blank for first request. For subsequent requests, send the counter and after parameter you got from the previous request.\n\n    '''\n    return await self._request_rapid_api('rapi_9gag_api_detailed_get_posts_from_category',kwargs)\n        "
    },
    "rapi_music_trivia_getgamelevel": {
        "api_name": "getgamelevel",
        "category": "Media",
        "tool_name": "music_trivia",
        "code": "async def rapi_music_trivia_getgamelevel(self,*args,**kwargs):\n    '''A Music Trivia API driven by listeners of ZPlayer, a media player on Android\n    \n    \n\n    :param integer? level: paginated level\n    :param string? output: set output format type , 'xml' or 'json'\n    '''\n    return await self._request_rapid_api('rapi_music_trivia_getgamelevel',kwargs)\n        "
    },
    "rapi_tiktok_download_video_get_feed_video_list_by_region": {
        "api_name": "get_feed_video_list_by_region",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_get_feed_video_list_by_region(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string region: region code\nby get region list api defaults to JP\n    :param string? count: max 20\nInaccurate\n\n defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_get_feed_video_list_by_region',kwargs)\n        "
    },
    "rapi_tiktok_download_video_search_video_list_by_keywords": {
        "api_name": "search_video_list_by_keywords",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_search_video_list_by_keywords(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string keywords:  defaults to \u8e0a\u3063\u3066\u307f\u305f\n    :param string? sort_type: \nSort by\n\n0 - Relevance\n1 - Like count\n3 - Date posted defaults to 0\n    :param string? publish_time: \nPublish time filter\n\n0 - ALL\n1 - Past 24 hours\n7 - This week\n30 - This month\n90 - Last 3 months\n180 - Last 6 months defaults to 0\n    :param string? cursor: Search for videos from different regions defaults to 0\n    :param string? region:  defaults to US\n    :param string? count: hasMore is true\nload next page defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_search_video_list_by_keywords',kwargs)\n        "
    },
    "rapi_tiktok_download_video_get_tiktok_video_info": {
        "api_name": "get_tiktok_video_info",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_get_tiktok_video_info(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string hd: Get HD Video(High bit rate). This increases the total request time a little.\nresponse: data.hdplay defaults to 1\n    :param string url: 7106658991907802411\nor\nhttps://www.tiktok.com/@tiktok/video/7106658991907802411 defaults to https://www.tiktok.com/@tiktok/video/7106658991907802411\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_get_tiktok_video_info',kwargs)\n        "
    },
    "rapi_tiktok_download_video_search_user": {
        "api_name": "search_user",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_search_user(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string cursor: OPTIONAL\ncursor\nhasMore is True, load next page defaults to 0\n    :param string keywords: REQUIRED\nuser nickname defaults to tiktok\n    :param string count: max 30 defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_search_user',kwargs)\n        "
    },
    "rapi_tiktok_download_video_get_music_info": {
        "api_name": "get_music_info",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_get_music_info(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string url: \nid or https://vm.tiktok.com/xxxxxxx defaults to 7002634556977908485\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_get_music_info',kwargs)\n        "
    },
    "rapi_tiktok_download_video_get_music_post_video_list": {
        "api_name": "get_music_post_video_list",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_get_music_post_video_list(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string cursor: has more defaults to 0\n    :param string count: max 35 default 10 defaults to 20\n    :param string music_id:  defaults to 7002634556977908485\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_get_music_post_video_list',kwargs)\n        "
    },
    "rapi_tiktok_download_video_user_follower_list": {
        "api_name": "user_follower_list",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_user_follower_list(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string user_id:  defaults to 107955\n    :param string? time: OPTIONAL\nhasMore is True load next page defaults to 0\n    :param string? count: max 200 defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_user_follower_list',kwargs)\n        "
    },
    "rapi_tiktok_download_video_user_post_videos": {
        "api_name": "user_post_videos",
        "category": "Media",
        "tool_name": "tiktok_download_video",
        "code": "async def rapi_tiktok_download_video_user_post_videos(self,*args,**kwargs):\n    '''Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n\n    \n    \n\n    :param string? count: max 35 defaults to 10\n    :param string? unique_id: unique_id\ntiktok or @tiktok defaults to @tiktok\n    :param string? cursor: hasMore defaults to 0\n    :param string? user_id: user_id\n107955 defaults to 107955\n    '''\n    return await self._request_rapid_api('rapi_tiktok_download_video_user_post_videos',kwargs)\n        "
    },
    "rapi_bing_image_search_trending": {
        "api_name": "trending",
        "category": "Media",
        "tool_name": "bing_image_search",
        "code": "async def rapi_bing_image_search_trending(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that turns any app into an image search resource.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bing_image_search_trending',kwargs)\n        "
    },
    "rapi_public_url_share_media_sources_statistics": {
        "api_name": "media_sources_statistics",
        "category": "Media",
        "tool_name": "public_url_share",
        "code": "async def rapi_public_url_share_media_sources_statistics(self,*args,**kwargs):\n    '''public-url-share\n    \n    \n\n    :param string? apiKey:  defaults to b7ed776c-7f0f-4dd2-ba9d-9c6a6e1f44cb\n    '''\n    return await self._request_rapid_api('rapi_public_url_share_media_sources_statistics',kwargs)\n        "
    },
    "rapi_public_url_share_top_50_startups_news_from_the_last_month": {
        "api_name": "top_50_startups_news_from_the_last_month",
        "category": "Media",
        "tool_name": "public_url_share",
        "code": "async def rapi_public_url_share_top_50_startups_news_from_the_last_month(self,*args,**kwargs):\n    '''public-url-share\n    \n    \n\n    :param DATE (YYYY-MM-DD)? from:  defaults to 2022-12-19\n    :param string? sourceGroup:  defaults to top100\n    :param string? apiKey:  defaults to b7ed776c-7f0f-4dd2-ba9d-9c6a6e1f44cb\n    :param string? language:  defaults to en\n    :param string? topic:  defaults to Startups\n    '''\n    return await self._request_rapid_api('rapi_public_url_share_top_50_startups_news_from_the_last_month',kwargs)\n        "
    },
    "rapi_twitch_api_get_channel_points_context": {
        "api_name": "get_channel_points_context",
        "category": "Media",
        "tool_name": "twitch_api",
        "code": "async def rapi_twitch_api_get_channel_points_context(self,*args,**kwargs):\n    '''Detailed API for twitch. Stream data, streamer data, chat data, streamer cards data etc.\nfor twitch.\n    \n    \n\n    :param string channel:  defaults to xqc\n    '''\n    return await self._request_rapid_api('rapi_twitch_api_get_channel_points_context',kwargs)\n        "
    },
    "rapi_twitch_api_get_streamer_info": {
        "api_name": "get_streamer_info",
        "category": "Media",
        "tool_name": "twitch_api",
        "code": "async def rapi_twitch_api_get_streamer_info(self,*args,**kwargs):\n    '''Detailed API for twitch. Stream data, streamer data, chat data, streamer cards data etc.\nfor twitch.\n    \n    \n\n    :param string channel:  defaults to xqc\n    '''\n    return await self._request_rapid_api('rapi_twitch_api_get_streamer_info',kwargs)\n        "
    },
    "rapi_twitch_api_get_channel_panels": {
        "api_name": "get_channel_panels",
        "category": "Media",
        "tool_name": "twitch_api",
        "code": "async def rapi_twitch_api_get_channel_panels(self,*args,**kwargs):\n    '''Detailed API for twitch. Stream data, streamer data, chat data, streamer cards data etc.\nfor twitch.\n    \n    \n\n    :param string channel:  defaults to xQc\n    '''\n    return await self._request_rapid_api('rapi_twitch_api_get_channel_panels',kwargs)\n        "
    },
    "rapi_twitch_api_get_channel_leaderboards": {
        "api_name": "get_channel_leaderboards",
        "category": "Media",
        "tool_name": "twitch_api",
        "code": "async def rapi_twitch_api_get_channel_leaderboards(self,*args,**kwargs):\n    '''Detailed API for twitch. Stream data, streamer data, chat data, streamer cards data etc.\nfor twitch.\n    \n    \n\n    :param string? channel:  defaults to shadoune666\n    '''\n    return await self._request_rapid_api('rapi_twitch_api_get_channel_leaderboards',kwargs)\n        "
    },
    "rapi_twitch_api_get_channel_goals": {
        "api_name": "get_channel_goals",
        "category": "Media",
        "tool_name": "twitch_api",
        "code": "async def rapi_twitch_api_get_channel_goals(self,*args,**kwargs):\n    '''Detailed API for twitch. Stream data, streamer data, chat data, streamer cards data etc.\nfor twitch.\n    \n    \n\n    :param string channel:  defaults to shadoune666\n    '''\n    return await self._request_rapid_api('rapi_twitch_api_get_channel_goals',kwargs)\n        "
    },
    "rapi_real_time_amazon_data_product_details_experimental": {
        "api_name": "product_details_experimental",
        "category": "eCommerce",
        "tool_name": "real_time_amazon_data",
        "code": "async def rapi_real_time_amazon_data_product_details_experimental(self,*args,**kwargs):\n    '''Fast and Simple API to search for products, offers and reviews on Amazon in real-time.\n    \n    \n\n    :param string asin: Product ASIN for which to get details. Supports batching of up to 10 ASINs in a single request, separated by comma (e.g. *B08PPDJWC8,B07ZPKBL9V, B08BHXG144*).\n\nNote that each ASIN in a batch request is counted as a single request against the plan quota. defaults to B07ZPKBL9V\n    :param string? country: Sets the marketplace country, language and currency. \n\n**Default:** `US`\n\n**Allowed values:**  `US, AU, BR, CA, CN, FR, DE, IN, IT, MX, NL, SG, ES, TR, AE, GB, JP`\n defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_amazon_data_product_details_experimental',kwargs)\n        "
    },
    "rapi_real_time_amazon_data_product_category_list": {
        "api_name": "product_category_list",
        "category": "eCommerce",
        "tool_name": "real_time_amazon_data",
        "code": "async def rapi_real_time_amazon_data_product_category_list(self,*args,**kwargs):\n    '''Fast and Simple API to search for products, offers and reviews on Amazon in real-time.\n    \n    \n\n    :param string? country: Sets the marketplace country, language and currency. \n\n**Default:** `US`\n\n**Allowed values:**  `US, AU, BR, CA, CN, FR, DE, IN, IT, MX, NL, SG, ES, TR, AE, GB, JP`\n defaults to US\n    '''\n    return await self._request_rapid_api('rapi_real_time_amazon_data_product_category_list',kwargs)\n        "
    },
    "rapi_facebook_marketplace_categories": {
        "api_name": "categories",
        "category": "eCommerce",
        "tool_name": "facebook_marketplace",
        "code": "async def rapi_facebook_marketplace_categories(self,*args,**kwargs):\n    '''Get complete Facebook Marketplace data to include number sold, number saved, title, description, location and category of current and past listings on FBMP. \n\nWe are the ONLY provider of Facebook Marketplace data anywhere!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_facebook_marketplace_categories',kwargs)\n        "
    },
    "rapi_facebook_marketplace_products": {
        "api_name": "products",
        "category": "eCommerce",
        "tool_name": "facebook_marketplace",
        "code": "async def rapi_facebook_marketplace_products(self,*args,**kwargs):\n    '''Get complete Facebook Marketplace data to include number sold, number saved, title, description, location and category of current and past listings on FBMP. \n\nWe are the ONLY provider of Facebook Marketplace data anywhere!\n    \n    \n\n    :param integer? no_of_save:  defaults to 25\n    :param integer? min_sales:  defaults to 5\n    :param string? min_price:  defaults to 2.00\n    :param string? category:  defaults to Apparel\n    :param string? city:  defaults to New York\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_facebook_marketplace_products',kwargs)\n        "
    },
    "rapi_facebook_marketplace_cities": {
        "api_name": "cities",
        "category": "eCommerce",
        "tool_name": "facebook_marketplace",
        "code": "async def rapi_facebook_marketplace_cities(self,*args,**kwargs):\n    '''Get complete Facebook Marketplace data to include number sold, number saved, title, description, location and category of current and past listings on FBMP. \n\nWe are the ONLY provider of Facebook Marketplace data anywhere!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_facebook_marketplace_cities',kwargs)\n        "
    },
    "rapi_ikea_api_stores": {
        "api_name": "stores",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_stores(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_stores',kwargs)\n        "
    },
    "rapi_ikea_api_categories": {
        "api_name": "categories",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_categories(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    :param string? languageCode: Can be obtained through the  **Countries** endpoint, defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_categories',kwargs)\n        "
    },
    "rapi_ikea_api_product": {
        "api_name": "product",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_product(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    :param string productID: Can be obtained through the  **Search By Keyword or Category** endpoints,\n    :param string? languageCode: Can be obtained through the  **Countries** endpoint, defaults to en\n    :param string? store: Can be obtained through the  **Stores** endpoint,\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_product',kwargs)\n        "
    },
    "rapi_ikea_api_search_by_keyword_filters": {
        "api_name": "search_by_keyword_filters",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_search_by_keyword_filters(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    :param string keyword:  defaults to chair\n    :param string? languageCode: Can be obtained through the  **Countries** endpoint, defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_search_by_keyword_filters',kwargs)\n        "
    },
    "rapi_ikea_api_search_by_keyword": {
        "api_name": "search_by_keyword",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_search_by_keyword(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    :param string keyword:  defaults to chair\n    :param string? filters: **format**: *parameterId=valueId,parameterId=valueId*\nCan be obtained through the  **Search By Keyword Filters** endpoint,\n    :param string? languageCode: Can be obtained through the  **Countries** endpoint, defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_search_by_keyword',kwargs)\n        "
    },
    "rapi_ikea_api_search_by_category_filters": {
        "api_name": "search_by_category_filters",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_search_by_category_filters(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string categoryID: Can be obtained through the **Categories** endpoint, defaults to 10759\n    :param string countryCode: Can be obtained through the  **Countries** endpoint, defaults to us\n    :param string? languageCode: Can be obtained through the  **Countries** endpoint, defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_search_by_category_filters',kwargs)\n        "
    },
    "rapi_ikea_api_search_by_category": {
        "api_name": "search_by_category",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_search_by_category(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    :param string countryCode: Can be obtained through the **Countries** endpoint, defaults to us\n    :param string categoryID: Can be obtained through the **Categories** endpoint, defaults to 10759\n    :param string? filters: **Format**: *parameter=value_id,parameter=value_id*\nCan be obtained through the **Search By Category Filters** endpoint,\n    :param string? languageCode: Can be obtained through the **Countries** endpoint, defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ikea_api_search_by_category',kwargs)\n        "
    },
    "rapi_ikea_api_countries": {
        "api_name": "countries",
        "category": "eCommerce",
        "tool_name": "ikea_api",
        "code": "async def rapi_ikea_api_countries(self,*args,**kwargs):\n    '''This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ikea_api_countries',kwargs)\n        "
    },
    "rapi_zappos_realtime_data_zappos_search_product": {
        "api_name": "zappos_search_product",
        "category": "eCommerce",
        "tool_name": "zappos_realtime_data",
        "code": "async def rapi_zappos_realtime_data_zappos_search_product(self,*args,**kwargs):\n    '''Zappos Realtime Data\n    \n    \n\n    :param string keyword:  defaults to crocs body\n    :param string? sort: `best_seller , relevance, low_to_high, high_to_low, customer_rating, new_arrivals, brand_name` defaults to new_arrivals\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_zappos_realtime_data_zappos_search_product',kwargs)\n        "
    },
    "rapi_sephora_reviews_list_deprecated": {
        "api_name": "reviews_list_deprecated",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_reviews_list_deprecated(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param string ProductId:  defaults to P454378\n    :param integer? RatingValue: Filter by rating score from 1 to 5\n    :param integer? Limit: For paging purpose defaults to 60\n    :param integer? Offset: For paging purpose defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_sephora_reviews_list_deprecated',kwargs)\n        "
    },
    "rapi_sephora_categories_list_root_deprecated": {
        "api_name": "categories_list_root_deprecated",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_categories_list_root_deprecated(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sephora_categories_list_root_deprecated',kwargs)\n        "
    },
    "rapi_sephora_categories_v2_list_root_deprecated": {
        "api_name": "categories_v2_list_root_deprecated",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_categories_v2_list_root_deprecated(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sephora_categories_v2_list_root_deprecated',kwargs)\n        "
    },
    "rapi_sephora_reviews_v2_list": {
        "api_name": "reviews_v2_list",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_reviews_v2_list(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param integer id: The value of id field returned in .../products/v2/list endpoint.\n    :param string? country: One of the following : HK|AU|BN|ID|MY|NZ|PH|SG|TW|TH defaults to SG\n    :param string? sort: One of the following : recent|-recent defaults to recent\n    :param integer? size: The number of items per response for paging purpose defaults to 10\n    :param integer? number: The page index for paging purpose defaults to 1\n    :param boolean? native: true - Exclude Sephora US reviews\n    :param integer? variants: The value of variant -> data -> id field returned right in this endpoint. To filter reviews related to specific product variant.\n    :param string? language: One of the following and need to be pair with country parameter properly: en-HK|zh-HK|en-AU|en-BN|id-ID|en-ID|en-MY|en-NZ|en-PH|en-SG|en-TW|zh-TW|th-TH|en-TH defaults to en-SG\n    '''\n    return await self._request_rapid_api('rapi_sephora_reviews_v2_list',kwargs)\n        "
    },
    "rapi_sephora_products_v2_get_filters": {
        "api_name": "products_v2_get_filters",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_products_v2_get_filters(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param string? category: The value of \\\\\\\"id\\\\\\\" field returned in .../categories/v2/list endpoint. Separated by comma for multiple options. Ex : 801,805\n    :param string? country: One of the following : HK|AU|BN|ID|MY|NZ|PH|SG|TW|TH defaults to SG\n    :param string? brand: The value of \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\" field returned in .../brands/v2/list. Separated by comma for multiple options. Ex : 266,2636\n    :param string? others: Support only value : on_sale\n    :param integer? max_price: Filter products by price\n    :param string? search: Search product by term. Ex : bikini top\n    :param string? product_group: One of the following : new-arrivals|bestsellers\n    :param integer? min_price: Filter products by price\n    :param string? language: One of the following and need to be pair with country parameter properly: en-HK|zh-HK|en-AU|en-BN|id-ID|en-ID|en-MY|en-NZ|en-PH|en-SG|en-TW|zh-TW|th-TH|en-TH defaults to en-SG\n    :param string? filter_type: Filter products by types, the format is {id of filter-type}_{id of filter-value} returned in  .../products/v2/get-filters endpoint. Separated by comma for multiple options. Ex : 41_684,41_686,38_714,38_504\n    :param string? root_brand: Either root_brand or root_category is required. The value of \\\"slug-url\\\" field returned in .../brands/v2/list endpoint. Ex : aerin defaults to aerin\n    :param string? root_category: Either root_brand or root_category is required. The value of \\\"slug-url\\\" field returned in .../categories/v2/list. Ex : makeup defaults to makeup\n    '''\n    return await self._request_rapid_api('rapi_sephora_products_v2_get_filters',kwargs)\n        "
    },
    "rapi_sephora_products_v2_list": {
        "api_name": "products_v2_list",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_products_v2_list(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param integer? number: The page index for paging purpose defaults to 1\n    :param string? query: Search product by term. Ex : bikini top\n    :param integer? size: The number of items per response for paging purpose defaults to 30\n    :param string? country: One of the following : HK|AU|BN|ID|MY|NZ|PH|SG|TW|TH defaults to SG\n    :param string? sort: One of the following : relevance|sales|published_at|rating|price|-price defaults to sales\n    :param string? brand: The value of \\\\\\\\\\\\\\\"id\\\\\\\\\\\\\\\" field returned in .../brands/v2/list. Separated by comma for multiple options. Ex : 266,2636\n    :param string? product_group: One of the following : new-arrivals|bestsellers\n    :param integer? min_price: Filter products by price\n    :param string? others: Support only value : on_sale\n    :param string? category: The value of \\\\\\\"id\\\\\\\" field returned in .../categories/v2/list endpoint. Separated by comma for multiple options. Ex : 801,805\n    :param integer? max_price: Filter products by price\n    :param string? root_brand: The value of \\\\\\\\\\\\\\\"slug-url\\\\\\\\\\\\\\\" field returned in .../brands/v2/list endpoint. Ex : aerin\n    :param string? root_category: The value of \\\\\\\\\\\\\\\"slug-url\\\\\\\\\\\\\\\" field returned in .../categories/v2/list. Ex : makeup\n    :param string? language: One of the following and need to be pair with country parameter properly: en-HK|zh-HK|en-AU|en-BN|id-ID|en-ID|en-MY|en-NZ|en-PH|en-SG|en-TW|zh-TW|th-TH|en-TH defaults to en-SG\n    :param string? filter_type: Filter products by types, the format is {id of filter-type}_{id of filter-value} returned in  .../products/v2/get-filters endpoint. Separated by comma for multiple options. Ex : 41_684,41_686,38_714,38_504\n    '''\n    return await self._request_rapid_api('rapi_sephora_products_v2_list',kwargs)\n        "
    },
    "rapi_sephora_categories_v2_list": {
        "api_name": "categories_v2_list",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_categories_v2_list(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param string? country: One of the following : HK|AU|BN|ID|MY|NZ|PH|SG|TW|TH defaults to SG\n    :param integer? size: The number of items per response for paging purpose defaults to 100\n    :param integer? number: The page index for paging purpose defaults to 1\n    :param string? language: One of the following and need to be pair with country parameter properly: en-HK|zh-HK|en-AU|en-BN|id-ID|en-ID|en-MY|en-NZ|en-PH|en-SG|en-TW|zh-TW|th-TH|en-TH defaults to en-SG\n    '''\n    return await self._request_rapid_api('rapi_sephora_categories_v2_list',kwargs)\n        "
    },
    "rapi_sephora_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "eCommerce",
        "tool_name": "sephora",
        "code": "async def rapi_sephora_v2_auto_complete(self,*args,**kwargs):\n    '''Help to query for skincare, makeup shopping, hybrid products, hair products, fragrance, etc... as on sephora.com\n    \n    \n\n    :param string query: Any term or phrase that you are familiar with defaults to eyeshadows\n    :param string? country: One of the following : HK|AU|BN|ID|MY|NZ|PH|SG|TW|TH defaults to SG\n    :param string? language: One of the following and need to be pair with country parameter properly: en-HK|zh-HK|en-AU|en-BN|id-ID|en-ID|en-MY|en-NZ|en-PH|en-SG|en-TW|zh-TW|th-TH|en-TH defaults to en-SG\n    '''\n    return await self._request_rapid_api('rapi_sephora_v2_auto_complete',kwargs)\n        "
    },
    "rapi_kohls_reviews_list": {
        "api_name": "reviews_list",
        "category": "eCommerce",
        "tool_name": "kohls",
        "code": "async def rapi_kohls_reviews_list(self,*args,**kwargs):\n    '''Get online shopping deals, discounts and rewards from fashion to beauty, home furniture, clothing, shoes, electronics and more...\n    \n    \n\n    :param string ProductId: The value of webID returned in .../products/list endpoint defaults to 4201989\n    :param integer? Limit: For paging purpose defaults to 6\n    :param string? Sort: One of the followings : SubmissionTime:asc|SubmissionTime:desc|Rating:asc|Rating:desc|Helpfulness:asc|Helpfulness:desc|HasPhotos:asc|HasPhotos:desc|HasVideos:asc|HasVideos:desc defaults to SubmissionTime:desc\n    :param integer? Offset: For paging purpose defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_kohls_reviews_list',kwargs)\n        "
    },
    "rapi_amazon_product_reviews_amazonproductreviews": {
        "api_name": "amazonproductreviews",
        "category": "eCommerce",
        "tool_name": "amazon_product_reviews",
        "code": "async def rapi_amazon_product_reviews_amazonproductreviews(self,*args,**kwargs):\n    '''Amazon Product Reviews\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param integer pageNum:  defaults to 1\n    :param string domain:  defaults to amazon.com\n    :param string asin:  defaults to B01H6GUCCQ\n    '''\n    return await self._request_rapid_api('rapi_amazon_product_reviews_amazonproductreviews',kwargs)\n        "
    },
    "rapi_unofficial_shein_products_get_reviews": {
        "api_name": "products_get_reviews",
        "category": "eCommerce",
        "tool_name": "unofficial_shein",
        "code": "async def rapi_unofficial_shein_products_get_reviews(self,*args,**kwargs):\n    '''This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites\n    \n    \n\n    :param string? goods_spu: The value of 'productRelationID' returned in .../products/list or .../products/search defaults to m22022854841\n    :param string? cat_id: The value of cat&#95;id returned in .../products/list or .../products/search defaults to 1727\n    :param string? sku: The value of 'goods&#95;sn' returned in .../products/list or .../products/search defaults to rm2202285484176751\n    :param string? currency: The 3-letter currency code defaults to USD\n    :param string? goods_id: The value of 'goods_id' field returned in .../products/list or .../products/search endpoint defaults to 10196865\n    :param string? language: The 2-letter language code defaults to en\n    :param string? country: The 2-letter country code defaults to US\n    '''\n    return await self._request_rapid_api('rapi_unofficial_shein_products_get_reviews',kwargs)\n        "
    },
    "rapi_unofficial_shein_products_detail": {
        "api_name": "products_detail",
        "category": "eCommerce",
        "tool_name": "unofficial_shein",
        "code": "async def rapi_unofficial_shein_products_detail(self,*args,**kwargs):\n    '''This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites\n    \n    \n\n    :param string goods_id: The value of 'goods_id' field returned in .../products/list or .../products/search endpoint defaults to 2506647\n    :param string? currency: The 3-letter currency code defaults to USD\n    :param string? country: The 2-letter country code defaults to US\n    :param string? language: The 2-letter language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_unofficial_shein_products_detail',kwargs)\n        "
    },
    "rapi_unofficial_shein_products_list": {
        "api_name": "products_list",
        "category": "eCommerce",
        "tool_name": "unofficial_shein",
        "code": "async def rapi_unofficial_shein_products_list(self,*args,**kwargs):\n    '''This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites\n    \n    \n\n    :param string adp: The value of 'goodsId' returned in .../navigations/get-node-content endpoint defaults to 10170797\n    :param string cat_id: The value of 'hrefTarget' returned in .../navigations/get-node-content endpoint defaults to 1980\n    :param integer? max_price: Filter by price\n    :param integer? sort: One of the following : 0-Recommend|7-Top rated|8-Most popular|9-New arrivals|10-Price low to high|11-Price high to low defaults to 7\n    :param integer? min_price: Filter by price\n    :param string? filter: The value of 'attr&#95;filter' field OR {attr&#95;id}&#95;{attr&#95;value&#95;id} returned in .../products/get-filters endpoint. Separated by comma for multiple options. Ex : 87_1357-87_710,87_1352,etc...\n    :param string? currency: The 3-letter currency code defaults to USD\n    :param integer? page: The page index, for paging purpose defaults to 1\n    :param integer? limit: The number of items per response, for paging purpose defaults to 20\n    :param string? country: The 2-letter country code defaults to US\n    :param string? language: The 2-letter language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_unofficial_shein_products_list',kwargs)\n        "
    },
    "rapi_unofficial_shein_navigations_get_root": {
        "api_name": "navigations_get_root",
        "category": "eCommerce",
        "tool_name": "unofficial_shein",
        "code": "async def rapi_unofficial_shein_navigations_get_root(self,*args,**kwargs):\n    '''This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites\n    \n    \n\n    :param integer channelType: The value of 'id' field returned in .../navigations/get-tabs endpoint defaults to 2\n    :param string? currency: The 3-letter currency code defaults to USD\n    :param string? country: The 2-letter country code defaults to US\n    :param string? language: The 2-letter language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_unofficial_shein_navigations_get_root',kwargs)\n        "
    },
    "rapi_unofficial_shein_auto_complete": {
        "api_name": "auto_complete",
        "category": "eCommerce",
        "tool_name": "unofficial_shein",
        "code": "async def rapi_unofficial_shein_auto_complete(self,*args,**kwargs):\n    '''This API helps to query for almost everything that you see PUBLICLY on SHEIN's sites\n    \n    \n\n    :param string word: Any term or phrase that you are familiar with defaults to bikini top\n    :param string? currency: The 3-letter currency code defaults to USD\n    :param string? country: The 2-letter country code defaults to US\n    :param string? language: The 2-letter language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_unofficial_shein_auto_complete',kwargs)\n        "
    },
    "rapi_axesso_otto_data_service_reviews": {
        "api_name": "reviews",
        "category": "eCommerce",
        "tool_name": "axesso_otto_data_service",
        "code": "async def rapi_axesso_otto_data_service_reviews(self,*args,**kwargs):\n    '''Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.\n    \n    \n\n    :param string page:  defaults to 1\n    :param string productId:  defaults to 417479273\n    :param string? sortBy:  defaults to newest\n    '''\n    return await self._request_rapid_api('rapi_axesso_otto_data_service_reviews',kwargs)\n        "
    },
    "rapi_axesso_otto_data_service_keyword_search": {
        "api_name": "keyword_search",
        "category": "eCommerce",
        "tool_name": "axesso_otto_data_service",
        "code": "async def rapi_axesso_otto_data_service_keyword_search(self,*args,**kwargs):\n    '''Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string keyword:  defaults to Laptop\n    :param string? sortBy:  defaults to topseller\n    '''\n    return await self._request_rapid_api('rapi_axesso_otto_data_service_keyword_search',kwargs)\n        "
    },
    "rapi_axesso_otto_data_service_product_details": {
        "api_name": "product_details",
        "category": "eCommerce",
        "tool_name": "axesso_otto_data_service",
        "code": "async def rapi_axesso_otto_data_service_product_details(self,*args,**kwargs):\n    '''Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.\n    \n    \n\n    :param string url:  defaults to https://www.otto.de/p/skechers-ultra-flex-simply-free-sneaker-mit-seitlichen-logo-C806891806/#variationId=1287533375\n    '''\n    return await self._request_rapid_api('rapi_axesso_otto_data_service_product_details',kwargs)\n        "
    },
    "rapi_n11_data_get_comments_with_product_id": {
        "api_name": "get_comments_with_product_id",
        "category": "eCommerce",
        "tool_name": "n11_data",
        "code": "async def rapi_n11_data_get_comments_with_product_id(self,*args,**kwargs):\n    '''ARDIC's N11 data retrieval service.\n    \n    \n\n    :param string product_id:  defaults to 493611399\n    '''\n    return await self._request_rapid_api('rapi_n11_data_get_comments_with_product_id',kwargs)\n        "
    },
    "rapi_iherb_product_data_api_get_product_by_brand_name": {
        "api_name": "get_product_by_brand_name",
        "category": "eCommerce",
        "tool_name": "iherb_product_data_api",
        "code": "async def rapi_iherb_product_data_api_get_product_by_brand_name(self,*args,**kwargs):\n    '''Query for products using many filters! Filter by price, review, discount percentage, if has stock, etc! Or export a .zip file with all updated products!\n    \n    \n\n    :param string brandName:  defaults to 4th-heart\n    :param integer page:  defaults to 1\n    :param integer? maxPrice:  defaults to 999\n    :param integer? minRating:  defaults to 0\n    :param boolean? hasStock: \n    :param integer? minDiscountPercent: \n    :param boolean? isSpecial: \n    :param integer? minShippingWeight:  defaults to 0\n    :param boolean? isTrial: \n    :param boolean? hasNewProductFlag: \n    :param boolean? hasDiscount: \n    :param integer? maxShippingWeight:  defaults to 999\n    :param integer? minPrice:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_iherb_product_data_api_get_product_by_brand_name',kwargs)\n        "
    },
    "rapi_iherb_product_data_api_get_all_brands": {
        "api_name": "get_all_brands",
        "category": "eCommerce",
        "tool_name": "iherb_product_data_api",
        "code": "async def rapi_iherb_product_data_api_get_all_brands(self,*args,**kwargs):\n    '''Query for products using many filters! Filter by price, review, discount percentage, if has stock, etc! Or export a .zip file with all updated products!\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_iherb_product_data_api_get_all_brands',kwargs)\n        "
    },
    "rapi_abiola_amazon_data_scraper_get_amazon_product_details": {
        "api_name": "get_amazon_product_details",
        "category": "eCommerce",
        "tool_name": "abiola_amazon_data_scraper",
        "code": "async def rapi_abiola_amazon_data_scraper_get_amazon_product_details(self,*args,**kwargs):\n    '''Amazon Data Scrapper makes it easy and fast to access products, price and review data from Amazon in JSON format.\n    \n    \n\n    :param string productId: This endpoint get the general product description of any amazon product. defaults to B08L5NP6NG\n    :param string? api_key: \n    '''\n    return await self._request_rapid_api('rapi_abiola_amazon_data_scraper_get_amazon_product_details',kwargs)\n        "
    },
    "rapi_amazon_pricing_and_product_info_main_endpoint": {
        "api_name": "main_endpoint",
        "category": "eCommerce",
        "tool_name": "amazon_pricing_and_product_info",
        "code": "async def rapi_amazon_pricing_and_product_info_main_endpoint(self,*args,**kwargs):\n    '''Fullest product info\nAll Marketplaces\nCustomer support for API users\nBuy box info\nPrime &amp; FBA detection\nFast, scalable &amp; reliable API\n    \n    \n\n    :param string asin:  defaults to B07GR5MSKD\n    :param string domain:  defaults to de\n    '''\n    return await self._request_rapid_api('rapi_amazon_pricing_and_product_info_main_endpoint',kwargs)\n        "
    },
    "rapi_wayfair_reviews_list": {
        "api_name": "reviews_list",
        "category": "eCommerce",
        "tool_name": "wayfair",
        "code": "async def rapi_wayfair_reviews_list(self,*args,**kwargs):\n    '''This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com\n    \n    \n\n    :param string sku: The value of sku fields returned in .../products/list or .../products/search endpoint. defaults to W004939121\n    :param integer? page: For paging purpose defaults to 1\n    :param string? star: Leave empty or  1 to 5\n    :param string? sort_order: One of the following : RELEVANCE|HELPFUL|DATE&#95;ASCENDING|DATE&#95;DESCENDING|IMAGE|RATING&#95;DESCENDING|RATING&#95;ASCENDING defaults to RELEVANCE\n    '''\n    return await self._request_rapid_api('rapi_wayfair_reviews_list',kwargs)\n        "
    },
    "rapi_wayfair_products_list": {
        "api_name": "products_list",
        "category": "eCommerce",
        "tool_name": "wayfair",
        "code": "async def rapi_wayfair_products_list(self,*args,**kwargs):\n    '''This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com\n    \n    \n\n    :param integer categoryId: The value of categoryId fields returned in .../categories/list endpoint defaults to 45974\n    :param string? currentZipCode: The postal code to get near available products.\n    :param integer? page: For paging purpose defaults to 1\n    :param integer? itemsPerPage: For paging purpose defaults to 48\n    :param integer? sortId: Check availableSorts field returned right in this endpoint for suitable sortId\n    :param string? filterStringUnencoded: The value of filterStringUnencoded fields returned right in this endpoint to filter products, pass this parameter multiple times for multiple filters. Ex : ...&filterStringUnencoded=a1234567890~2147483646&filterStringUnencoded=at&#95;style~Tiffany&...\n    '''\n    return await self._request_rapid_api('rapi_wayfair_products_list',kwargs)\n        "
    },
    "rapi_wayfair_products_search": {
        "api_name": "products_search",
        "category": "eCommerce",
        "tool_name": "wayfair",
        "code": "async def rapi_wayfair_products_search(self,*args,**kwargs):\n    '''This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com\n    \n    \n\n    :param string keyword: Any term or phrase to look for relating products defaults to light shaded room\n    :param string? filters: The value of filter&#95;string&#95;unencoded fields returned right in this endpoint to filter products, pass this parameter multiple times for multiple filters. Ex : ...&filters=colorList~White&filters=masterClID~180&...\n    :param integer? curpage: For paging purpose defaults to 1\n    :param integer? itemsperpage: For paging purpose defaults to 48\n    :param integer? sortby: The value of sort_value fields returned right in this endpoint. Default is 0 defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_wayfair_products_search',kwargs)\n        "
    },
    "rapi_wayfair_products_detail": {
        "api_name": "products_detail",
        "category": "eCommerce",
        "tool_name": "wayfair",
        "code": "async def rapi_wayfair_products_detail(self,*args,**kwargs):\n    '''This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com\n    \n    \n\n    :param string sku: The value of sku fields returned in .../products/list or .../products/search endpoint. defaults to W003247135\n    :param string? wfProductOptions: The value of id fields under relevantAttributes JSON object returned right in this endpoint, pass this parameter multiple time for multiple options. Ex : ...&wfProductOptions=1234567890&wfProductOptions=special_offers&...\n    '''\n    return await self._request_rapid_api('rapi_wayfair_products_detail',kwargs)\n        "
    },
    "rapi_wayfair_auto_complete": {
        "api_name": "auto_complete",
        "category": "eCommerce",
        "tool_name": "wayfair",
        "code": "async def rapi_wayfair_auto_complete(self,*args,**kwargs):\n    '''This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com\n    \n    \n\n    :param string query: Any term or phrase that you are familiar with defaults to red pillow\n    '''\n    return await self._request_rapid_api('rapi_wayfair_auto_complete',kwargs)\n        "
    },
    "rapi_get_promo_codes_get_stores": {
        "api_name": "get_stores",
        "category": "eCommerce",
        "tool_name": "get_promo_codes",
        "code": "async def rapi_get_promo_codes_get_stores(self,*args,**kwargs):\n    '''We are excited to offer developers access to our coupon data through the RapidAPI interface. Our coupon data includes over 1,000,000 coupon listings from more than 10,000 online merchants across the United States, United Kingdom, Australia, India, and other countries.\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_get_promo_codes_get_stores',kwargs)\n        "
    },
    "rapi_ebay_products_search_scraper_get_search_products_data": {
        "api_name": "get_search_products_data",
        "category": "eCommerce",
        "tool_name": "ebay_products_search_scraper",
        "code": "async def rapi_ebay_products_search_scraper_get_search_products_data(self,*args,**kwargs):\n    '''eBay products search scraper for getting search products data.\nYou can choose the Location: the US Only,  North America , Europe , Asia, or Default.\nYou will get 25 products per page .\n    \n    \n\n    :param integer page: the number of the page defaults to 1\n    :param string Item_Location: Item Location :  europe  , north___america.    , asia  ,us__only  , default defaults to europe\n    :param string query:  defaults to xbox\n    '''\n    return await self._request_rapid_api('rapi_ebay_products_search_scraper_get_search_products_data',kwargs)\n        "
    },
    "rapi_yiwugo_product_data_search_products": {
        "api_name": "search_products",
        "category": "eCommerce",
        "tool_name": "yiwugo_product_data",
        "code": "async def rapi_yiwugo_product_data_search_products(self,*args,**kwargs):\n    '''Get the yiwugo.com(\u4e49\u4e4c\u8d2d) products'  information\n    \n    \n\n    :param string keyword: \n    :param ENUM? lan: \n    :param integer? page:  defaults to 1\n    :param integer? pageSize:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_yiwugo_product_data_search_products',kwargs)\n        "
    },
    "rapi_yiwugo_product_data_search_shops": {
        "api_name": "search_shops",
        "category": "eCommerce",
        "tool_name": "yiwugo_product_data",
        "code": "async def rapi_yiwugo_product_data_search_shops(self,*args,**kwargs):\n    '''Get the yiwugo.com(\u4e49\u4e4c\u8d2d) products'  information\n    \n    \n\n    :param string keyword: \n    :param ENUM? lan: \n    :param integer? page:  defaults to 1\n    :param integer? pageSize:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_yiwugo_product_data_search_shops',kwargs)\n        "
    },
    "rapi_e_commerce_delivery_status_get": {
        "api_name": "get",
        "category": "eCommerce",
        "tool_name": "e_commerce_delivery_status",
        "code": "async def rapi_e_commerce_delivery_status_get(self,*args,**kwargs):\n    '''fake API to track the Delivery status including subscription id and delivery address.\n    \n    \n\n    :param string? getdata: \n    '''\n    return await self._request_rapid_api('rapi_e_commerce_delivery_status_get',kwargs)\n        "
    },
    "rapi_target_products_v2_list_recommended": {
        "api_name": "products_v2_list_recommended",
        "category": "eCommerce",
        "tool_name": "target",
        "code": "async def rapi_target_products_v2_list_recommended(self,*args,**kwargs):\n    '''Query for stores, categories, products, etc ... as on official websites\n    \n    \n\n    :param integer store_id: The value of location_id returned in .../stores/list endpoint defaults to 911\n    :param integer tcins: The value of tcin field returned in .../products/list endpoint defaults to 54191097\n    '''\n    return await self._request_rapid_api('rapi_target_products_v2_list_recommended',kwargs)\n        "
    },
    "rapi_target_reviews_v2_list": {
        "api_name": "reviews_v2_list",
        "category": "eCommerce",
        "tool_name": "target",
        "code": "async def rapi_target_reviews_v2_list(self,*args,**kwargs):\n    '''Query for stores, categories, products, etc ... as on official websites\n    \n    \n\n    :param integer reviewedId: The value of tcin field returned in .../products/v2/list endpoint defaults to 82866370\n    :param string? sortBy: One of the following is allowed most&#95;recent|helpfulness&#95;desc|highest&#95;rating|lowest&#95;rating defaults to most_recent\n    :param integer? page: For paging purpose defaults to 0\n    :param boolean? hasOnlyPhotos: Only filter for reviews having photos  defaults to false\n    :param boolean? verifiedOnly: Only filter for verified reviews  defaults to false\n    :param string? ratingFilter: One of the following : rating&#95;1|rating&#95;2|...|rating&#95;5. Pass this parameter multiple time to filter by multiple ratings. Ex : ...&ratingFilter=rating&#95;4&ratingFilter=rating&#95;5&...\n    :param integer? size: For paging purpose, maximum items per page is 30 defaults to 30\n    '''\n    return await self._request_rapid_api('rapi_target_reviews_v2_list',kwargs)\n        "
    },
    "rapi_target_stores_get_details": {
        "api_name": "stores_get_details",
        "category": "eCommerce",
        "tool_name": "target",
        "code": "async def rapi_target_stores_get_details(self,*args,**kwargs):\n    '''Query for stores, categories, products, etc ... as on official websites\n    \n    \n\n    :param integer location_id: The value of location_id returned in .../stores/list endpoint defaults to 911\n    '''\n    return await self._request_rapid_api('rapi_target_stores_get_details',kwargs)\n        "
    },
    "rapi_target_stores_list": {
        "api_name": "stores_list",
        "category": "eCommerce",
        "tool_name": "target",
        "code": "async def rapi_target_stores_list(self,*args,**kwargs):\n    '''Query for stores, categories, products, etc ... as on official websites\n    \n    \n\n    :param string zipcode: Zip code or postal code of area to look for stores, such as : 10009 defaults to 10009\n    :param string? city: Name of city to look for stores, such as : california\n    :param string? latlng: GEO location to look for around stores, such as : 36.839828,-119.727711\n    '''\n    return await self._request_rapid_api('rapi_target_stores_list',kwargs)\n        "
    },
    "rapi_target_auto_complete": {
        "api_name": "auto_complete",
        "category": "eCommerce",
        "tool_name": "target",
        "code": "async def rapi_target_auto_complete(self,*args,**kwargs):\n    '''Query for stores, categories, products, etc ... as on official websites\n    \n    \n\n    :param string q: Any familiar term or phrase  to search for products defaults to macbook air\n    '''\n    return await self._request_rapid_api('rapi_target_auto_complete',kwargs)\n        "
    },
    "rapi_zappos_2022_get_brandlist_by_siteid_zappos_1_6pm_2": {
        "api_name": "get_brandlist_by_siteid_zappos_1_6pm_2",
        "category": "eCommerce",
        "tool_name": "zappos_2022",
        "code": "async def rapi_zappos_2022_get_brandlist_by_siteid_zappos_1_6pm_2(self,*args,**kwargs):\n    '''ZAPPOS NEW ENDPOINTS\n    \n    \n\n    :param integer siteId:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_zappos_2022_get_brandlist_by_siteid_zappos_1_6pm_2',kwargs)\n        "
    },
    "rapi_zappos_2022_get_images_by_productid_siteid_zappos_1_6pm_2": {
        "api_name": "get_images_by_productid_siteid_zappos_1_6pm_2",
        "category": "eCommerce",
        "tool_name": "zappos_2022",
        "code": "async def rapi_zappos_2022_get_images_by_productid_siteid_zappos_1_6pm_2(self,*args,**kwargs):\n    '''ZAPPOS NEW ENDPOINTS\n    \n    \n\n    :param integer siteId:  defaults to 1\n    :param integer productId:  defaults to 8609549\n    '''\n    return await self._request_rapid_api('rapi_zappos_2022_get_images_by_productid_siteid_zappos_1_6pm_2',kwargs)\n        "
    },
    "rapi_zappos_2022_get_price_by_styleids_and_siteid_zappos_1_6pm_2": {
        "api_name": "get_price_by_styleids_and_siteid_zappos_1_6pm_2",
        "category": "eCommerce",
        "tool_name": "zappos_2022",
        "code": "async def rapi_zappos_2022_get_price_by_styleids_and_siteid_zappos_1_6pm_2(self,*args,**kwargs):\n    '''ZAPPOS NEW ENDPOINTS\n    \n    \n\n    :param integer siteId:  defaults to 1\n    :param integer styleIds:  defaults to 15651\n    '''\n    return await self._request_rapid_api('rapi_zappos_2022_get_price_by_styleids_and_siteid_zappos_1_6pm_2',kwargs)\n        "
    },
    "rapi_axesso_kaufland_data_service_keyword_search": {
        "api_name": "keyword_search",
        "category": "eCommerce",
        "tool_name": "axesso_kaufland_data_service",
        "code": "async def rapi_axesso_kaufland_data_service_keyword_search(self,*args,**kwargs):\n    '''Our Kaufland Data Service API provides real-time data about product details and keyword search result from the online shop Kaufland.de.\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string keyword:  defaults to schuhe\n    :param string? sortBy:  defaults to recommended\n    :param boolean? excludeSponsored:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_axesso_kaufland_data_service_keyword_search',kwargs)\n        "
    },
    "rapi_taobao_tmall_product_detail_search_by_keyword": {
        "api_name": "search_by_keyword",
        "category": "eCommerce",
        "tool_name": "taobao_tmall_product_detail",
        "code": "async def rapi_taobao_tmall_product_detail_search_by_keyword(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string keyword:  defaults to \u6d77\u4e45\u6c34\u74f6\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_taobao_tmall_product_detail_search_by_keyword',kwargs)\n        "
    },
    "rapi_taobao_tmall_product_detail_get_sku_promotion": {
        "api_name": "get_sku_promotion",
        "category": "eCommerce",
        "tool_name": "taobao_tmall_product_detail",
        "code": "async def rapi_taobao_tmall_product_detail_get_sku_promotion(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer id:  defaults to 616211697315\n    :param integer? sellerId:  defaults to 2542432737\n    '''\n    return await self._request_rapid_api('rapi_taobao_tmall_product_detail_get_sku_promotion',kwargs)\n        "
    },
    "rapi_trendyol_data_get_comments_from_product_id": {
        "api_name": "get_comments_from_product_id",
        "category": "eCommerce",
        "tool_name": "trendyol_data",
        "code": "async def rapi_trendyol_data_get_comments_from_product_id(self,*args,**kwargs):\n    '''ARDIC's Trendyol data retrieval service.\n    \n    \n\n    :param string product_id:  defaults to 685539438\n    '''\n    return await self._request_rapid_api('rapi_trendyol_data_get_comments_from_product_id',kwargs)\n        "
    },
    "rapi_zappos_brands_list": {
        "api_name": "brands_list",
        "category": "eCommerce",
        "tool_name": "zappos",
        "code": "async def rapi_zappos_brands_list(self,*args,**kwargs):\n    '''Zappos API helps to query for all information about categories, products, etc... as on official websites\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_zappos_brands_list',kwargs)\n        "
    },
    "rapi_zappos_products_detail": {
        "api_name": "products_detail",
        "category": "eCommerce",
        "tool_name": "zappos",
        "code": "async def rapi_zappos_products_detail(self,*args,**kwargs):\n    '''Zappos API helps to query for all information about categories, products, etc... as on official websites\n    \n    \n\n    :param string productId: Get id value from products/list API defaults to 9143855\n    '''\n    return await self._request_rapid_api('rapi_zappos_products_detail',kwargs)\n        "
    },
    "rapi_amazon_product_price_data_product": {
        "api_name": "product",
        "category": "eCommerce",
        "tool_name": "amazon_product_price_data",
        "code": "async def rapi_amazon_product_price_data_product(self,*args,**kwargs):\n    '''Cheap and lightweight API to get rich Amazon product metadata\n    \n    \n\n    :param string locale: Currently supported locales:\n\nUS (amazon.com)\nUK (amazon.co.uk)\nCA (amazon.ca)\nIN (amazon.in)\nFR (amazon.fr)\n\nMore coming soon! defaults to US\n    :param string asins:  defaults to B005YQZ1KE,B074R8RQQ2\n    '''\n    return await self._request_rapid_api('rapi_amazon_product_price_data_product',kwargs)\n        "
    },
    "rapi_ppob_internasional_credit_pricelist": {
        "api_name": "internasional_credit_pricelist",
        "category": "eCommerce",
        "tool_name": "ppob",
        "code": "async def rapi_ppob_internasional_credit_pricelist(self,*args,**kwargs):\n    '''Payment Point Online Banking\nIndonesia, China, Philippines, Malaysia, Singapore, Vietnam and Thailand. \n    \n    \n\n    :param string code:  defaults to Singapore\n    '''\n    return await self._request_rapid_api('rapi_ppob_internasional_credit_pricelist',kwargs)\n        "
    },
    "rapi_price_comparison_offers": {
        "api_name": "offers",
        "category": "eCommerce",
        "tool_name": "price_comparison",
        "code": "async def rapi_price_comparison_offers(self,*args,**kwargs):\n    '''Amazon, Ebay, Target, Walmart, Google - price & product data from all marketplaces via one API. The Price Comparison API provides price & product data incl. product title, manufacturer, sellers, reviews, prices, size selection etc.\n    \n    \n\n    :param string id: An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN defaults to 611247373064\n    :param string? latitude:  defaults to 37.777805\n    :param string? longitude:  defaults to -122.49493\n    :param string? country:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_price_comparison_offers',kwargs)\n        "
    },
    "rapi_price_comparison_details": {
        "api_name": "details",
        "category": "eCommerce",
        "tool_name": "price_comparison",
        "code": "async def rapi_price_comparison_details(self,*args,**kwargs):\n    '''Amazon, Ebay, Target, Walmart, Google - price & product data from all marketplaces via one API. The Price Comparison API provides price & product data incl. product title, manufacturer, sellers, reviews, prices, size selection etc.\n    \n    \n\n    :param string id: An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN defaults to 611247373064\n    :param string? country:  defaults to US\n    :param string? longitude:  defaults to -122.49493\n    :param string? latitude:  defaults to 37.777805\n    '''\n    return await self._request_rapid_api('rapi_price_comparison_details',kwargs)\n        "
    },
    "rapi_open_speechapi_health": {
        "api_name": "speechapi_health",
        "category": "eCommerce",
        "tool_name": "open",
        "code": "async def rapi_open_speechapi_health(self,*args,**kwargs):\n    '''Open API\n    \n    \n\n    :param string? text: \n    '''\n    return await self._request_rapid_api('rapi_open_speechapi_health',kwargs)\n        "
    },
    "rapi_ecommerce_product_api_product_data": {
        "api_name": "product_data",
        "category": "eCommerce",
        "tool_name": "ecommerce_product_api",
        "code": "async def rapi_ecommerce_product_api_product_data(self,*args,**kwargs):\n    '''The Ecommerce Product API is a comprehensive solution for retrieving and managing product information in ecommerce stores. This API provides access to a wide range of product data, including titles, descriptions, images, and more. \n    \n    \n\n    :param string product:  defaults to phone\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_ecommerce_product_api_product_data',kwargs)\n        "
    },
    "rapi_target_com_shopping_api_product_fulfillment": {
        "api_name": "product_fulfillment",
        "category": "eCommerce",
        "tool_name": "target_com_shopping_api",
        "code": "async def rapi_target_com_shopping_api_product_fulfillment(self,*args,**kwargs):\n    '''Realtime APIs support entire shopping flow on Target.com.\n(Free trial enabled)\n\n    \n    \n\n    :param string tcin: Target product id.\nValue comes from product search API.\n defaults to 51952757\n    :param string? zip: The zipcode of user's search location.\n(optional) defaults to 94611\n    :param string? state: State code where is user is located at. (optional) defaults to CA\n    :param string? longitude: User's longitude Information (optional) defaults to -122.200\n    :param string? store_id: The id of the Target store from which the fulfillment information is being retrieved.\nValue comes from nearby stores api.\n(optional) defaults to 3330\n    :param string? latitude: User's longitude Information (optional) defaults to 37.820\n    '''\n    return await self._request_rapid_api('rapi_target_com_shopping_api_product_fulfillment',kwargs)\n        "
    },
    "rapi_target_com_shopping_api_search_autocomplete": {
        "api_name": "search_autocomplete",
        "category": "eCommerce",
        "tool_name": "target_com_shopping_api",
        "code": "async def rapi_target_com_shopping_api_search_autocomplete(self,*args,**kwargs):\n    '''Realtime APIs support entire shopping flow on Target.com.\n(Free trial enabled)\n\n    \n    \n\n    :param string q:  defaults to tv\n    '''\n    return await self._request_rapid_api('rapi_target_com_shopping_api_search_autocomplete',kwargs)\n        "
    },
    "rapi_hm_hennes_mauritz_products_detail": {
        "api_name": "products_detail",
        "category": "eCommerce",
        "tool_name": "hm_hennes_mauritz",
        "code": "async def rapi_hm_hennes_mauritz_products_detail(self,*args,**kwargs):\n    '''H&M API helps to query for all information about regions, categories, products, etc... as on official websites\n    \n    \n\n    :param string country: The country code that is gotten from /regions/list endpoint defaults to us\n    :param string lang: The language code that is gotten from /regions/list endpoint defaults to en\n    :param string productcode: The value of articles/code json object returned in /products/list endpoint defaults to 0839915011\n    '''\n    return await self._request_rapid_api('rapi_hm_hennes_mauritz_products_detail',kwargs)\n        "
    },
    "rapi_hm_hennes_mauritz_categories_list": {
        "api_name": "categories_list",
        "category": "eCommerce",
        "tool_name": "hm_hennes_mauritz",
        "code": "async def rapi_hm_hennes_mauritz_categories_list(self,*args,**kwargs):\n    '''H&M API helps to query for all information about regions, categories, products, etc... as on official websites\n    \n    \n\n    :param string country: The country code that is gotten from /regions/list endpoint defaults to us\n    :param string lang: The language code that is gotten from /regions/list endpoint defaults to en\n    '''\n    return await self._request_rapid_api('rapi_hm_hennes_mauritz_categories_list',kwargs)\n        "
    },
    "rapi_hm_hennes_mauritz_products_list": {
        "api_name": "products_list",
        "category": "eCommerce",
        "tool_name": "hm_hennes_mauritz",
        "code": "async def rapi_hm_hennes_mauritz_products_list(self,*args,**kwargs):\n    '''H&M API helps to query for all information about regions, categories, products, etc... as on official websites\n    \n    \n\n    :param string lang: The language code that is gotten from /regions/list endpoint defaults to en\n    :param integer currentpage: The page index to get data, start from 0 defaults to 0\n    :param string country: The country code that is gotten from /regions/list endpoint defaults to us\n    :param integer pagesize: The number of records to return in each page defaults to 30\n    :param string? qualities: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"qualities\\\", pass this param multiple times to filter by multiple qualities\n    :param string? fits: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"fits\\\", pass this param multiple times to filter by multiple fits\n    :param string? categories: It is tagCodes field gotten from /categories/list endpoint, pass this param multiple times to filter by multiple categories defaults to men_all\n    :param string? sortBy: One of the following ascPrice|descPrice|stock|newProduct, default is stock\n    :param string? collection: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"collection\\\", pass this param multiple times to filter by multiple collection\n    :param string? sizes: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"sizes\\\", pass this param multiple times to filter by multiple sizes\n    :param string? colorWithNames: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"colorWithNames\\\", pass this param multiple times to filter by multiple colors\n    :param string? contexts: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"contexts\\\", pass this param multiple times to filter by multiple contexts\n    :param string? functions: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"functions\\\", pass this param multiple times to filter by multiple functions\n    :param string? concepts: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"concepts\\\", pass this param multiple times to filter by multiple concepts defaults to H&M MAN\n    :param string? descriptiveLengths: Look for the value in \\\"facets\\\" object with \\\"code\\\": \\\"descriptiveLengths\\\", pass this param multiple times to filter by multiple lengths\n    '''\n    return await self._request_rapid_api('rapi_hm_hennes_mauritz_products_list',kwargs)\n        "
    },
    "rapi_hm_hennes_mauritz_regions_list": {
        "api_name": "regions_list",
        "category": "eCommerce",
        "tool_name": "hm_hennes_mauritz",
        "code": "async def rapi_hm_hennes_mauritz_regions_list(self,*args,**kwargs):\n    '''H&M API helps to query for all information about regions, categories, products, etc... as on official websites\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hm_hennes_mauritz_regions_list',kwargs)\n        "
    },
    "rapi_bestbuy_product_data_bestbuyproductdata": {
        "api_name": "bestbuyproductdata",
        "category": "eCommerce",
        "tool_name": "bestbuy_product_data",
        "code": "async def rapi_bestbuy_product_data_bestbuyproductdata(self,*args,**kwargs):\n    '''BestBuy Product Data API\nContact me at: muktheeswaran.m@gmail.com for builing custom spiders or custom requests.\n    \n    \n\n    :param string keyword:  defaults to iphone\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_bestbuy_product_data_bestbuyproductdata',kwargs)\n        "
    },
    "rapi_product_get_all_product": {
        "api_name": "get_all_product",
        "category": "eCommerce",
        "tool_name": "product",
        "code": "async def rapi_product_get_all_product(self,*args,**kwargs):\n    '''For Training\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_product_get_all_product',kwargs)\n        "
    },
    "rapi_product_categorization_product_categorization": {
        "api_name": "product_categorization",
        "category": "eCommerce",
        "tool_name": "product_categorization",
        "code": "async def rapi_product_categorization_product_categorization(self,*args,**kwargs):\n    '''Determine products and organization of products into their respective categories. Predict product price base on name of product or product title.\n    \n    \n\n    :param string title:  defaults to Abstract Egghead Plus Size Female Mannequin - Matte White Item \n    :param integer? price:  defaults to 200\n    '''\n    return await self._request_rapid_api('rapi_product_categorization_product_categorization',kwargs)\n        "
    },
    "rapi_makeup_products": {
        "api_name": "products",
        "category": "eCommerce",
        "tool_name": "makeup",
        "code": "async def rapi_makeup_products(self,*args,**kwargs):\n    '''Search makeup products\n    \n    \n\n    :param string? price_less_than: see API details\n    :param string? product_type: product type\n    :param string? product_tags: see API details\n    :param string? brand: Examples: maybelline, covergirl defaults to colourpop\n    :param string? rating_less_than: see API details\n    :param string? product_category: Sub-category for each makeup-type. (ie. lip gloss is a category of lipstick). See product types below. If a category exists it will be under 'By Category'. Will return a list of all products of this category defaults to lipstick\n    :param string? price_greater_than: see API details\n    :param string? rating_greater_than: see API details\n    '''\n    return await self._request_rapid_api('rapi_makeup_products',kwargs)\n        "
    },
    "rapi_comany_details_search_online_fetch_company_details": {
        "api_name": "fetch_company_details",
        "category": "eCommerce",
        "tool_name": "comany_details_search_online",
        "code": "async def rapi_comany_details_search_online_fetch_company_details(self,*args,**kwargs):\n    '''Comany Details Search Online\n    \n    \n\n    :param string query:  defaults to saharsh\n    '''\n    return await self._request_rapid_api('rapi_comany_details_search_online_fetch_company_details',kwargs)\n        "
    },
    "rapi_dungy_amazon_data_scraper_get_amazon_product_details": {
        "api_name": "get_amazon_product_details",
        "category": "eCommerce",
        "tool_name": "dungy_amazon_data_scraper",
        "code": "async def rapi_dungy_amazon_data_scraper_get_amazon_product_details(self,*args,**kwargs):\n    '''Dungy Amazon Data Scraper is the easiest way to get access to price, sales rank, and data reviews from Amazon in JSON Format\n    \n    \n\n    :param string productId:  defaults to B08N5R2GQW\n    '''\n    return await self._request_rapid_api('rapi_dungy_amazon_data_scraper_get_amazon_product_details',kwargs)\n        "
    },
    "rapi_amazon_data_scraper_v2_get_amazon_search_results": {
        "api_name": "get_amazon_search_results",
        "category": "eCommerce",
        "tool_name": "amazon_data_scraper_v2",
        "code": "async def rapi_amazon_data_scraper_v2_get_amazon_search_results(self,*args,**kwargs):\n    '''Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format\n    \n    \n\n    :param string searchQuery:  defaults to mac\n    '''\n    return await self._request_rapid_api('rapi_amazon_data_scraper_v2_get_amazon_search_results',kwargs)\n        "
    },
    "rapi_amazon_data_scraper_v2_get_product_s_reviews": {
        "api_name": "get_product_s_reviews",
        "category": "eCommerce",
        "tool_name": "amazon_data_scraper_v2",
        "code": "async def rapi_amazon_data_scraper_v2_get_product_s_reviews(self,*args,**kwargs):\n    '''Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format\n    \n    \n\n    :param string productId:  defaults to B00K3OM3PS\n    '''\n    return await self._request_rapid_api('rapi_amazon_data_scraper_v2_get_product_s_reviews',kwargs)\n        "
    },
    "rapi_amazon_data_scraper_v2_get_product_s_offers": {
        "api_name": "get_product_s_offers",
        "category": "eCommerce",
        "tool_name": "amazon_data_scraper_v2",
        "code": "async def rapi_amazon_data_scraper_v2_get_product_s_offers(self,*args,**kwargs):\n    '''Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format\n    \n    \n\n    :param string productId:  defaults to B00K3OM3PS\n    '''\n    return await self._request_rapid_api('rapi_amazon_data_scraper_v2_get_product_s_offers',kwargs)\n        "
    },
    "rapi_amazon_data_scraper_v2_get_awesome_product_details": {
        "api_name": "get_awesome_product_details",
        "category": "eCommerce",
        "tool_name": "amazon_data_scraper_v2",
        "code": "async def rapi_amazon_data_scraper_v2_get_awesome_product_details(self,*args,**kwargs):\n    '''Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format\n    \n    \n\n    :param string productId:  defaults to B00K3OM3PS\n    '''\n    return await self._request_rapid_api('rapi_amazon_data_scraper_v2_get_awesome_product_details',kwargs)\n        "
    },
    "rapi_shopify_store_scraper_single_product": {
        "api_name": "single_product",
        "category": "eCommerce",
        "tool_name": "shopify_store_scraper",
        "code": "async def rapi_shopify_store_scraper_single_product(self,*args,**kwargs):\n    '''Scrape complete products of any shopify store.\n    \n    \n\n    :param string url:  defaults to https://row.gymshark.com\n    :param string handle:  defaults to gymshark-studio-leggings-black-ss22\n    '''\n    return await self._request_rapid_api('rapi_shopify_store_scraper_single_product',kwargs)\n        "
    },
    "rapi_asos_countries_list": {
        "api_name": "countries_list",
        "category": "eCommerce",
        "tool_name": "asos",
        "code": "async def rapi_asos_countries_list(self,*args,**kwargs):\n    '''Asos API helps to query for all information about categories, products, etc... as on the official website\n    \n    \n\n    :param string? lang: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_asos_countries_list',kwargs)\n        "
    },
    "rapi_asos_products_v2_list": {
        "api_name": "products_v2_list",
        "category": "eCommerce",
        "tool_name": "asos",
        "code": "async def rapi_asos_products_v2_list(self,*args,**kwargs):\n    '''Asos API helps to query for all information about categories, products, etc... as on the official website\n    \n    \n\n    :param string store: Get value from store field from countries/list API defaults to US\n    :param integer offset: The offset to skip already viewed products defaults to 0\n    :param integer categoryId: The value of categoryId field from categories/list API defaults to 4209\n    :param integer limit: The number of items per page defaults to 48\n    :param string? attribute_1046: Filter option by Style (separated by comma for multiple values), such as : ...&attribute_1046=8391,8392\n    :param integer? priceMin: Filter option by Min Price ( integer value )\n    :param string? country: The country code defaults to US\n    :param string? attribute_10147: Filter option by Leather / Non Leather (separated by comma for multiple values), such as : ...&attribute_10147=8391,8392\n    :param string? sort: One of the following pricedesc|priceasc|freshness (Newest) defaults to freshness\n    :param string? q: Search for products by name (do not use this parameter with categoryId)\n    :param string? base_colour: Filter option by Color, look for \"id\" of \"facetValues\" in the response of this API (separated by comma for multiple values), such as : ...&base_colour=8391,8392\n    :param string? range: Filter option by Sale/New Season (separated by comma for multiple values), such as : ...&range=new_season\n    :param string? attribute_1047: Filter option by Product Type (separated by comma for multiple values), such as : ...&attribute_1047=8391,8392\n    :param string? currency: Get suitable value from countries/list API defaults to USD\n    :param string? attribute_10155: Filter option by Range (separated by comma for multiple values), such as : ...&attribute_10155=8391,8392\n    :param integer? priceMax: Filter option by Max Price ( integer value )\n    :param string? sizeSchema: Get suitable value from countries/list API defaults to US\n    :param string? brand: Filter option by Brand, look for \"id\" of \"facetValues\" in the response of this API (separated by comma for multiple values), such as : ...&brand=8391,8392\n    :param string? size: Filter option by Size, look for \"id\" of \"facetValues\" in the response of this API (separated by comma for multiple values), such as : ...&size=8391,8392\n    :param string? lang: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_asos_products_v2_list',kwargs)\n        "
    },
    "rapi_asos_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "eCommerce",
        "tool_name": "asos",
        "code": "async def rapi_asos_v2_auto_complete(self,*args,**kwargs):\n    '''Asos API helps to query for all information about categories, products, etc... as on the official website\n    \n    \n\n    :param string q: Name of products defaults to bikini top\n    :param string? store: The store code gotten from .../countries/list API defaults to US\n    :param string? country: The country code gotten from .../countries/list API defaults to US\n    :param string? currency: The currency code gotten from .../countries/list API defaults to USD\n    :param string? sizeSchema: The sizeSchema code gotten from .../countries/list API defaults to US\n    :param string? lang: The language code gotten from .../countries/list API defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_asos_v2_auto_complete',kwargs)\n        "
    },
    "rapi_asos_categories_list": {
        "api_name": "categories_list",
        "category": "eCommerce",
        "tool_name": "asos",
        "code": "async def rapi_asos_categories_list(self,*args,**kwargs):\n    '''Asos API helps to query for all information about categories, products, etc... as on the official website\n    \n    \n\n    :param string? lang: The language code defaults to en-US\n    :param string? country: The two letters country code defaults to US\n    '''\n    return await self._request_rapid_api('rapi_asos_categories_list',kwargs)\n        "
    },
    "rapi_swagger_petstore_loginuser": {
        "api_name": "loginuser",
        "category": "eCommerce",
        "tool_name": "swagger_petstore",
        "code": "async def rapi_swagger_petstore_loginuser(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n    \n    \n\n    :param string username: The user name for login defaults to string\n    :param string password: The password for login in clear text defaults to string\n    '''\n    return await self._request_rapid_api('rapi_swagger_petstore_loginuser',kwargs)\n        "
    },
    "rapi_swagger_petstore_getinventory": {
        "api_name": "getinventory",
        "category": "eCommerce",
        "tool_name": "swagger_petstore",
        "code": "async def rapi_swagger_petstore_getinventory(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_swagger_petstore_getinventory',kwargs)\n        "
    },
    "rapi_bet_at_home_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "bet_at_home",
        "code": "async def rapi_bet_at_home_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Bet-at-Home.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bet_at_home_odds',kwargs)\n        "
    },
    "rapi_bet_at_home_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "bet_at_home",
        "code": "async def rapi_bet_at_home_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Bet-at-Home.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bet_at_home_matches',kwargs)\n        "
    },
    "rapi_serie_a_matches_list_by_season_and_matchday": {
        "api_name": "matches_list_by_season_and_matchday",
        "category": "Sports",
        "tool_name": "serie_a",
        "code": "async def rapi_serie_a_matches_list_by_season_and_matchday(self,*args,**kwargs):\n    '''Serie a API! Here you can find all the info you need about the Serie A, the Italian football league among the best ones all over the world. You can ask for team statistics, players statistics and also for info about upcoming matches, also including live scores, live formations, live stats and much more. You can easily build your Serie A related portal or enhance your Ml/AI projects. \n    \n    \n\n    :param integer matchday: matchday>=1 and matchday<=38 defaults to 34\n    :param integer year: year>=1990 and year<=2022 defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_serie_a_matches_list_by_season_and_matchday',kwargs)\n        "
    },
    "rapi_v3rankings_basketballv3": {
        "api_name": "basketballv3",
        "category": "Sports",
        "tool_name": "v3rankings",
        "code": "async def rapi_v3rankings_basketballv3(self,*args,**kwargs):\n    '''Version3 for ranking page\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_v3rankings_basketballv3',kwargs)\n        "
    },
    "rapi_dafabet_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "dafabet",
        "code": "async def rapi_dafabet_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Dafabet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dafabet_matches',kwargs)\n        "
    },
    "rapi_dafabet_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "dafabet",
        "code": "async def rapi_dafabet_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Dafabet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dafabet_odds',kwargs)\n        "
    },
    "rapi_os_sports_perform_player_data": {
        "api_name": "player_data",
        "category": "Sports",
        "tool_name": "os_sports_perform",
        "code": "async def rapi_os_sports_perform_player_data(self,*args,**kwargs):\n    '''OS Sports Perform has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  **Partners and customers**: (Opta sports) statsperform.com , sofascore.com, aiscore.com  **Sup...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_os_sports_perform_player_data',kwargs)\n        "
    },
    "rapi_os_sports_perform_last_year_summary": {
        "api_name": "last_year_summary",
        "category": "Sports",
        "tool_name": "os_sports_perform",
        "code": "async def rapi_os_sports_perform_last_year_summary(self,*args,**kwargs):\n    '''OS Sports Perform has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  **Partners and customers**: (Opta sports) statsperform.com , sofascore.com, aiscore.com  **Sup...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_os_sports_perform_last_year_summary',kwargs)\n        "
    },
    "rapi_os_sports_perform_schedule_by_date": {
        "api_name": "schedule_by_date",
        "category": "Sports",
        "tool_name": "os_sports_perform",
        "code": "async def rapi_os_sports_perform_schedule_by_date(self,*args,**kwargs):\n    '''OS Sports Perform has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  **Partners and customers**: (Opta sports) statsperform.com , sofascore.com, aiscore.com  **Sup...\n    \n    \n\n    :param string date: Date defaults to 2022-05-11\n    :param integer sport_id: Sport id defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_os_sports_perform_schedule_by_date',kwargs)\n        "
    },
    "rapi_mlb_data_player_teams": {
        "api_name": "player_teams",
        "category": "Sports",
        "tool_name": "mlb_data",
        "code": "async def rapi_mlb_data_player_teams(self,*args,**kwargs):\n    '''Baseball MLB Data about players, teams, reports, and other stats.\n    \n    \n\n    :param string player_id: Example: '493316' defaults to '493316'\n    :param string? season: Example: '2014' defaults to '2014'\n    '''\n    return await self._request_rapid_api('rapi_mlb_data_player_teams',kwargs)\n        "
    },
    "rapi_mlb_data_pitching_leaders": {
        "api_name": "pitching_leaders",
        "category": "Sports",
        "tool_name": "mlb_data",
        "code": "async def rapi_mlb_data_pitching_leaders(self,*args,**kwargs):\n    '''Baseball MLB Data about players, teams, reports, and other stats.\n    \n    \n\n    :param string results: Example: 5 The number of results to return. defaults to '5'\n    :param string sort_column: Example: 'era' The statistic you want leaders for. defaults to 'era'\n    :param string season: Example: '2017' defaults to '2017'\n    :param string sports_code:  defaults to 'mlb'\n    :param string game_type: Example: 'R' The type of games you want career stats for.  'R' - Regular Season  'S' - Spring Training  'E' - Exhibition  'A' - All Star Game  'D' - Division Series  'F' - First Round (Wild Card)  'L' - League Championship  'W' - World Series defaults to 'R'\n    :param string? leader_hitting_repeater.col_in: Example: era defaults to era\n    '''\n    return await self._request_rapid_api('rapi_mlb_data_pitching_leaders',kwargs)\n        "
    },
    "rapi_mlb_data_get_40_man_roster": {
        "api_name": "get_40_man_roster",
        "category": "Sports",
        "tool_name": "mlb_data",
        "code": "async def rapi_mlb_data_get_40_man_roster(self,*args,**kwargs):\n    '''Baseball MLB Data about players, teams, reports, and other stats.\n    \n    \n\n    :param string team_id: Example: '121' defaults to '121'\n    '''\n    return await self._request_rapid_api('rapi_mlb_data_get_40_man_roster',kwargs)\n        "
    },
    "rapi_betcity_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "betcity",
        "code": "async def rapi_betcity_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betcity\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betcity_odds',kwargs)\n        "
    },
    "rapi_betcity_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "betcity",
        "code": "async def rapi_betcity_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betcity\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betcity_matches',kwargs)\n        "
    },
    "rapi_betigolo_predictions_sample_predictions": {
        "api_name": "sample_predictions",
        "category": "Sports",
        "tool_name": "betigolo_predictions",
        "code": "async def rapi_betigolo_predictions_sample_predictions(self,*args,**kwargs):\n    '''The Betigolo Predictions API is a powerful tool that provides probability estimates for various sports events, such as football, basketball, and baseball. It can be used for sports betting with EV+ to help users make informed decisions about their bets. The API is easy to use and can be integrated into sports betting applications with the help of detailed documentation and code examples provided by Rapid API. With the Betigolo Predictions API, users can access accurate and up-to-date probabil...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betigolo_predictions_sample_predictions',kwargs)\n        "
    },
    "rapi_morpheus_predictions_best_sign_2": {
        "api_name": "best_sign_2",
        "category": "Sports",
        "tool_name": "morpheus_predictions",
        "code": "async def rapi_morpheus_predictions_best_sign_2(self,*args,**kwargs):\n    '''Morpheus Soccer Predictions (Beta)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_morpheus_predictions_best_sign_2',kwargs)\n        "
    },
    "rapi_morpheus_predictions_best_sign_1": {
        "api_name": "best_sign_1",
        "category": "Sports",
        "tool_name": "morpheus_predictions",
        "code": "async def rapi_morpheus_predictions_best_sign_1(self,*args,**kwargs):\n    '''Morpheus Soccer Predictions (Beta)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_morpheus_predictions_best_sign_1',kwargs)\n        "
    },
    "rapi_morpheus_predictions_best_of_the_day": {
        "api_name": "best_of_the_day",
        "category": "Sports",
        "tool_name": "morpheus_predictions",
        "code": "async def rapi_morpheus_predictions_best_of_the_day(self,*args,**kwargs):\n    '''Morpheus Soccer Predictions (Beta)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_morpheus_predictions_best_of_the_day',kwargs)\n        "
    },
    "rapi_morpheus_predictions_best_over_1_5": {
        "api_name": "best_over_1_5",
        "category": "Sports",
        "tool_name": "morpheus_predictions",
        "code": "async def rapi_morpheus_predictions_best_over_1_5(self,*args,**kwargs):\n    '''Morpheus Soccer Predictions (Beta)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_morpheus_predictions_best_over_1_5',kwargs)\n        "
    },
    "rapi_golf_course_finder_course_details": {
        "api_name": "course_details",
        "category": "Sports",
        "tool_name": "golf_course_finder",
        "code": "async def rapi_golf_course_finder_course_details(self,*args,**kwargs):\n    '''This API will return golf courses within a mile radius of the passed latitude and longitude. It will also return the place details from Google.\n    \n    \n\n    :param string zip:  defaults to 93953\n    :param string name:  defaults to Pebble Beach Golf Links\n    '''\n    return await self._request_rapid_api('rapi_golf_course_finder_course_details',kwargs)\n        "
    },
    "rapi_premier_league_upcoming_matches_fixtures": {
        "api_name": "fixtures",
        "category": "Sports",
        "tool_name": "premier_league_upcoming_matches",
        "code": "async def rapi_premier_league_upcoming_matches_fixtures(self,*args,**kwargs):\n    '''This API will provide you information about future matches of different clubs in Premier League\n    \n    \n\n    :param string? compIds:  defaults to 1,3\n    :param string? pageSize:  defaults to 20\n    :param string? clubIds:  defaults to 1,2\n    :param integer? page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_premier_league_upcoming_matches_fixtures',kwargs)\n        "
    },
    "rapi_premier_league_upcoming_matches_competitions": {
        "api_name": "competitions",
        "category": "Sports",
        "tool_name": "premier_league_upcoming_matches",
        "code": "async def rapi_premier_league_upcoming_matches_competitions(self,*args,**kwargs):\n    '''This API will provide you information about future matches of different clubs in Premier League\n    \n    \n\n    :param string? abbr:  defaults to EN_PR\n    :param string? name:  defaults to Premier League\n    '''\n    return await self._request_rapid_api('rapi_premier_league_upcoming_matches_competitions',kwargs)\n        "
    },
    "rapi_premier_league_upcoming_matches_clubs": {
        "api_name": "clubs",
        "category": "Sports",
        "tool_name": "premier_league_upcoming_matches",
        "code": "async def rapi_premier_league_upcoming_matches_clubs(self,*args,**kwargs):\n    '''This API will provide you information about future matches of different clubs in Premier League\n    \n    \n\n    :param string? abbr:  defaults to ARS\n    :param string? name:  defaults to Arsenal\n    '''\n    return await self._request_rapid_api('rapi_premier_league_upcoming_matches_clubs',kwargs)\n        "
    },
    "rapi_cricketapi2_leaguetotalteamevents": {
        "api_name": "leaguetotalteamevents",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_leaguetotalteamevents(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer tournamentId: The unique tournament ID for which you want to retrieve the league's total team events. defaults to 11184\n    :param integer seasonId: The season ID for which you want to retrieve the league's total team events. defaults to 16828\n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_leaguetotalteamevents',kwargs)\n        "
    },
    "rapi_cricketapi2_prematchform": {
        "api_name": "prematchform",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_prematchform(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer id: The ID of the cricket match for which you want to get pre-match form information. defaults to 10534787\n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_prematchform',kwargs)\n        "
    },
    "rapi_cricketapi2_get_player_placeholder": {
        "api_name": "get_player_placeholder",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_get_player_placeholder(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_get_player_placeholder',kwargs)\n        "
    },
    "rapi_cricketapi2_categories": {
        "api_name": "categories",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_categories(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_categories',kwargs)\n        "
    },
    "rapi_cricketapi2_teamlastmatches": {
        "api_name": "teamlastmatches",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_teamlastmatches(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer page: The page number (starting from 0) of the last matches you want to retrieve.\n    :param integer id: The ID of the cricket team for which you want to retrieve the last matches. defaults to 187760\n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_teamlastmatches',kwargs)\n        "
    },
    "rapi_cricketapi2_matchschedules": {
        "api_name": "matchschedules",
        "category": "Sports",
        "tool_name": "cricketapi2",
        "code": "async def rapi_cricketapi2_matchschedules(self,*args,**kwargs):\n    '''Cricket live score service at CricketApi allows you to follow real time cricket results, standings and fixtures. Live matches from cricket leagues has ball by ball coverage for every inning and detailed tables for fall of the wicket and partnership.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer year: The year for which you want to retrieve the cricket match schedules (e.g., 2022). defaults to 2022\n    :param integer day: The day of the month for which you want to retrieve the cricket match schedules (1-31). defaults to 14\n    :param integer month: The month for which you want to retrieve the cricket match schedules (1-12). defaults to 8\n    '''\n    return await self._request_rapid_api('rapi_cricketapi2_matchschedules',kwargs)\n        "
    },
    "rapi_football_prediction_predictions": {
        "api_name": "predictions",
        "category": "Sports",
        "tool_name": "football_prediction",
        "code": "async def rapi_football_prediction_predictions(self,*args,**kwargs):\n    '''The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.\n    \n    \n\n    :param string? market: Shows the predictions for a certain market. Defaults to \"classic\" if not provided defaults to classic\n    :param string? iso_date: Will filter the results by date. Can be used to show past results. defaults to 2018-12-01\n    :param string? federation: Filter the predictions by federation defaults to UEFA\n    '''\n    return await self._request_rapid_api('rapi_football_prediction_predictions',kwargs)\n        "
    },
    "rapi_football_prediction_head_to_head": {
        "api_name": "head_to_head",
        "category": "Sports",
        "tool_name": "football_prediction",
        "code": "async def rapi_football_prediction_head_to_head(self,*args,**kwargs):\n    '''The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.\n    \n    \n\n    :param integer id: (use predictions endpoint to get list of IDs) defaults to 81930\n    :param integer? limit: Limit the search to only X previous encounters. (max is 10) defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_football_prediction_head_to_head',kwargs)\n        "
    },
    "rapi_football_prediction_performance_stats_for_past_predictions": {
        "api_name": "performance_stats_for_past_predictions",
        "category": "Sports",
        "tool_name": "football_prediction",
        "code": "async def rapi_football_prediction_performance_stats_for_past_predictions(self,*args,**kwargs):\n    '''The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.\n    \n    \n\n    :param string? federation: Filter stats by federation\n    :param string? market: Show stats for a different prediction market. Defaults to \"classic\" if not provided defaults to classic\n    '''\n    return await self._request_rapid_api('rapi_football_prediction_performance_stats_for_past_predictions',kwargs)\n        "
    },
    "rapi_predictx_get_next_predictions": {
        "api_name": "get_next_predictions",
        "category": "Sports",
        "tool_name": "predictx",
        "code": "async def rapi_predictx_get_next_predictions(self,*args,**kwargs):\n    '''predictX API is a comprehensive sports prediction API hosted on RapidAPI that offers a wide range of features to enhance your sports-related applications. With predictX, you can access accurate predictions, live scores, upcoming matches, past results, and much more. This API provides developers with valuable insights and data to create engaging sports applications, betting platforms, or any other sports-related projects.\n    \n    \n\n    :param string event_date:  defaults to Next\n    '''\n    return await self._request_rapid_api('rapi_predictx_get_next_predictions',kwargs)\n        "
    },
    "rapi_predictx_get_today_s_predictions": {
        "api_name": "get_today_s_predictions",
        "category": "Sports",
        "tool_name": "predictx",
        "code": "async def rapi_predictx_get_today_s_predictions(self,*args,**kwargs):\n    '''predictX API is a comprehensive sports prediction API hosted on RapidAPI that offers a wide range of features to enhance your sports-related applications. With predictX, you can access accurate predictions, live scores, upcoming matches, past results, and much more. This API provides developers with valuable insights and data to create engaging sports applications, betting platforms, or any other sports-related projects.\n    \n    \n\n    :param string event_date:  defaults to Today\n    '''\n    return await self._request_rapid_api('rapi_predictx_get_today_s_predictions',kwargs)\n        "
    },
    "rapi_premier_league_standings_premier_league_standings": {
        "api_name": "premier_league_standings",
        "category": "Sports",
        "tool_name": "premier_league_standings",
        "code": "async def rapi_premier_league_standings_premier_league_standings(self,*args,**kwargs):\n    '''English Premier League Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_premier_league_standings_premier_league_standings',kwargs)\n        "
    },
    "rapi_baseball_game": {
        "api_name": "game",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_game(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    :param string gamePk: Enter a game ID - can be found in the schedule endpoint defaults to 633282\n    '''\n    return await self._request_rapid_api('rapi_baseball_game',kwargs)\n        "
    },
    "rapi_baseball_game_matrix_gamepk": {
        "api_name": "game_matrix_gamepk",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_game_matrix_gamepk(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    :param string gamePk: Enter a game ID - can be found in the schedule endpoint defaults to 633282\n    '''\n    return await self._request_rapid_api('rapi_baseball_game_matrix_gamepk',kwargs)\n        "
    },
    "rapi_baseball_schedule": {
        "api_name": "schedule",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_schedule(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_baseball_schedule',kwargs)\n        "
    },
    "rapi_baseball_teams_affiliates_teamids": {
        "api_name": "teams_affiliates_teamids",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_teams_affiliates_teamids(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    :param string? teamIds: Enter a team ID - can be found in the game's endpoint defaults to 145\n    '''\n    return await self._request_rapid_api('rapi_baseball_teams_affiliates_teamids',kwargs)\n        "
    },
    "rapi_baseball_teams_coaches_teamids": {
        "api_name": "teams_coaches_teamids",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_teams_coaches_teamids(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    :param string? teamIds: Enter a team ID - can be found in the game's endpoint defaults to 145\n    '''\n    return await self._request_rapid_api('rapi_baseball_teams_coaches_teamids',kwargs)\n        "
    },
    "rapi_baseball_venues": {
        "api_name": "venues",
        "category": "Sports",
        "tool_name": "baseball",
        "code": "async def rapi_baseball_venues(self,*args,**kwargs):\n    '''Baseball Leagues &amp; Cups with Livescore, Odds, Statistics, Historical Data, and more ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_baseball_venues',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_teams": {
        "api_name": "get_teams",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_teams(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string? statsToGet:  defaults to averages\n    :param string? schedules: schedules=\\\\\\\"true\\\\\\\"  to add team schedules to the data returned defaults to true\n    :param string? teamStats: teamStats=true to add team stats to the data returned defaults to true\n    :param string? topPerformers: topPerformers=true  to add the team's stat leaders to the data returned defaults to true\n    :param string? rosters: rosters=\\\\\\\"true\\\\\\\" to add team rosters to the data returned defaults to true\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_teams',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_player_information": {
        "api_name": "get_player_information",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_player_information(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string? statsToGet: can be: totals or averages\nWorks for current season only. defaults to averages\n    :param string? playerID: Numerical playerID\neither playerID or playerName is required\nIf playerID is used then the endpoint returns a map, not a list, as only one player will be returned.\n    :param string? playerName: player name\neither playerID or playerName is required\nIf this is used, the endpoint returns a list of players that match the entered playerName. defaults to smith\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_player_information',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_nba_injury_list_history": {
        "api_name": "get_nba_injury_list_history",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_nba_injury_list_history(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string? year: format YYYY\nUse this to restrict results to one year\n    :param string? endInjDate: format YYYYMMDD\nUse this to restrict date range. This date is inclusive and the end of the date range.\n    :param string? numberOfDays: Number of days should be from 1 to 30, and will restrict your results to the most recent number of days you provide as the variable.\n    :param string? beginningInjDate: format YYYYMMDD\nUse this to restrict date range. This date is inclusive and the beginning of the date range.\n    :param string? playerID: Numerical playerID\nRestricts results to a specific player only.\n    :param string? injDate: format YYYYMMDD\nUse this if you want to restrict your results to only one date\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_nba_injury_list_history',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_team_roster": {
        "api_name": "get_team_roster",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_team_roster(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string? teamID: Number 1 - 30\n    :param string? statsToGet: either: totals or averages\nDoes not work with archiveDate defaults to averages\n    :param string? archiveDate: format YYYYMMDD\n    :param string? teamAbv: format CHI, BOS, ATL, etc defaults to SAC\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_team_roster',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_team_schedule": {
        "api_name": "get_team_schedule",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_team_schedule(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string? season: format YYYY and defaults to current season's year.  For instance, NBA season 2022-23 would just be formatted 2023. \nthis only works for 2022 and 2023 defaults to 2023\n    :param string? teamID: teamID is 1-30\n    :param string? teamAbv: teamAbv is format like CHI, BOS, or ATL, etc defaults to GS\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_team_schedule',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_player_list": {
        "api_name": "get_player_list",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_player_list(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_player_list',kwargs)\n        "
    },
    "rapi_tank01_fantasy_stats_get_daily_schedule": {
        "api_name": "get_daily_schedule",
        "category": "Sports",
        "tool_name": "tank01_fantasy_stats",
        "code": "async def rapi_tank01_fantasy_stats_get_daily_schedule(self,*args,**kwargs):\n    '''NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS\n    \n    \n\n    :param string gameDate: format: YYYYMMDD\nrequired defaults to 20221202\n    '''\n    return await self._request_rapid_api('rapi_tank01_fantasy_stats_get_daily_schedule',kwargs)\n        "
    },
    "rapi_surebets_get_bookmakers": {
        "api_name": "get_bookmakers",
        "category": "Sports",
        "tool_name": "surebets",
        "code": "async def rapi_surebets_get_bookmakers(self,*args,**kwargs):\n    '''API for Surebets in sports betting\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_get_bookmakers',kwargs)\n        "
    },
    "rapi_surebets_list": {
        "api_name": "list",
        "category": "Sports",
        "tool_name": "surebets",
        "code": "async def rapi_surebets_list(self,*args,**kwargs):\n    '''API for Surebets in sports betting\n    \n    \n\n    :param string? bookmakers: List of bookie_slugs separated by a comma\n    '''\n    return await self._request_rapid_api('rapi_surebets_list',kwargs)\n        "
    },
    "rapi_major_league_soccer_standings_major_league_soccer_standings": {
        "api_name": "major_league_soccer_standings",
        "category": "Sports",
        "tool_name": "major_league_soccer_standings",
        "code": "async def rapi_major_league_soccer_standings_major_league_soccer_standings(self,*args,**kwargs):\n    '''Major League Soccer (MLS) Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_major_league_soccer_standings_major_league_soccer_standings',kwargs)\n        "
    },
    "rapi_laliga_standings_laliga_standings": {
        "api_name": "laliga_standings",
        "category": "Sports",
        "tool_name": "laliga_standings",
        "code": "async def rapi_laliga_standings_laliga_standings(self,*args,**kwargs):\n    '''Spanish LaLiga Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_laliga_standings_laliga_standings',kwargs)\n        "
    },
    "rapi_betsports_gettspmatches": {
        "api_name": "gettspmatches",
        "category": "Sports",
        "tool_name": "betsports",
        "code": "async def rapi_betsports_gettspmatches(self,*args,**kwargs):\n    '''BetSports Api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betsports_gettspmatches',kwargs)\n        "
    },
    "rapi_betsports_getspecialcompetitionview": {
        "api_name": "getspecialcompetitionview",
        "category": "Sports",
        "tool_name": "betsports",
        "code": "async def rapi_betsports_getspecialcompetitionview(self,*args,**kwargs):\n    '''BetSports Api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betsports_getspecialcompetitionview',kwargs)\n        "
    },
    "rapi_betsports_gettaxrulesv2": {
        "api_name": "gettaxrulesv2",
        "category": "Sports",
        "tool_name": "betsports",
        "code": "async def rapi_betsports_gettaxrulesv2(self,*args,**kwargs):\n    '''BetSports Api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betsports_gettaxrulesv2',kwargs)\n        "
    },
    "rapi_betsports_getallgames": {
        "api_name": "getallgames",
        "category": "Sports",
        "tool_name": "betsports",
        "code": "async def rapi_betsports_getallgames(self,*args,**kwargs):\n    '''BetSports Api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betsports_getallgames',kwargs)\n        "
    },
    "rapi_sportsbook_odds_arbitrage_low_hold": {
        "api_name": "arbitrage_low_hold",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_arbitrage_low_hold(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_arbitrage_low_hold',kwargs)\n        "
    },
    "rapi_sportsbook_odds_game_odds_by_category_schedule": {
        "api_name": "game_odds_by_category_schedule",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_game_odds_by_category_schedule(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    :param string category:  defaults to 0\n    :param string sport:  defaults to Baseball\n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_game_odds_by_category_schedule',kwargs)\n        "
    },
    "rapi_sportsbook_odds_game_odds_basic_lines_schedule": {
        "api_name": "game_odds_basic_lines_schedule",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_game_odds_basic_lines_schedule(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_game_odds_basic_lines_schedule',kwargs)\n        "
    },
    "rapi_sportsbook_odds_games_list": {
        "api_name": "games_list",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_games_list(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    :param string? league_name:  defaults to MLB\n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_games_list',kwargs)\n        "
    },
    "rapi_sportsbook_odds_low_hold_bets": {
        "api_name": "low_hold_bets",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_low_hold_bets(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_low_hold_bets',kwargs)\n        "
    },
    "rapi_sportsbook_odds_arbitrage_bets": {
        "api_name": "arbitrage_bets",
        "category": "Sports",
        "tool_name": "sportsbook_odds",
        "code": "async def rapi_sportsbook_odds_arbitrage_bets(self,*args,**kwargs):\n    '''LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sportsbook_odds_arbitrage_bets',kwargs)\n        "
    },
    "rapi_sportifyapi_tournamentdetailsbyid": {
        "api_name": "tournamentdetailsbyid",
        "category": "Sports",
        "tool_name": "sportifyapi",
        "code": "async def rapi_sportifyapi_tournamentdetailsbyid(self,*args,**kwargs):\n    '''Real-time sports data platform providing comprehensive information on tournaments, matches, players, and live scores for various sports.  \n    \n    \n\n    :param integer uniqueTournamentId:  defaults to 23\n    '''\n    return await self._request_rapid_api('rapi_sportifyapi_tournamentdetailsbyid',kwargs)\n        "
    },
    "rapi_sportifyapi_tournamentmetadata": {
        "api_name": "tournamentmetadata",
        "category": "Sports",
        "tool_name": "sportifyapi",
        "code": "async def rapi_sportifyapi_tournamentmetadata(self,*args,**kwargs):\n    '''Real-time sports data platform providing comprehensive information on tournaments, matches, players, and live scores for various sports.  \n    \n    \n\n    :param integer uniqueTournamentId:  defaults to 23\n    '''\n    return await self._request_rapid_api('rapi_sportifyapi_tournamentmetadata',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_teams_get_news": {
        "api_name": "teams_get_news",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_teams_get_news(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer teamId: The value of teamId field returned in \u2026/teams/list endpoint defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_teams_get_news',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_teams_list": {
        "api_name": "teams_list",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_teams_list(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param string type: `international`|`league`|`domestic`|`women` defaults to international\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_teams_list',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_get_stats": {
        "api_name": "series_get_stats",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_get_stats(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer seriesId: The value of id field returned in \u2026/series/list or \u2026/series/list-archives endpoints. defaults to 3718\n    :param string statsType: The value of 'value' field returned in \u2026/series/get-stats-filter endpoint defaults to mostRuns\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_get_stats',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_get_venues": {
        "api_name": "series_get_venues",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_get_venues(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer seriesId: \nThe value of id field returned in \u2026/series/list or \u2026/series/list-archives endpoints. defaults to 3718\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_get_venues',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_get_players": {
        "api_name": "series_get_players",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_get_players(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer squadId: The value of squadId field returned in \u2026/series/get-squads endpoint defaults to 15826\n    :param integer seriesId: The value of id field returned in \u2026/series/list or \u2026/series/list-archives endpoints. defaults to 3718\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_get_players',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_get_news": {
        "api_name": "series_get_news",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_get_news(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer seriesId: The value of id field returned in \u2026/series/list or \u2026/series/list-archives endpoints. defaults to 3636\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_get_news',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_list_archives": {
        "api_name": "series_list_archives",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_list_archives(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param string type: One of the followings : `international`|`league`|`domestic`|`women` defaults to international\n    :param integer? lastId: For paging purpose, leave empty to load the first page, or the value of id field returned right in this endpoint.\n    :param integer? year: \n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_list_archives',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_series_list": {
        "api_name": "series_list",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_series_list(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param string type: One of the followings : `international`|`league`|`domestic`|`women` defaults to international\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_series_list',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_matches_get_leanback": {
        "api_name": "matches_get_leanback",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_matches_get_leanback(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer matchId: The value of matchId field returned in \u2026/matches/list, \u2026/schedules/list, \u2026/series/get-matches, \u2026/teams/get-schedules, \u2026/teams/get-results, \u2026/venues/get-matches endpoints. defaults to 40381\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_matches_get_leanback',kwargs)\n        "
    },
    "rapi_cricbuzz_cricket_schedules_list": {
        "api_name": "schedules_list",
        "category": "Sports",
        "tool_name": "cricbuzz_cricket",
        "code": "async def rapi_cricbuzz_cricket_schedules_list(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param string type: One of the followings : `international`|`league`|`domestic`|`women` defaults to international\n    :param integer? lastTime: For paging purpose, leave empty to load the first page, or an Epoch timestamp value in milliseconds (Ex : 1640883600000) to load the next page. You are interested in the 'startDt' field returned right in this endpoint.\n    '''\n    return await self._request_rapid_api('rapi_cricbuzz_cricket_schedules_list',kwargs)\n        "
    },
    "rapi_soccer_data_seasonal_goal_analysis_goal_minutes": {
        "api_name": "seasonal_goal_analysis_goal_minutes",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_seasonal_goal_analysis_goal_minutes(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_seasonal_goal_analysis_goal_minutes',kwargs)\n        "
    },
    "rapi_soccer_data_recent_match_list": {
        "api_name": "recent_match_list",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_recent_match_list(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_recent_match_list',kwargs)\n        "
    },
    "rapi_soccer_data_market_statistics_goals": {
        "api_name": "market_statistics_goals",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_market_statistics_goals(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_market_statistics_goals',kwargs)\n        "
    },
    "rapi_soccer_data_seasonal_statistics_goals": {
        "api_name": "seasonal_statistics_goals",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_seasonal_statistics_goals(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer teamId: The id of the team. defaults to 803\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_seasonal_statistics_goals',kwargs)\n        "
    },
    "rapi_soccer_data_seasonal_goal_analysis_conceding_first": {
        "api_name": "seasonal_goal_analysis_conceding_first",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_seasonal_goal_analysis_conceding_first(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_seasonal_goal_analysis_conceding_first',kwargs)\n        "
    },
    "rapi_soccer_data_result_statistics": {
        "api_name": "result_statistics",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_result_statistics(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_result_statistics',kwargs)\n        "
    },
    "rapi_soccer_data_team_streaks": {
        "api_name": "team_streaks",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_team_streaks(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_team_streaks',kwargs)\n        "
    },
    "rapi_soccer_data_goal_analysis_goal_minutes_in_between": {
        "api_name": "goal_analysis_goal_minutes_in_between",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_goal_analysis_goal_minutes_in_between(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1452254\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_goal_analysis_goal_minutes_in_between',kwargs)\n        "
    },
    "rapi_soccer_data_seasonal_goal_analysis_scoring_first": {
        "api_name": "seasonal_goal_analysis_scoring_first",
        "category": "Sports",
        "tool_name": "soccer_data",
        "code": "async def rapi_soccer_data_seasonal_goal_analysis_scoring_first(self,*args,**kwargs):\n    '''Broadage Soccer API brings a wide range of data for Soccer in fixtures, livescores, standings and many more. Team, tournament or match, retrieve real time data for any perspective you need. Our Soccer Coverage includes 350+ tournaments from all around the world with in-depth coverage, giving the chance to present the best sports data from users located anywhere. <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 1456548\n    '''\n    return await self._request_rapid_api('rapi_soccer_data_seasonal_goal_analysis_scoring_first',kwargs)\n        "
    },
    "rapi_cricket_live_data_series": {
        "api_name": "series",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_series(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_series',kwargs)\n        "
    },
    "rapi_cricket_live_data_fixtures": {
        "api_name": "fixtures",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_fixtures(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_fixtures',kwargs)\n        "
    },
    "rapi_cricket_live_data_fixtures_by_series": {
        "api_name": "fixtures_by_series",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_fixtures_by_series(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    :param integer series_id:  defaults to 606\n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_fixtures_by_series',kwargs)\n        "
    },
    "rapi_cricket_live_data_fixtures_by_date": {
        "api_name": "fixtures_by_date",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_fixtures_by_date(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2020-09-21\n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_fixtures_by_date',kwargs)\n        "
    },
    "rapi_cricket_live_data_results": {
        "api_name": "results",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_results(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_results',kwargs)\n        "
    },
    "rapi_cricket_live_data_results_by_date": {
        "api_name": "results_by_date",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_results_by_date(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2020-09-20\n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_results_by_date',kwargs)\n        "
    },
    "rapi_cricket_live_data_match_scorecard": {
        "api_name": "match_scorecard",
        "category": "Sports",
        "tool_name": "cricket_live_data",
        "code": "async def rapi_cricket_live_data_match_scorecard(self,*args,**kwargs):\n    '''Fixtures, Results, and scorecards for the worlds most popular cricket tournaments\n    \n    \n\n    :param integer match_id:  defaults to 2432999\n    '''\n    return await self._request_rapid_api('rapi_cricket_live_data_match_scorecard',kwargs)\n        "
    },
    "rapi_cycling_schedule_schedule": {
        "api_name": "schedule",
        "category": "Sports",
        "tool_name": "cycling_schedule",
        "code": "async def rapi_cycling_schedule_schedule(self,*args,**kwargs):\n    '''Cycling schedule for belgium and the netherlands\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cycling_schedule_schedule',kwargs)\n        "
    },
    "rapi_nba_latest_news_get_all_latest_nba_articles": {
        "api_name": "get_all_latest_nba_articles",
        "category": "Sports",
        "tool_name": "nba_latest_news",
        "code": "async def rapi_nba_latest_news_get_all_latest_nba_articles(self,*args,**kwargs):\n    '''Nba api that returns latest news articles based on teams or players from espn, bleacher report, nba.com, yahoo, and slam\n    \n    \n\n    :param string? limit: \n    :param string? player: \n    :param string? team: \n    :param string? source: \n    '''\n    return await self._request_rapid_api('rapi_nba_latest_news_get_all_latest_nba_articles',kwargs)\n        "
    },
    "rapi_score_config": {
        "api_name": "config",
        "category": "Sports",
        "tool_name": "score",
        "code": "async def rapi_score_config(self,*args,**kwargs):\n    '''Live Score\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_score_config',kwargs)\n        "
    },
    "rapi_score_cat": {
        "api_name": "cat",
        "category": "Sports",
        "tool_name": "score",
        "code": "async def rapi_score_cat(self,*args,**kwargs):\n    '''Live Score\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_score_cat',kwargs)\n        "
    },
    "rapi_nba_team_stats_team_stats": {
        "api_name": "team_stats",
        "category": "Sports",
        "tool_name": "nba_team_stats",
        "code": "async def rapi_nba_team_stats_team_stats(self,*args,**kwargs):\n    '''Team statistics for every NBA team dating back to 1950\n    \n    \n\n    :param string? leagueYear: \n    :param string? team: \n    '''\n    return await self._request_rapid_api('rapi_nba_team_stats_team_stats',kwargs)\n        "
    },
    "rapi_sports_live_scores_table_tennis_live_matches": {
        "api_name": "table_tennis_live_matches",
        "category": "Sports",
        "tool_name": "sports_live_scores",
        "code": "async def rapi_sports_live_scores_table_tennis_live_matches(self,*args,**kwargs):\n    '''We support different Sports. Bettings odds, livescores, rankings and match details included. Sports include Football, Tennis, Basketball, Crikcet, Futsal, Handball, Baseball, Table Tennis, Esports. Try it out and always feel free tor reach out to the team to add more endpoints!  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sports_live_scores_table_tennis_live_matches',kwargs)\n        "
    },
    "rapi_sports_live_scores_tennis_live_matches": {
        "api_name": "tennis_live_matches",
        "category": "Sports",
        "tool_name": "sports_live_scores",
        "code": "async def rapi_sports_live_scores_tennis_live_matches(self,*args,**kwargs):\n    '''We support different Sports. Bettings odds, livescores, rankings and match details included. Sports include Football, Tennis, Basketball, Crikcet, Futsal, Handball, Baseball, Table Tennis, Esports. Try it out and always feel free tor reach out to the team to add more endpoints!  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sports_live_scores_tennis_live_matches',kwargs)\n        "
    },
    "rapi_sofasport_form": {
        "api_name": "form",
        "category": "Sports",
        "tool_name": "sofasport",
        "code": "async def rapi_sofasport_form(self,*args,**kwargs):\n    '''SofaSport has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  **Partners and customers**: (Opta sports) statsperform.com , sofascore.com, aiscore.com  **Support**: ...\n    \n    \n\n    :param integer event_id: Event id defaults to 10236820\n    '''\n    return await self._request_rapid_api('rapi_sofasport_form',kwargs)\n        "
    },
    "rapi_sofasport_innings_cricket": {
        "api_name": "innings_cricket",
        "category": "Sports",
        "tool_name": "sofasport",
        "code": "async def rapi_sofasport_innings_cricket(self,*args,**kwargs):\n    '''SofaSport has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  **Partners and customers**: (Opta sports) statsperform.com , sofascore.com, aiscore.com  **Support**: ...\n    \n    \n\n    :param integer event_id: Event id defaults to 10188874\n    '''\n    return await self._request_rapid_api('rapi_sofasport_innings_cricket',kwargs)\n        "
    },
    "rapi_allscores_country_flag": {
        "api_name": "country_flag",
        "category": "Sports",
        "tool_name": "allscores",
        "code": "async def rapi_allscores_country_flag(self,*args,**kwargs):\n    '''Beware! Our live match updates may be faster than other API's.\nEnjoy our 24/7 wide coverage of real time scores data for 10 different sports and over 2,000 competitions worldwide, including Real-time Stats, Breaking News, In-Play Insights, Lineups, Live Tables, Fixtures, Social Buzz, Odds and much more.\nSupported 10 Sports Types: Football, Rugby, Tennis, Basketball, Cricket, Ice Hockey, Baseball, Volleyball, American football and Handball.\n    \n    \n\n    :param integer countryId: The country id. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_allscores_country_flag',kwargs)\n        "
    },
    "rapi_nfl_team_stats_team_stats": {
        "api_name": "team_stats",
        "category": "Sports",
        "tool_name": "nfl_team_stats",
        "code": "async def rapi_nfl_team_stats_team_stats(self,*args,**kwargs):\n    '''Current and historical team stats for every NFL football team.\n    \n    \n\n    :param string? leagueYear: The league year of statistics you want to query.  League years refer to the year of the season when it begins, i.e., the 2022-2023 NFL season's league year is 2022.\n\nMinimum value is 1922 (the first year of the NFL), max value is the current league year. All other queries will return null.\n\nDefault value is the current league year.\n    :param string? team: The team whose statistics you want to query. The controller uses a case-insensitive string matcher, so queries of `phi` or `eag` should return statistics for the Philadelphia Eagles. Please note this query will only return one result, so a query such as `New York` may return an unexpected value.\n\nDefault value is empty and the query will return all teams for the league year.\n    '''\n    return await self._request_rapid_api('rapi_nfl_team_stats_team_stats',kwargs)\n        "
    },
    "rapi_ncaa_champions_get_ncaa_men_2000_2021": {
        "api_name": "get_ncaa_men_2000_2021",
        "category": "Sports",
        "tool_name": "ncaa_champions",
        "code": "async def rapi_ncaa_champions_get_ncaa_men_2000_2021(self,*args,**kwargs):\n    '''API that provides yearly historical data for NCAA Division I  tournaments\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ncaa_champions_get_ncaa_men_2000_2021',kwargs)\n        "
    },
    "rapi_live_sports_odds_v4_sports": {
        "api_name": "v4_sports",
        "category": "Sports",
        "tool_name": "live_sports_odds",
        "code": "async def rapi_live_sports_odds_v4_sports(self,*args,**kwargs):\n    '''Odds data API for NFL, NBA, MLB, EPL, AFL and loads more, from US, UK, EU and Aussie bookmakers. Get started for free!\n    \n    \n\n    :param boolean? all: When excluded, only recently updated (in-season) sports appear. Include this paramter to see all available sports defaults to true\n    '''\n    return await self._request_rapid_api('rapi_live_sports_odds_v4_sports',kwargs)\n        "
    },
    "rapi_football_betting_odds_provider4_live_inplaying": {
        "api_name": "provider4_live_inplaying",
        "category": "Sports",
        "tool_name": "football_betting_odds",
        "code": "async def rapi_football_betting_odds_provider4_live_inplaying(self,*args,**kwargs):\n    '''Live and Upcoming Football Betting Odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_betting_odds_provider4_live_inplaying',kwargs)\n        "
    },
    "rapi_football_betting_odds_provider2_live_list": {
        "api_name": "provider2_live_list",
        "category": "Sports",
        "tool_name": "football_betting_odds",
        "code": "async def rapi_football_betting_odds_provider2_live_list(self,*args,**kwargs):\n    '''Live and Upcoming Football Betting Odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_betting_odds_provider2_live_list',kwargs)\n        "
    },
    "rapi_football_betting_odds_provider3_live_list": {
        "api_name": "provider3_live_list",
        "category": "Sports",
        "tool_name": "football_betting_odds",
        "code": "async def rapi_football_betting_odds_provider3_live_list(self,*args,**kwargs):\n    '''Live and Upcoming Football Betting Odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_betting_odds_provider3_live_list',kwargs)\n        "
    },
    "rapi_football_betting_odds_provider2_live_inplaying": {
        "api_name": "provider2_live_inplaying",
        "category": "Sports",
        "tool_name": "football_betting_odds",
        "code": "async def rapi_football_betting_odds_provider2_live_inplaying(self,*args,**kwargs):\n    '''Live and Upcoming Football Betting Odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_betting_odds_provider2_live_inplaying',kwargs)\n        "
    },
    "rapi_football_betting_odds_provider2_live_upcoming": {
        "api_name": "provider2_live_upcoming",
        "category": "Sports",
        "tool_name": "football_betting_odds",
        "code": "async def rapi_football_betting_odds_provider2_live_upcoming(self,*args,**kwargs):\n    '''Live and Upcoming Football Betting Odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_betting_odds_provider2_live_upcoming',kwargs)\n        "
    },
    "rapi_nhl_stats_and_live_data_getteams": {
        "api_name": "getteams",
        "category": "Sports",
        "tool_name": "nhl_stats_and_live_data",
        "code": "async def rapi_nhl_stats_and_live_data_getteams(self,*args,**kwargs):\n    '''Get live data and stats about any NHL game, teams, players, drafts and many more.\n\n    \n    \n\n    :param integer? season: Return a team's specific season. defaults to 20172018\n    :param string? expand: Expand your response for some additional data. defaults to team.roster\n    '''\n    return await self._request_rapid_api('rapi_nhl_stats_and_live_data_getteams',kwargs)\n        "
    },
    "rapi_nhl_stats_and_live_data_getgamecontent": {
        "api_name": "getgamecontent",
        "category": "Sports",
        "tool_name": "nhl_stats_and_live_data",
        "code": "async def rapi_nhl_stats_and_live_data_getgamecontent(self,*args,**kwargs):\n    '''Get live data and stats about any NHL game, teams, players, drafts and many more.\n\n    \n    \n\n    :param integer id: The ID of the game. The first 4 digits identify the season of the game (ie. 2017 for the 2017-2018 season). The next 2 digits give the type of game, where 01 = preseason, 02 = regular season, 03 = playoffs, 04 = all-star. The final 4 digits identify the specific game number. For regular season and preseason games, this ranges from 0001 to the number of games played. (1271 for seasons with 31 teams (2017 and onwards) and 1230 for seasons with 30 teams). For playoff games, the 2nd digit of the specific number gives the round of the playoffs, the 3rd digit specifies the matchup, and the 4th digit specifies the game (out of 7). defaults to 2017020851\n    '''\n    return await self._request_rapid_api('rapi_nhl_stats_and_live_data_getgamecontent',kwargs)\n        "
    },
    "rapi_nhl_stats_and_live_data_getstandingtypes": {
        "api_name": "getstandingtypes",
        "category": "Sports",
        "tool_name": "nhl_stats_and_live_data",
        "code": "async def rapi_nhl_stats_and_live_data_getstandingtypes(self,*args,**kwargs):\n    '''Get live data and stats about any NHL game, teams, players, drafts and many more.\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nhl_stats_and_live_data_getstandingtypes',kwargs)\n        "
    },
    "rapi_ice_hockey_data_tournament_standings": {
        "api_name": "tournament_standings",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_tournament_standings(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_tournament_standings',kwargs)\n        "
    },
    "rapi_ice_hockey_data_daily_match_list_results": {
        "api_name": "daily_match_list_results",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_daily_match_list_results(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 28/01/2021\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_daily_match_list_results',kwargs)\n        "
    },
    "rapi_ice_hockey_data_daily_match_list_scheduled": {
        "api_name": "daily_match_list_scheduled",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_daily_match_list_scheduled(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 29/01/2021\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_daily_match_list_scheduled',kwargs)\n        "
    },
    "rapi_ice_hockey_data_tournament_teams": {
        "api_name": "tournament_teams",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_tournament_teams(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_tournament_teams',kwargs)\n        "
    },
    "rapi_ice_hockey_data_tournament_info": {
        "api_name": "tournament_info",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_tournament_info(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_tournament_info',kwargs)\n        "
    },
    "rapi_ice_hockey_data_daily_match_list_all": {
        "api_name": "daily_match_list_all",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_daily_match_list_all(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 29/01/2021\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_daily_match_list_all',kwargs)\n        "
    },
    "rapi_ice_hockey_data_tournament_fixture": {
        "api_name": "tournament_fixture",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_tournament_fixture(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_tournament_fixture',kwargs)\n        "
    },
    "rapi_ice_hockey_data_tournament_list": {
        "api_name": "tournament_list",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_tournament_list(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_tournament_list',kwargs)\n        "
    },
    "rapi_ice_hockey_data_recent_match_list": {
        "api_name": "recent_match_list",
        "category": "Sports",
        "tool_name": "ice_hockey_data",
        "code": "async def rapi_ice_hockey_data_recent_match_list(self,*args,**kwargs):\n    '''Broadage Ice Hockey API will give you wide range of data of world's top ice hockey leagues, including fixtures, standings, match lists and many more. Our Ice Hockey Coverage includes the biggest ice hockey tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=icehockey_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 106557\n    '''\n    return await self._request_rapid_api('rapi_ice_hockey_data_recent_match_list',kwargs)\n        "
    },
    "rapi_football_xg_statistics_seasons_list_by_tournamentid": {
        "api_name": "seasons_list_by_tournamentid",
        "category": "Sports",
        "tool_name": "football_xg_statistics",
        "code": "async def rapi_football_xg_statistics_seasons_list_by_tournamentid(self,*args,**kwargs):\n    '''Football (soccer) xG statistics. We provide statistics for more than 80 leagues. There are more than 90 000 games and 2 million shots  in our database.\n    \n    \n\n    :param integer id:  defaults to 325\n    '''\n    return await self._request_rapid_api('rapi_football_xg_statistics_seasons_list_by_tournamentid',kwargs)\n        "
    },
    "rapi_football_xg_statistics_fixture_by_fixtureid": {
        "api_name": "fixture_by_fixtureid",
        "category": "Sports",
        "tool_name": "football_xg_statistics",
        "code": "async def rapi_football_xg_statistics_fixture_by_fixtureid(self,*args,**kwargs):\n    '''Football (soccer) xG statistics. We provide statistics for more than 80 leagues. There are more than 90 000 games and 2 million shots  in our database.\n    \n    \n\n    :param integer id:  defaults to 124846\n    '''\n    return await self._request_rapid_api('rapi_football_xg_statistics_fixture_by_fixtureid',kwargs)\n        "
    },
    "rapi_football_xg_statistics_fixtures_list_by_seasonid": {
        "api_name": "fixtures_list_by_seasonid",
        "category": "Sports",
        "tool_name": "football_xg_statistics",
        "code": "async def rapi_football_xg_statistics_fixtures_list_by_seasonid(self,*args,**kwargs):\n    '''Football (soccer) xG statistics. We provide statistics for more than 80 leagues. There are more than 90 000 games and 2 million shots  in our database.\n    \n    \n\n    :param integer id:  defaults to 8202\n    :param string? filter: \n    :param integer? from: \n    :param integer? to: \n    '''\n    return await self._request_rapid_api('rapi_football_xg_statistics_fixtures_list_by_seasonid',kwargs)\n        "
    },
    "rapi_ultimate_tennis_tournament_list_wta": {
        "api_name": "tournament_list_wta",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_tournament_list_wta(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string year: year must fall between 1960 and 2022 defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_tournament_list_wta',kwargs)\n        "
    },
    "rapi_ultimate_tennis_official_atp_players_rankings": {
        "api_name": "official_atp_players_rankings",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_official_atp_players_rankings(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string category:  defaults to singles\n    :param string n_players:  defaults to 50\n    :param string timestamp: Time window\n\n**IMPORTANT**: The timestamp must be in the following format **YYYY-MM-DD** and the date **must fall on Monday** since the rankings are updated at the start of every week defaults to current\n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_official_atp_players_rankings',kwargs)\n        "
    },
    "rapi_ultimate_tennis_tournament_list": {
        "api_name": "tournament_list",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_tournament_list(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string category: Options:\n\n- **atpgs**: Atp tournaments + grand Slams\n\n- **atp**: Atp circuit\n\n- **gs**: grand slams\n\n- **1000**: Masters 1000\n\n- **ch**: Challenger Circuit defaults to atpgs\n    :param string year:  defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_tournament_list',kwargs)\n        "
    },
    "rapi_ultimate_tennis_live_matches_stats": {
        "api_name": "live_matches_stats",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_live_matches_stats(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string match_id: Id identying the single match. It can be retrieved from the Live Scores with Live Betting Odds endpoint. defaults to 10319698\n    :param string? 10319698: \n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_live_matches_stats',kwargs)\n        "
    },
    "rapi_ultimate_tennis_live_scores_with_live_betting_odds": {
        "api_name": "live_scores_with_live_betting_odds",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_live_scores_with_live_betting_odds(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_live_scores_with_live_betting_odds',kwargs)\n        "
    },
    "rapi_ultimate_tennis_global_players_statistics": {
        "api_name": "global_players_statistics",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_global_players_statistics(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string season: Select season to select. Just pass the year:\nall- all time rankings\n\nThe first year supported is 1991. defaults to all\n    :param string category: Available options are: **aces**, **1stserve**, **returngameswon**, **breakpointsconverted**, **returnpointswon2ndserve**, **returnpointswon2ndserve**, **returnpointswon1stserve**, **1stservepointswon**, **2ndservepointswon**, **servicegameswon**, **breakpointsaved**\n defaults to aces\n    :param string surface: **clay**, **grass**or **hard**. Otherwise, just leave **all**to select all surfaces. defaults to all\n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_global_players_statistics',kwargs)\n        "
    },
    "rapi_ultimate_tennis_live_players_rankings": {
        "api_name": "live_players_rankings",
        "category": "Sports",
        "tool_name": "ultimate_tennis",
        "code": "async def rapi_ultimate_tennis_live_players_rankings(self,*args,**kwargs):\n    ''' Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   \n    \n    \n\n    :param string n_player: Max: 200.  Please provide just an Integer defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_ultimate_tennis_live_players_rankings',kwargs)\n        "
    },
    "rapi_livescore_v2_leagues_v2_list": {
        "api_name": "leagues_v2_list",
        "category": "Sports",
        "tool_name": "livescore_v2",
        "code": "async def rapi_livescore_v2_leagues_v2_list(self,*args,**kwargs):\n    '''This API helps to query for football, cricket, basketball, tennis, hockey matches, leagues, news, etc... to create a sporting site/application such as livescore.com\n    \n    \n\n    :param string Category: One of the followings : soccer|cricket|basketball|tennis|hockey defaults to soccer\n    '''\n    return await self._request_rapid_api('rapi_livescore_v2_leagues_v2_list',kwargs)\n        "
    },
    "rapi_livescore_v2_matches_v2_get_incidents": {
        "api_name": "matches_v2_get_incidents",
        "category": "Sports",
        "tool_name": "livescore_v2",
        "code": "async def rapi_livescore_v2_matches_v2_get_incidents(self,*args,**kwargs):\n    '''This API helps to query for football, cricket, basketball, tennis, hockey matches, leagues, news, etc... to create a sporting site/application such as livescore.com\n    \n    \n\n    :param integer Eid: The value of Eid field returned in .../matches/v2/list-by-league or .../matches/v2/list-by-date or .../matches/v2/list-live or .../competitions/detail endpoint defaults to 702093\n    :param string Category: One of the followings : soccer|cricket|basketball|tennis|hockey defaults to soccer\n    '''\n    return await self._request_rapid_api('rapi_livescore_v2_matches_v2_get_incidents',kwargs)\n        "
    },
    "rapi_transfermarket_transfers_list_records": {
        "api_name": "transfers_list_records",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_transfers_list_records(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string competitionID: The value of id field returned in .../search or .../competitions/list... endpoints. DO NOT use together with clubID defaults to IT1\n    :param string? positionGroup: One of the following Abwehr|Mittelfeld|Sturm\n    :param integer? clubID: The value of id field returned in .../search or .../clubs/list-by-competition endpoints. DO NOT use together with competitionID\n    :param integer? offset: The offset to be ignored, for paging purpose defaults to 0\n    :param integer? limit: The number of items per response, for paging purpose defaults to 30\n    :param integer? positionID: One of the following 1-Goalkeeper|2-Sweeper|3-Centre-Back|4-Left-Back|5-Right-Back|6-Defensive Midfield|7-Central Midfield|8-Right Midfield|9-Left Midfield|10-Attacking Midfield|11-Left Winger|12-Right Winger|13-Second Striker|14-Centre-Forward\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_transfers_list_records',kwargs)\n        "
    },
    "rapi_transfermarket_transfers_list": {
        "api_name": "transfers_list",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_transfers_list(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string competitionID: The value of id field returned in .../search or .../competitions/list... endpoints. DO NOT use together with clubID defaults to IT1\n    :param string? positionGroup: One of the following Abwehr|Mittelfeld|Sturm\n    :param integer? limit: The number of items per response, for paging purpose defaults to 30\n    :param integer? maxValue: The max market value of players. Ex : 151000000\n    :param integer? positionID: One of the following 1-Goalkeeper|2-Sweeper|3-Centre-Back|4-Left-Back|5-Right-Back|6-Defensive Midfield|7-Central Midfield|8-Right Midfield|9-Left Midfield|10-Attacking Midfield|11-Left Winger|12-Right Winger|13-Second Striker|14-Centre-Forward\n    :param integer? clubID: The value of id field returned in .../search or .../clubs/list-by-competition endpoints. DO NOT use together with competitionID\n    :param integer? minValue: The min market value of players. Ex : 9000000\n    :param integer? offset: The offset to be ignored, for paging purpose defaults to 0\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_transfers_list',kwargs)\n        "
    },
    "rapi_transfermarket_competitions_get_game_plan": {
        "api_name": "competitions_get_game_plan",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_competitions_get_game_plan(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string id: The value of id field returned in .../search or .../competitions/list-default endpoints defaults to GB1\n    :param string seasonID: The value of id field returned in .../competitions/list-seasons endpoint defaults to 2020\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_competitions_get_game_plan',kwargs)\n        "
    },
    "rapi_transfermarket_competitions_get_short_info": {
        "api_name": "competitions_get_short_info",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_competitions_get_short_info(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string ids: The value of id field returned in .../search or .../competitions/list-default endpoints. Separated by coma for multiple values. Ex : L1,L2,L3,GB1,ES1,IT1,etc... defaults to L1,L2,L3,GB1,ES1,IT1,TR1,FR1,NL1,A1,C1,MLS1\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_competitions_get_short_info',kwargs)\n        "
    },
    "rapi_transfermarket_staffs_get_short_info": {
        "api_name": "staffs_get_short_info",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_staffs_get_short_info(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string ids: The value of id field returned in .../search or .../staffs/list... endpoints. Separated by coma for multiple values. Ex : 60805,39208,17455,38756,72819,48174,etc... defaults to 60805,39208,17455,38756,72819,48174\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_staffs_get_short_info',kwargs)\n        "
    },
    "rapi_transfermarket_clubs_get_header_info": {
        "api_name": "clubs_get_header_info",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_clubs_get_header_info(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param integer id: The value of id field returned in .../search or .../clubs/list-by-competition endpoints defaults to 631\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_clubs_get_header_info',kwargs)\n        "
    },
    "rapi_transfermarket_clubs_list_by_competition": {
        "api_name": "clubs_list_by_competition",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_clubs_list_by_competition(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string id: The value of id field returned in .../search or .../competitions/list... endpoints defaults to IT1\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_clubs_list_by_competition',kwargs)\n        "
    },
    "rapi_transfermarket_competitions_list_default": {
        "api_name": "competitions_list_default",
        "category": "Sports",
        "tool_name": "transfermarket",
        "code": "async def rapi_transfermarket_competitions_list_default(self,*args,**kwargs):\n    '''This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com\n    \n    \n\n    :param string? domain: One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world defaults to de\n    '''\n    return await self._request_rapid_api('rapi_transfermarket_competitions_list_default',kwargs)\n        "
    },
    "rapi_msport_livescores": {
        "api_name": "livescores",
        "category": "Sports",
        "tool_name": "msport",
        "code": "async def rapi_msport_livescores(self,*args,**kwargs):\n    '''Soccer livescore , results , fixtures , match and everything you need from 7msport \n\n(if you need additional or new feature just contact me)\n    \n    \n\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_msport_livescores',kwargs)\n        "
    },
    "rapi_msport_fixtures": {
        "api_name": "fixtures",
        "category": "Sports",
        "tool_name": "msport",
        "code": "async def rapi_msport_fixtures(self,*args,**kwargs):\n    '''Soccer livescore , results , fixtures , match and everything you need from 7msport \n\n(if you need additional or new feature just contact me)\n    \n    \n\n    :param integer? page:  defaults to 1\n    :param integer? day:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_msport_fixtures',kwargs)\n        "
    },
    "rapi_msport_match": {
        "api_name": "match",
        "category": "Sports",
        "tool_name": "msport",
        "code": "async def rapi_msport_match(self,*args,**kwargs):\n    '''Soccer livescore , results , fixtures , match and everything you need from 7msport \n\n(if you need additional or new feature just contact me)\n    \n    \n\n    :param string id:  defaults to 4451971\n    '''\n    return await self._request_rapid_api('rapi_msport_match',kwargs)\n        "
    },
    "rapi_msport_results": {
        "api_name": "results",
        "category": "Sports",
        "tool_name": "msport",
        "code": "async def rapi_msport_results(self,*args,**kwargs):\n    '''Soccer livescore , results , fixtures , match and everything you need from 7msport \n\n(if you need additional or new feature just contact me)\n    \n    \n\n    :param string date:  defaults to 2023-01-30\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_msport_results',kwargs)\n        "
    },
    "rapi_serie_a_standings_serie_a_standings": {
        "api_name": "serie_a_standings",
        "category": "Sports",
        "tool_name": "serie_a_standings",
        "code": "async def rapi_serie_a_standings_serie_a_standings(self,*args,**kwargs):\n    '''Italian Serie A Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_serie_a_standings_serie_a_standings',kwargs)\n        "
    },
    "rapi_free_football_soccer_videos_v2_feed": {
        "api_name": "feed",
        "category": "Sports",
        "tool_name": "free_football_soccer_videos_v2",
        "code": "async def rapi_free_football_soccer_videos_v2_feed(self,*args,**kwargs):\n    '''Embed codes for the latest goals' videos and video highlights from the matches of the Premier League, La Liga, Bundesliga and many more\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_free_football_soccer_videos_v2_feed',kwargs)\n        "
    },
    "rapi_football_dolphin_head_to_head_statistics": {
        "api_name": "head_to_head_statistics",
        "category": "Sports",
        "tool_name": "football_dolphin",
        "code": "async def rapi_football_dolphin_head_to_head_statistics(self,*args,**kwargs):\n    '''This Api returns statistical data about English Premier League. Click on the link to view all endpoints in one web app  https://football-dolphin-web-app.up.railway.app/\n    \n    \n\n    :param string first_team: **Enter first team from all available teams:** Arsenal, Aston Villa, Barnsley, Birmingham, Blackburn, Blackpool, Bolton, Bournemouth, Bradford, Brighton, Burnley, Cardiff, Charlton, Chelsea, Coventry, Crystal Palace, Derby, Everton, Fulham, Huddersfield, Hull, Ipswich, Leeds, Leicester, Liverpool, Man City, Man United, Middlesbrough, Newcastle, Norwich, Nott'm Forest, Portsmouth, QPR, Reading, Sheffield United, Sheffield Weds, Southampton, Stoke, Sunderland, Swansea, Tottenham, Watford, West Brom, West Ham, Wigan, Wimbledon, Wolves defaults to Man United\n    :param string second_team: **Enter second team from all available teams:** Arsenal, Aston Villa, Barnsley, Birmingham, Blackburn, Blackpool, Bolton, Bournemouth, Bradford, Brighton, Burnley, Cardiff, Charlton, Chelsea, Coventry, Crystal Palace, Derby, Everton, Fulham, Huddersfield, Hull, Ipswich, Leeds, Leicester, Liverpool, Man City, Man United, Middlesbrough, Newcastle, Norwich, Nott'm Forest, Portsmouth, QPR, Reading, Sheffield United, Sheffield Weds, Southampton, Stoke, Sunderland, Swansea, Tottenham, Watford, West Brom, West Ham, Wigan, Wimbledon, Wolves defaults to Liverpool\n    :param string type_of_statistics: **Enter one from available types of statistics:** \nfull time result, \nhome vs away full time result, \nresult first half and the match,\nexact number of goals in the match, \ngoals over, \ngoals under defaults to full time result\n    '''\n    return await self._request_rapid_api('rapi_football_dolphin_head_to_head_statistics',kwargs)\n        "
    },
    "rapi_betmaster_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "betmaster",
        "code": "async def rapi_betmaster_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betmaster\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betmaster_odds',kwargs)\n        "
    },
    "rapi_betmaster_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "betmaster",
        "code": "async def rapi_betmaster_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betmaster\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betmaster_matches',kwargs)\n        "
    },
    "rapi_sport_odds_geteventtypes": {
        "api_name": "geteventtypes",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_geteventtypes(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_geteventtypes',kwargs)\n        "
    },
    "rapi_sport_odds_getlivenow": {
        "api_name": "getlivenow",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_getlivenow(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_getlivenow',kwargs)\n        "
    },
    "rapi_sport_odds_geteventdetails": {
        "api_name": "geteventdetails",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_geteventdetails(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string skinName:  defaults to fastbet\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_geteventdetails',kwargs)\n        "
    },
    "rapi_sport_odds_geteventexternalinfo": {
        "api_name": "geteventexternalinfo",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_geteventexternalinfo(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_geteventexternalinfo',kwargs)\n        "
    },
    "rapi_sport_odds_gettopsportmenu": {
        "api_name": "gettopsportmenu",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_gettopsportmenu(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_gettopsportmenu',kwargs)\n        "
    },
    "rapi_sport_odds_gettopsports": {
        "api_name": "gettopsports",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_gettopsports(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sport_odds_gettopsports',kwargs)\n        "
    },
    "rapi_sport_odds_getmenubysport": {
        "api_name": "getmenubysport",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_getmenubysport(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_getmenubysport',kwargs)\n        "
    },
    "rapi_sport_odds_getstatictranslations": {
        "api_name": "getstatictranslations",
        "category": "Sports",
        "tool_name": "sport_odds",
        "code": "async def rapi_sport_odds_getstatictranslations(self,*args,**kwargs):\n    '''Sport Odds by BetsSports\n    \n    \n\n    :param string? skinName:  defaults to betbiga\n    '''\n    return await self._request_rapid_api('rapi_sport_odds_getstatictranslations',kwargs)\n        "
    },
    "rapi_tennis_live_data_tours": {
        "api_name": "tours",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tours(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tours',kwargs)\n        "
    },
    "rapi_tennis_live_data_tournaments": {
        "api_name": "tournaments",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tournaments(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param string tour_code:  defaults to ATP\n    :param integer season_id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tournaments',kwargs)\n        "
    },
    "rapi_tennis_live_data_tournament_matches": {
        "api_name": "tournament_matches",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tournament_matches(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param integer tournament_id:  defaults to 1143\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tournament_matches',kwargs)\n        "
    },
    "rapi_tennis_live_data_tournament_matches_by_date": {
        "api_name": "tournament_matches_by_date",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tournament_matches_by_date(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2020-01-06\n    :param integer tournament_id:  defaults to 1143\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tournament_matches_by_date',kwargs)\n        "
    },
    "rapi_tennis_live_data_tournament_matches_and_results": {
        "api_name": "tournament_matches_and_results",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tournament_matches_and_results(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param integer tournament_id:  defaults to 1193\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tournament_matches_and_results',kwargs)\n        "
    },
    "rapi_tennis_live_data_tournament_matches_and_results_by_date": {
        "api_name": "tournament_matches_and_results_by_date",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tournament_matches_and_results_by_date(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param integer tournament_id:  defaults to 1193\n    :param DATE (YYYY-MM-DD) date:  defaults to 2020-08-22\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tournament_matches_and_results_by_date',kwargs)\n        "
    },
    "rapi_tennis_live_data_match": {
        "api_name": "match",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_match(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param integer match_id:  defaults to 10535\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_match',kwargs)\n        "
    },
    "rapi_tennis_live_data_tour_rankings": {
        "api_name": "tour_rankings",
        "category": "Sports",
        "tool_name": "tennis_live_data",
        "code": "async def rapi_tennis_live_data_tour_rankings(self,*args,**kwargs):\n    '''Tennis data for top competitions around the world including tournaments, matches, results, and rankings.\n    \n    \n\n    :param string tour_code:  defaults to ATP\n    '''\n    return await self._request_rapid_api('rapi_tennis_live_data_tour_rankings',kwargs)\n        "
    },
    "rapi_betway_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "betway",
        "code": "async def rapi_betway_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betway\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betway_matches',kwargs)\n        "
    },
    "rapi_betway_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "betway",
        "code": "async def rapi_betway_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betway\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betway_odds',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_pga_scorecards": {
        "api_name": "pga_scorecards",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_pga_scorecards(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param integer player_id:  defaults to 101017\n    :param integer tourn_id:  defaults to 220\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_pga_scorecards',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_projected_pga_rankings": {
        "api_name": "projected_pga_rankings",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_projected_pga_rankings(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param string season:  defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_projected_pga_rankings',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_world_rankings": {
        "api_name": "world_rankings",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_world_rankings(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_world_rankings',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_tour_rankings": {
        "api_name": "tour_rankings",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_tour_rankings(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param integer tour_id:  defaults to 2\n    :param integer season:  defaults to 2021\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_tour_rankings',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_fixtures": {
        "api_name": "fixtures",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_fixtures(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param integer tour_id:  defaults to 2\n    :param integer season_id:  defaults to 2021\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_fixtures',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_entry_list": {
        "api_name": "entry_list",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_entry_list(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param integer tournament_id:  defaults to 219\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_entry_list',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_tours": {
        "api_name": "tours",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_tours(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_tours',kwargs)\n        "
    },
    "rapi_golf_leaderboard_data_leaderboard": {
        "api_name": "leaderboard",
        "category": "Sports",
        "tool_name": "golf_leaderboard_data",
        "code": "async def rapi_golf_leaderboard_data_leaderboard(self,*args,**kwargs):\n    '''Major golf tours, fixtures, results and up to the minute leaderboard data to enhance your applications.\n    \n    \n\n    :param integer tournament_id:  defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_golf_leaderboard_data_leaderboard',kwargs)\n        "
    },
    "rapi_football_data_daily_match_list_scheduled": {
        "api_name": "daily_match_list_scheduled",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_daily_match_list_scheduled(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of the matches. The format is {dd/mm/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 07/02/2021\n    '''\n    return await self._request_rapid_api('rapi_football_data_daily_match_list_scheduled',kwargs)\n        "
    },
    "rapi_football_data_match_boxscore": {
        "api_name": "match_boxscore",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_match_boxscore(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match.\n    '''\n    return await self._request_rapid_api('rapi_football_data_match_boxscore',kwargs)\n        "
    },
    "rapi_football_data_daily_match_list_all": {
        "api_name": "daily_match_list_all",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_daily_match_list_all(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: Date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 06/10/2020\n    '''\n    return await self._request_rapid_api('rapi_football_data_daily_match_list_all',kwargs)\n        "
    },
    "rapi_football_data_tournament_info": {
        "api_name": "tournament_info",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_tournament_info(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 9\n    '''\n    return await self._request_rapid_api('rapi_football_data_tournament_info',kwargs)\n        "
    },
    "rapi_football_data_daily_match_list_results": {
        "api_name": "daily_match_list_results",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_daily_match_list_results(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of matches. The format is {dd/mm/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 24/01/2021\n    '''\n    return await self._request_rapid_api('rapi_football_data_daily_match_list_results',kwargs)\n        "
    },
    "rapi_football_data_tournament_list": {
        "api_name": "tournament_list",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_tournament_list(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_data_tournament_list',kwargs)\n        "
    },
    "rapi_football_data_match_team_statistics": {
        "api_name": "match_team_statistics",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_match_team_statistics(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 21587\n    '''\n    return await self._request_rapid_api('rapi_football_data_match_team_statistics',kwargs)\n        "
    },
    "rapi_football_data_tournament_teams": {
        "api_name": "tournament_teams",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_tournament_teams(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_football_data_tournament_teams',kwargs)\n        "
    },
    "rapi_football_data_match_play_by_play": {
        "api_name": "match_play_by_play",
        "category": "Sports",
        "tool_name": "football_data",
        "code": "async def rapi_football_data_match_play_by_play(self,*args,**kwargs):\n    '''Broadage Football API can deliver any type of data for a football match, tournament or team; including livescores, play-by-play, boxscore, match statistics and many more. Our Football Coverage includes the biggest football tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=football_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 18656\n    '''\n    return await self._request_rapid_api('rapi_football_data_match_play_by_play',kwargs)\n        "
    },
    "rapi_rugby_live_data_fixtures_by_team_by_season": {
        "api_name": "fixtures_by_team_by_season",
        "category": "Sports",
        "tool_name": "rugby_live_data",
        "code": "async def rapi_rugby_live_data_fixtures_by_team_by_season(self,*args,**kwargs):\n    '''Rugby fixtures, results, standings and live match coverage from around the world.\n    \n    \n\n    :param integer season_id:  defaults to 2023\n    :param integer team_id:  defaults to 6167\n    '''\n    return await self._request_rapid_api('rapi_rugby_live_data_fixtures_by_team_by_season',kwargs)\n        "
    },
    "rapi_rugby_live_data_fixtures_by_team": {
        "api_name": "fixtures_by_team",
        "category": "Sports",
        "tool_name": "rugby_live_data",
        "code": "async def rapi_rugby_live_data_fixtures_by_team(self,*args,**kwargs):\n    '''Rugby fixtures, results, standings and live match coverage from around the world.\n    \n    \n\n    :param integer team_id:  defaults to 9317\n    '''\n    return await self._request_rapid_api('rapi_rugby_live_data_fixtures_by_team',kwargs)\n        "
    },
    "rapi_rugby_live_data_standings": {
        "api_name": "standings",
        "category": "Sports",
        "tool_name": "rugby_live_data",
        "code": "async def rapi_rugby_live_data_standings(self,*args,**kwargs):\n    '''Rugby fixtures, results, standings and live match coverage from around the world.\n    \n    \n\n    :param integer season_id:  defaults to 2020\n    :param integer comp_id:  defaults to 1236\n    '''\n    return await self._request_rapid_api('rapi_rugby_live_data_standings',kwargs)\n        "
    },
    "rapi_simple_surf_forecast_api_getcountries": {
        "api_name": "getcountries",
        "category": "Sports",
        "tool_name": "simple_surf_forecast_api",
        "code": "async def rapi_simple_surf_forecast_api_getcountries(self,*args,**kwargs):\n    '''Surf forecast api very simple to use\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_simple_surf_forecast_api_getcountries',kwargs)\n        "
    },
    "rapi_handball_data_tournament_list": {
        "api_name": "tournament_list",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_tournament_list(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_handball_data_tournament_list',kwargs)\n        "
    },
    "rapi_handball_data_tournament_teams": {
        "api_name": "tournament_teams",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_tournament_teams(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_handball_data_tournament_teams',kwargs)\n        "
    },
    "rapi_handball_data_tournament_info": {
        "api_name": "tournament_info",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_tournament_info(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_handball_data_tournament_info',kwargs)\n        "
    },
    "rapi_handball_data_tournament_fixture": {
        "api_name": "tournament_fixture",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_tournament_fixture(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_handball_data_tournament_fixture',kwargs)\n        "
    },
    "rapi_handball_data_daily_match_list_results": {
        "api_name": "daily_match_list_results",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_daily_match_list_results(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param string date: The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days. defaults to 28/01/2021\n    '''\n    return await self._request_rapid_api('rapi_handball_data_daily_match_list_results',kwargs)\n        "
    },
    "rapi_handball_data_result_statistics_goals": {
        "api_name": "result_statistics_goals",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_result_statistics_goals(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match.\n    '''\n    return await self._request_rapid_api('rapi_handball_data_result_statistics_goals',kwargs)\n        "
    },
    "rapi_handball_data_recent_match_list": {
        "api_name": "recent_match_list",
        "category": "Sports",
        "tool_name": "handball_data",
        "code": "async def rapi_handball_data_recent_match_list(self,*args,**kwargs):\n    '''Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 63813\n    '''\n    return await self._request_rapid_api('rapi_handball_data_recent_match_list',kwargs)\n        "
    },
    "rapi_super_lig_standings_super_lig_standings": {
        "api_name": "super_lig_standings",
        "category": "Sports",
        "tool_name": "super_lig_standings",
        "code": "async def rapi_super_lig_standings_super_lig_standings(self,*args,**kwargs):\n    '''Turkish Super Lig Standings\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_super_lig_standings_super_lig_standings',kwargs)\n        "
    },
    "rapi_formula_1_fixed_seasonendconstructorstanding": {
        "api_name": "seasonendconstructorstanding",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_seasonendconstructorstanding(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    :param string year:  defaults to year\n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_seasonendconstructorstanding',kwargs)\n        "
    },
    "rapi_formula_1_fixed_constructorstandingsafterarace": {
        "api_name": "constructorstandingsafterarace",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_constructorstandingsafterarace(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    :param string year:  defaults to year\n    :param string round:  defaults to round\n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_constructorstandingsafterarace',kwargs)\n        "
    },
    "rapi_formula_1_fixed_qualifyingresults": {
        "api_name": "qualifyingresults",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_qualifyingresults(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    :param string year:  defaults to year\n    :param string round:  defaults to round\n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_qualifyingresults',kwargs)\n        "
    },
    "rapi_formula_1_fixed_laptime": {
        "api_name": "laptime",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_laptime(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    :param string lapnumber:  defaults to lapnumber\n    :param string round:  defaults to round\n    :param string year:  defaults to year\n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_laptime',kwargs)\n        "
    },
    "rapi_formula_1_fixed_currentconstructor_sstanding": {
        "api_name": "currentconstructor_sstanding",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_currentconstructor_sstanding(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_currentconstructor_sstanding',kwargs)\n        "
    },
    "rapi_formula_1_fixed_driverstandingsbyspecifyingthedriver": {
        "api_name": "driverstandingsbyspecifyingthedriver",
        "category": "Sports",
        "tool_name": "formula_1_fixed",
        "code": "async def rapi_formula_1_fixed_driverstandingsbyspecifyingthedriver(self,*args,**kwargs):\n    '''F1\n    \n    \n\n    :param string driverid:  defaults to driverid\n    '''\n    return await self._request_rapid_api('rapi_formula_1_fixed_driverstandingsbyspecifyingthedriver',kwargs)\n        "
    },
    "rapi_fitness_calculator_activities": {
        "api_name": "activities",
        "category": "Sports",
        "tool_name": "fitness_calculator",
        "code": "async def rapi_fitness_calculator_activities(self,*args,**kwargs):\n    '''Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.\n    \n    \n\n    :param integer intensitylevel:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fitness_calculator_activities',kwargs)\n        "
    },
    "rapi_fitness_calculator_food_names_and_ids": {
        "api_name": "food_names_and_ids",
        "category": "Sports",
        "tool_name": "fitness_calculator",
        "code": "async def rapi_fitness_calculator_food_names_and_ids(self,*args,**kwargs):\n    '''Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.\n    \n    \n\n    :param string? subtablename:  defaults to Fo1_2\n    '''\n    return await self._request_rapid_api('rapi_fitness_calculator_food_names_and_ids',kwargs)\n        "
    },
    "rapi_fitness_calculator_sub_table_names": {
        "api_name": "sub_table_names",
        "category": "Sports",
        "tool_name": "fitness_calculator",
        "code": "async def rapi_fitness_calculator_sub_table_names(self,*args,**kwargs):\n    '''Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.\n    \n    \n\n    :param string tablename:  defaults to Su10\n    '''\n    return await self._request_rapid_api('rapi_fitness_calculator_sub_table_names',kwargs)\n        "
    },
    "rapi_fitness_calculator_tablenames": {
        "api_name": "tablenames",
        "category": "Sports",
        "tool_name": "fitness_calculator",
        "code": "async def rapi_fitness_calculator_tablenames(self,*args,**kwargs):\n    '''Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fitness_calculator_tablenames',kwargs)\n        "
    },
    "rapi_fitness_calculator_ideal_weight": {
        "api_name": "ideal_weight",
        "category": "Sports",
        "tool_name": "fitness_calculator",
        "code": "async def rapi_fitness_calculator_ideal_weight(self,*args,**kwargs):\n    '''Find \"body fat percentage\",  \"ideal weight\", \"BMI\", \"daily calory requirement\" and some macro nutrients with this api.\n    \n    \n\n    :param string gender:  defaults to male\n    :param integer height:  defaults to 180\n    '''\n    return await self._request_rapid_api('rapi_fitness_calculator_ideal_weight',kwargs)\n        "
    },
    "rapi_horse_racing_race_detail_info": {
        "api_name": "race_detail_info",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_race_detail_info(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param string id_race:  defaults to 207660\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_race_detail_info',kwargs)\n        "
    },
    "rapi_horse_racing_query_races": {
        "api_name": "query_races",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_query_races(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param ENUM? order_by_date: Results ordered by date race ascending or descending.\n    :param DATE (YYYY-MM-DD)? date_to: \n    :param integer? class_to: Maximum race class.\n    :param ENUM? distance_to: \n    :param ENUM? distance_from: \n    :param integer? id_horse: Horse id. If you populate this field the query search races where this horse run.\n    :param string? course: Like Cheltenham, Ascot, Newmarket ....\n    :param integer? class_from: Minimum race class.\n    :param integer? page: \n    :param DATE (YYYY-MM-DD)? date_from: \n    :param string? name: Race name or a text on the race name. Like \\\"Novice\\\", \\\"Handicap chase\\\", \\\"Hurdle\\\", ....\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_query_races',kwargs)\n        "
    },
    "rapi_horse_racing_horse_stats": {
        "api_name": "horse_stats",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_horse_stats(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param string id_horse:  defaults to 230380\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_horse_stats',kwargs)\n        "
    },
    "rapi_horse_racing_racecards": {
        "api_name": "racecards",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_racecards(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param string? date:  defaults to 2020-03-12\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_racecards',kwargs)\n        "
    },
    "rapi_horse_racing_results": {
        "api_name": "results",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_results(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param string? date:  defaults to 2020-03-13\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_results',kwargs)\n        "
    },
    "rapi_horse_racing_jockeys_win_rate": {
        "api_name": "jockeys_win_rate",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_jockeys_win_rate(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param integer? last_days:  defaults to 7\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_jockeys_win_rate',kwargs)\n        "
    },
    "rapi_horse_racing_trainers_win_rate": {
        "api_name": "trainers_win_rate",
        "category": "Sports",
        "tool_name": "horse_racing",
        "code": "async def rapi_horse_racing_trainers_win_rate(self,*args,**kwargs):\n    '''Horse racing API - UK & Ireland races. Racecards, results, stats, Odds comparator and more. \n    \n    \n\n    :param integer? last_days:  defaults to 7\n    '''\n    return await self._request_rapid_api('rapi_horse_racing_trainers_win_rate',kwargs)\n        "
    },
    "rapi_global_data_country_list": {
        "api_name": "country_list",
        "category": "Sports",
        "tool_name": "global_data",
        "code": "async def rapi_global_data_country_list(self,*args,**kwargs):\n    '''General API to be used for together with other APIs that based on various sports\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_data_country_list',kwargs)\n        "
    },
    "rapi_global_data_round_list": {
        "api_name": "round_list",
        "category": "Sports",
        "tool_name": "global_data",
        "code": "async def rapi_global_data_round_list(self,*args,**kwargs):\n    '''General API to be used for together with other APIs that based on various sports\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_data_round_list',kwargs)\n        "
    },
    "rapi_global_data_status_list": {
        "api_name": "status_list",
        "category": "Sports",
        "tool_name": "global_data",
        "code": "async def rapi_global_data_status_list(self,*args,**kwargs):\n    '''General API to be used for together with other APIs that based on various sports\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_data_status_list',kwargs)\n        "
    },
    "rapi_fia_formula_1_championship_statistics_race_calendar": {
        "api_name": "race_calendar",
        "category": "Sports",
        "tool_name": "fia_formula_1_championship_statistics",
        "code": "async def rapi_fia_formula_1_championship_statistics_race_calendar(self,*args,**kwargs):\n    '''FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fia_formula_1_championship_statistics_race_calendar',kwargs)\n        "
    },
    "rapi_fia_formula_1_championship_statistics_qualifying_results": {
        "api_name": "qualifying_results",
        "category": "Sports",
        "tool_name": "fia_formula_1_championship_statistics",
        "code": "async def rapi_fia_formula_1_championship_statistics_qualifying_results(self,*args,**kwargs):\n    '''FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. \n    \n    \n\n    :param integer year:  defaults to 2014\n    :param string location:  defaults to austria\n    '''\n    return await self._request_rapid_api('rapi_fia_formula_1_championship_statistics_qualifying_results',kwargs)\n        "
    },
    "rapi_fia_formula_1_championship_statistics_pitstop_summary": {
        "api_name": "pitstop_summary",
        "category": "Sports",
        "tool_name": "fia_formula_1_championship_statistics",
        "code": "async def rapi_fia_formula_1_championship_statistics_pitstop_summary(self,*args,**kwargs):\n    '''FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. \n    \n    \n\n    :param integer year:  defaults to 2021\n    :param string location:  defaults to abu dhabi\n    '''\n    return await self._request_rapid_api('rapi_fia_formula_1_championship_statistics_pitstop_summary',kwargs)\n        "
    },
    "rapi_fia_formula_1_championship_statistics_drivers_standings": {
        "api_name": "drivers_standings",
        "category": "Sports",
        "tool_name": "fia_formula_1_championship_statistics",
        "code": "async def rapi_fia_formula_1_championship_statistics_drivers_standings(self,*args,**kwargs):\n    '''FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. \n    \n    \n\n    :param integer? year:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_fia_formula_1_championship_statistics_drivers_standings',kwargs)\n        "
    },
    "rapi_spectation_sports_events_api_fighter": {
        "api_name": "fighter",
        "category": "Sports",
        "tool_name": "spectation_sports_events_api",
        "code": "async def rapi_spectation_sports_events_api_fighter(self,*args,**kwargs):\n    '''View upcoming events, fighters, fights and more from Spectation Sports.\n    \n    \n\n    :param integer id:  defaults to 1182\n    '''\n    return await self._request_rapid_api('rapi_spectation_sports_events_api_fighter',kwargs)\n        "
    },
    "rapi_spectation_sports_events_api_fighters": {
        "api_name": "fighters",
        "category": "Sports",
        "tool_name": "spectation_sports_events_api",
        "code": "async def rapi_spectation_sports_events_api_fighters(self,*args,**kwargs):\n    '''View upcoming events, fighters, fights and more from Spectation Sports.\n    \n    \n\n    :param string? weightDivision: \n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_spectation_sports_events_api_fighters',kwargs)\n        "
    },
    "rapi_spectation_sports_events_api_fights": {
        "api_name": "fights",
        "category": "Sports",
        "tool_name": "spectation_sports_events_api",
        "code": "async def rapi_spectation_sports_events_api_fights(self,*args,**kwargs):\n    '''View upcoming events, fighters, fights and more from Spectation Sports.\n    \n    \n\n    :param string? outcome: \n    :param string? sport: \n    :param string? type:  defaults to upcoming\n    :param string? category: Category/Weight division of the fights\n    :param integer? event: The ID of the event.\n    :param integer? page:  defaults to 1\n    :param integer? fighter: The ID of the fighter.\n    '''\n    return await self._request_rapid_api('rapi_spectation_sports_events_api_fights',kwargs)\n        "
    },
    "rapi_spectation_sports_events_api_events": {
        "api_name": "events",
        "category": "Sports",
        "tool_name": "spectation_sports_events_api",
        "code": "async def rapi_spectation_sports_events_api_events(self,*args,**kwargs):\n    '''View upcoming events, fighters, fights and more from Spectation Sports.\n    \n    \n\n    :param string? enclosureType: Type of enclosure. Available variables:\nring\ncage\n    :param string? type: Shows upcoming events only by default defaults to previous\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_spectation_sports_events_api_events',kwargs)\n        "
    },
    "rapi_wnba_api_wnba_team_info": {
        "api_name": "wnba_team_info",
        "category": "Sports",
        "tool_name": "wnba_api",
        "code": "async def rapi_wnba_api_wnba_team_info(self,*args,**kwargs):\n    '''This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA. It covers scores, stats, standings, and statistics.\n    \n    \n\n    :param string teamid: Team Id defaults to 18\n    '''\n    return await self._request_rapid_api('rapi_wnba_api_wnba_team_info',kwargs)\n        "
    },
    "rapi_wnba_api_wnba_standings": {
        "api_name": "wnba_standings",
        "category": "Sports",
        "tool_name": "wnba_api",
        "code": "async def rapi_wnba_api_wnba_standings(self,*args,**kwargs):\n    '''This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA. It covers scores, stats, standings, and statistics.\n    \n    \n\n    :param string year:  defaults to 2022\n    :param string? group: acceptable group names: 'league', 'conference'. Default: 'league'\n    '''\n    return await self._request_rapid_api('rapi_wnba_api_wnba_standings',kwargs)\n        "
    },
    "rapi_wnba_api_wnba_scoreboard": {
        "api_name": "wnba_scoreboard",
        "category": "Sports",
        "tool_name": "wnba_api",
        "code": "async def rapi_wnba_api_wnba_scoreboard(self,*args,**kwargs):\n    '''This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA. It covers scores, stats, standings, and statistics.\n    \n    \n\n    :param string month:  defaults to 04\n    :param string day:  defaults to 04\n    :param string year:  defaults to 2022\n    :param string? limit:  defaults to 02\n    '''\n    return await self._request_rapid_api('rapi_wnba_api_wnba_scoreboard',kwargs)\n        "
    },
    "rapi_wnba_api_wnba_schedule": {
        "api_name": "wnba_schedule",
        "category": "Sports",
        "tool_name": "wnba_api",
        "code": "async def rapi_wnba_api_wnba_schedule(self,*args,**kwargs):\n    '''This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA. It covers scores, stats, standings, and statistics.\n    \n    \n\n    :param string month:  defaults to 05\n    :param string day:  defaults to 05\n    :param string year:  defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_wnba_api_wnba_schedule',kwargs)\n        "
    },
    "rapi_wnba_api_wnba_summary": {
        "api_name": "wnba_summary",
        "category": "Sports",
        "tool_name": "wnba_api",
        "code": "async def rapi_wnba_api_wnba_summary(self,*args,**kwargs):\n    '''This API offer every basketball fan an easy way to stay on top of the latest data for all operations and players in the WNBA. It covers scores, stats, standings, and statistics.\n    \n    \n\n    :param string id:  defaults to 401244185\n    '''\n    return await self._request_rapid_api('rapi_wnba_api_wnba_summary',kwargs)\n        "
    },
    "rapi_admiralbet_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "admiralbet",
        "code": "async def rapi_admiralbet_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Admiralbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_admiralbet_matches',kwargs)\n        "
    },
    "rapi_admiralbet_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "admiralbet",
        "code": "async def rapi_admiralbet_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Admiralbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_admiralbet_odds',kwargs)\n        "
    },
    "rapi_betigolo_tips_premium_history": {
        "api_name": "premium_history",
        "category": "Sports",
        "tool_name": "betigolo_tips",
        "code": "async def rapi_betigolo_tips_premium_history(self,*args,**kwargs):\n    '''Historical results here: https://www.betigolo.com/tips_premium.php\n\nThe Betigolo Tips API is a powerful tool that provides EV+ tips for football matches, based on machine Learning algorithms predictions to helping users make informed decisions about their bets. The API is easy to use and can be integrated into sports betting applications with the help of detailed documentation and code examples provided by Rapid API. With the Betigolo Tips API, users can access accurate and up-to-date tips fo...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betigolo_tips_premium_history',kwargs)\n        "
    },
    "rapi_live_golf_data_schedules": {
        "api_name": "schedules",
        "category": "Sports",
        "tool_name": "live_golf_data",
        "code": "async def rapi_live_golf_data_schedules(self,*args,**kwargs):\n    '''PGA Tour and LIV Tour live golf data for your application needs such as rankings, leaderboards, scorecards, and results.\n    \n    \n\n    :param ENUM orgId: Choose 1 for PGA Tour or  2 for LIV Tour.\n    :param string year:  defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_live_golf_data_schedules',kwargs)\n        "
    },
    "rapi_live_golf_data_organizations": {
        "api_name": "organizations",
        "category": "Sports",
        "tool_name": "live_golf_data",
        "code": "async def rapi_live_golf_data_organizations(self,*args,**kwargs):\n    '''PGA Tour and LIV Tour live golf data for your application needs such as rankings, leaderboards, scorecards, and results.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_live_golf_data_organizations',kwargs)\n        "
    },
    "rapi_f1_live_motorsport_data_seasons": {
        "api_name": "seasons",
        "category": "Sports",
        "tool_name": "f1_live_motorsport_data",
        "code": "async def rapi_f1_live_motorsport_data_seasons(self,*args,**kwargs):\n    '''Formula 1 data for the ultimate motorsport fanatic!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_f1_live_motorsport_data_seasons',kwargs)\n        "
    },
    "rapi_f1_live_motorsport_data_drivers": {
        "api_name": "drivers",
        "category": "Sports",
        "tool_name": "f1_live_motorsport_data",
        "code": "async def rapi_f1_live_motorsport_data_drivers(self,*args,**kwargs):\n    '''Formula 1 data for the ultimate motorsport fanatic!\n    \n    \n\n    :param integer season_id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_f1_live_motorsport_data_drivers',kwargs)\n        "
    },
    "rapi_f1_live_motorsport_data_driver_standings": {
        "api_name": "driver_standings",
        "category": "Sports",
        "tool_name": "f1_live_motorsport_data",
        "code": "async def rapi_f1_live_motorsport_data_driver_standings(self,*args,**kwargs):\n    '''Formula 1 data for the ultimate motorsport fanatic!\n    \n    \n\n    :param integer season_id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_f1_live_motorsport_data_driver_standings',kwargs)\n        "
    },
    "rapi_f1_live_motorsport_data_races": {
        "api_name": "races",
        "category": "Sports",
        "tool_name": "f1_live_motorsport_data",
        "code": "async def rapi_f1_live_motorsport_data_races(self,*args,**kwargs):\n    '''Formula 1 data for the ultimate motorsport fanatic!\n    \n    \n\n    :param integer season_id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_f1_live_motorsport_data_races',kwargs)\n        "
    },
    "rapi_f1_live_motorsport_data_constructor_standings": {
        "api_name": "constructor_standings",
        "category": "Sports",
        "tool_name": "f1_live_motorsport_data",
        "code": "async def rapi_f1_live_motorsport_data_constructor_standings(self,*args,**kwargs):\n    '''Formula 1 data for the ultimate motorsport fanatic!\n    \n    \n\n    :param integer season_id:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_f1_live_motorsport_data_constructor_standings',kwargs)\n        "
    },
    "rapi_footapi_leaguerounds": {
        "api_name": "leaguerounds",
        "category": "Sports",
        "tool_name": "footapi",
        "code": "async def rapi_footapi_leaguerounds(self,*args,**kwargs):\n    '''FootApi offers real-time football scores of all live matches that are being played. FootApi covers hundreds of soccer leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures. From most popular football leagues (UEFA Champions League, UEFA Europa League, Premier League, LaLiga, Bundesliga, Serie A, Ligue 1, Brasileiro S\u00e9rie A), top players ratings and statistics to football matches played in a date, our FootApi covers all the informatio...\n    \n    \n\n    :param integer tournamentId: The unique ID of the tournament for which you want to retrieve the rounds. defaults to 7\n    :param integer seasonId: The season ID for which you want to retrieve the rounds. defaults to 36886\n    '''\n    return await self._request_rapid_api('rapi_footapi_leaguerounds',kwargs)\n        "
    },
    "rapi_footapi_leagueawaystandings": {
        "api_name": "leagueawaystandings",
        "category": "Sports",
        "tool_name": "footapi",
        "code": "async def rapi_footapi_leagueawaystandings(self,*args,**kwargs):\n    '''FootApi offers real-time football scores of all live matches that are being played. FootApi covers hundreds of soccer leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures. From most popular football leagues (UEFA Champions League, UEFA Europa League, Premier League, LaLiga, Bundesliga, Serie A, Ligue 1, Brasileiro S\u00e9rie A), top players ratings and statistics to football matches played in a date, our FootApi covers all the informatio...\n    \n    \n\n    :param integer tournamentId: The unique ID of the tournament for which you want to retrieve the away standings. defaults to 7\n    :param integer seasonId: The ID of the season for which you want to retrieve the away standings. defaults to 36886\n    '''\n    return await self._request_rapid_api('rapi_footapi_leagueawaystandings',kwargs)\n        "
    },
    "rapi_footapi_leagueseasoninfo": {
        "api_name": "leagueseasoninfo",
        "category": "Sports",
        "tool_name": "footapi",
        "code": "async def rapi_footapi_leagueseasoninfo(self,*args,**kwargs):\n    '''FootApi offers real-time football scores of all live matches that are being played. FootApi covers hundreds of soccer leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures. From most popular football leagues (UEFA Champions League, UEFA Europa League, Premier League, LaLiga, Bundesliga, Serie A, Ligue 1, Brasileiro S\u00e9rie A), top players ratings and statistics to football matches played in a date, our FootApi covers all the informatio...\n    \n    \n\n    :param integer tournamentId: The unique tournament ID you want to retrieve the league's season information from. defaults to 7\n    :param integer seasonId: The season ID you want to retrieve the league's season information from. defaults to 36886\n    '''\n    return await self._request_rapid_api('rapi_footapi_leagueseasoninfo',kwargs)\n        "
    },
    "rapi_footapi_leagueplayersstatistics": {
        "api_name": "leagueplayersstatistics",
        "category": "Sports",
        "tool_name": "footapi",
        "code": "async def rapi_footapi_leagueplayersstatistics(self,*args,**kwargs):\n    '''FootApi offers real-time football scores of all live matches that are being played. FootApi covers hundreds of soccer leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures. From most popular football leagues (UEFA Champions League, UEFA Europa League, Premier League, LaLiga, Bundesliga, Serie A, Ligue 1, Brasileiro S\u00e9rie A), top players ratings and statistics to football matches played in a date, our FootApi covers all the informatio...\n    \n    \n\n    :param integer limit: How many players to include per page? defaults to 20\n    :param integer page: One based page. defaults to 1\n    :param integer seasonId: The season id you want to retrieve the league players statistics. defaults to 36886\n    :param integer tournamentId: The unique tournament id you want to retrieve the league players statistics. defaults to 7\n    :param boolean? minApps: The statitiscs only includes player with minimum appearences. If set to true only the players with half of matches of the player with most appearences will be included.\n    :param string? order: The sorting order. Based on the response properties. Eg.: For the summary group thedefault order is -rating. If you add - before the property it sends the descending order, if you let the property without any sign before it is ascending. Leave it empty to get default order defaults to -rating\n    :param string? filters: The filters to apply. Only use when not specifying the group. Possible filters are: position.in.G~D~M~F, you can omit any position like: position.in.G~M~F or even position.in.F. type.EQ.home and type.EQ.away to specify if the statistics are for matches played home or away. appearances.GT.5 where GT means greater than and can be replaced by EQ meaning equal and LT  meaning less than and the 5 is the number of appearences of the player. age.GT.25 where GT and 25 logic is the same as appearences.preferredFoot.EQ.Both where Both can be replaced by Right and Left.team.in.1660~1644 where 1660 and 1644 are team ids, same logic as position.in filter.nationality.in.AO~BR where AO and BR are country alpha2, same logic as position.in filter.\n    :param string? accumulation: The accumulation. It can be total, perGame or per90. defaults to total\n    :param string? group: The statistic group. It can be summary, attack, defence, passing, goalkeeper or leave it to apply special filters. defaults to summary\n    :param string? fields: The fields to include, up to 6. Only use if not specifying the groupt. They can be: successfulDribblesPercentage,goals,blockedShots,penaltyWon,goalsFromOutsideTheBox,hitWoodwork,rating,expectedGoals,totalShots,goalConversionPercentage,shotFromSetPiece,headedGoals, offsides,bigChancesMissed,shotsOnTarget,penaltiesTaken,freeKickGoal,leftFootGoals,penaltyConversion,successfulDribbles,shotsOffTarget,penaltyGoals,goalsFromInsideTheBox,rightFootGoals,setPieceConversion,tackles,errorLeadToGoal,cleanSheet,interceptions,errorLeadToShot,penaltyConceded,ownGoals,clearances,dribbledPast,bigChancesCreated,totalPasses,accurateFinalThirdPasses,accurateLongBalls,assists,accuratePassesPercentage,keyPasses,accurateLongBallsPercentage,accuratePasses,accurateOwnHalfPasses,accurateCrosses,passToAssist,inaccuratePasses,accurateOppositionHalfPasses,accurateCrossesPercentage,saves,savedShotsFromInsideTheBox,punches,crossesNotClaimed,cleanSheet,savedShotsFromOutsideTheBox,runsOut,rating,penaltyFaced,goalsConcededInsideTheBox,successfulRunsOut,penaltySave,goalsConcededOutsideTheBox,highClaims,yellowCards,aerialDuelsWon,minutesPlayed,possessionLost,redCards,aerialDuelsWonPercentage,wasFouled,appearances,groundDuelsWon,totalDuelsWon,fouls,matchesStarted,groundDuelsWonPercentage,totalDuelsWonPercentage,dispossessed.\n    '''\n    return await self._request_rapid_api('rapi_footapi_leagueplayersstatistics',kwargs)\n        "
    },
    "rapi_footapi_leaguepowerrankingrounds": {
        "api_name": "leaguepowerrankingrounds",
        "category": "Sports",
        "tool_name": "footapi",
        "code": "async def rapi_footapi_leaguepowerrankingrounds(self,*args,**kwargs):\n    '''FootApi offers real-time football scores of all live matches that are being played. FootApi covers hundreds of soccer leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures. From most popular football leagues (UEFA Champions League, UEFA Europa League, Premier League, LaLiga, Bundesliga, Serie A, Ligue 1, Brasileiro S\u00e9rie A), top players ratings and statistics to football matches played in a date, our FootApi covers all the informatio...\n    \n    \n\n    :param integer tournamentId: The unique ID of the tournament for which you want to retrieve the power ranking rounds. defaults to 16\n    :param integer seasonId: The season ID for which you want to retrieve the power ranking rounds. defaults to 41087\n    '''\n    return await self._request_rapid_api('rapi_footapi_leaguepowerrankingrounds',kwargs)\n        "
    },
    "rapi_ligue_1_standings_ligue_1_standings": {
        "api_name": "ligue_1_standings",
        "category": "Sports",
        "tool_name": "ligue_1_standings",
        "code": "async def rapi_ligue_1_standings_ligue_1_standings(self,*args,**kwargs):\n    '''French Ligue 1 Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_ligue_1_standings_ligue_1_standings',kwargs)\n        "
    },
    "rapi_f1_drivers_quotes_list_of_drivers_and_personalities": {
        "api_name": "list_of_drivers_and_personalities",
        "category": "Sports",
        "tool_name": "f1_drivers_quotes",
        "code": "async def rapi_f1_drivers_quotes_list_of_drivers_and_personalities(self,*args,**kwargs):\n    '''An API that provides numerous quotes said by famous Formula 1 drivers and personalities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_f1_drivers_quotes_list_of_drivers_and_personalities',kwargs)\n        "
    },
    "rapi_livescore_sports_events_statistics": {
        "api_name": "events_statistics",
        "category": "Sports",
        "tool_name": "livescore_sports",
        "code": "async def rapi_livescore_sports_events_statistics(self,*args,**kwargs):\n    '''LiveScore Sports | The number one destination for real time scores for Football, Cricket, Tennis, Basketball, Hockey and more. Support: tipsters@rapi.one / t.me/api_tipsters Other sports api: https://rapi.one \n    \n    \n\n    :param integer event_id: Event ID defaults to 702080\n    :param string sport:  defaults to soccer\n    :param string locale:  defaults to EN\n    '''\n    return await self._request_rapid_api('rapi_livescore_sports_events_statistics',kwargs)\n        "
    },
    "rapi_livescore_sports_stages_events": {
        "api_name": "stages_events",
        "category": "Sports",
        "tool_name": "livescore_sports",
        "code": "async def rapi_livescore_sports_stages_events(self,*args,**kwargs):\n    '''LiveScore Sports | The number one destination for real time scores for Football, Cricket, Tennis, Basketball, Hockey and more. Support: tipsters@rapi.one / t.me/api_tipsters Other sports api: https://rapi.one \n    \n    \n\n    :param string stage_slug: Stage slug, use `Stages List` defaults to england\n    :param string locale:  defaults to EN\n    :param integer timezone: Timezone, offsets from UTC defaults to 0\n    :param string sport:  defaults to soccer\n    '''\n    return await self._request_rapid_api('rapi_livescore_sports_stages_events',kwargs)\n        "
    },
    "rapi_national_football_players_players_at_position": {
        "api_name": "players_at_position",
        "category": "Sports",
        "tool_name": "national_football_players",
        "code": "async def rapi_national_football_players_players_at_position(self,*args,**kwargs):\n    '''All active national football players, positions, teams, and numbers. Great for frontend player searches. \n    \n    \n\n    :param string position:  defaults to QB\n    '''\n    return await self._request_rapid_api('rapi_national_football_players_players_at_position',kwargs)\n        "
    },
    "rapi_dreambet_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "dreambet",
        "code": "async def rapi_dreambet_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Dreambet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dreambet_odds',kwargs)\n        "
    },
    "rapi_dreambet_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "dreambet",
        "code": "async def rapi_dreambet_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Dreambet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dreambet_matches',kwargs)\n        "
    },
    "rapi_mma_stats_ufc_fight_night_holloway_vs_allen_april_15_2023": {
        "api_name": "ufc_fight_night_holloway_vs_allen_april_15_2023",
        "category": "Sports",
        "tool_name": "mma_stats",
        "code": "async def rapi_mma_stats_ufc_fight_night_holloway_vs_allen_april_15_2023(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? offset: \n    :param integer? limit: \n    '''\n    return await self._request_rapid_api('rapi_mma_stats_ufc_fight_night_holloway_vs_allen_april_15_2023',kwargs)\n        "
    },
    "rapi_mma_stats_ufc_fight_night_song_vs_simon_april_28_2023": {
        "api_name": "ufc_fight_night_song_vs_simon_april_28_2023",
        "category": "Sports",
        "tool_name": "mma_stats",
        "code": "async def rapi_mma_stats_ufc_fight_night_song_vs_simon_april_28_2023(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? limit: \n    :param integer? offset: \n    '''\n    return await self._request_rapid_api('rapi_mma_stats_ufc_fight_night_song_vs_simon_april_28_2023',kwargs)\n        "
    },
    "rapi_mma_stats_ufc_fight_night_pavlovich_vs_blaydes_april_22_2023": {
        "api_name": "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023",
        "category": "Sports",
        "tool_name": "mma_stats",
        "code": "async def rapi_mma_stats_ufc_fight_night_pavlovich_vs_blaydes_april_22_2023(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? limit: \n    :param integer? offset: \n    '''\n    return await self._request_rapid_api('rapi_mma_stats_ufc_fight_night_pavlovich_vs_blaydes_april_22_2023',kwargs)\n        "
    },
    "rapi_mma_stats_ufc_fight_night_dern_vs_hill_may_20_2023": {
        "api_name": "ufc_fight_night_dern_vs_hill_may_20_2023",
        "category": "Sports",
        "tool_name": "mma_stats",
        "code": "async def rapi_mma_stats_ufc_fight_night_dern_vs_hill_may_20_2023(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? limit: \n    :param integer? offset: \n    '''\n    return await self._request_rapid_api('rapi_mma_stats_ufc_fight_night_dern_vs_hill_may_20_2023',kwargs)\n        "
    },
    "rapi_mma_stats_ufc_288_sterling_vs_cejudo_may_06_2023": {
        "api_name": "ufc_288_sterling_vs_cejudo_may_06_2023",
        "category": "Sports",
        "tool_name": "mma_stats",
        "code": "async def rapi_mma_stats_ufc_288_sterling_vs_cejudo_may_06_2023(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? limit: \n    :param integer? offset: \n    '''\n    return await self._request_rapid_api('rapi_mma_stats_ufc_288_sterling_vs_cejudo_may_06_2023',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_peru_getteams": {
        "api_name": "getteams",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_peru",
        "code": "async def rapi_wosti_futbol_tv_peru_getteams(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa. Horarios y canales (TV&streaming legales). Futbolenvivoperu.com Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_peru_getteams',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_peru_getcompetitions": {
        "api_name": "getcompetitions",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_peru",
        "code": "async def rapi_wosti_futbol_tv_peru_getcompetitions(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa. Horarios y canales (TV&streaming legales). Futbolenvivoperu.com Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_peru_getcompetitions',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_peru_getevents": {
        "api_name": "getevents",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_peru",
        "code": "async def rapi_wosti_futbol_tv_peru_getevents(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa. Horarios y canales (TV&streaming legales). Futbolenvivoperu.com Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_peru_getevents',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_peru_getcompetitionsid": {
        "api_name": "getcompetitionsid",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_peru",
        "code": "async def rapi_wosti_futbol_tv_peru_getcompetitionsid(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa. Horarios y canales (TV&streaming legales). Futbolenvivoperu.com Support: info@wosti.com\n    \n    \n\n    :param integer Id: \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_peru_getcompetitionsid',kwargs)\n        "
    },
    "rapi_viperscore_get_pregame_form": {
        "api_name": "get_pregame_form",
        "category": "Sports",
        "tool_name": "viperscore",
        "code": "async def rapi_viperscore_get_pregame_form(self,*args,**kwargs):\n    '''ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.\n    \n    \n\n    :param string gameId:  defaults to 9831832\n    '''\n    return await self._request_rapid_api('rapi_viperscore_get_pregame_form',kwargs)\n        "
    },
    "rapi_viperscore_get_game_details": {
        "api_name": "get_game_details",
        "category": "Sports",
        "tool_name": "viperscore",
        "code": "async def rapi_viperscore_get_game_details(self,*args,**kwargs):\n    '''ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.\n    \n    \n\n    :param string gameId:  defaults to 9726635\n    '''\n    return await self._request_rapid_api('rapi_viperscore_get_game_details',kwargs)\n        "
    },
    "rapi_viperscore_get_live_games": {
        "api_name": "get_live_games",
        "category": "Sports",
        "tool_name": "viperscore",
        "code": "async def rapi_viperscore_get_live_games(self,*args,**kwargs):\n    '''ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.\n    \n    \n\n    :param string sport:  defaults to football\n    '''\n    return await self._request_rapid_api('rapi_viperscore_get_live_games',kwargs)\n        "
    },
    "rapi_viperscore_get_number_of_games_today": {
        "api_name": "get_number_of_games_today",
        "category": "Sports",
        "tool_name": "viperscore",
        "code": "async def rapi_viperscore_get_number_of_games_today(self,*args,**kwargs):\n    '''ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_viperscore_get_number_of_games_today',kwargs)\n        "
    },
    "rapi_cbet_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "cbet",
        "code": "async def rapi_cbet_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Cbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cbet_matches',kwargs)\n        "
    },
    "rapi_cbet_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "cbet",
        "code": "async def rapi_cbet_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Cbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cbet_odds',kwargs)\n        "
    },
    "rapi_rugbyapi2_categories": {
        "api_name": "categories",
        "category": "Sports",
        "tool_name": "rugbyapi2",
        "code": "async def rapi_rugbyapi2_categories(self,*args,**kwargs):\n    '''Rugby live score service at RugbyApi has all the live scores, results, fixtures, statistics and league tables from the major rugby union leagues like England Aviva Premiership, Australia National Rugby League - NRL, Wales rugby league and France TOP 14.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rugbyapi2_categories',kwargs)\n        "
    },
    "rapi_rugbyapi2_categorytournaments": {
        "api_name": "categorytournaments",
        "category": "Sports",
        "tool_name": "rugbyapi2",
        "code": "async def rapi_rugbyapi2_categorytournaments(self,*args,**kwargs):\n    '''Rugby live score service at RugbyApi has all the live scores, results, fixtures, statistics and league tables from the major rugby union leagues like England Aviva Premiership, Australia National Rugby League - NRL, Wales rugby league and France TOP 14.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer id: The category ID for which you want to retrieve all leagues. defaults to 83\n    '''\n    return await self._request_rapid_api('rapi_rugbyapi2_categorytournaments',kwargs)\n        "
    },
    "rapi_rugbyapi2_leaguelogoimage": {
        "api_name": "leaguelogoimage",
        "category": "Sports",
        "tool_name": "rugbyapi2",
        "code": "async def rapi_rugbyapi2_leaguelogoimage(self,*args,**kwargs):\n    '''Rugby live score service at RugbyApi has all the live scores, results, fixtures, statistics and league tables from the major rugby union leagues like England Aviva Premiership, Australia National Rugby League - NRL, Wales rugby league and France TOP 14.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer tournamentId: The unique tournament ID for which to retrieve the league logo image. defaults to 294\n    '''\n    return await self._request_rapid_api('rapi_rugbyapi2_leaguelogoimage',kwargs)\n        "
    },
    "rapi_zeus_api_areas_id": {
        "api_name": "areas_id",
        "category": "Sports",
        "tool_name": "zeus_api",
        "code": "async def rapi_zeus_api_areas_id(self,*args,**kwargs):\n    '''This API returns information on the 5 major European football leagues.\nGet standings, matches, scorers and more.\n    \n    \n\n    :param string id:  defaults to ITA\n    '''\n    return await self._request_rapid_api('rapi_zeus_api_areas_id',kwargs)\n        "
    },
    "rapi_betsapi_bet365_inplay_filter": {
        "api_name": "bet365_inplay_filter",
        "category": "Sports",
        "tool_name": "betsapi",
        "code": "async def rapi_betsapi_bet365_inplay_filter(self,*args,**kwargs):\n    '''bet365 events/scores/stats/odds\n    \n    \n\n    :param integer? league_id: \n    :param integer? sport_id:  defaults to 1\n    :param boolean? skip_esports: \n    '''\n    return await self._request_rapid_api('rapi_betsapi_bet365_inplay_filter',kwargs)\n        "
    },
    "rapi_betsapi_bet365_inplay": {
        "api_name": "bet365_inplay",
        "category": "Sports",
        "tool_name": "betsapi",
        "code": "async def rapi_betsapi_bet365_inplay(self,*args,**kwargs):\n    '''bet365 events/scores/stats/odds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betsapi_bet365_inplay',kwargs)\n        "
    },
    "rapi_betsapi_bet365_upcoming_events": {
        "api_name": "bet365_upcoming_events",
        "category": "Sports",
        "tool_name": "betsapi",
        "code": "async def rapi_betsapi_bet365_upcoming_events(self,*args,**kwargs):\n    '''bet365 events/scores/stats/odds\n    \n    \n\n    :param integer sport_id: \n    :param integer? day: \n    :param integer? league_id: \n    :param integer? page: \n    '''\n    return await self._request_rapid_api('rapi_betsapi_bet365_upcoming_events',kwargs)\n        "
    },
    "rapi_betsapi_bet365_result": {
        "api_name": "bet365_result",
        "category": "Sports",
        "tool_name": "betsapi",
        "code": "async def rapi_betsapi_bet365_result(self,*args,**kwargs):\n    '''bet365 events/scores/stats/odds\n    \n    \n\n    :param integer event_id: \n    '''\n    return await self._request_rapid_api('rapi_betsapi_bet365_result',kwargs)\n        "
    },
    "rapi_nba_statistics_api_topscorersbyseasontotalpoints": {
        "api_name": "topscorersbyseasontotalpoints",
        "category": "Sports",
        "tool_name": "nba_statistics_api",
        "code": "async def rapi_nba_statistics_api_topscorersbyseasontotalpoints(self,*args,**kwargs):\n    '''NBA Statistics API\n\nView Documentation: https://documenter.getpostman.com/view/24232555/2s93shzpR3\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nba_statistics_api_topscorersbyseasontotalpoints',kwargs)\n        "
    },
    "rapi_nba_statistics_api_topassistsbyseasontotalassists": {
        "api_name": "topassistsbyseasontotalassists",
        "category": "Sports",
        "tool_name": "nba_statistics_api",
        "code": "async def rapi_nba_statistics_api_topassistsbyseasontotalassists(self,*args,**kwargs):\n    '''NBA Statistics API\n\nView Documentation: https://documenter.getpostman.com/view/24232555/2s93shzpR3\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nba_statistics_api_topassistsbyseasontotalassists',kwargs)\n        "
    },
    "rapi_nba_statistics_api_allplayersbyseason": {
        "api_name": "allplayersbyseason",
        "category": "Sports",
        "tool_name": "nba_statistics_api",
        "code": "async def rapi_nba_statistics_api_allplayersbyseason(self,*args,**kwargs):\n    '''NBA Statistics API\n\nView Documentation: https://documenter.getpostman.com/view/24232555/2s93shzpR3\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nba_statistics_api_allplayersbyseason',kwargs)\n        "
    },
    "rapi_surebets_2_world_latest_matches": {
        "api_name": "world_latest_matches",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_world_latest_matches(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_world_latest_matches',kwargs)\n        "
    },
    "rapi_surebets_2_japan_latest_odds": {
        "api_name": "japan_latest_odds",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_japan_latest_odds(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_japan_latest_odds',kwargs)\n        "
    },
    "rapi_surebets_2_argentina_latest_odds": {
        "api_name": "argentina_latest_odds",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_argentina_latest_odds(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_argentina_latest_odds',kwargs)\n        "
    },
    "rapi_surebets_2_argentina_latest_matches": {
        "api_name": "argentina_latest_matches",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_argentina_latest_matches(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_argentina_latest_matches',kwargs)\n        "
    },
    "rapi_surebets_2_surebets": {
        "api_name": "surebets",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_surebets(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_surebets',kwargs)\n        "
    },
    "rapi_surebets_2_countries_by_bookie": {
        "api_name": "countries_by_bookie",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_countries_by_bookie(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_countries_by_bookie',kwargs)\n        "
    },
    "rapi_surebets_2_copa_sudamericana_latest_matches": {
        "api_name": "copa_sudamericana_latest_matches",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_copa_sudamericana_latest_matches(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_copa_sudamericana_latest_matches',kwargs)\n        "
    },
    "rapi_surebets_2_bookmakers": {
        "api_name": "bookmakers",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_bookmakers(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_bookmakers',kwargs)\n        "
    },
    "rapi_surebets_2_countries": {
        "api_name": "countries",
        "category": "Sports",
        "tool_name": "surebets_2",
        "code": "async def rapi_surebets_2_countries(self,*args,**kwargs):\n    '''#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_surebets_2_countries',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_teams_get_players": {
        "api_name": "teams_get_players",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_teams_get_players(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer teamId: The value of teamId field returned in .../teams/list endpoint defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_teams_get_players',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_teams_get_news": {
        "api_name": "teams_get_news",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_teams_get_news(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer teamId: The value of teamId field returned in .../teams/list endpoint defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_teams_get_news',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_teams_get_results": {
        "api_name": "teams_get_results",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_teams_get_results(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer teamId: The value of teamId field returned in .../teams/list endpoint defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_teams_get_results',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_teams_get_schedules": {
        "api_name": "teams_get_schedules",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_teams_get_schedules(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer teamId: The value of teamId field returned in .../teams/list endpoint defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_teams_get_schedules',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_teams_list": {
        "api_name": "teams_list",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_teams_list(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param string matchType: One of the followings : international|league|domestic|women defaults to international\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_teams_list',kwargs)\n        "
    },
    "rapi_unofficial_cricbuzz_series_get_venues": {
        "api_name": "series_get_venues",
        "category": "Sports",
        "tool_name": "unofficial_cricbuzz",
        "code": "async def rapi_unofficial_cricbuzz_series_get_venues(self,*args,**kwargs):\n    '''This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc\n    \n    \n\n    :param integer seriesId: The value of id field returned in .../series/list or .../series/list-archives endpoints. defaults to 3718\n    '''\n    return await self._request_rapid_api('rapi_unofficial_cricbuzz_series_get_venues',kwargs)\n        "
    },
    "rapi_bundesliga_standings_bundesliga_standings": {
        "api_name": "bundesliga_standings",
        "category": "Sports",
        "tool_name": "bundesliga_standings",
        "code": "async def rapi_bundesliga_standings_bundesliga_standings(self,*args,**kwargs):\n    '''German Bundesliga Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_bundesliga_standings_bundesliga_standings',kwargs)\n        "
    },
    "rapi_sports_betting_api_prematch": {
        "api_name": "prematch",
        "category": "Sports",
        "tool_name": "sports_betting_api",
        "code": "async def rapi_sports_betting_api_prematch(self,*args,**kwargs):\n    '''Get up and running in less than 5 minutes with our comprehensive developer documentation. Get Start - https://bet365soft.com/docs\n    \n    \n\n    :param integer sp: \n    :param string lang:  defaults to en\n    :param integer lid: \n    '''\n    return await self._request_rapid_api('rapi_sports_betting_api_prematch',kwargs)\n        "
    },
    "rapi_sports_betting_api_result": {
        "api_name": "result",
        "category": "Sports",
        "tool_name": "sports_betting_api",
        "code": "async def rapi_sports_betting_api_result(self,*args,**kwargs):\n    '''Get up and running in less than 5 minutes with our comprehensive developer documentation. Get Start - https://bet365soft.com/docs\n    \n    \n\n    :param string lang:  defaults to en\n    :param integer evt: \n    '''\n    return await self._request_rapid_api('rapi_sports_betting_api_result',kwargs)\n        "
    },
    "rapi_sports_betting_api_leagues": {
        "api_name": "leagues",
        "category": "Sports",
        "tool_name": "sports_betting_api",
        "code": "async def rapi_sports_betting_api_leagues(self,*args,**kwargs):\n    '''Get up and running in less than 5 minutes with our comprehensive developer documentation. Get Start - https://bet365soft.com/docs\n    \n    \n\n    :param string lang:  defaults to en\n    :param integer sp:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_sports_betting_api_leagues',kwargs)\n        "
    },
    "rapi_basketapi_leaguemedia": {
        "api_name": "leaguemedia",
        "category": "Sports",
        "tool_name": "basketapi",
        "code": "async def rapi_basketapi_leaguemedia(self,*args,**kwargs):\n    '''BasketAPI provides you with live basketball results, schedule and matches that are being played or was played in a date. With over 70 different basketball leagues, among which are college basketball league (NCAA Men and NCAA Women), NBA, Euroleague, A1, Serie A, Liga ACB, Eurocup, ABA Liga, NBB and many other, you can follow live scores, results, tables, statistics, fixtures, standings and previous results by quarters, halftime or final result. BasketAPI has everything you need!\nFor increased...\n    \n    \n\n    :param integer tournamentId: The unique tournament ID for which you want to retrieve the league media defaults to 132\n    '''\n    return await self._request_rapid_api('rapi_basketapi_leaguemedia',kwargs)\n        "
    },
    "rapi_basketapi_leaguegroups": {
        "api_name": "leaguegroups",
        "category": "Sports",
        "tool_name": "basketapi",
        "code": "async def rapi_basketapi_leaguegroups(self,*args,**kwargs):\n    '''BasketAPI provides you with live basketball results, schedule and matches that are being played or was played in a date. With over 70 different basketball leagues, among which are college basketball league (NCAA Men and NCAA Women), NBA, Euroleague, A1, Serie A, Liga ACB, Eurocup, ABA Liga, NBB and many other, you can follow live scores, results, tables, statistics, fixtures, standings and previous results by quarters, halftime or final result. BasketAPI has everything you need!\nFor increased...\n    \n    \n\n    :param integer seasonId: The season id you want to retrieve the league's groupd. defaults to 22873\n    :param integer tournamentId: The unique tournament id you want to retrieve the league's groups. defaults to 441\n    '''\n    return await self._request_rapid_api('rapi_basketapi_leaguegroups',kwargs)\n        "
    },
    "rapi_basketball_data_tournament_fixture": {
        "api_name": "tournament_fixture",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_tournament_fixture(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer tournamentId: The id of the tournament. defaults to 89\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_tournament_fixture',kwargs)\n        "
    },
    "rapi_basketball_data_seasonal_market_statistics_points": {
        "api_name": "seasonal_market_statistics_points",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_seasonal_market_statistics_points(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer teamId: The id of the team. defaults to 1442\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_seasonal_market_statistics_points',kwargs)\n        "
    },
    "rapi_basketball_data_seasonal_advanced_team_statistics": {
        "api_name": "seasonal_advanced_team_statistics",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_seasonal_advanced_team_statistics(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 335024\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_seasonal_advanced_team_statistics',kwargs)\n        "
    },
    "rapi_basketball_data_under_over_analysis": {
        "api_name": "under_over_analysis",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_under_over_analysis(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 350279\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_under_over_analysis',kwargs)\n        "
    },
    "rapi_basketball_data_match_boxscore": {
        "api_name": "match_boxscore",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_match_boxscore(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 350275\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_match_boxscore',kwargs)\n        "
    },
    "rapi_basketball_data_match_play_by_play": {
        "api_name": "match_play_by_play",
        "category": "Sports",
        "tool_name": "basketball_data",
        "code": "async def rapi_basketball_data_match_play_by_play(self,*args,**kwargs):\n    '''Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>\n    \n    \n\n    :param integer matchId: The id of the match. defaults to 350275\n    '''\n    return await self._request_rapid_api('rapi_basketball_data_match_play_by_play',kwargs)\n        "
    },
    "rapi_handballapi_leaguemedia": {
        "api_name": "leaguemedia",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_leaguemedia(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer tournamentId: The ID of the tournament for which you want to retrieve the media. defaults to 30\n    '''\n    return await self._request_rapid_api('rapi_handballapi_leaguemedia',kwargs)\n        "
    },
    "rapi_handballapi_leaguedetails": {
        "api_name": "leaguedetails",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_leaguedetails(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer tournamentId: The ID of the football league for which you want to retrieve the details. defaults to 149\n    '''\n    return await self._request_rapid_api('rapi_handballapi_leaguedetails',kwargs)\n        "
    },
    "rapi_handballapi_leagueseasons": {
        "api_name": "leagueseasons",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_leagueseasons(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer tournamentId: The unique tournament ID for which you want to retrieve the league's seasons. defaults to 149\n    '''\n    return await self._request_rapid_api('rapi_handballapi_leagueseasons',kwargs)\n        "
    },
    "rapi_handballapi_categorytournaments": {
        "api_name": "categorytournaments",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_categorytournaments(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer id: The category ID for which you want to retrieve all leagues. defaults to 71\n    '''\n    return await self._request_rapid_api('rapi_handballapi_categorytournaments',kwargs)\n        "
    },
    "rapi_handballapi_leaguecuptrees": {
        "api_name": "leaguecuptrees",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_leaguecuptrees(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer seasonId: The ID of the season for which you want to retrieve the cup trees. defaults to 24048\n    :param integer tournamentId: The unique ID of the football league for which you want to retrieve the cup trees. defaults to 160\n    '''\n    return await self._request_rapid_api('rapi_handballapi_leaguecuptrees',kwargs)\n        "
    },
    "rapi_handballapi_leaguehometeamevents": {
        "api_name": "leaguehometeamevents",
        "category": "Sports",
        "tool_name": "handballapi",
        "code": "async def rapi_handballapi_leaguehometeamevents(self,*args,**kwargs):\n    '''HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.\n    \n    \n\n    :param integer tournamentId: The unique tournament ID you want to retrieve the league's home team events from. defaults to 149\n    :param integer seasonId: The season ID you want to retrieve the league's home team events from. defaults to 42967\n    '''\n    return await self._request_rapid_api('rapi_handballapi_leaguehometeamevents',kwargs)\n        "
    },
    "rapi_soccerway_feed_search_multi": {
        "api_name": "search_multi",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_search_multi(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param string query: query defaults to manch\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_search_multi',kwargs)\n        "
    },
    "rapi_soccerway_feed_explore_competitions": {
        "api_name": "explore_competitions",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_explore_competitions(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer area_id: area_id defaults to 68\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_explore_competitions',kwargs)\n        "
    },
    "rapi_soccerway_feed_explore_popular": {
        "api_name": "explore_popular",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_explore_popular(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_explore_popular',kwargs)\n        "
    },
    "rapi_soccerway_feed_explore_areas": {
        "api_name": "explore_areas",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_explore_areas(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_explore_areas',kwargs)\n        "
    },
    "rapi_soccerway_feed_competition_data": {
        "api_name": "competition_data",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_competition_data(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer competition_id: competition_id defaults to 8\n    :param integer? season_id: season_id defaults to 16180\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_competition_data',kwargs)\n        "
    },
    "rapi_soccerway_feed_team_squad_statistics": {
        "api_name": "team_squad_statistics",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_team_squad_statistics(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer team_id: team_id defaults to 662\n    :param integer? season_id: season_id\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_team_squad_statistics',kwargs)\n        "
    },
    "rapi_soccerway_feed_players_photo": {
        "api_name": "players_photo",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_players_photo(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer player_id: player_id defaults to 177208\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_players_photo',kwargs)\n        "
    },
    "rapi_soccerway_feed_area_flag": {
        "api_name": "area_flag",
        "category": "Sports",
        "tool_name": "soccerway_feed",
        "code": "async def rapi_soccerway_feed_area_flag(self,*args,**kwargs):\n    '''Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param string area_uid: area_uid defaults to 1fk5l4hkqk12i7zske6mcqju6\n    '''\n    return await self._request_rapid_api('rapi_soccerway_feed_area_flag',kwargs)\n        "
    },
    "rapi_premier_league_stats_footballersbyclub": {
        "api_name": "footballersbyclub",
        "category": "Sports",
        "tool_name": "premier_league_stats",
        "code": "async def rapi_premier_league_stats_footballersbyclub(self,*args,**kwargs):\n    '''An API providing stats around the Premier League football league.\n    \n    \n\n    :param string club:  defaults to Arsenal\n    '''\n    return await self._request_rapid_api('rapi_premier_league_stats_footballersbyclub',kwargs)\n        "
    },
    "rapi_betano_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "betano",
        "code": "async def rapi_betano_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betano\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betano_odds',kwargs)\n        "
    },
    "rapi_betano_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "betano",
        "code": "async def rapi_betano_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Betano\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_betano_matches',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_team_players": {
        "api_name": "nhl_team_players",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_team_players(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string teamid: Team Id defaults to 17\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_team_players',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_team_info": {
        "api_name": "nhl_team_info",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_team_info(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string teamid: Team Id defaults to 17\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_team_info',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_team_list": {
        "api_name": "nhl_team_list",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_team_list(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_team_list',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_standings": {
        "api_name": "nhl_standings",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_standings(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string year:  defaults to 2022\n    :param string? group: acceptable group names: 'league', 'conference', 'division'. if not described, default: 'league'\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_standings',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_schedules": {
        "api_name": "nhl_schedules",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_schedules(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string day:  defaults to 11\n    :param string month:  defaults to 05\n    :param string year:  defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_schedules',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_picks": {
        "api_name": "nhl_picks",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_picks(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string id: Game id defaults to 401458986\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_picks',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_summary": {
        "api_name": "nhl_summary",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_summary(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string id: Game id defaults to 401458986\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_summary',kwargs)\n        "
    },
    "rapi_nhl_api_nhl_box_score": {
        "api_name": "nhl_box_score",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_nhl_box_score(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string id: Game id defaults to 401458986\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_nhl_box_score',kwargs)\n        "
    },
    "rapi_nhl_api_get_play_by_play": {
        "api_name": "get_play_by_play",
        "category": "Sports",
        "tool_name": "nhl_api",
        "code": "async def rapi_nhl_api_get_play_by_play(self,*args,**kwargs):\n    '''This API provides instant access to the latest data for all operations and players in the NHL. It features scores, odds, bookmakers' stats, standings, and historical data.\n    \n    \n\n    :param string id: Game id defaults to 401458986\n    '''\n    return await self._request_rapid_api('rapi_nhl_api_get_play_by_play',kwargs)\n        "
    },
    "rapi_ncaa_final_four_runner_up": {
        "api_name": "runner_up",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_runner_up(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1959\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_runner_up',kwargs)\n        "
    },
    "rapi_ncaa_final_four_summary": {
        "api_name": "summary",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_summary(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1980\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_summary',kwargs)\n        "
    },
    "rapi_ncaa_final_four_location": {
        "api_name": "location",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_location(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1952\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_location',kwargs)\n        "
    },
    "rapi_ncaa_final_four_fourth_place": {
        "api_name": "fourth_place",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_fourth_place(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1962\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_fourth_place',kwargs)\n        "
    },
    "rapi_ncaa_final_four_third_place": {
        "api_name": "third_place",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_third_place(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1970\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_third_place',kwargs)\n        "
    },
    "rapi_ncaa_final_four_final_four": {
        "api_name": "final_four",
        "category": "Sports",
        "tool_name": "ncaa_final_four",
        "code": "async def rapi_ncaa_final_four_final_four(self,*args,**kwargs):\n    '''Historical data for every NCAA Men's Final Four.  Get champions, coaches, records, seeds, final four teams and more in JSON format.\n    \n    \n\n    :param string identifier:  defaults to 1966\n    '''\n    return await self._request_rapid_api('rapi_ncaa_final_four_final_four',kwargs)\n        "
    },
    "rapi_ipl_api_getmatchesbyteam": {
        "api_name": "getmatchesbyteam",
        "category": "Sports",
        "tool_name": "ipl_api",
        "code": "async def rapi_ipl_api_getmatchesbyteam(self,*args,**kwargs):\n    '''It is api thats gives the data about IPL(2008-2020) matches data . \n    \n    \n\n    :param string team:  defaults to Kolkata Knight Riders\n    '''\n    return await self._request_rapid_api('rapi_ipl_api_getmatchesbyteam',kwargs)\n        "
    },
    "rapi_formula_1_standings_races": {
        "api_name": "races",
        "category": "Sports",
        "tool_name": "formula_1_standings",
        "code": "async def rapi_formula_1_standings_races(self,*args,**kwargs):\n    '''F1 Constructor and Drivers Standings.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_formula_1_standings_races',kwargs)\n        "
    },
    "rapi_formula_1_standings_constructor_standings": {
        "api_name": "constructor_standings",
        "category": "Sports",
        "tool_name": "formula_1_standings",
        "code": "async def rapi_formula_1_standings_constructor_standings(self,*args,**kwargs):\n    '''F1 Constructor and Drivers Standings.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_formula_1_standings_constructor_standings',kwargs)\n        "
    },
    "rapi_metrx_factory_competition_performance_indices": {
        "api_name": "competition_performance_indices",
        "category": "Sports",
        "tool_name": "metrx_factory",
        "code": "async def rapi_metrx_factory_competition_performance_indices(self,*args,**kwargs):\n    '''Predictive football analytics API. Get expected scores from quantitative models and statistically fair odds for upcoming and historical matches. Find discrepancies by comparing ratings to final results and market prices. Quantify team performance and trends using the Metrx Index algorithm.\n    \n    \n\n    :param ENUM? format: The format applied to index values (case-insensitive).\n**Allowed**: `ABS` Absolute, `REL` Relative.\n**Default**: ABS\nBASIC subscriptions support only `ABS`.\n    :param integer? maxRank: The maximum rank of performances according to index value (inclusive).\n    :param integer? minRank: The minimum rank of performances according to index value (inclusive). Minimum value for BASIC subscriptions is 31.\n    :param ENUM? teamType: The type of teams for which performances should be included (case-insensitive).\n**Allowed**: `C` Club team, `N` National team\n**Default**: C\n    :param boolean? domestic: Status whether included performances should include domestic or international competitions.\n    :param string? timeZone: The time zone used to interpret the `date` parameter and to format date values in the API response.\n**Default**: UTC\n    :param boolean? estimateBill: Flag whether a cost estimate should be returned for the above parameters instead of the result.\n**Default**: false\n    :param string? date: The date for which performance indices should be evaluated.\n**Pattern**: `yyyy-MM-dd['T'HH:mm]`\n**Default**: Now defaults to 2022-05-30T12:00\n    :param string? competitionIds: Alternative to the `competitionId` parameter. A comma-separated list of competition identifiers for which performances should be included. Use the `Get Competitions` operation to find valid identifiers.\n    :param string? competitionId: The identifier of a competition for which the performance should be included. Use the `Get Competitions` operation to find valid identifiers.\n    '''\n    return await self._request_rapid_api('rapi_metrx_factory_competition_performance_indices',kwargs)\n        "
    },
    "rapi_metrx_factory_team_performance_index_history": {
        "api_name": "team_performance_index_history",
        "category": "Sports",
        "tool_name": "metrx_factory",
        "code": "async def rapi_metrx_factory_team_performance_index_history(self,*args,**kwargs):\n    '''Predictive football analytics API. Get expected scores from quantitative models and statistically fair odds for upcoming and historical matches. Find discrepancies by comparing ratings to final results and market prices. Quantify team performance and trends using the Metrx Index algorithm.\n    \n    \n\n    :param string teamId: The identifier of the team for which the performances should be collected. Use the `Get Teams` operation to find valid identifiers. defaults to SgCMda70PAaZGha6zAXzYg\n    :param boolean? estimateBill: Flag whether a cost estimate should be returned for the above parameters instead of the result.\n**Default**: false\n    :param ENUM? projection: A single projection applied when building the result (case-insensitive).\n**Allowed**: `I` Main index, `VI` Venue index, `IT` Index trend, `LIC` Last index change, `LMD` Last match details\n**Default**: I\n\nRefer to [API reference](https://docs.metrxfactory.io/#team-pfm-idx-proj-enum) for further details.\n    :param string? minDate: The lower bound of the history's time span (inclusive).\n**Pattern**: `yyyy-MM-dd['T'HH:mm]` defaults to 2022-01-15T12:00\n    :param string? maxDate: The upper bound of the history's time span (inclusive).\n**Pattern**: `yyyy-MM-dd['T'HH:mm]`\n    :param string? timeZone: The time zone used to interpret the `minDate` and `maxDate` parameters.\n**Default**: UTC\n    :param string? projections: Alternative to the `projection` parameter. A comma-separated list of projections applied when building the result (case-insensitive). defaults to I,LIC,LMD\n    :param ENUM? format: The format applied to index values (case-insensitive).\n**Allowed**: `ABS` Absolute, `REL` Relative.\n**Default**: ABS\nBASIC subscriptions support only `ABS`.\n    '''\n    return await self._request_rapid_api('rapi_metrx_factory_team_performance_index_history',kwargs)\n        "
    },
    "rapi_sports_odds_betapi_data_tournaments": {
        "api_name": "data_tournaments",
        "category": "Sports",
        "tool_name": "sports_odds_betapi",
        "code": "async def rapi_sports_odds_betapi_data_tournaments(self,*args,**kwargs):\n    '''Sports data and odds Bets Api for all sports: football, basketball, hockey, tennis, cricket, eSports\n    \n    \n\n    :param string LangOdds: en, ru defaults to en\n    :param integer SportId: number sport [1 or 2 or 3]. All data = 0 defaults to 1\n    :param string TypeOdds: line, live defaults to line\n    :param string TypeParams: sports, countries, tournaments defaults to tournaments\n    :param string CountryId: number Country[1 or 2 or 3]. All data = 0 defaults to 223\n    '''\n    return await self._request_rapid_api('rapi_sports_odds_betapi_data_tournaments',kwargs)\n        "
    },
    "rapi_sports_odds_betapi_data_tournaments_all": {
        "api_name": "data_tournaments_all",
        "category": "Sports",
        "tool_name": "sports_odds_betapi",
        "code": "async def rapi_sports_odds_betapi_data_tournaments_all(self,*args,**kwargs):\n    '''Sports data and odds Bets Api for all sports: football, basketball, hockey, tennis, cricket, eSports\n    \n    \n\n    :param string TypeParams: sports, countries, tournaments defaults to tournaments\n    :param string SportId: All data = 0 defaults to 0\n    :param string LangOdds: en, ru defaults to en\n    :param integer CountryId: All data = 0 defaults to 0\n    :param string TypeOdds: line, live defaults to live\n    '''\n    return await self._request_rapid_api('rapi_sports_odds_betapi_data_tournaments_all',kwargs)\n        "
    },
    "rapi_motorsportapi_stagedetails": {
        "api_name": "stagedetails",
        "category": "Sports",
        "tool_name": "motorsportapi",
        "code": "async def rapi_motorsportapi_stagedetails(self,*args,**kwargs):\n    '''MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM). \nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer stageId: The stage ID for which to retrieve the details. defaults to 203648\n    '''\n    return await self._request_rapid_api('rapi_motorsportapi_stagedetails',kwargs)\n        "
    },
    "rapi_motorsportapi_featuredstage": {
        "api_name": "featuredstage",
        "category": "Sports",
        "tool_name": "motorsportapi",
        "code": "async def rapi_motorsportapi_featuredstage(self,*args,**kwargs):\n    '''MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM). \nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_motorsportapi_featuredstage',kwargs)\n        "
    },
    "rapi_motorsportapi_categories": {
        "api_name": "categories",
        "category": "Sports",
        "tool_name": "motorsportapi",
        "code": "async def rapi_motorsportapi_categories(self,*args,**kwargs):\n    '''MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM). \nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_motorsportapi_categories',kwargs)\n        "
    },
    "rapi_motorsportapi_stagecompetitorstandings": {
        "api_name": "stagecompetitorstandings",
        "category": "Sports",
        "tool_name": "motorsportapi",
        "code": "async def rapi_motorsportapi_stagecompetitorstandings(self,*args,**kwargs):\n    '''MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM). \nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer id: The stage ID for which to retrieve competitor's standings. defaults to 203968\n    '''\n    return await self._request_rapid_api('rapi_motorsportapi_stagecompetitorstandings',kwargs)\n        "
    },
    "rapi_motorsportapi_categoryflag": {
        "api_name": "categoryflag",
        "category": "Sports",
        "tool_name": "motorsportapi",
        "code": "async def rapi_motorsportapi_categoryflag(self,*args,**kwargs):\n    '''MotorsportApi has live coverage for most popular motorsports including MotoGP, Nascar, World Rally Championship, Moto2, Moto3, Superbike and Deutsche Tourenwagen Meisterschaft (DTM). \nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param string flag: The flag name. defaults to jp\n    '''\n    return await self._request_rapid_api('rapi_motorsportapi_categoryflag',kwargs)\n        "
    },
    "rapi_sofascores_last_ratings": {
        "api_name": "last_ratings",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_last_ratings(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    :param integer seasons_id: seasons_id defaults to 37167\n    :param integer unique_tournament_id: unique_tournament_id defaults to 34\n    '''\n    return await self._request_rapid_api('rapi_sofascores_last_ratings',kwargs)\n        "
    },
    "rapi_sofascores_player_latest_media": {
        "api_name": "player_latest_media",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_player_latest_media(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_sofascores_player_latest_media',kwargs)\n        "
    },
    "rapi_sofascores_attribute_overviews": {
        "api_name": "attribute_overviews",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_attribute_overviews(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_sofascores_attribute_overviews',kwargs)\n        "
    },
    "rapi_sofascores_player_statistics_seasons": {
        "api_name": "player_statistics_seasons",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_player_statistics_seasons(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_sofascores_player_statistics_seasons',kwargs)\n        "
    },
    "rapi_sofascores_national_team_statistics": {
        "api_name": "national_team_statistics",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_national_team_statistics(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    '''\n    return await self._request_rapid_api('rapi_sofascores_national_team_statistics',kwargs)\n        "
    },
    "rapi_sofascores_player_events": {
        "api_name": "player_events",
        "category": "Sports",
        "tool_name": "sofascores",
        "code": "async def rapi_sofascores_player_events(self,*args,**kwargs):\n    '''SofaScores has everything, from simple live scores to deep statistics and detailed player analysis. We cover 20+ sports, more than 5000 leagues, tournaments and special events.   We use the best sources for statistics and calculate precise player ratings. Heatmaps visually represent player effort on the field. Find all transfers, player strengths and weaknesses. Ratings and video of matches.  Partners and customers: (Opta sports) statsperform.com , sofascore.com, aiscore.com  Support:  [tipst...\n    \n    \n\n    :param integer player_id: player_id defaults to 12994\n    :param integer page: page defaults to 0\n    :param string course_events:  defaults to last\n    '''\n    return await self._request_rapid_api('rapi_sofascores_player_events',kwargs)\n        "
    },
    "rapi_today_football_prediction_daily_predictions": {
        "api_name": "daily_predictions",
        "category": "Sports",
        "tool_name": "today_football_prediction",
        "code": "async def rapi_today_football_prediction_daily_predictions(self,*args,**kwargs):\n    '''Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics. High efficiency, average bookie odds, profit-loss calculation, value betting.  Limitted Time: Ultra Plan is only $2.99/mo\n\n    \n    \n\n    :param string? league: Example: 1\n    :param string? page: Example: 1 defaults to 1\n    :param string? market: Example: 1X2, OU25, bts\n\n    :param string? date: Example: 2022-08-13\n    '''\n    return await self._request_rapid_api('rapi_today_football_prediction_daily_predictions',kwargs)\n        "
    },
    "rapi_today_football_prediction_prediction_details": {
        "api_name": "prediction_details",
        "category": "Sports",
        "tool_name": "today_football_prediction",
        "code": "async def rapi_today_football_prediction_prediction_details(self,*args,**kwargs):\n    '''Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics. High efficiency, average bookie odds, profit-loss calculation, value betting.  Limitted Time: Ultra Plan is only $2.99/mo\n\n    \n    \n\n    :param string match_id:  defaults to 62fb54c82c9a2e8d643c7965\n    '''\n    return await self._request_rapid_api('rapi_today_football_prediction_prediction_details',kwargs)\n        "
    },
    "rapi_today_football_prediction_stats_performance": {
        "api_name": "stats_performance",
        "category": "Sports",
        "tool_name": "today_football_prediction",
        "code": "async def rapi_today_football_prediction_stats_performance(self,*args,**kwargs):\n    '''Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics. High efficiency, average bookie odds, profit-loss calculation, value betting.  Limitted Time: Ultra Plan is only $2.99/mo\n\n    \n    \n\n    :param string? date:  defaults to 2022-08-13\n    '''\n    return await self._request_rapid_api('rapi_today_football_prediction_stats_performance',kwargs)\n        "
    },
    "rapi_daily_betting_tips_get_coupons_endpoint": {
        "api_name": "get_coupons_endpoint",
        "category": "Sports",
        "tool_name": "daily_betting_tips",
        "code": "async def rapi_daily_betting_tips_get_coupons_endpoint(self,*args,**kwargs):\n    '''We provide 90% hit rate daily soccer and basketball betting predictions, Our predictions are generated by AI powered analysis of previous matches and other factors key to the game's result\n    \n    \n\n    :param string? sort:  defaults to -id\n    '''\n    return await self._request_rapid_api('rapi_daily_betting_tips_get_coupons_endpoint',kwargs)\n        "
    },
    "rapi_daily_betting_tips_get_all_predictions": {
        "api_name": "get_all_predictions",
        "category": "Sports",
        "tool_name": "daily_betting_tips",
        "code": "async def rapi_daily_betting_tips_get_all_predictions(self,*args,**kwargs):\n    '''We provide 90% hit rate daily soccer and basketball betting predictions, Our predictions are generated by AI powered analysis of previous matches and other factors key to the game's result\n    \n    \n\n    :param string? sort:  defaults to -id\n    '''\n    return await self._request_rapid_api('rapi_daily_betting_tips_get_all_predictions',kwargs)\n        "
    },
    "rapi_icehockeyapi_matchschedules": {
        "api_name": "matchschedules",
        "category": "Sports",
        "tool_name": "icehockeyapi",
        "code": "async def rapi_icehockeyapi_matchschedules(self,*args,**kwargs):\n    '''IceHockeyApi offers you real time hockey livescore, tables, statistics, fixtures and results for more than 70 ice hockey leagues, cups and tournaments.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer day: The day of the month for which you want to retrieve the schedules (1-31). defaults to 28\n    :param integer year: The year for which you want to retrieve the schedules (e.g., 2022). defaults to 2022\n    :param integer month: The month for which you want to retrieve the schedules (1-12). defaults to 11\n    '''\n    return await self._request_rapid_api('rapi_icehockeyapi_matchschedules',kwargs)\n        "
    },
    "rapi_eredivisie_standings_eredivisie_standings": {
        "api_name": "eredivisie_standings",
        "category": "Sports",
        "tool_name": "eredivisie_standings",
        "code": "async def rapi_eredivisie_standings_eredivisie_standings(self,*args,**kwargs):\n    '''Dutch Eredivisie Standings & Table\n    \n    \n\n    :param string? season: e.g. `2022`\ne.g. `2021`\n    '''\n    return await self._request_rapid_api('rapi_eredivisie_standings_eredivisie_standings',kwargs)\n        "
    },
    "rapi_chillybets_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "chillybets",
        "code": "async def rapi_chillybets_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Chillybets\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chillybets_matches',kwargs)\n        "
    },
    "rapi_chillybets_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "chillybets",
        "code": "async def rapi_chillybets_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Chillybets\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chillybets_odds',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_spain_getteams": {
        "api_name": "getteams",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_spain",
        "code": "async def rapi_wosti_futbol_tv_spain_getteams(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Espa\u00f1a. Horarios y canales (TV&streaming legales). Futbolenlatv.es Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_spain_getteams',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_spain_getcompetitionsid": {
        "api_name": "getcompetitionsid",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_spain",
        "code": "async def rapi_wosti_futbol_tv_spain_getcompetitionsid(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Espa\u00f1a. Horarios y canales (TV&streaming legales). Futbolenlatv.es Support: info@wosti.com\n    \n    \n\n    :param integer Id: \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_spain_getcompetitionsid',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_spain_getevents": {
        "api_name": "getevents",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_spain",
        "code": "async def rapi_wosti_futbol_tv_spain_getevents(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Espa\u00f1a. Horarios y canales (TV&streaming legales). Futbolenlatv.es Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_spain_getevents',kwargs)\n        "
    },
    "rapi_wosti_futbol_tv_spain_getcompetitions": {
        "api_name": "getcompetitions",
        "category": "Sports",
        "tool_name": "wosti_futbol_tv_spain",
        "code": "async def rapi_wosti_futbol_tv_spain_getcompetitions(self,*args,**kwargs):\n    '''Gu\u00eda de partidos de f\u00fatbol televisados en Espa\u00f1a. Horarios y canales (TV&streaming legales). Futbolenlatv.es Support: info@wosti.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wosti_futbol_tv_spain_getcompetitions',kwargs)\n        "
    },
    "rapi_match_api_get_all_competitions_information": {
        "api_name": "get_all_competitions_information",
        "category": "Sports",
        "tool_name": "match_api",
        "code": "async def rapi_match_api_get_all_competitions_information(self,*args,**kwargs):\n    '''+1000 football leagues & cups. Livescore, alive, this project provides users with real-time information about current and upcoming matches in various competitions and leagues. By subscribing to our service, users will have access to detailed information about matches, including teams, results, and time. Additionally, users will be able to view information about different competitions and leagues. Our service aims to provide users with the most up-to-date and accurate information, and we const...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_match_api_get_all_competitions_information',kwargs)\n        "
    },
    "rapi_fan_crypto_coins_get_supported_coins_handler": {
        "api_name": "get_supported_coins_handler",
        "category": "Sports",
        "tool_name": "fan_crypto_coins",
        "code": "async def rapi_fan_crypto_coins_get_supported_coins_handler(self,*args,**kwargs):\n    '''Get data on all crypto coins related to sports teams through this API!\n    \n    \n\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_fan_crypto_coins_get_supported_coins_handler',kwargs)\n        "
    },
    "rapi_flashlive_sports_event_summary": {
        "api_name": "event_summary",
        "category": "Sports",
        "tool_name": "flashlive_sports",
        "code": "async def rapi_flashlive_sports_event_summary(self,*args,**kwargs):\n    '''FlashLive Sports provides the fastest live scores, standings and detailed stats. FlashLive covers thousands of competitions in 30+ sports. Soccer, football, baseball, tennis, basketball, hockey, golf mma, cricket, darts. Translation of players, teams and leagues (25 languages).  You can make a site like flashscore.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param string locale:  defaults to en_INT\n    :param string event_id: Event id defaults to 6ZCocWsb\n    '''\n    return await self._request_rapid_api('rapi_flashlive_sports_event_summary',kwargs)\n        "
    },
    "rapi_americanfootballapi_playerdetails": {
        "api_name": "playerdetails",
        "category": "Sports",
        "tool_name": "americanfootballapi",
        "code": "async def rapi_americanfootballapi_playerdetails(self,*args,**kwargs):\n    '''Here at the AmericanFootballApi you can find all the results and live scores from the biggest and most popular American football league in the world - NFL and when regular NFL season is finished, follow live scores of NFL playoffs and Superbowl. In addition to NFL we will also provide you with the livescores, results, standings and schedules for the NCAA College American football and Canadian CFL.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/alls...\n    \n    \n\n    :param integer id: The ID of the player for which you want to retrieve the details. defaults to 853680\n    '''\n    return await self._request_rapid_api('rapi_americanfootballapi_playerdetails',kwargs)\n        "
    },
    "rapi_americanfootballapi_search": {
        "api_name": "search",
        "category": "Sports",
        "tool_name": "americanfootballapi",
        "code": "async def rapi_americanfootballapi_search(self,*args,**kwargs):\n    '''Here at the AmericanFootballApi you can find all the results and live scores from the biggest and most popular American football league in the world - NFL and when regular NFL season is finished, follow live scores of NFL playoffs and Superbowl. In addition to NFL we will also provide you with the livescores, results, standings and schedules for the NCAA College American football and Canadian CFL.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/alls...\n    \n    \n\n    :param string term: The search term to use when searching for American Football players, teams, and tournaments. defaults to brady\n    '''\n    return await self._request_rapid_api('rapi_americanfootballapi_search',kwargs)\n        "
    },
    "rapi_f1_latest_news_news_from_individual_source": {
        "api_name": "news_from_individual_source",
        "category": "Sports",
        "tool_name": "f1_latest_news",
        "code": "async def rapi_f1_latest_news_news_from_individual_source(self,*args,**kwargs):\n    '''This API scrapes the most recent F1 news articles from, the official F1 website, Sky F1, BBC F1, WTF1, and Autosport. More may be added in the future...\n    \n    \n\n    :param string sourceID:  defaults to f1\n    '''\n    return await self._request_rapid_api('rapi_f1_latest_news_news_from_individual_source',kwargs)\n        "
    },
    "rapi_f1_latest_news_get_recent_f1_news_from_all_sources": {
        "api_name": "get_recent_f1_news_from_all_sources",
        "category": "Sports",
        "tool_name": "f1_latest_news",
        "code": "async def rapi_f1_latest_news_get_recent_f1_news_from_all_sources(self,*args,**kwargs):\n    '''This API scrapes the most recent F1 news articles from, the official F1 website, Sky F1, BBC F1, WTF1, and Autosport. More may be added in the future...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_f1_latest_news_get_recent_f1_news_from_all_sources',kwargs)\n        "
    },
    "rapi_bildbet_odds": {
        "api_name": "odds",
        "category": "Sports",
        "tool_name": "bildbet",
        "code": "async def rapi_bildbet_odds(self,*args,**kwargs):\n    '''Games and pre-game Odds for Bildbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bildbet_odds',kwargs)\n        "
    },
    "rapi_bildbet_matches": {
        "api_name": "matches",
        "category": "Sports",
        "tool_name": "bildbet",
        "code": "async def rapi_bildbet_matches(self,*args,**kwargs):\n    '''Games and pre-game Odds for Bildbet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bildbet_matches',kwargs)\n        "
    },
    "rapi_fifa_2022_schedule_and_stats_get_matches_on_a_specific_date": {
        "api_name": "get_matches_on_a_specific_date",
        "category": "Sports",
        "tool_name": "fifa_2022_schedule_and_stats",
        "code": "async def rapi_fifa_2022_schedule_and_stats_get_matches_on_a_specific_date(self,*args,**kwargs):\n    '''Get the latest FIFA World Cup Schedule and Stats \n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2022-11-22\n    :param integer? utc_offset: UTC Offset for timezone (Must be between -12 to 14) defaults to 8\n    '''\n    return await self._request_rapid_api('rapi_fifa_2022_schedule_and_stats_get_matches_on_a_specific_date',kwargs)\n        "
    },
    "rapi_pinaculo_sport_highlighted_markets_straight": {
        "api_name": "sport_highlighted_markets_straight",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_sport_highlighted_markets_straight(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    :param integer id: The sport id. defaults to 29\n    :param boolean? onlyPrimary: Return primary only? defaults to false\n    '''\n    return await self._request_rapid_api('rapi_pinaculo_sport_highlighted_markets_straight',kwargs)\n        "
    },
    "rapi_pinaculo_sport_markets_live_straight": {
        "api_name": "sport_markets_live_straight",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_sport_markets_live_straight(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    :param integer id: The sport id. defaults to 29\n    :param boolean? primaryOnly: Return primary only?\n    :param boolean? withSpecials: Return with specials?\n    '''\n    return await self._request_rapid_api('rapi_pinaculo_sport_markets_live_straight',kwargs)\n        "
    },
    "rapi_pinaculo_labels": {
        "api_name": "labels",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_labels(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pinaculo_labels',kwargs)\n        "
    },
    "rapi_pinaculo_league_markets_straight": {
        "api_name": "league_markets_straight",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_league_markets_straight(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    :param integer id: The league id. defaults to 1980\n    '''\n    return await self._request_rapid_api('rapi_pinaculo_league_markets_straight',kwargs)\n        "
    },
    "rapi_pinaculo_live_sports": {
        "api_name": "live_sports",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_live_sports(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pinaculo_live_sports',kwargs)\n        "
    },
    "rapi_pinaculo_sport_matchups": {
        "api_name": "sport_matchups",
        "category": "Sports",
        "tool_name": "pinaculo",
        "code": "async def rapi_pinaculo_sport_matchups(self,*args,**kwargs):\n    '''Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.\n    \n    \n\n    :param integer id: The sport id? defaults to 4\n    :param boolean? withSpecials: Return with specials?\n    '''\n    return await self._request_rapid_api('rapi_pinaculo_sport_matchups',kwargs)\n        "
    },
    "rapi_free_nba_get_all_games": {
        "api_name": "get_all_games",
        "category": "Sports",
        "tool_name": "free_nba",
        "code": "async def rapi_free_nba_get_all_games(self,*args,**kwargs):\n    '''Unofficial NBA API for Historical NBA Data\n    \n    \n\n    :param string? page: The page number, used for pagination. defaults to 0\n    :param string? per_page: The number of results returned per call, used for pagination. defaults to 25\n    :param string? team_ids: An array of team_ids\n    :param string? date: An array of dates formatted in 'YYYY-MM-DD'\n    :param string? Seasons: An array of seasons\n    '''\n    return await self._request_rapid_api('rapi_free_nba_get_all_games',kwargs)\n        "
    },
    "rapi_pinnacle_odds_list_of_special_markets": {
        "api_name": "list_of_special_markets",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_list_of_special_markets(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer sport_id: Sport id defaults to 1\n    :param boolean? is_have_odds: `1` or `0`. You can only get matches for which there are already open odds, or matches that will be given odds in the future defaults to True\n    :param integer? league_ids: League id\n    :param string? event_type: Status: `prematch`, `live`  Please note that prematch and live events are different\n    :param integer? since: Since UTC time. Calls return changes since the provided `since` value.\n    :param integer? event_ids: Event id\n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_list_of_special_markets',kwargs)\n        "
    },
    "rapi_pinnacle_odds_event_details": {
        "api_name": "event_details",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_event_details(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer event_id: Event id defaults to 1419211461\n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_event_details',kwargs)\n        "
    },
    "rapi_pinnacle_odds_list_of_periods": {
        "api_name": "list_of_periods",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_list_of_periods(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer sport_id: Sport id defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_list_of_periods',kwargs)\n        "
    },
    "rapi_pinnacle_odds_list_of_archive_events": {
        "api_name": "list_of_archive_events",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_list_of_archive_events(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer sport_id: Sport id defaults to 1\n    :param integer page_num: Page num defaults to 1\n    :param integer? league_ids: League id\n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_list_of_archive_events',kwargs)\n        "
    },
    "rapi_pinnacle_odds_list_of_sports": {
        "api_name": "list_of_sports",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_list_of_sports(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_list_of_sports',kwargs)\n        "
    },
    "rapi_pinnacle_odds_list_of_markets": {
        "api_name": "list_of_markets",
        "category": "Sports",
        "tool_name": "pinnacle_odds",
        "code": "async def rapi_pinnacle_odds_list_of_markets(self,*args,**kwargs):\n    '''Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer sport_id: Sport id defaults to 1\n    :param integer? league_ids: League id\n    :param string? event_type: Status: `prematch`, `live`  Please note that prematch and live events are different\n    :param integer? event_ids: Event id\n    :param boolean? is_have_odds: `1` or `0`. You can only get matches for which there are already open odds, or matches that will be given odds in the future defaults to True\n    :param integer? since: Since UTC time. Calls return changes since the provided `since` value.\n    '''\n    return await self._request_rapid_api('rapi_pinnacle_odds_list_of_markets',kwargs)\n        "
    },
    "rapi_transfermarkt_db_player_progress": {
        "api_name": "player_progress",
        "category": "Sports",
        "tool_name": "transfermarkt_db",
        "code": "async def rapi_transfermarkt_db_player_progress(self,*args,**kwargs):\n    '''Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.  https://www.transfermarkt.com/ **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer player_id: Player ID defaults to 28003\n    :param string locale:  defaults to DE\n    '''\n    return await self._request_rapid_api('rapi_transfermarkt_db_player_progress',kwargs)\n        "
    },
    "rapi_transfermarkt_db_list_of_champions": {
        "api_name": "list_of_champions",
        "category": "Sports",
        "tool_name": "transfermarkt_db",
        "code": "async def rapi_transfermarkt_db_list_of_champions(self,*args,**kwargs):\n    '''Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.  https://www.transfermarkt.com/ **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param string competition_id: Competition ID defaults to GB1\n    :param string locale:  defaults to DE\n    '''\n    return await self._request_rapid_api('rapi_transfermarkt_db_list_of_champions',kwargs)\n        "
    },
    "rapi_transfermarkt_db_player_performance_details": {
        "api_name": "player_performance_details",
        "category": "Sports",
        "tool_name": "transfermarkt_db",
        "code": "async def rapi_transfermarkt_db_player_performance_details(self,*args,**kwargs):\n    '''Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.  https://www.transfermarkt.com/ **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param string competition_id: Competition ID defaults to FR1\n    :param integer season_id: Season ID, endpoint `Seasons of competition` defaults to 2022\n    :param string locale:  defaults to DE\n    :param integer player_id: Player ID defaults to 28003\n    '''\n    return await self._request_rapid_api('rapi_transfermarkt_db_player_performance_details',kwargs)\n        "
    },
    "rapi_transfermarkt_db_player_info": {
        "api_name": "player_info",
        "category": "Sports",
        "tool_name": "transfermarkt_db",
        "code": "async def rapi_transfermarkt_db_player_info(self,*args,**kwargs):\n    '''Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.  https://www.transfermarkt.com/ **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one\n    \n    \n\n    :param integer player_id: Player ID defaults to 28003\n    :param string locale:  defaults to DE\n    '''\n    return await self._request_rapid_api('rapi_transfermarkt_db_player_info',kwargs)\n        "
    },
    "rapi_mmaapi_femalefighterimageplaceholder": {
        "api_name": "femalefighterimageplaceholder",
        "category": "Sports",
        "tool_name": "mmaapi",
        "code": "async def rapi_mmaapi_femalefighterimageplaceholder(self,*args,**kwargs):\n    '''MMAAPI is your ultimate source for the latest updates, scores, and results from the world of mixed martial arts. Our API covers all major MMA organizations, including UFC, Bellator, KSW, PFL, and many more.Our live scoring and real-time statistics provide a comprehensive view of every fight, making MMAAPI the go-to API to get MMA scores worldwide.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mmaapi_femalefighterimageplaceholder',kwargs)\n        "
    },
    "rapi_mmaapi_teamimage": {
        "api_name": "teamimage",
        "category": "Sports",
        "tool_name": "mmaapi",
        "code": "async def rapi_mmaapi_teamimage(self,*args,**kwargs):\n    '''MMAAPI is your ultimate source for the latest updates, scores, and results from the world of mixed martial arts. Our API covers all major MMA organizations, including UFC, Bellator, KSW, PFL, and many more.Our live scoring and real-time statistics provide a comprehensive view of every fight, making MMAAPI the go-to API to get MMA scores worldwide.\n    \n    \n\n    :param integer id: The team ID you want to retrieve the image. defaults to 469994\n    '''\n    return await self._request_rapid_api('rapi_mmaapi_teamimage',kwargs)\n        "
    },
    "rapi_mmaapi_eventstatistics": {
        "api_name": "eventstatistics",
        "category": "Sports",
        "tool_name": "mmaapi",
        "code": "async def rapi_mmaapi_eventstatistics(self,*args,**kwargs):\n    '''MMAAPI is your ultimate source for the latest updates, scores, and results from the world of mixed martial arts. Our API covers all major MMA organizations, including UFC, Bellator, KSW, PFL, and many more.Our live scoring and real-time statistics provide a comprehensive view of every fight, making MMAAPI the go-to API to get MMA scores worldwide.\n    \n    \n\n    :param integer id: The ID of the event you want to get statistics. defaults to 11243946\n    '''\n    return await self._request_rapid_api('rapi_mmaapi_eventstatistics',kwargs)\n        "
    },
    "rapi_mmaapi_malefighterimageplaceholder": {
        "api_name": "malefighterimageplaceholder",
        "category": "Sports",
        "tool_name": "mmaapi",
        "code": "async def rapi_mmaapi_malefighterimageplaceholder(self,*args,**kwargs):\n    '''MMAAPI is your ultimate source for the latest updates, scores, and results from the world of mixed martial arts. Our API covers all major MMA organizations, including UFC, Bellator, KSW, PFL, and many more.Our live scoring and real-time statistics provide a comprehensive view of every fight, making MMAAPI the go-to API to get MMA scores worldwide.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mmaapi_malefighterimageplaceholder',kwargs)\n        "
    },
    "rapi_disposable_invalid_email_verifier_email_verifier": {
        "api_name": "email_verifier",
        "category": "Email",
        "tool_name": "disposable_invalid_email_verifier",
        "code": "async def rapi_disposable_invalid_email_verifier_email_verifier(self,*args,**kwargs):\n    '''Our email validation tool makes it simple for you to verify the authenticity of any e-mail address. With just a few clicks, you can confirm if the e-mail address is associated with a valid domain and if it is a temporary or disposable e-mail. These are common indicators of spamming or trolling, which is why we have created an API to help you easily block these unwanted e-mails. Our advanced algorithms and techniques are designed to thoroughly validate each e-mail address, ensuring that you ha...\n    \n    \n\n    :param string email:  defaults to hello@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_disposable_invalid_email_verifier_email_verifier',kwargs)\n        "
    },
    "rapi_mail_temple_some": {
        "api_name": "some",
        "category": "Email",
        "tool_name": "mail_temple",
        "code": "async def rapi_mail_temple_some(self,*args,**kwargs):\n    '''temporary mail\n    \n    \n\n    :param string? deo: \n    '''\n    return await self._request_rapid_api('rapi_mail_temple_some',kwargs)\n        "
    },
    "rapi_bouncer_email_checker_bouncer_email_checker": {
        "api_name": "bouncer_email_checker",
        "category": "Email",
        "tool_name": "bouncer_email_checker",
        "code": "async def rapi_bouncer_email_checker_bouncer_email_checker(self,*args,**kwargs):\n    '''This API is a fast and check email address syntax and deliverability validator\n    \n    \n\n    :param string email:  defaults to example@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_bouncer_email_checker_bouncer_email_checker',kwargs)\n        "
    },
    "rapi_email_validation_v3_validate_email": {
        "api_name": "validate_email",
        "category": "Email",
        "tool_name": "email_validation_v3",
        "code": "async def rapi_email_validation_v3_validate_email(self,*args,**kwargs):\n    '''Check disposable email addresses\n    \n    \n\n    :param string email:  defaults to support@rapidapi.com\n    '''\n    return await self._request_rapid_api('rapi_email_validation_v3_validate_email',kwargs)\n        "
    },
    "rapi_validate_email_validate_email": {
        "api_name": "validate_email",
        "category": "Email",
        "tool_name": "validate_email",
        "code": "async def rapi_validate_email_validate_email(self,*args,**kwargs):\n    '''\u201cValidate Email\u201d before you send. Discover deliverability of email addresses by our most popular email verification API.\n    \n    \n\n    :param string email:  defaults to hello@apitier.com\n    '''\n    return await self._request_rapid_api('rapi_validate_email_validate_email',kwargs)\n        "
    },
    "rapi_easy_email_validation_validate_email": {
        "api_name": "validate_email",
        "category": "Email",
        "tool_name": "easy_email_validation",
        "code": "async def rapi_easy_email_validation_validate_email(self,*args,**kwargs):\n    '''Use this API to quickly and effectively validate an email addresses. This API runs the following checks: valid email format, mx Record, and disposable email.\n    \n    \n\n    :param string email:  defaults to example@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_easy_email_validation_validate_email',kwargs)\n        "
    },
    "rapi_temp_mail_read_inbox": {
        "api_name": "read_inbox",
        "category": "Email",
        "tool_name": "temp_mail",
        "code": "async def rapi_temp_mail_read_inbox(self,*args,**kwargs):\n    '''Create a temp mail\n    \n    \n\n    :param string email:  defaults to p1amvpvxfh@bestparadize.com\n    '''\n    return await self._request_rapid_api('rapi_temp_mail_read_inbox',kwargs)\n        "
    },
    "rapi_mailslurp_email_testing_gettestwebhookpayloadnewcontact": {
        "api_name": "gettestwebhookpayloadnewcontact",
        "category": "Email",
        "tool_name": "mailslurp_email_testing",
        "code": "async def rapi_mailslurp_email_testing_gettestwebhookpayloadnewcontact(self,*args,**kwargs):\n    '''Email sandbox testing API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mailslurp_email_testing_gettestwebhookpayloadnewcontact',kwargs)\n        "
    },
    "rapi_mailslurp_email_testing_gettestwebhookpayloadbounce": {
        "api_name": "gettestwebhookpayloadbounce",
        "category": "Email",
        "tool_name": "mailslurp_email_testing",
        "code": "async def rapi_mailslurp_email_testing_gettestwebhookpayloadbounce(self,*args,**kwargs):\n    '''Email sandbox testing API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mailslurp_email_testing_gettestwebhookpayloadbounce',kwargs)\n        "
    },
    "rapi_mailslurp_email_testing_gettestwebhookpayloademailopened": {
        "api_name": "gettestwebhookpayloademailopened",
        "category": "Email",
        "tool_name": "mailslurp_email_testing",
        "code": "async def rapi_mailslurp_email_testing_gettestwebhookpayloademailopened(self,*args,**kwargs):\n    '''Email sandbox testing API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mailslurp_email_testing_gettestwebhookpayloademailopened',kwargs)\n        "
    },
    "rapi_validect_email_verification_v1_verify": {
        "api_name": "v1_verify",
        "category": "Email",
        "tool_name": "validect_email_verification",
        "code": "async def rapi_validect_email_verification_v1_verify(self,*args,**kwargs):\n    '''Email address validation API\n    \n    \n\n    :param string email: Email address to validate defaults to example@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_validect_email_verification_v1_verify',kwargs)\n        "
    },
    "rapi_email_existence_validator_help_page": {
        "api_name": "help_page",
        "category": "Email",
        "tool_name": "email_existence_validator",
        "code": "async def rapi_email_existence_validator_help_page(self,*args,**kwargs):\n    '''API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_email_existence_validator_help_page',kwargs)\n        "
    },
    "rapi_email_existence_validator_check_for_disposable_emails": {
        "api_name": "check_for_disposable_emails",
        "category": "Email",
        "tool_name": "email_existence_validator",
        "code": "async def rapi_email_existence_validator_check_for_disposable_emails(self,*args,**kwargs):\n    '''API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.\n    \n    \n\n    :param string email:  defaults to example@besttempmail.com\n    '''\n    return await self._request_rapid_api('rapi_email_existence_validator_check_for_disposable_emails',kwargs)\n        "
    },
    "rapi_email_existence_validator_get_the_mx_records": {
        "api_name": "get_the_mx_records",
        "category": "Email",
        "tool_name": "email_existence_validator",
        "code": "async def rapi_email_existence_validator_get_the_mx_records(self,*args,**kwargs):\n    '''API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.\n    \n    \n\n    :param string email:  defaults to example@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_email_existence_validator_get_the_mx_records',kwargs)\n        "
    },
    "rapi_email_address_validator_validate_email_address": {
        "api_name": "validate_email_address",
        "category": "Email",
        "tool_name": "email_address_validator",
        "code": "async def rapi_email_address_validator_validate_email_address(self,*args,**kwargs):\n    '''Stop guessing if an email is valid or full. With this API, you can determine first hand if the email is deliverable and working. Not only can this API detect if an email is formatted correctly, it also uses various methods to verify if the email is actually valid\n    \n    \n\n    :param string email:  defaults to test@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_email_address_validator_validate_email_address',kwargs)\n        "
    },
    "rapi_fast_email_verifier_emailverifications": {
        "api_name": "emailverifications",
        "category": "Email",
        "tool_name": "fast_email_verifier",
        "code": "async def rapi_fast_email_verifier_emailverifications(self,*args,**kwargs):\n    '''APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.\n    \n    \n\n    :param string? emailsimple:  defaults to mbavazijoshua@gmail.com,apisolution@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_fast_email_verifier_emailverifications',kwargs)\n        "
    },
    "rapi_fast_email_verifier_emailverification": {
        "api_name": "emailverification",
        "category": "Email",
        "tool_name": "fast_email_verifier",
        "code": "async def rapi_fast_email_verifier_emailverification(self,*args,**kwargs):\n    '''APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.\n    \n    \n\n    :param string? emailsimple:  defaults to mbavazijoshua@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_fast_email_verifier_emailverification',kwargs)\n        "
    },
    "rapi_blaze_verify_verify_an_email": {
        "api_name": "verify_an_email",
        "category": "Email",
        "tool_name": "blaze_verify",
        "code": "async def rapi_blaze_verify_verify_an_email(self,*args,**kwargs):\n    '''Email Verification by Emailable is astonishingly easy and low-cost. Simple, reliable, and affordable list cleaning shouldn\u2019t be hard to find. Emailable helps marketers and developers build powerful and effective marketing campaigns.<br><a href=\"https://emailable.com/docs/api?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>View API Docs</a> | <a href=\"https://app.emailable.com/signup?utm_source=rapid_api&utm_medium=web&utm_campaign=short_description\" style='font-weight:bold;'>Click Here to Sign Up for an API Key</a>\n    \n    \n\n    :param string email: The email you want verified.\n    :param boolean? accept_all: Does an accept-all check. Heavily impacts API's response time. Default: false\n    :param boolean? smtp: The SMTP step takes up a majority of the API's response time. If you would like to speed up your response times, you can disable this step. Default: true\n    :param integer? timeout: Optional timeout to wait for response (in seconds). Min: 2, Max: 30. Default: 5\n    '''\n    return await self._request_rapid_api('rapi_blaze_verify_verify_an_email',kwargs)\n        "
    },
    "rapi_organizaci_n_territorial_de_espa_a_lista_de_provincias": {
        "api_name": "lista_de_provincias",
        "category": "Mapping",
        "tool_name": "organizaci_n_territorial_de_espa_a",
        "code": "async def rapi_organizaci_n_territorial_de_espa_a_lista_de_provincias(self,*args,**kwargs):\n    '''Es una API completa que proporciona informaci\u00f3n detallada sobre municipios, provincias y comunidades aut\u00f3nomas en Espa\u00f1a. Con m\u00faltiples m\u00e9todos disponibles, los usuarios pueden obtener listas de municipios por provincia, provincias por comunidad aut\u00f3noma, una lista completa de comunidades aut\u00f3nomas y una lista de todas las provincias espa\u00f1olas. GeoSpain es perfecta para desarrolladores y aplicaciones que necesitan informaci\u00f3n geogr\u00e1fica y administrativa actualizada y precisa de Espa\u00f1a.\"\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_organizaci_n_territorial_de_espa_a_lista_de_provincias',kwargs)\n        "
    },
    "rapi_places_nearby_a_coordinates_categories": {
        "api_name": "categories",
        "category": "Mapping",
        "tool_name": "places_nearby_a_coordinates",
        "code": "async def rapi_places_nearby_a_coordinates_categories(self,*args,**kwargs):\n    '''Find places nearby a given coordinates.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_places_nearby_a_coordinates_categories',kwargs)\n        "
    },
    "rapi_mapilion_vector_and_raster_map_tiles_get_tile_json": {
        "api_name": "get_tile_json",
        "category": "Mapping",
        "tool_name": "mapilion_vector_and_raster_map_tiles",
        "code": "async def rapi_mapilion_vector_and_raster_map_tiles_get_tile_json(self,*args,**kwargs):\n    '''Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.\n    \n    \n\n    :param string type:  defaults to v3\n    '''\n    return await self._request_rapid_api('rapi_mapilion_vector_and_raster_map_tiles_get_tile_json',kwargs)\n        "
    },
    "rapi_mapilion_vector_and_raster_map_tiles_get_style_json": {
        "api_name": "get_style_json",
        "category": "Mapping",
        "tool_name": "mapilion_vector_and_raster_map_tiles",
        "code": "async def rapi_mapilion_vector_and_raster_map_tiles_get_style_json(self,*args,**kwargs):\n    '''Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.\n    \n    \n\n    :param string style:  defaults to osm-bright\n    '''\n    return await self._request_rapid_api('rapi_mapilion_vector_and_raster_map_tiles_get_style_json',kwargs)\n        "
    },
    "rapi_mapfanapi_map_map": {
        "api_name": "map",
        "category": "Mapping",
        "tool_name": "mapfanapi_map",
        "code": "async def rapi_mapfanapi_map_map(self,*args,**kwargs):\n    '''MapFan API \u306e\u5730\u56f3API\u3067\u3059\u3002\u30b9\u30af\u30ed\u30fc\u30eb\u5730\u56f3\u306b\u5fc5\u8981\u306aWMTS\u5f62\u5f0f\u306e\u5730\u56f3\u753b\u50cf\u3084\u3001\u6307\u5b9a\u3055\u308c\u305f\u7def\u5ea6\u7d4c\u5ea6\u30fb\u30b5\u30a4\u30ba\u30fb\u7e2e\u5c3a\u306e\u9759\u6b62\u753b\u5730\u56f3\u753b\u50cf\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n    \n    \n\n    :param integer tilerow: ### WMTS\u30bf\u30a4\u30eb\u756a\u53f7\uff08\u7def\u5ea6\u65b9\u5411\uff09\n\u5730\u56f3\u53d6\u5f97\u4f4d\u7f6e\u306e\u7def\u5ea6\u3092WMTS\u30bf\u30a4\u30eb\u756a\u53f7\u306b\u5909\u63db\u3057\u305f\u5024 defaults to 25806\n    :param string tilematrix: ### \u30bf\u30a4\u30eb\u30de\u30c8\u30ea\u30c3\u30af\u30b9\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[EPSG\u30b3\u30fc\u30c9]:[\u30b9\u30b1\u30fc\u30eb\u5024]`\n\n|\u9805\u76ee|\u5024|\n|---|---|\n|EPSG\u30b3\u30fc\u30c9|EPSG:3857<br>EPSG:900913<br>\u306e\u3044\u305a\u308c\u304b|\n|\u30b9\u30b1\u30fc\u30eb|6 \uff5e 21<br>\u306e\u3044\u305a\u308c\u304b| defaults to EPSG:3857:16\n    :param integer tilecol: ### WMTS\u30bf\u30a4\u30eb\u756a\u53f7\uff08\u7d4c\u5ea6\u65b9\u5411\uff09\n\u5730\u56f3\u53d6\u5f97\u4f4d\u7f6e\u306e\u7d4c\u5ea6\u3092WMTS\u30bf\u30a4\u30eb\u756a\u53f7\u306b\u5909\u63db\u3057\u305f\u5024 defaults to 58211\n    :param integer? rotationangle: ### \u89d2\u5ea6\u30d1\u30e9\u30e1\u30fc\u30bf\n\u6ce8\u8a18\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f\u89d2\u5ea6\u306b\u50be\u3051\u305f\u753b\u50cf\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n#### \u7bc4\u56f2\n|\u7bc4\u56f2|\u5024|\n|---|---|\n|\u6700\u5c0f|0\uff08\u5317\u4e0a\uff09|\n|\u6700\u5927|359|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`0`\n\n#### \u6ce8\u8a18\n- \u6574\u6570\u306e\u307f\u6307\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n- \u6642\u8a08\u56de\u308a\u306b\u5897\u52a0\u3057\u307e\u3059\u3002\n    :param string? mapstyle: ### \u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u6307\u5b9a\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n\n#### \u8a18\u8ff0\u5f62\u5f0f\n`[\u30c7\u30b6\u30a4\u30f3]_[\u6ce8\u8a18\u30b5\u30a4\u30ba]`\n|\u30c7\u30b6\u30a4\u30f3|\u5024|\n|---|---|\n|\u6a19\u6e96|std|\n|\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb|gray|\n|RPG\u98a8\u5730\u56f3|rpg|\n|\u53e4\u5730\u56f3\u98a8\u5730\u56f3|antique|\n|\u9053\u8def\u5f37\u8abf\u5730\u56f3|hlightroad|\n|\u9244\u9053\u5f37\u8abf\u5730\u56f3|hlightrail|\n|\u5370\u5237\u7528\u767d\u9ed2\u30c7\u30b6\u30a4\u30f3|monochrome|\n|\u304a\u3082\u3066\u306a\u3057\u30de\u30c3\u30d7|tourism|\n\n|\u6ce8\u8a18\u30b5\u30a4\u30ba|\u5024|\n|---|---|\n|\u4e2d|pc|\n|\u5927|sp|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`std_pc`\n\n#### \u6ce8\u8a18\n\u8a73\u7d30\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n    :param ENUM? landmarkicon: ### \u30e9\u30f3\u30c9\u30de\u30fc\u30af\u30a2\u30a4\u30b3\u30f3\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f \u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n    :param ENUM? resolution: ### \u89e3\u50cf\u5ea6\u30d1\u30e9\u30e1\u30fc\u30bf\n\u89e3\u50cf\u5ea6\u306b2\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u6a19\u6e96\u306e2\u500d\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf\u304c\u8fd4\u3055\u308c\u30014\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001\u6a19\u6e96\u306e4\u500d\u306e\u30b5\u30a4\u30ba\u306e\u753b\u50cf\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n|\u89e3\u50cf\u5ea6|\u5024|\u753b\u50cf\u30b5\u30a4\u30ba|\n|---|---|---|\n|\u6a19\u6e96|1|256\u00d7256|\n|2\u500d|2|512\u00d7512|\n|4\u500d|4|1024\u00d71024|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`1`\n    :param ENUM? contour: ### \u7b49\u9ad8\u7dda\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`on`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n    :param ENUM? bldgname: ### \u30d3\u30eb\u540d\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\n- mapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n- \u30d3\u30eb\u540d\u79f0\u306f\u3001\u30b9\u30b1\u30fc\u30eb\u304c19\u4ee5\u4e0a\u306e\u5834\u5408\u306e\u307f\u63cf\u753b\u3055\u308c\u307e\u3059\u3002\n    :param ENUM? logo: ### \u30d6\u30e9\u30f3\u30c9\u30ed\u30b4\u306e\u8868\u793a/\u975e\u8868\u793a\u6307\u5b9a\u30d1\u30e9\u30e1\u30fc\u30bf\n|\u8868\u793a\u8a2d\u5b9a|\u5024|\n|---|---|\n|\u975e\u8868\u793a|off|\n|\u8868\u793a|on|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`off`\n\n#### \u6ce8\u8a18\nmapstyle\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u5024\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u672c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 on \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001`[E03004] map parameter error (invalid combination)`\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\nmapstyle\u3068\u4ed6\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\u53ef\u5426\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u300eAPI\u4ed5\u69d8\u66f8\uff1aMapFanAPI_\u5730\u56f3\u30c7\u30b6\u30a4\u30f3\u8a2d\u5b9a\u65b9\u6cd5\u3068\u8868\u793a\u30a4\u30e1\u30fc\u30b8\u300f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n    :param ENUM? target: ### \u5730\u56f3\u306e\u8868\u793a\u5185\u5bb9\n|\u8868\u793a\u5185\u5bb9|\u5024|\n|---|---|\n|\u80cc\u666f\u306e\u307f\u3092\u8868\u793a|1|\n|\u6ce8\u8a18\u306e\u307f\u3092\u8868\u793a|2|\n|\u80cc\u666f + \u6ce8\u8a18\u3092\u8868\u793a|3|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`3`\n    :param string? format: ### \u51fa\u529b\u3059\u308b\u753b\u50cf\u5f62\u5f0f\n\n|\u753b\u50cf\u5f62\u5f0f|\u5024|\n|---|---|\n|png|image/png|\n|jpeg|image/jpeg|\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\n`image/png`\n    '''\n    return await self._request_rapid_api('rapi_mapfanapi_map_map',kwargs)\n        "
    },
    "rapi_city_list_getcountrylist": {
        "api_name": "getcountrylist",
        "category": "Mapping",
        "tool_name": "city_list",
        "code": "async def rapi_city_list_getcountrylist(self,*args,**kwargs):\n    '''List of all countries and cities\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_city_list_getcountrylist',kwargs)\n        "
    },
    "rapi_uk_boundaries_io_query_for_postal_unit_boundary_by_h3index": {
        "api_name": "query_for_postal_unit_boundary_by_h3index",
        "category": "Mapping",
        "tool_name": "uk_boundaries_io",
        "code": "async def rapi_uk_boundaries_io_query_for_postal_unit_boundary_by_h3index(self,*args,**kwargs):\n    '''UK Postal Code(ex. ZE1 0AE), Sector,  District,  Boundaries API:\r\n\r\nA simple & very fast API that will allow you to integrate multiple GeoJson UK Unit and sector level boundaries result into your apps and systems.\r\nThis API is designed to be used programatically for optimal performance.  When using the MashApe UI for queries expect significant latency issues on large result sets!\n    \n    \n\n    :param integer h3ndex:  defaults to 635177333670728575\n    :param integer? resolution:  defaults to 13\n    '''\n    return await self._request_rapid_api('rapi_uk_boundaries_io_query_for_postal_unit_boundary_by_h3index',kwargs)\n        "
    },
    "rapi_uk_boundaries_io_query_for_distance_between_two_h3_indexes": {
        "api_name": "query_for_distance_between_two_h3_indexes",
        "category": "Mapping",
        "tool_name": "uk_boundaries_io",
        "code": "async def rapi_uk_boundaries_io_query_for_distance_between_two_h3_indexes(self,*args,**kwargs):\n    '''UK Postal Code(ex. ZE1 0AE), Sector,  District,  Boundaries API:\r\n\r\nA simple & very fast API that will allow you to integrate multiple GeoJson UK Unit and sector level boundaries result into your apps and systems.\r\nThis API is designed to be used programatically for optimal performance.  When using the MashApe UI for queries expect significant latency issues on large result sets!\n    \n    \n\n    :param string? h3Index1:  defaults to 8d2baad9c6f073f\n    :param string? h3Index2:  defaults to 8d09a6b6ed2d37f\n    '''\n    return await self._request_rapid_api('rapi_uk_boundaries_io_query_for_distance_between_two_h3_indexes',kwargs)\n        "
    },
    "rapi_forward_reverse_geocoding_forwardgeocoding": {
        "api_name": "forwardgeocoding",
        "category": "Mapping",
        "tool_name": "forward_reverse_geocoding",
        "code": "async def rapi_forward_reverse_geocoding_forwardgeocoding(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string? json_callback: Use this with format=json to define a callback function for jsonp. \n    :param ENUM? polygon_kml: \n    :param ENUM? bounded: Used in conjunction with viewbox to search only in an area.\n    :param ENUM? addressdetails: \n    :param string? city:  defaults to New York City\n    :param ENUM? namedetails: - namedetails = [0,1]\n\nSet this to 1 to receive different spellings in different languages of a returned place.\nDefault is 0.\n    :param string? countrycodes: Two letter country code to restrict area to search in. Use the country code as defined in ISO 3166-1 alpha2.\n    :param ENUM? limit: \n    :param string? accept-language: Set the query and response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'. defaults to en\n    :param ENUM? format: \n    :param string? postalcode:  defaults to 10011\n    :param string? country:  defaults to USA\n    :param string? county: \n    :param string? state:  defaults to NY\n    :param string? street:  defaults to 34 West 13th Street\n    :param string? viewbox: Format: x1,y1,x2,y2 - restrict search area to a bounded box defined by two coordinates (x is longitude, y is latitude). The two coordinates have to span a box to work.\n    :param ENUM? polygon_text: \n    :param ENUM? polygon_geojson: \n    :param integer? polygon_threshold:  defaults to 0.0\n    :param ENUM? polygon_svg: \n    '''\n    return await self._request_rapid_api('rapi_forward_reverse_geocoding_forwardgeocoding',kwargs)\n        "
    },
    "rapi_forward_reverse_geocoding_reversegeocoding": {
        "api_name": "reversegeocoding",
        "category": "Mapping",
        "tool_name": "forward_reverse_geocoding",
        "code": "async def rapi_forward_reverse_geocoding_reversegeocoding(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer lon:  defaults to -87.6244212\n    :param integer lat:  defaults to 41.8755616\n    :param string? json_callback: \n    :param ENUM? polygon_geojson: \n    :param ENUM? limit: \n    :param string? accept-language: Set the response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'. defaults to en\n    :param ENUM? polygon_kml: \n    :param ENUM? zoom: \n    :param ENUM? polygon_svg: \n    :param ENUM? addressdetails: \n    :param ENUM? namedetails: \n    :param integer? polygon_threshold:  defaults to 0.0\n    :param ENUM? format: \n    :param ENUM? polygon_text: \n    '''\n    return await self._request_rapid_api('rapi_forward_reverse_geocoding_reversegeocoding',kwargs)\n        "
    },
    "rapi_forward_reverse_geocoding_geocodingsearch": {
        "api_name": "geocodingsearch",
        "category": "Mapping",
        "tool_name": "forward_reverse_geocoding",
        "code": "async def rapi_forward_reverse_geocoding_geocodingsearch(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string q:  defaults to New York City NY USA\n    :param string? countrycodes: Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a country.\n    :param string? json_callback: Name of json callback function for jsonp calls. Use format=json for this.\n    :param ENUM? polygon_text: \n    :param ENUM? namedetails: \n    :param ENUM? limit: \n    :param string? viewbox: Format: x1,y1,x2,y2 where is x is longitude and y latitude. The two coordinates have to span a box to let this work in conjunction with bounded=1 (see there).\n    :param ENUM? format: \n    :param ENUM? polygon_geojson: \n    :param ENUM? bounded: Use bounded=1 in conjunction with viewbox to restrict search area. You can use this to search for amenities in a given area, e.g. post offices or police stations, etc. as q param.\n    :param ENUM? polygon_svg: \n    :param ENUM? polygon_kml: \n    :param integer? polygon_threshold:  defaults to 0.0\n    :param string? accept-language: Set the query and response language. Accepts two letter language codes (e.g. 'en' or 'es') or a combination of language and region code, e.g. 'en-GB' or 'es-AR'. Default: 'en'. defaults to en\n    :param ENUM? addressdetails: \n    '''\n    return await self._request_rapid_api('rapi_forward_reverse_geocoding_geocodingsearch',kwargs)\n        "
    },
    "rapi_ca_boundaries_io_query_for_ldu_boundary": {
        "api_name": "query_for_ldu_boundary",
        "category": "Mapping",
        "tool_name": "ca_boundaries_io",
        "code": "async def rapi_ca_boundaries_io_query_for_ldu_boundary(self,*args,**kwargs):\n    '''CA Postal Code(ex. T6H, or A0A0A1 ), FSA and LDU, Boundaries API: A simple & very fast API that will allow you to integrate multiple GeoJson CA FSA and LDU level boundaries result into your apps and systems. This API is designed to be used programatically for optimal performance. When using the MashApe UI for queries expect significant latency issues on large result sets!\n    \n    \n\n    :param string postal-ldu: Query by LDU code. defaults to L0R 1B7\n    :param integer? resolution:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_ca_boundaries_io_query_for_ldu_boundary',kwargs)\n        "
    },
    "rapi_places_places_list_by_radius_nearby_search": {
        "api_name": "places_list_by_radius_nearby_search",
        "category": "Mapping",
        "tool_name": "places",
        "code": "async def rapi_places_places_list_by_radius_nearby_search(self,*args,**kwargs):\n    '''Over 10 million tourist attractions and facilities around the world\n    \n    \n\n    :param ENUM lang: Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)\n    :param integer radius: Maximum distance from selected point in meters defaults to 500\n    :param integer lon: Longitude of selected point defaults to 38.364285\n    :param integer lat: Latitude of selected point defaults to 59.855685\n    :param string? src_attr: The source of the object attributes. It is allowed to point multiple sources separated by commas. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra, user\n    :param string? format: The output format (GeoJSON is set by default). Specify \u201ccount\u201d to get the number of obtained objects. Available values : json, geojson, count\n    :param string? kinds: Object category. Several comma-separated categories may be stated with OR logic. Objects from all categories are returned by default. See object category hierarchy at https://dev.opentripmap.com/doc/en/\n    :param string? src_geom: The source of the object geometry. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra\n    :param string? rate: Minimum rating of the object popularity, 1 - minimum, 3- maximum, h - object is referred to the cultural heritage. Objects from all categories are returned by default.  Available values : 1, 2, 3, 1h, 2h, 3h\n    :param integer? limit: Maximum number of returned objects. 500 is set by default.\n    :param string? name: The text string on which to search at the begining of the object name (mimimum 3 characters). All objects are returned by default.\n    '''\n    return await self._request_rapid_api('rapi_places_places_list_by_radius_nearby_search',kwargs)\n        "
    },
    "rapi_places_places_list_by_bounding_box": {
        "api_name": "places_list_by_bounding_box",
        "category": "Mapping",
        "tool_name": "places",
        "code": "async def rapi_places_places_list_by_bounding_box(self,*args,**kwargs):\n    '''Over 10 million tourist attractions and facilities around the world\n    \n    \n\n    :param integer lon_max: Maximum longitude\n    :param integer lat_min: Minimum latitude\n    :param ENUM lang: Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)\n    :param integer lon_min: Minimum longitude\n    :param integer lat_max: Maximum latitude\n    :param string? name: The text string on which to search at the begining of the object name (mimimum 3 characters). All objects are returned by default.\n    :param string? format: The output format (GeoJSON is set by default). Specify \u201ccount\u201d to get the number of obtained objects. Available values : json, geojson, count\n    :param integer? limit: Maximum number of returned objects. 500 is set by default.\n    :param string? src_geom: The source of the object geometry. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra\n    :param string? src_attr: The source of the object attributes. It is allowed to point multiple sources separated by commas. Objects from all sources are returned by default. Available values : osm, wikidata, snow, cultura.ru, rosnedra, user\n    :param string? kinds: Object category. Several comma-separated categories may be stated with OR logic. Objects from all categories are returned by default. See object category hierarchy at https://dev.opentripmap.com/doc/en/\n    :param string? rate: Minimum rating of the object popularity, 1 - minimum, 3- maximum, h - object is referred to the cultural heritage. Objects from all categories are returned by default.  Available values : 1, 2, 3, 1h, 2h, 3h\n    '''\n    return await self._request_rapid_api('rapi_places_places_list_by_bounding_box',kwargs)\n        "
    },
    "rapi_places_place_properties": {
        "api_name": "place_properties",
        "category": "Mapping",
        "tool_name": "places",
        "code": "async def rapi_places_place_properties(self,*args,**kwargs):\n    '''Over 10 million tourist attractions and facilities around the world\n    \n    \n\n    :param string xid: Unique identifier of the object in OpenTripMap\n    :param ENUM lang: Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)\n    '''\n    return await self._request_rapid_api('rapi_places_place_properties',kwargs)\n        "
    },
    "rapi_be_zips_get_zip_code_in_mexico": {
        "api_name": "get_zip_code_in_mexico",
        "category": "Mapping",
        "tool_name": "be_zips",
        "code": "async def rapi_be_zips_get_zip_code_in_mexico(self,*args,**kwargs):\n    '''Zip code data for north america.\n    \n    \n\n    :param string zipcode:  defaults to 32390\n    '''\n    return await self._request_rapid_api('rapi_be_zips_get_zip_code_in_mexico',kwargs)\n        "
    },
    "rapi_offline_maptiles_local_osm_v1_z_x_y_png": {
        "api_name": "local_osm_v1_z_x_y_png",
        "category": "Mapping",
        "tool_name": "offline_maptiles",
        "code": "async def rapi_offline_maptiles_local_osm_v1_z_x_y_png(self,*args,**kwargs):\n    '''Download map tiles for offline use (intranet, offline devices).  You can store those downloaded tiles as long as you want.\n    \n    \n\n    :param integer y: y tile number defaults to 3\n    :param integer z: Zoom factor between 0 and 19 defaults to 3\n    :param integer x: x tile number defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_offline_maptiles_local_osm_v1_z_x_y_png',kwargs)\n        "
    },
    "rapi_offline_maptiles_en_map_v1_z_x_y_png": {
        "api_name": "en_map_v1_z_x_y_png",
        "category": "Mapping",
        "tool_name": "offline_maptiles",
        "code": "async def rapi_offline_maptiles_en_map_v1_z_x_y_png(self,*args,**kwargs):\n    '''Download map tiles for offline use (intranet, offline devices).  You can store those downloaded tiles as long as you want.\n    \n    \n\n    :param integer z: Zoom factor between 0 and 19 defaults to 3\n    :param integer y: y tile number defaults to 3\n    :param integer x: x tile number defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_offline_maptiles_en_map_v1_z_x_y_png',kwargs)\n        "
    },
    "rapi_trueway_geocoding_reversegeocode": {
        "api_name": "reversegeocode",
        "category": "Mapping",
        "tool_name": "trueway_geocoding",
        "code": "async def rapi_trueway_geocoding_reversegeocode(self,*args,**kwargs):\n    '''Forward and Reverse Geocoding\n    \n    \n\n    :param string location: The location for which you wish to obtain the human-readable address defaults to 37.7879493,-122.3961974\n    :param string? language: The language in which to return results defaults to en\n    '''\n    return await self._request_rapid_api('rapi_trueway_geocoding_reversegeocode',kwargs)\n        "
    },
    "rapi_address_normalization_and_geocoding_geocoding": {
        "api_name": "geocoding",
        "category": "Mapping",
        "tool_name": "address_normalization_and_geocoding",
        "code": "async def rapi_address_normalization_and_geocoding_geocoding(self,*args,**kwargs):\n    '''Takes free text address input, standardizes and outputs rooftop latitude/longitude geocode coordinates.\n    \n    \n\n    :param string address:  defaults to 1600 pennsylvania ave washington dc\n    '''\n    return await self._request_rapid_api('rapi_address_normalization_and_geocoding_geocoding',kwargs)\n        "
    },
    "rapi_maptoolkit_global_terrain_winter": {
        "api_name": "global_terrain_winter",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_global_terrain_winter(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string x:  defaults to 1\n    :param string z:  defaults to 1\n    :param string y:  defaults to 1\n    :param string? ratio: Set to `2` for retina tiles. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_global_terrain_winter',kwargs)\n        "
    },
    "rapi_maptoolkit_reverse": {
        "api_name": "reverse",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_reverse(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string lon:  defaults to 16.3523667\n    :param string lat:  defaults to 48.200702\n    :param string? polygon: Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `de`.\n    :param string? language: Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `de`.\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_reverse',kwargs)\n        "
    },
    "rapi_maptoolkit_routing": {
        "api_name": "routing",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_routing(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string points: Value: `{lat},{lng}[|{lat},{lng} ...]`\nDefine multiple routing waypoints, consisting of latitude and longitude. At least 2 points are needed. defaults to 48.202596,16.369801|48.208373,16.370401\n    :param string? finish_instruction: Adds a finish instruction at the end of the route.\n    :param string? language: Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `en`.\n    :param string? voice_instructions: Enables voice instructions for text to speech engines.\n    :param string? filename: Only available if the set `format` is `gpx` or `kml`. \n    :param string? format: Default format is `json`.\n    :param string? weighting: Only available if the set `routeType` is `bike`. Default value is `networks`.\n    :param string? routeType:  defaults to bike\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_routing',kwargs)\n        "
    },
    "rapi_maptoolkit_search": {
        "api_name": "search",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_search(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string q:  defaults to Kirchengasse Wien\n    :param string? language: Language for the given instructions. Must be a valid ISO 639-1 language code. Default value is `de`.\n    :param string? viewbox: Defines a preferred area to search in. Format is `{minLng},{minLat},{maxLng},{maxLat}`.\n    :param string? polygon: Defines whether available polygons are added to the response data or not. Default value is `0`.\n    :param integer? limit: Limits the number of returned results. Default value is `10`.\n    :param string? countrycodes: Limits result to one or multiple countries. Passing multiple countries, they need to be separated by a comma `,`. Must be a valid  ISO 3166-1 alpha-2 country code.\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_search',kwargs)\n        "
    },
    "rapi_maptoolkit_planet_vector_tiles": {
        "api_name": "planet_vector_tiles",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_planet_vector_tiles(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string y:  defaults to 1\n    :param string x:  defaults to 1\n    :param string z:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_planet_vector_tiles',kwargs)\n        "
    },
    "rapi_maptoolkit_terrain_rgb": {
        "api_name": "terrain_rgb",
        "category": "Mapping",
        "tool_name": "maptoolkit",
        "code": "async def rapi_maptoolkit_terrain_rgb(self,*args,**kwargs):\n    '''A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation\n    \n    \n\n    :param string x:  defaults to 1\n    :param string y:  defaults to 1\n    :param string z:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_maptoolkit_terrain_rgb',kwargs)\n        "
    },
    "rapi_de_boundaries_io_query_for_postal_code_boundary_by_location": {
        "api_name": "query_for_postal_code_boundary_by_location",
        "category": "Mapping",
        "tool_name": "de_boundaries_io",
        "code": "async def rapi_de_boundaries_io_query_for_postal_code_boundary_by_location(self,*args,**kwargs):\n    '''A Germany PostalCode Boundaries API\n    \n    \n\n    :param integer longitude:  defaults to 11.5835\n    :param integer latitude:  defaults to 48.1633\n    '''\n    return await self._request_rapid_api('rapi_de_boundaries_io_query_for_postal_code_boundary_by_location',kwargs)\n        "
    },
    "rapi_de_boundaries_io_query_for_all_state_names": {
        "api_name": "query_for_all_state_names",
        "category": "Mapping",
        "tool_name": "de_boundaries_io",
        "code": "async def rapi_de_boundaries_io_query_for_all_state_names(self,*args,**kwargs):\n    '''A Germany PostalCode Boundaries API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_de_boundaries_io_query_for_all_state_names',kwargs)\n        "
    },
    "rapi_de_boundaries_io_query_for_city_names_by_state": {
        "api_name": "query_for_city_names_by_state",
        "category": "Mapping",
        "tool_name": "de_boundaries_io",
        "code": "async def rapi_de_boundaries_io_query_for_city_names_by_state(self,*args,**kwargs):\n    '''A Germany PostalCode Boundaries API\n    \n    \n\n    :param string state:  defaults to berlin\n    '''\n    return await self._request_rapid_api('rapi_de_boundaries_io_query_for_city_names_by_state',kwargs)\n        "
    },
    "rapi_de_boundaries_io_query_for_city_boundary_by_name": {
        "api_name": "query_for_city_boundary_by_name",
        "category": "Mapping",
        "tool_name": "de_boundaries_io",
        "code": "async def rapi_de_boundaries_io_query_for_city_boundary_by_name(self,*args,**kwargs):\n    '''A Germany PostalCode Boundaries API\n    \n    \n\n    :param string name:  defaults to Karlsruhe\n    '''\n    return await self._request_rapid_api('rapi_de_boundaries_io_query_for_city_boundary_by_name',kwargs)\n        "
    },
    "rapi_geocode_forward_and_reverse_forward_geocode": {
        "api_name": "forward_geocode",
        "category": "Mapping",
        "tool_name": "geocode_forward_and_reverse",
        "code": "async def rapi_geocode_forward_and_reverse_forward_geocode(self,*args,**kwargs):\n    '''Forward and reverse geocoding using Google Geocoding API.\n    \n    \n\n    :param string address:  defaults to 2795 Hastings St, Vancouver, BC V5K 1Z8\n    '''\n    return await self._request_rapid_api('rapi_geocode_forward_and_reverse_forward_geocode',kwargs)\n        "
    },
    "rapi_geocode_forward_and_reverse_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Mapping",
        "tool_name": "geocode_forward_and_reverse",
        "code": "async def rapi_geocode_forward_and_reverse_reverse_geocode(self,*args,**kwargs):\n    '''Forward and reverse geocoding using Google Geocoding API.\n    \n    \n\n    :param integer lng:  defaults to -123.0470199\n    :param integer lat:  defaults to 49.2813458\n    '''\n    return await self._request_rapid_api('rapi_geocode_forward_and_reverse_reverse_geocode',kwargs)\n        "
    },
    "rapi_walk_score_walk_score": {
        "api_name": "walk_score",
        "category": "Mapping",
        "tool_name": "walk_score",
        "code": "async def rapi_walk_score_walk_score(self,*args,**kwargs):\n    '''This API returns the Walk Score, Transit Score and Bike Score for any location.\n    \n    \n\n    :param string lat: \tThe latitude of the requested location.\n    :param string address: The URL encoded address.\n    :param string wsapikey: Your Walk Score API Key. https://www.walkscore.com/professional/api-sign-up.php\n    :param string lon: \tThe longitude of the requested location.\n    :param string? format: Type of result to return: (movie, series, episode)\n    :param string? bike: \tSet bike=1 to request Bike Score (if available).\n    :param string? transit: Set transit=1 to request Transit Score (if available).\n    '''\n    return await self._request_rapid_api('rapi_walk_score_walk_score',kwargs)\n        "
    },
    "rapi_rankiteo_climate_risk_assessment_getpowerplantbyradiusandgps": {
        "api_name": "getpowerplantbyradiusandgps",
        "category": "Finance",
        "tool_name": "rankiteo_climate_risk_assessment",
        "code": "async def rapi_rankiteo_climate_risk_assessment_getpowerplantbyradiusandgps(self,*args,**kwargs):\n    '''We provide an API to give a climate risk assessment score for any locations in the world.\n\n    \n    \n\n    :param integer latitude:  defaults to 27.6\n    :param integer longitude:  defaults to 78.5\n    :param integer? page_number: \n    :param integer? radius_km: default value is 100 km (100)\n    '''\n    return await self._request_rapid_api('rapi_rankiteo_climate_risk_assessment_getpowerplantbyradiusandgps',kwargs)\n        "
    },
    "rapi_rankiteo_climate_risk_assessment_getclimatescorebygps": {
        "api_name": "getclimatescorebygps",
        "category": "Finance",
        "tool_name": "rankiteo_climate_risk_assessment",
        "code": "async def rapi_rankiteo_climate_risk_assessment_getclimatescorebygps(self,*args,**kwargs):\n    '''We provide an API to give a climate risk assessment score for any locations in the world.\n\n    \n    \n\n    :param integer latitude:  defaults to 48.856613\n    :param integer longitude:  defaults to 2.352222\n    :param integer disaster_type_number: 0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire\n    :param integer activity_type_number: 0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation\n    '''\n    return await self._request_rapid_api('rapi_rankiteo_climate_risk_assessment_getclimatescorebygps',kwargs)\n        "
    },
    "rapi_rankiteo_climate_risk_assessment_getclimatescorebyaddress": {
        "api_name": "getclimatescorebyaddress",
        "category": "Finance",
        "tool_name": "rankiteo_climate_risk_assessment",
        "code": "async def rapi_rankiteo_climate_risk_assessment_getclimatescorebyaddress(self,*args,**kwargs):\n    '''We provide an API to give a climate risk assessment score for any locations in the world.\n\n    \n    \n\n    :param string address:  defaults to Paris,France\n    :param integer activity_type_number: 0 : **ALL**\n1 : Agriculture\n2 : Nuclear Plants\n3 : Telecommunications\n4 : Education\n5 : Automobile\n6 : Chemical Industry\n7 : Market\n8 : Finance Industry\n9 : Aerospace, \n10 : Construction\n11 : Mining\n12 : News Media\n13 : Pharmaceutical\n14 : Datacenter\n15 : Entertainment complex\n16 : Freight logistics\n17 : Hospital\n18 : Hotel\n19 : Manufacturing\n20 : Office\n21 : Shopping center\n22 : Residential complex\n23 : Storage Ware houses\n24 : Oil and Gas Industry\n25 : Transportation\n    :param integer disaster_type_number: 0 : **ALL**\n1 : Air Quality\n2 : Earthquake\n3 : Floods\n4 : Heat Stress\n5 : Sea Level Rise \n6 : Tropical\n7 : Tsunami\n8 : Volcano\n9 : Water Stress\n10 : Wildfire\n    '''\n    return await self._request_rapid_api('rapi_rankiteo_climate_risk_assessment_getclimatescorebyaddress',kwargs)\n        "
    },
    "rapi_bybit_latest_information_for_symbol": {
        "api_name": "latest_information_for_symbol",
        "category": "Finance",
        "tool_name": "bybit",
        "code": "async def rapi_bybit_latest_information_for_symbol(self,*args,**kwargs):\n    '''Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract\n    \n    \n\n    :param string symbol: Symbol defaults to BTCUSD\n    '''\n    return await self._request_rapid_api('rapi_bybit_latest_information_for_symbol',kwargs)\n        "
    },
    "rapi_bybit_announcement": {
        "api_name": "announcement",
        "category": "Finance",
        "tool_name": "bybit",
        "code": "async def rapi_bybit_announcement(self,*args,**kwargs):\n    '''Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bybit_announcement',kwargs)\n        "
    },
    "rapi_bybit_server_time": {
        "api_name": "server_time",
        "category": "Finance",
        "tool_name": "bybit",
        "code": "async def rapi_bybit_server_time(self,*args,**kwargs):\n    '''Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bybit_server_time',kwargs)\n        "
    },
    "rapi_stock_prices_3_month_historical_daily_prices": {
        "api_name": "3_month_historical_daily_prices",
        "category": "Finance",
        "tool_name": "stock_prices",
        "code": "async def rapi_stock_prices_3_month_historical_daily_prices(self,*args,**kwargs):\n    '''Returns the adjusted open, high, low, and close price for a given symbol.  Volume, dividend, and stock split information is also included for each symbol.\n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_prices_3_month_historical_daily_prices',kwargs)\n        "
    },
    "rapi_stock_prices_6_month_historical_daily_prices": {
        "api_name": "6_month_historical_daily_prices",
        "category": "Finance",
        "tool_name": "stock_prices",
        "code": "async def rapi_stock_prices_6_month_historical_daily_prices(self,*args,**kwargs):\n    '''Returns the adjusted open, high, low, and close price for a given symbol.  Volume, dividend, and stock split information is also included for each symbol.\n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_prices_6_month_historical_daily_prices',kwargs)\n        "
    },
    "rapi_stock_prices_10_year_historical_daily_prices": {
        "api_name": "10_year_historical_daily_prices",
        "category": "Finance",
        "tool_name": "stock_prices",
        "code": "async def rapi_stock_prices_10_year_historical_daily_prices(self,*args,**kwargs):\n    '''Returns the adjusted open, high, low, and close price for a given symbol.  Volume, dividend, and stock split information is also included for each symbol.\n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_prices_10_year_historical_daily_prices',kwargs)\n        "
    },
    "rapi_mineable_coins_get_coins_data": {
        "api_name": "get_coins_data",
        "category": "Finance",
        "tool_name": "mineable_coins",
        "code": "async def rapi_mineable_coins_get_coins_data(self,*args,**kwargs):\n    '''Access coin rewards, mining difficulty, algorithms, and other useful data for hundreds of coins and multi pools.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mineable_coins_get_coins_data',kwargs)\n        "
    },
    "rapi_exchangerate_api_latest_rates": {
        "api_name": "latest_rates",
        "category": "Finance",
        "tool_name": "exchangerate_api",
        "code": "async def rapi_exchangerate_api_latest_rates(self,*args,**kwargs):\n    '''Free currency conversion API for all 160 world currencies. Tens of thousands of developers have picked ExchangeRate-API.com over the last 10 years for its reliable data & exceptional uptime - give it a try!\n    \n    \n\n    :param string Base_Code:  defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_exchangerate_api_latest_rates',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_employment": {
        "api_name": "united_states_employment",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_employment(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_employment',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_job_postings": {
        "api_name": "united_states_job_postings",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_job_postings(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_job_postings',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_small_businesses_open": {
        "api_name": "united_states_small_businesses_open",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_small_businesses_open(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_small_businesses_open',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_card_spending": {
        "api_name": "united_states_card_spending",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_card_spending(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_card_spending',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_parks_mobility": {
        "api_name": "united_states_parks_mobility",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_parks_mobility(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_parks_mobility',kwargs)\n        "
    },
    "rapi_covid_19_economic_impact_united_states_residential_mobility": {
        "api_name": "united_states_residential_mobility",
        "category": "Finance",
        "tool_name": "covid_19_economic_impact",
        "code": "async def rapi_covid_19_economic_impact_united_states_residential_mobility(self,*args,**kwargs):\n    '''Get a real-time picture of economic indicators such as employment rates, consumer spending, mobility data, small business data, and COVID-19 health information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_19_economic_impact_united_states_residential_mobility',kwargs)\n        "
    },
    "rapi_stock_cryptocurrency_forex_market_data_search_exchange": {
        "api_name": "search_exchange",
        "category": "Finance",
        "tool_name": "stock_cryptocurrency_forex_market_data",
        "code": "async def rapi_stock_cryptocurrency_forex_market_data_search_exchange(self,*args,**kwargs):\n    '''Real-time Stock, Cryptocurrency, and Forex market data from NASDAQ, NYSE, LSE, MYX, IDX, Binance, FTX, PancakeSwap, Uniswap, FRED etc.\n    \n    \n\n    :param string? q:  defaults to B\n    :param string? category:  defaults to Cryptocurrency\n    '''\n    return await self._request_rapid_api('rapi_stock_cryptocurrency_forex_market_data_search_exchange',kwargs)\n        "
    },
    "rapi_stock_cryptocurrency_forex_market_data_get_exchange_category": {
        "api_name": "get_exchange_category",
        "category": "Finance",
        "tool_name": "stock_cryptocurrency_forex_market_data",
        "code": "async def rapi_stock_cryptocurrency_forex_market_data_get_exchange_category(self,*args,**kwargs):\n    '''Real-time Stock, Cryptocurrency, and Forex market data from NASDAQ, NYSE, LSE, MYX, IDX, Binance, FTX, PancakeSwap, Uniswap, FRED etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stock_cryptocurrency_forex_market_data_get_exchange_category',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_get_other_performance": {
        "api_name": "get_other_performance",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_get_other_performance(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param string encryptedUid: The encrypted UID of the trader\n    :param ENUM? tradeType: The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_get_other_performance',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_get_trader_positions": {
        "api_name": "get_trader_positions",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_get_trader_positions(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param string encryptedUid: The encrypted UID of the trader\n    :param ENUM? tradeType: The trade type to search. PERPETUALis USD\u24c8-M and DELIVERY is COIN-M\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_get_trader_positions',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_get_other_leaderboard_base_info": {
        "api_name": "get_other_leaderboard_base_info",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_get_other_leaderboard_base_info(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param string encryptedUid: The encrypted UID of the trader\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_get_other_leaderboard_base_info',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_get_leaderboard_rank": {
        "api_name": "get_leaderboard_rank",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_get_leaderboard_rank(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param ENUM? statisticsType: The statistics type to search\n    :param boolean? isShared: Include shared positions defaults to true\n    :param ENUM? tradeType: The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M\n    :param ENUM? periodType: The period type to search\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_get_leaderboard_rank',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_get_other_position": {
        "api_name": "get_other_position",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_get_other_position(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param string encryptedUid: The encrypted UID of the trader\n    :param ENUM? tradeType: The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_get_other_position',kwargs)\n        "
    },
    "rapi_binance_futures_leaderboard_search_leaderboard": {
        "api_name": "search_leaderboard",
        "category": "Finance",
        "tool_name": "binance_futures_leaderboard",
        "code": "async def rapi_binance_futures_leaderboard_search_leaderboard(self,*args,**kwargs):\n    '''Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)\n    \n    \n\n    :param boolean? isTrader: Include only copytraders defaults to false\n    :param ENUM? statisticsType: The statistics type to search\n    :param ENUM? periodType: The period type to search\n    :param boolean? isShared: Include shared positions defaults to true\n    :param ENUM? tradeType: The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M\n    '''\n    return await self._request_rapid_api('rapi_binance_futures_leaderboard_search_leaderboard',kwargs)\n        "
    },
    "rapi_currency_v2_convert": {
        "api_name": "convert",
        "category": "Finance",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_convert(self,*args,**kwargs):\n    '''Fastest Currency API\n    \n    \n\n    :param string to:  defaults to AUD\n    :param string from:  defaults to USD\n    :param string amount:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_currency_v2_convert',kwargs)\n        "
    },
    "rapi_currency_v2_free_exchange_rates": {
        "api_name": "free_exchange_rates",
        "category": "Finance",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_free_exchange_rates(self,*args,**kwargs):\n    '''Fastest Currency API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_v2_free_exchange_rates',kwargs)\n        "
    },
    "rapi_currency_v2_exchange_rates": {
        "api_name": "exchange_rates",
        "category": "Finance",
        "tool_name": "currency_v2",
        "code": "async def rapi_currency_v2_exchange_rates(self,*args,**kwargs):\n    '''Fastest Currency API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_v2_exchange_rates',kwargs)\n        "
    },
    "rapi_interest_rate_by_api_ninjas_v1_interestrate": {
        "api_name": "v1_interestrate",
        "category": "Finance",
        "tool_name": "interest_rate_by_api_ninjas",
        "code": "async def rapi_interest_rate_by_api_ninjas_v1_interestrate(self,*args,**kwargs):\n    '''Get current interest rates from all central banks and benchmarks. See more info at https://api-ninjas.com/api/interestrate.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_interest_rate_by_api_ninjas_v1_interestrate',kwargs)\n        "
    },
    "rapi_cnbc_news_v2_list_special_reports": {
        "api_name": "news_v2_list_special_reports",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_news_v2_list_special_reports(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    :param integer? pageSize: For paging purpose defaults to 30\n    :param integer? page: For paging purpose defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_cnbc_news_v2_list_special_reports',kwargs)\n        "
    },
    "rapi_cnbc_news_v2_list_trending": {
        "api_name": "news_v2_list_trending",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_news_v2_list_trending(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    :param string tag: The value is always Articles defaults to Articles\n    :param integer? count: Number of items returned by the endpoint defaults to 30\n    '''\n    return await self._request_rapid_api('rapi_cnbc_news_v2_list_trending',kwargs)\n        "
    },
    "rapi_cnbc_symbols_get_profile": {
        "api_name": "symbols_get_profile",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_symbols_get_profile(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    :param integer issueId: The value of issueId field returned in .../auto-complete or .../symbols/translate endpoints.  defaults to 36276\n    '''\n    return await self._request_rapid_api('rapi_cnbc_symbols_get_profile',kwargs)\n        "
    },
    "rapi_cnbc_symbols_get_chart_deprecating": {
        "api_name": "symbols_get_chart_deprecating",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_symbols_get_chart_deprecating(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    :param integer symbol: The value of issueId field returned in .../auto-complete or .../symbols/translate endpoints defaults to 36276\n    :param string? interval: One of the following is allowed 1d|5d|1m|3m|6m|ytd|1y|3y|5y|10y|all defaults to 1d\n    '''\n    return await self._request_rapid_api('rapi_cnbc_symbols_get_chart_deprecating',kwargs)\n        "
    },
    "rapi_cnbc_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_v2_auto_complete(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    :param string q: Any word or phrase that you are familiar with defaults to tesla\n    '''\n    return await self._request_rapid_api('rapi_cnbc_v2_auto_complete',kwargs)\n        "
    },
    "rapi_cnbc_get_meta_data": {
        "api_name": "get_meta_data",
        "category": "Finance",
        "tool_name": "cnbc",
        "code": "async def rapi_cnbc_get_meta_data(self,*args,**kwargs):\n    '''This API helps to query for business news and live market data to create a financial site such as cnbc.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cnbc_get_meta_data',kwargs)\n        "
    },
    "rapi_defi_watch_tokens_all_market_cap": {
        "api_name": "tokens_all_market_cap",
        "category": "Finance",
        "tool_name": "defi_watch",
        "code": "async def rapi_defi_watch_tokens_all_market_cap(self,*args,**kwargs):\n    '''DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies. The API code is clear, developer-friendly, and provides daily and historical cryptocurrency information for each API request\n    \n    \n\n    :param string? sortField: Select specific sort field\n    :param string? sortType: Select specific sort type for sort field\n    :param boolean? stableOnly: Select only stablecoins\n    :param integer? skip: Select how much fields should skip\n    :param string? searchTerms: Select specific search terms\n    :param integer? take: Select how much fields should take\n    :param string? chains: Select specific blockchains for token\n    '''\n    return await self._request_rapid_api('rapi_defi_watch_tokens_all_market_cap',kwargs)\n        "
    },
    "rapi_defi_watch_pools_all": {
        "api_name": "pools_all",
        "category": "Finance",
        "tool_name": "defi_watch",
        "code": "async def rapi_defi_watch_pools_all(self,*args,**kwargs):\n    '''DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies. The API code is clear, developer-friendly, and provides daily and historical cryptocurrency information for each API request\n    \n    \n\n    :param string? tokens: Select specific tokens\n    :param string? projects: Select specific DEX for pools defaults to Uniswap\n    :param string? sortField: Select fields to sort\n    :param integer? apr: Add .min or .max to liquidity to filter\n    :param string? risks: Select type of risks\n[Read about risks](https://defi.watch/blog/defi-risks-defi-risk-management-strategies)\n    :param boolean? noIncidents: Select pools without incidents\n    :param integer? liquidity: Add .min or .max to liquidity to filter\n    :param integer? take: Select how much fields should take\n    :param string? walletId: Select specific wallet id\n    :param string? searchTerms: Select search terms to filter pools\n    :param boolean? hasFarm: Select should pool have farm or not\n    :param boolean? onlyAudited: Select only audited pools\n    :param string? volatilityType: Select specific type of volatility for pools\n    :param string? sortType: Select type of sort\n    :param integer? skip: Select how much fields should skip\n    :param boolean? onlySingleAsset: Select pools with only single assets\n    :param array? ids: Select specific pool id\n    :param boolean? onlyVerified: Select only verified pools\n    :param string? chains: Select specific chain for pools defaults to Ethereum\n    :param string? services: Select type of service\n    :param string? tokensCategory: Select tokens category\n    :param boolean? noImpLoss: Select pools without impermanent loss \n    '''\n    return await self._request_rapid_api('rapi_defi_watch_pools_all',kwargs)\n        "
    },
    "rapi_defi_watch_tokens_all": {
        "api_name": "tokens_all",
        "category": "Finance",
        "tool_name": "defi_watch",
        "code": "async def rapi_defi_watch_tokens_all(self,*args,**kwargs):\n    '''DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies. The API code is clear, developer-friendly, and provides daily and historical cryptocurrency information for each API request\n    \n    \n\n    :param integer? take: Select how much fields should take\n    :param string? walletId: Select specific wallet id\n    :param string? searchTerms: Select specific search terms\n    :param string? chains: Select specific blockchains for token\n    :param integer? skip: Select how much fields should skip\n    :param boolean? stableOnly: Select only stablecoins\n    :param array? ids: Select specific token id's\n    '''\n    return await self._request_rapid_api('rapi_defi_watch_tokens_all',kwargs)\n        "
    },
    "rapi_joj_finance_market_trends": {
        "api_name": "market_trends",
        "category": "Finance",
        "tool_name": "joj_finance",
        "code": "async def rapi_joj_finance_market_trends(self,*args,**kwargs):\n    '''JoJ Finance API provides real-time market quotes, international exchanges, up-to-date financial news, analytics and more.\n    \n    \n\n    :param string t: Tab name. One of these:\n\n- `indexes`\n- `most-active`\n- `gainers`\n- `losers`\n- `climate-leaders`\n- `cryptocurrencies`\n- `currencies` defaults to indexes\n    :param string? gl:  defaults to US\n    :param string? s: Subtab name. If you selected the `indexes` tab, you can choose one of the following, leave empty to get all.\n\n- `americas`\n- `europe-middle-east-africa`\n- `asia-pacific`\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_joj_finance_market_trends',kwargs)\n        "
    },
    "rapi_joj_finance_ticker": {
        "api_name": "ticker",
        "category": "Finance",
        "tool_name": "joj_finance",
        "code": "async def rapi_joj_finance_ticker(self,*args,**kwargs):\n    '''JoJ Finance API provides real-time market quotes, international exchanges, up-to-date financial news, analytics and more.\n    \n    \n\n    :param string t: Ticker symbol. For example:\n\n- `ABNB:NASDAQ`\n- `.DJI:INDEXDJX`\n- `EUR-USD`\n- `BTC-USD` defaults to ABNB:NASDAQ\n    :param string? gl:  defaults to US\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_joj_finance_ticker',kwargs)\n        "
    },
    "rapi_joj_finance_search": {
        "api_name": "search",
        "category": "Finance",
        "tool_name": "joj_finance",
        "code": "async def rapi_joj_finance_search(self,*args,**kwargs):\n    '''JoJ Finance API provides real-time market quotes, international exchanges, up-to-date financial news, analytics and more.\n    \n    \n\n    :param string q: Search query. defaults to Airbnb\n    :param string? gl:  defaults to US\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_joj_finance_search',kwargs)\n        "
    },
    "rapi_finanzoo_api_fundamentals_api_index_name": {
        "api_name": "api_index_name",
        "category": "Finance",
        "tool_name": "finanzoo_api_fundamentals",
        "code": "async def rapi_finanzoo_api_fundamentals_api_index_name(self,*args,**kwargs):\n    '''Contains fundamental stock data from the annual reports:\n\n- Diluted earnings per share\n- total capital\n- equity\n- net operating cash flow\n- capital expenditure\n- free cash flow\n- Profit loss\n- Shares outstanding\n- Net sales\n    \n    \n\n    :param string name:  defaults to ibm\n    :param boolean API_Index:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_finanzoo_api_fundamentals_api_index_name',kwargs)\n        "
    },
    "rapi_finanzoo_api_fundamentals_api_pricetobook": {
        "api_name": "api_pricetobook",
        "category": "Finance",
        "tool_name": "finanzoo_api_fundamentals",
        "code": "async def rapi_finanzoo_api_fundamentals_api_pricetobook(self,*args,**kwargs):\n    '''Contains fundamental stock data from the annual reports:\n\n- Diluted earnings per share\n- total capital\n- equity\n- net operating cash flow\n- capital expenditure\n- free cash flow\n- Profit loss\n- Shares outstanding\n- Net sales\n    \n    \n\n    :param boolean API_Pricetobook:  defaults to 1\n    :param integer shareuid:  defaults to 2\n    :param DATE (YYYY-MM-DD) to:  defaults to 2020-03-15\n    :param DATE (YYYY-MM-DD) from:  defaults to 2019-12-15\n    '''\n    return await self._request_rapid_api('rapi_finanzoo_api_fundamentals_api_pricetobook',kwargs)\n        "
    },
    "rapi_twelve_data_maxindex": {
        "api_name": "maxindex",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_maxindex(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param integer? time_period:  defaults to 9\n    :param string? series_type: Supports: `open`, `high`, `low`, `close` defaults to close\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_maxindex',kwargs)\n        "
    },
    "rapi_twelve_data_minmax": {
        "api_name": "minmax",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_minmax(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param string? series_type: Supports: `open`, `high`, `low`, `close` defaults to close\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    :param integer? time_period:  defaults to 9\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_minmax',kwargs)\n        "
    },
    "rapi_twelve_data_tema": {
        "api_name": "tema",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_tema(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param integer? time_period:  defaults to 9\n    :param string? series_type: Supports: `open`, `high`, `low`, `close` defaults to close\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_tema',kwargs)\n        "
    },
    "rapi_twelve_data_sar": {
        "api_name": "sar",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_sar(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param integer? maximum:  defaults to 0.2\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    :param integer? acceleration:  defaults to 0.02\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_sar',kwargs)\n        "
    },
    "rapi_twelve_data_t3ma": {
        "api_name": "t3ma",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_t3ma(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    :param integer? v_factor:  defaults to 0.7\n    :param string? series_type: Supports: `open`, `high`, `low`, `close` defaults to close\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param integer? time_period:  defaults to 9\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_t3ma',kwargs)\n        "
    },
    "rapi_twelve_data_crypto_exchanges": {
        "api_name": "crypto_exchanges",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_crypto_exchanges(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_crypto_exchanges',kwargs)\n        "
    },
    "rapi_twelve_data_time_series": {
        "api_name": "time_series",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_time_series(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AMZN\n    :param string interval: Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1day\n    :param integer? outputsize: Default `30` defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_time_series',kwargs)\n        "
    },
    "rapi_twelve_data_quote": {
        "api_name": "quote",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_quote(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AMZN\n    :param string interval: Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1day\n    :param integer? outputsize: Default `30` defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_quote',kwargs)\n        "
    },
    "rapi_twelve_data_ln": {
        "api_name": "ln",
        "category": "Finance",
        "tool_name": "twelve_data",
        "code": "async def rapi_twelve_data_ln(self,*args,**kwargs):\n    '''Financial data provided for developers, to enter the world markets. Instant access for real-time and historical data of stocks, forex, crypto, ETFs, indices, and more. Read more in [documentation](https://twelvedata.com/docs) and start [here](https://twelvedata.com/apikey).\n    \n    \n\n    :param string symbol: Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ... defaults to AAPL\n    :param string interval: Interval between two consecutive points in time series\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month` defaults to 1min\n    :param integer? outputsize: Default `30` when no date parameters are set, otherwise set to maximum defaults to 30\n    :param string? format: Value can be `CSV` or `JSON`\nDefault `JSON` defaults to json\n    :param string? series_type: Supports: `open`, `high`, `low`, `close` defaults to close\n    '''\n    return await self._request_rapid_api('rapi_twelve_data_ln',kwargs)\n        "
    },
    "rapi_european_central_bank_reference_rates_getreferencerates": {
        "api_name": "getreferencerates",
        "category": "Finance",
        "tool_name": "european_central_bank_reference_rates",
        "code": "async def rapi_european_central_bank_reference_rates_getreferencerates(self,*args,**kwargs):\n    '''Get the 30 Euro foreign exchange reference rates in JSON-format. Updated every day at around 16:00 CET by the ECB (European Central Bank).\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_european_central_bank_reference_rates_getreferencerates',kwargs)\n        "
    },
    "rapi_crypto_whale_transactions_blockchains": {
        "api_name": "blockchains",
        "category": "Finance",
        "tool_name": "crypto_whale_transactions",
        "code": "async def rapi_crypto_whale_transactions_blockchains(self,*args,**kwargs):\n    '''Get latest huge crypto transactions for most popular blockchains\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_whale_transactions_blockchains',kwargs)\n        "
    },
    "rapi_crypto_whale_transactions_transactions_feed": {
        "api_name": "transactions_feed",
        "category": "Finance",
        "tool_name": "crypto_whale_transactions",
        "code": "async def rapi_crypto_whale_transactions_transactions_feed(self,*args,**kwargs):\n    '''Get latest huge crypto transactions for most popular blockchains\n    \n    \n\n    :param string? s_amount_usd:  defaults to desc\n    :param string? size:  defaults to 20\n    :param string? t_blockchain:  defaults to ethereum\n    '''\n    return await self._request_rapid_api('rapi_crypto_whale_transactions_transactions_feed',kwargs)\n        "
    },
    "rapi_crypto_whale_transactions_specific_transactions": {
        "api_name": "specific_transactions",
        "category": "Finance",
        "tool_name": "crypto_whale_transactions",
        "code": "async def rapi_crypto_whale_transactions_specific_transactions(self,*args,**kwargs):\n    '''Get latest huge crypto transactions for most popular blockchains\n    \n    \n\n    :param string hash:  defaults to ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310\n    :param string symbol:  defaults to btc\n    '''\n    return await self._request_rapid_api('rapi_crypto_whale_transactions_specific_transactions',kwargs)\n        "
    },
    "rapi_bb_finance_market_get_price_chart": {
        "api_name": "market_get_price_chart",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_market_get_price_chart(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string interval: One of the followings : d1|d3|ytd|m1|m3|m6|y1|y5 defaults to y1\n    :param string id: The value of id field returned in .../market/auto-complete endpoint. defaults to inmex:ind\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_market_get_price_chart',kwargs)\n        "
    },
    "rapi_bb_finance_market_get_full": {
        "api_name": "market_get_full",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_market_get_full(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string id: The value of id field returned in .../market/auto-complete endpoint, separated by comma to query multiple stickers at once. defaults to adsmi:ind,aex:ind,co1:com,gc1:com\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_market_get_full',kwargs)\n        "
    },
    "rapi_bb_finance_market_auto_complete": {
        "api_name": "market_auto_complete",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_market_auto_complete(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string query:  defaults to apple\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_market_auto_complete',kwargs)\n        "
    },
    "rapi_bb_finance_market_get_chart": {
        "api_name": "market_get_chart",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_market_get_chart(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string interval: One of the followings : d1|d3|ytd|m1|m3|m6|y1|y5 defaults to y1\n    :param string id: The value of id field returned in .../market/auto-complete endpoint defaults to inmex:ind\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_market_get_chart',kwargs)\n        "
    },
    "rapi_bb_finance_stock_get_financials": {
        "api_name": "stock_get_financials",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_stock_get_financials(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string id: The id of stickers, use market/auto-complete API to get correct values defaults to aapl:us\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_stock_get_financials',kwargs)\n        "
    },
    "rapi_bb_finance_stories_detail": {
        "api_name": "stories_detail",
        "category": "Finance",
        "tool_name": "bb_finance",
        "code": "async def rapi_bb_finance_stories_detail(self,*args,**kwargs):\n    '''This API helps to query for all information about finance summary, stocks, quotes, movers, etc\u2026 to create a financial site/application such as bloomberg.com\n    \n    \n\n    :param string internalID: Get suitable value from .../stories/list or .../news/list or .../news/list-by-region endpoints defaults to QFY0Y6T0AFB501\n    '''\n    return await self._request_rapid_api('rapi_bb_finance_stories_detail',kwargs)\n        "
    },
    "rapi_morning_star_type_parent_get_recent_investment_rating_change": {
        "api_name": "type_parent_get_recent_investment_rating_change",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_type_parent_get_recent_investment_rating_change(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type: One of the following values : etf|fund defaults to etf\n    :param string securityId: The value of securityId field returned in .../market/v2/get-returns defaults to F00000O2CG\n    '''\n    return await self._request_rapid_api('rapi_morning_star_type_parent_get_recent_investment_rating_change',kwargs)\n        "
    },
    "rapi_morning_star_type_portfolio_get_credit_quality": {
        "api_name": "type_portfolio_get_credit_quality",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_type_portfolio_get_credit_quality(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type: One of the following values : etf|fund defaults to etf\n    :param string securityId: The value of securityId field returned in .../market/v2/get-returns defaults to F00000O2CG\n    '''\n    return await self._request_rapid_api('rapi_morning_star_type_portfolio_get_credit_quality',kwargs)\n        "
    },
    "rapi_morning_star_type_price_get_other_fees": {
        "api_name": "type_price_get_other_fees",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_type_price_get_other_fees(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type: One of the following values : etf|fund defaults to etf\n    :param string securityId: The value of securityId field returned in .../market/v2/get-returns defaults to F00000O2CG\n    '''\n    return await self._request_rapid_api('rapi_morning_star_type_price_get_other_fees',kwargs)\n        "
    },
    "rapi_morning_star_type_parent_get_highest_rated_investments": {
        "api_name": "type_parent_get_highest_rated_investments",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_type_parent_get_highest_rated_investments(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type: One of the following values : etf|fund defaults to etf\n    :param string securityId: The value of securityId field returned in .../market/v2/get-returns defaults to F00000O2CG\n    '''\n    return await self._request_rapid_api('rapi_morning_star_type_parent_get_highest_rated_investments',kwargs)\n        "
    },
    "rapi_morning_star_type_sustainability_get_product_involvement": {
        "api_name": "type_sustainability_get_product_involvement",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_type_sustainability_get_product_involvement(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string type: One of the following values : etf|fund defaults to etf\n    :param string securityId: The value of securityId field returned in .../market/v2/get-returns defaults to F00000O2CG\n    '''\n    return await self._request_rapid_api('rapi_morning_star_type_sustainability_get_product_involvement',kwargs)\n        "
    },
    "rapi_morning_star_news_list": {
        "api_name": "news_list",
        "category": "Finance",
        "tool_name": "morning_star",
        "code": "async def rapi_morning_star_news_list(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string performanceId: Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints defaults to 0P0000OQN8\n    '''\n    return await self._request_rapid_api('rapi_morning_star_news_list',kwargs)\n        "
    },
    "rapi_stocks_archive_ping": {
        "api_name": "ping",
        "category": "Finance",
        "tool_name": "stocks_archive",
        "code": "async def rapi_stocks_archive_ping(self,*args,**kwargs):\n    '''Archive data of some blue chip's tickers\n\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stocks_archive_ping',kwargs)\n        "
    },
    "rapi_stocks_archive_tickerslist": {
        "api_name": "tickerslist",
        "category": "Finance",
        "tool_name": "stocks_archive",
        "code": "async def rapi_stocks_archive_tickerslist(self,*args,**kwargs):\n    '''Archive data of some blue chip's tickers\n\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stocks_archive_tickerslist',kwargs)\n        "
    },
    "rapi_global_ethereum_price_index_gex_custom_ticker": {
        "api_name": "custom_ticker",
        "category": "Finance",
        "tool_name": "global_ethereum_price_index_gex",
        "code": "async def rapi_global_ethereum_price_index_gex_custom_ticker(self,*args,**kwargs):\n    '''Ethereum Price Index supplied by BitcoinAverage\r\n\r\nThe GEX data accessed via the BitcoinAverage API features:\r\n\r\nUp to 1 second refresh rate\r\nRates for 165+ currencies\r\nDaily rates at preferred lock in time or live rates\r\nHistoric daily rates dating back to 2010\r\nJSON or CSV formats\r\n\r\n-------\r\n\r\nAbout BitcoinAverage\r\n\r\nBitcoinAverage.com is proud of the fact that we were the first global price index in the cryptocurrency and blockchain industry, and have proven over the years to also be one of the most reliable. It is considered by most as the de facto standard bitcoin price index.\r\n\r\nIt is trusted by thousands of users across hundreds the world\u2019s leading websites, apps, services and businesses. With our historical bitcoin price data stretching back to 2010, this index is perfect for a multitude of uses from reporting, invoicing, payment processing, analysis and accounting, as well as a plethora of integrations with different types of software.\r\n\r\nUsers receive a weighted price calculated by our algorithms that factor in exchange activity, liquidity and different fee methodologies.\n    \n    \n\n    :param string inex: include - if you want the ticker to be calculated using only the exchanges sent as query parameter; exclude - if you want the price to be calculated using all exchanges, but the ones sent as query parameter. defaults to include\n    :param string symbol: ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD) defaults to ETHUSD\n    :param string? exchanges: Comma separated list of exchanges. defaults to bitfinex,bitstamp\n    '''\n    return await self._request_rapid_api('rapi_global_ethereum_price_index_gex_custom_ticker',kwargs)\n        "
    },
    "rapi_global_ethereum_price_index_gex_ticker_per_symbol": {
        "api_name": "ticker_per_symbol",
        "category": "Finance",
        "tool_name": "global_ethereum_price_index_gex",
        "code": "async def rapi_global_ethereum_price_index_gex_ticker_per_symbol(self,*args,**kwargs):\n    '''Ethereum Price Index supplied by BitcoinAverage\r\n\r\nThe GEX data accessed via the BitcoinAverage API features:\r\n\r\nUp to 1 second refresh rate\r\nRates for 165+ currencies\r\nDaily rates at preferred lock in time or live rates\r\nHistoric daily rates dating back to 2010\r\nJSON or CSV formats\r\n\r\n-------\r\n\r\nAbout BitcoinAverage\r\n\r\nBitcoinAverage.com is proud of the fact that we were the first global price index in the cryptocurrency and blockchain industry, and have proven over the years to also be one of the most reliable. It is considered by most as the de facto standard bitcoin price index.\r\n\r\nIt is trusted by thousands of users across hundreds the world\u2019s leading websites, apps, services and businesses. With our historical bitcoin price data stretching back to 2010, this index is perfect for a multitude of uses from reporting, invoicing, payment processing, analysis and accounting, as well as a plethora of integrations with different types of software.\r\n\r\nUsers receive a weighted price calculated by our algorithms that factor in exchange activity, liquidity and different fee methodologies.\n    \n    \n\n    :param string market: Possible values: global, local defaults to global\n    :param string symbol: ETH<fiat>, where <fiat> is valid ISO currency (ex. ETHUSD, ETHEUR) defaults to ETHUSD\n    '''\n    return await self._request_rapid_api('rapi_global_ethereum_price_index_gex_ticker_per_symbol',kwargs)\n        "
    },
    "rapi_global_ethereum_price_index_gex_ticker_changes": {
        "api_name": "ticker_changes",
        "category": "Finance",
        "tool_name": "global_ethereum_price_index_gex",
        "code": "async def rapi_global_ethereum_price_index_gex_ticker_changes(self,*args,**kwargs):\n    '''Ethereum Price Index supplied by BitcoinAverage\r\n\r\nThe GEX data accessed via the BitcoinAverage API features:\r\n\r\nUp to 1 second refresh rate\r\nRates for 165+ currencies\r\nDaily rates at preferred lock in time or live rates\r\nHistoric daily rates dating back to 2010\r\nJSON or CSV formats\r\n\r\n-------\r\n\r\nAbout BitcoinAverage\r\n\r\nBitcoinAverage.com is proud of the fact that we were the first global price index in the cryptocurrency and blockchain industry, and have proven over the years to also be one of the most reliable. It is considered by most as the de facto standard bitcoin price index.\r\n\r\nIt is trusted by thousands of users across hundreds the world\u2019s leading websites, apps, services and businesses. With our historical bitcoin price data stretching back to 2010, this index is perfect for a multitude of uses from reporting, invoicing, payment processing, analysis and accounting, as well as a plethora of integrations with different types of software.\r\n\r\nUsers receive a weighted price calculated by our algorithms that factor in exchange activity, liquidity and different fee methodologies.\n    \n    \n\n    :param string market: Possible values: global, local defaults to local\n    :param string symbol: Possible values: ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD) defaults to ETHUSD\n    '''\n    return await self._request_rapid_api('rapi_global_ethereum_price_index_gex_ticker_changes',kwargs)\n        "
    },
    "rapi_global_ethereum_price_index_gex_all_ticker_data": {
        "api_name": "all_ticker_data",
        "category": "Finance",
        "tool_name": "global_ethereum_price_index_gex",
        "code": "async def rapi_global_ethereum_price_index_gex_all_ticker_data(self,*args,**kwargs):\n    '''Ethereum Price Index supplied by BitcoinAverage\r\n\r\nThe GEX data accessed via the BitcoinAverage API features:\r\n\r\nUp to 1 second refresh rate\r\nRates for 165+ currencies\r\nDaily rates at preferred lock in time or live rates\r\nHistoric daily rates dating back to 2010\r\nJSON or CSV formats\r\n\r\n-------\r\n\r\nAbout BitcoinAverage\r\n\r\nBitcoinAverage.com is proud of the fact that we were the first global price index in the cryptocurrency and blockchain industry, and have proven over the years to also be one of the most reliable. It is considered by most as the de facto standard bitcoin price index.\r\n\r\nIt is trusted by thousands of users across hundreds the world\u2019s leading websites, apps, services and businesses. With our historical bitcoin price data stretching back to 2010, this index is perfect for a multitude of uses from reporting, invoicing, payment processing, analysis and accounting, as well as a plethora of integrations with different types of software.\r\n\r\nUsers receive a weighted price calculated by our algorithms that factor in exchange activity, liquidity and different fee methodologies.\n    \n    \n\n    :param string market: Possible values: global, local defaults to local\n    :param string? crypto: valid value: ETH defaults to ETH\n    :param string? fiat: Comma separated list of ISO currency codes (ex. USD,EUR) defaults to USD,EUR\n    '''\n    return await self._request_rapid_api('rapi_global_ethereum_price_index_gex_all_ticker_data',kwargs)\n        "
    },
    "rapi_quandl_get_metadata_for_a_time_series_database": {
        "api_name": "get_metadata_for_a_time_series_database",
        "category": "Finance",
        "tool_name": "quandl",
        "code": "async def rapi_quandl_get_metadata_for_a_time_series_database(self,*args,**kwargs):\n    '''The premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl\u2019s platform is used by over 400,000 people, including analysts from the world\u2019s top hedge funds, asset managers and investment banks, see https://docs.quandl.com/docs/in-depth-usage\n    \n    \n\n    :param string database_code: The code for the database this time-series belongs to defaults to WIKI\n    :param string return_format: json, xml or csv defaults to json\n    '''\n    return await self._request_rapid_api('rapi_quandl_get_metadata_for_a_time_series_database',kwargs)\n        "
    },
    "rapi_quandl_get_time_series_data": {
        "api_name": "get_time_series_data",
        "category": "Finance",
        "tool_name": "quandl",
        "code": "async def rapi_quandl_get_time_series_data(self,*args,**kwargs):\n    '''The premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl\u2019s platform is used by over 400,000 people, including analysts from the world\u2019s top hedge funds, asset managers and investment banks, see https://docs.quandl.com/docs/in-depth-usage\n    \n    \n\n    :param string return_format: How you want the data returned (json, xml, or csv) defaults to json\n    :param string dataset_code: The code for this time-series defaults to FB\n    :param string database_code: The code for the database this time-series belongs to defaults to WIKI\n    '''\n    return await self._request_rapid_api('rapi_quandl_get_time_series_data',kwargs)\n        "
    },
    "rapi_global_stock_market_api_data_get_major_commodities_by_price": {
        "api_name": "get_major_commodities_by_price",
        "category": "Finance",
        "tool_name": "global_stock_market_api_data",
        "code": "async def rapi_global_stock_market_api_data_get_major_commodities_by_price(self,*args,**kwargs):\n    '''This API is your gateway for information on world financial markets with respect to country wise. Included are World Stock Markets, Indices Futures, Commodities and much more in future.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_stock_market_api_data_get_major_commodities_by_price',kwargs)\n        "
    },
    "rapi_global_stock_market_api_data_get_global_indices_by_technical": {
        "api_name": "get_global_indices_by_technical",
        "category": "Finance",
        "tool_name": "global_stock_market_api_data",
        "code": "async def rapi_global_stock_market_api_data_get_global_indices_by_technical(self,*args,**kwargs):\n    '''This API is your gateway for information on world financial markets with respect to country wise. Included are World Stock Markets, Indices Futures, Commodities and much more in future.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_stock_market_api_data_get_global_indices_by_technical',kwargs)\n        "
    },
    "rapi_global_stock_market_api_data_get_global_indices_by_price": {
        "api_name": "get_global_indices_by_price",
        "category": "Finance",
        "tool_name": "global_stock_market_api_data",
        "code": "async def rapi_global_stock_market_api_data_get_global_indices_by_price(self,*args,**kwargs):\n    '''This API is your gateway for information on world financial markets with respect to country wise. Included are World Stock Markets, Indices Futures, Commodities and much more in future.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_stock_market_api_data_get_global_indices_by_price',kwargs)\n        "
    },
    "rapi_ca_lottery_fantasy_5_recent": {
        "api_name": "fantasy_5_recent",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_fantasy_5_recent(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_fantasy_5_recent',kwargs)\n        "
    },
    "rapi_ca_lottery_daily_4_recent": {
        "api_name": "daily_4_recent",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_daily_4_recent(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_daily_4_recent',kwargs)\n        "
    },
    "rapi_ca_lottery_daily_3_recent": {
        "api_name": "daily_3_recent",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_daily_3_recent(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_daily_3_recent',kwargs)\n        "
    },
    "rapi_ca_lottery_daily_derby_recent": {
        "api_name": "daily_derby_recent",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_daily_derby_recent(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_daily_derby_recent',kwargs)\n        "
    },
    "rapi_ca_lottery_powerball": {
        "api_name": "powerball",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_powerball(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_powerball',kwargs)\n        "
    },
    "rapi_ca_lottery_mega_millions": {
        "api_name": "mega_millions",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_mega_millions(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_mega_millions',kwargs)\n        "
    },
    "rapi_ca_lottery_super_lotto_plus": {
        "api_name": "super_lotto_plus",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_super_lotto_plus(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_super_lotto_plus',kwargs)\n        "
    },
    "rapi_ca_lottery_fantasy_5": {
        "api_name": "fantasy_5",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_fantasy_5(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_fantasy_5',kwargs)\n        "
    },
    "rapi_ca_lottery_daily_4": {
        "api_name": "daily_4",
        "category": "Finance",
        "tool_name": "ca_lottery",
        "code": "async def rapi_ca_lottery_daily_4(self,*args,**kwargs):\n    '''California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ca_lottery_daily_4',kwargs)\n        "
    },
    "rapi_global_market_indices_data_indices": {
        "api_name": "indices",
        "category": "Finance",
        "tool_name": "global_market_indices_data",
        "code": "async def rapi_global_market_indices_data_indices(self,*args,**kwargs):\n    '''Get statistical data for the major global indices (SP500, DJI,FTSE100, DAX, IBEX35, ASX200)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_market_indices_data_indices',kwargs)\n        "
    },
    "rapi_stock_and_options_trading_data_provider_options": {
        "api_name": "options",
        "category": "Finance",
        "tool_name": "stock_and_options_trading_data_provider",
        "code": "async def rapi_stock_and_options_trading_data_provider_options(self,*args,**kwargs):\n    '''No. 1 rated U.S listed stock and options data provider with the lowest cost. The cloud based API has a simple interface and return easy to consume data in JSON format for options prices.\n    \n    \n\n    :param string ticker: A ticker for U.S. Trading Stocks and ETF defaults to aapl\n    '''\n    return await self._request_rapid_api('rapi_stock_and_options_trading_data_provider_options',kwargs)\n        "
    },
    "rapi_fund_transfer_resendotpft": {
        "api_name": "resendotpft",
        "category": "Finance",
        "tool_name": "fund_transfer",
        "code": "async def rapi_fund_transfer_resendotpft(self,*args,**kwargs):\n    '''This document details out the technical integration approach of FUND TRANSFER and merchants. This document refers to the server APIs.\n    \n    \n\n    :param string Body: Give customerMobileNo in json format defaults to {   \"name\": \"xyz\",   \"customerMobileNo\": \"9999999999\" }\n    '''\n    return await self._request_rapid_api('rapi_fund_transfer_resendotpft',kwargs)\n        "
    },
    "rapi_fund_transfer_getbankdetailsft": {
        "api_name": "getbankdetailsft",
        "category": "Finance",
        "tool_name": "fund_transfer",
        "code": "async def rapi_fund_transfer_getbankdetailsft(self,*args,**kwargs):\n    '''This document details out the technical integration approach of FUND TRANSFER and merchants. This document refers to the server APIs.\n    \n    \n\n    :param string bankcode: \n    '''\n    return await self._request_rapid_api('rapi_fund_transfer_getbankdetailsft',kwargs)\n        "
    },
    "rapi_credit_card_prediction_credit_limit": {
        "api_name": "credit_limit",
        "category": "Finance",
        "tool_name": "credit_card_prediction",
        "code": "async def rapi_credit_card_prediction_credit_limit(self,*args,**kwargs):\n    '''At Credit Card, we know that your time is valuable. That\u2019s why we offer a fast and easy way to get the information you need. With our new API, you can get the data you need in seconds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_credit_card_prediction_credit_limit',kwargs)\n        "
    },
    "rapi_credit_card_prediction_months_on_book": {
        "api_name": "months_on_book",
        "category": "Finance",
        "tool_name": "credit_card_prediction",
        "code": "async def rapi_credit_card_prediction_months_on_book(self,*args,**kwargs):\n    '''At Credit Card, we know that your time is valuable. That\u2019s why we offer a fast and easy way to get the information you need. With our new API, you can get the data you need in seconds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_credit_card_prediction_months_on_book',kwargs)\n        "
    },
    "rapi_credit_card_prediction_attrition_flag": {
        "api_name": "attrition_flag",
        "category": "Finance",
        "tool_name": "credit_card_prediction",
        "code": "async def rapi_credit_card_prediction_attrition_flag(self,*args,**kwargs):\n    '''At Credit Card, we know that your time is valuable. That\u2019s why we offer a fast and easy way to get the information you need. With our new API, you can get the data you need in seconds\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_credit_card_prediction_attrition_flag',kwargs)\n        "
    },
    "rapi_crypto_and_forex_rates_api_assetinfo": {
        "api_name": "api_assetinfo",
        "category": "Finance",
        "tool_name": "crypto_and_forex_rates",
        "code": "async def rapi_crypto_and_forex_rates_api_assetinfo(self,*args,**kwargs):\n    '''Get rates for forex USD base and crypto USDT base\n    \n    \n\n    :param string symbol:  defaults to eur\n    '''\n    return await self._request_rapid_api('rapi_crypto_and_forex_rates_api_assetinfo',kwargs)\n        "
    },
    "rapi_crypto_and_forex_rates_getprices": {
        "api_name": "getprices",
        "category": "Finance",
        "tool_name": "crypto_and_forex_rates",
        "code": "async def rapi_crypto_and_forex_rates_getprices(self,*args,**kwargs):\n    '''Get rates for forex USD base and crypto USDT base\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_and_forex_rates_getprices',kwargs)\n        "
    },
    "rapi_crypto_and_forex_rates_getassets": {
        "api_name": "getassets",
        "category": "Finance",
        "tool_name": "crypto_and_forex_rates",
        "code": "async def rapi_crypto_and_forex_rates_getassets(self,*args,**kwargs):\n    '''Get rates for forex USD base and crypto USDT base\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_and_forex_rates_getassets',kwargs)\n        "
    },
    "rapi_loan_amortization_calculator_calculate_repayment_schedule": {
        "api_name": "calculate_repayment_schedule",
        "category": "Finance",
        "tool_name": "loan_amortization_calculator",
        "code": "async def rapi_loan_amortization_calculator_calculate_repayment_schedule(self,*args,**kwargs):\n    '''This API calculates Amortized loan repayment with details.\n    \n    \n\n    :param string installmentCount: \n    :param string principalAmount: \n    :param string annualInterestRate: \n    :param string startDate: \n    :param string? repaymentInterval: default: 'month'\n    '''\n    return await self._request_rapid_api('rapi_loan_amortization_calculator_calculate_repayment_schedule',kwargs)\n        "
    },
    "rapi_webit_blockchain_estimate_gas": {
        "api_name": "estimate_gas",
        "category": "Finance",
        "tool_name": "webit_blockchain",
        "code": "async def rapi_webit_blockchain_estimate_gas(self,*args,**kwargs):\n    '''Get blockchain data from Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.\n    \n    \n\n    :param string to: Target address the action is performed \\\\\\\"to\\\\\\\".\n\nThis can be another wallet address simulating an amount transferring to. defaults to 0xab5801a7d398351b8be11c439e05c5b3259aec9b\n    :param ENUM? chain: Blockchain to estimage gas price for.\n\nSupported values:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.\n    :param string? from: Source wallet address the operation is performed \\\\\\\"from\\\\\\\". defaults to 0xab5801a7d398351b8be11c439e05c5b3259aec9b\n    :param string? amount:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_webit_blockchain_estimate_gas',kwargs)\n        "
    },
    "rapi_webit_blockchain_gas_price": {
        "api_name": "gas_price",
        "category": "Finance",
        "tool_name": "webit_blockchain",
        "code": "async def rapi_webit_blockchain_gas_price(self,*args,**kwargs):\n    '''Get blockchain data from Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.\n    \n    \n\n    :param ENUM? chain: Blockchain to get current gas price for.\n\nSupported values:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.\n    '''\n    return await self._request_rapid_api('rapi_webit_blockchain_gas_price',kwargs)\n        "
    },
    "rapi_webit_blockchain_get_latest_current_block": {
        "api_name": "get_latest_current_block",
        "category": "Finance",
        "tool_name": "webit_blockchain",
        "code": "async def rapi_webit_blockchain_get_latest_current_block(self,*args,**kwargs):\n    '''Get blockchain data from Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.\n    \n    \n\n    :param ENUM? chain: Blockchain to get latest block currently being mined.\n\nSupported values:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `solana`;\n- `polygon-mumbai`.\n    '''\n    return await self._request_rapid_api('rapi_webit_blockchain_get_latest_current_block',kwargs)\n        "
    },
    "rapi_webit_blockchain_generate_wallet": {
        "api_name": "generate_wallet",
        "category": "Finance",
        "tool_name": "webit_blockchain",
        "code": "async def rapi_webit_blockchain_generate_wallet(self,*args,**kwargs):\n    '''Get blockchain data from Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.\n    \n    \n\n    :param ENUM? chain: Blockchain to generate wallet for.\n\nGenerated wallet can be used to sign transactions or imported into MetaMask and other wallet applications through the returned `private_key`.\n\nSupported values:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.\n\nIf no parameter is provided, `ethereum` parameter is set to default.\n    '''\n    return await self._request_rapid_api('rapi_webit_blockchain_generate_wallet',kwargs)\n        "
    },
    "rapi_synthetic_financial_data_get_financial_time_series_daily": {
        "api_name": "get_financial_time_series_daily",
        "category": "Finance",
        "tool_name": "synthetic_financial_data",
        "code": "async def rapi_synthetic_financial_data_get_financial_time_series_daily(self,*args,**kwargs):\n    '''Provides synthetic financial datasets that can be used in the development of algorithmic trading models.\n    \n    \n\n    :param string symbol:  defaults to 0008\n    :param string asset_class:  defaults to equity\n    :param string? size:  defaults to full\n    '''\n    return await self._request_rapid_api('rapi_synthetic_financial_data_get_financial_time_series_daily',kwargs)\n        "
    },
    "rapi_seeking_alpha_articles_v2_list_trending": {
        "api_name": "articles_v2_list_trending",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_articles_v2_list_trending(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param integer? since: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'until' parameter to filter data by date range\n    :param integer? until: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'since' parameter to filter data by date range\n    :param integer? size: The number of items per response (max 40) defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_articles_v2_list_trending',kwargs)\n        "
    },
    "rapi_seeking_alpha_news_v2_list_trending": {
        "api_name": "news_v2_list_trending",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_news_v2_list_trending(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param integer? size: The number of items per response (max 40) defaults to 20\n    :param integer? since: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'until' parameter to filter data by date range\n    :param integer? until: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'since' parameter to filter data by date range\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_news_v2_list_trending',kwargs)\n        "
    },
    "rapi_seeking_alpha_transcripts_v2_list": {
        "api_name": "transcripts_v2_list",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_transcripts_v2_list(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param string id: Symbol to query for data, only one is allowed at a time. defaults to aapl\n    :param integer? size: The number of items per response (max 40) defaults to 20\n    :param integer? number: Page index for paging purpose defaults to 1\n    :param integer? until: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'since' parameter to filter data by date range\n    :param integer? since: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'until' parameter to filter data by date range\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_transcripts_v2_list',kwargs)\n        "
    },
    "rapi_seeking_alpha_press_releases_v2_list": {
        "api_name": "press_releases_v2_list",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_press_releases_v2_list(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param string id: Symbol to query for data, only one is allowed at a time. defaults to aapl\n    :param integer? size: The number of items per response (max 40) defaults to 20\n    :param integer? number: Page index for paging purpose defaults to 1\n    :param integer? until: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'since' parameter to filter data by date range\n    :param integer? since: Unix timestamp (Epoch timestamp), ex : 1636693199\nMaybe use together with 'until' parameter to filter data by date range\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_press_releases_v2_list',kwargs)\n        "
    },
    "rapi_seeking_alpha_auto_complete_deprecated": {
        "api_name": "auto_complete_deprecated",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_auto_complete_deprecated(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param string term: Any word or phrase that you are familiar with defaults to apple\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_auto_complete_deprecated',kwargs)\n        "
    },
    "rapi_seeking_alpha_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_v2_auto_complete(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param string query: Any word or phrase that you are familiar with defaults to apple\n    :param string? type: One of the following : people|symbols|pages. Separated by comma for multiple options defaults to people,symbols,pages\n    :param integer? size: The number items per response (10 is maximum) defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_v2_auto_complete',kwargs)\n        "
    },
    "rapi_seeking_alpha_comments_list_deprecated": {
        "api_name": "comments_list_deprecated",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_comments_list_deprecated(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param integer id: The value of id returned in .../articles/list or .../articles/list-trending or .../articles/list-wall-street-breakfast endpoints defaults to 4405526\n    :param integer? parent_count: For paging purpose (max 20) defaults to 20\n    :param string? sort: Order by newest : -top_parent_id | Order by oldest : leave empty defaults to -top_parent_id\n    :param integer? from_id: Leave empty to load the first page or get suitable value of the last comment id returned right in this endpoint with parentId being \\\"null\\\" to load the next page defaults to 88004158\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_comments_list_deprecated',kwargs)\n        "
    },
    "rapi_seeking_alpha_news_get_details": {
        "api_name": "news_get_details",
        "category": "Finance",
        "tool_name": "seeking_alpha",
        "code": "async def rapi_seeking_alpha_news_get_details(self,*args,**kwargs):\n    '''Query for news, market moving, price quotes, chart, indices, analysis from investors and experts, etc...\n    \n    \n\n    :param integer id: The value of id returned in .../news/list or .../news/list-trending endpoint defaults to 3577036\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_news_get_details',kwargs)\n        "
    },
    "rapi_freedom_finance_quarterly_income_statements": {
        "api_name": "quarterly_income_statements",
        "category": "Finance",
        "tool_name": "freedom_finance",
        "code": "async def rapi_freedom_finance_quarterly_income_statements(self,*args,**kwargs):\n    '''Financial data for over 75,000 stocks on over 75 exchanges. Download conveniently formatted financial statements, dividends, end of day prices and more. Need higher usage, custom integration or additional features? Contact us for custom pricing.\n    \n    \n\n    :param string Symbol:  defaults to MSFT\n    '''\n    return await self._request_rapid_api('rapi_freedom_finance_quarterly_income_statements',kwargs)\n        "
    },
    "rapi_freedom_finance_yearly_income_statements": {
        "api_name": "yearly_income_statements",
        "category": "Finance",
        "tool_name": "freedom_finance",
        "code": "async def rapi_freedom_finance_yearly_income_statements(self,*args,**kwargs):\n    '''Financial data for over 75,000 stocks on over 75 exchanges. Download conveniently formatted financial statements, dividends, end of day prices and more. Need higher usage, custom integration or additional features? Contact us for custom pricing.\n    \n    \n\n    :param string Symbol:  defaults to MSFT\n    '''\n    return await self._request_rapid_api('rapi_freedom_finance_yearly_income_statements',kwargs)\n        "
    },
    "rapi_freedom_finance_yearly_cashflow_statements": {
        "api_name": "yearly_cashflow_statements",
        "category": "Finance",
        "tool_name": "freedom_finance",
        "code": "async def rapi_freedom_finance_yearly_cashflow_statements(self,*args,**kwargs):\n    '''Financial data for over 75,000 stocks on over 75 exchanges. Download conveniently formatted financial statements, dividends, end of day prices and more. Need higher usage, custom integration or additional features? Contact us for custom pricing.\n    \n    \n\n    :param string Symbol:  defaults to MSFT\n    '''\n    return await self._request_rapid_api('rapi_freedom_finance_yearly_cashflow_statements',kwargs)\n        "
    },
    "rapi_freedom_finance_stock_splits": {
        "api_name": "stock_splits",
        "category": "Finance",
        "tool_name": "freedom_finance",
        "code": "async def rapi_freedom_finance_stock_splits(self,*args,**kwargs):\n    '''Financial data for over 75,000 stocks on over 75 exchanges. Download conveniently formatted financial statements, dividends, end of day prices and more. Need higher usage, custom integration or additional features? Contact us for custom pricing.\n    \n    \n\n    :param string Symbol:  defaults to MSFT\n    :param string? OrderBy:  defaults to Ascending\n    '''\n    return await self._request_rapid_api('rapi_freedom_finance_stock_splits',kwargs)\n        "
    },
    "rapi_freedom_finance_list_exchanges": {
        "api_name": "list_exchanges",
        "category": "Finance",
        "tool_name": "freedom_finance",
        "code": "async def rapi_freedom_finance_list_exchanges(self,*args,**kwargs):\n    '''Financial data for over 75,000 stocks on over 75 exchanges. Download conveniently formatted financial statements, dividends, end of day prices and more. Need higher usage, custom integration or additional features? Contact us for custom pricing.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_freedom_finance_list_exchanges',kwargs)\n        "
    },
    "rapi_financial_modeling_prep_companies_balance_sheet_statements": {
        "api_name": "companies_balance_sheet_statements",
        "category": "Finance",
        "tool_name": "financial_modeling_prep",
        "code": "async def rapi_financial_modeling_prep_companies_balance_sheet_statements(self,*args,**kwargs):\n    '''Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.   More docs on : https://financialmodelingprep.com/developer/docs\n    \n    \n\n    :param string symbol: symbol name defaults to AAPL\n    :param string apikey:  defaults to rapid_api\n    '''\n    return await self._request_rapid_api('rapi_financial_modeling_prep_companies_balance_sheet_statements',kwargs)\n        "
    },
    "rapi_financial_modeling_prep_companies_profile": {
        "api_name": "companies_profile",
        "category": "Finance",
        "tool_name": "financial_modeling_prep",
        "code": "async def rapi_financial_modeling_prep_companies_profile(self,*args,**kwargs):\n    '''Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.   More docs on : https://financialmodelingprep.com/developer/docs\n    \n    \n\n    :param string symbol: symbol names defaults to AAPL\n    :param string apikey:  defaults to rapid_api\n    '''\n    return await self._request_rapid_api('rapi_financial_modeling_prep_companies_profile',kwargs)\n        "
    },
    "rapi_financial_modeling_prep_stock_quote_price": {
        "api_name": "stock_quote_price",
        "category": "Finance",
        "tool_name": "financial_modeling_prep",
        "code": "async def rapi_financial_modeling_prep_stock_quote_price(self,*args,**kwargs):\n    '''Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.   More docs on : https://financialmodelingprep.com/developer/docs\n    \n    \n\n    :param string symbol: symbol names defaults to AAPL\n    :param string? apikey:  defaults to rapidapi\n    '''\n    return await self._request_rapid_api('rapi_financial_modeling_prep_stock_quote_price',kwargs)\n        "
    },
    "rapi_financial_modeling_prep_earning_call_transcript_api_premium": {
        "api_name": "earning_call_transcript_api_premium",
        "category": "Finance",
        "tool_name": "financial_modeling_prep",
        "code": "async def rapi_financial_modeling_prep_earning_call_transcript_api_premium(self,*args,**kwargs):\n    '''Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.   More docs on : https://financialmodelingprep.com/developer/docs\n    \n    \n\n    :param string symbol: symbol name defaults to AAPL\n    :param string apikey:  defaults to rapid_api\n    :param integer? quarter:  defaults to 4\n    :param integer? year:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_financial_modeling_prep_earning_call_transcript_api_premium',kwargs)\n        "
    },
    "rapi_financial_modeling_prep_companies_cash_flow_statements": {
        "api_name": "companies_cash_flow_statements",
        "category": "Finance",
        "tool_name": "financial_modeling_prep",
        "code": "async def rapi_financial_modeling_prep_companies_cash_flow_statements(self,*args,**kwargs):\n    '''Financial Modeling Prep API is a Financial statements API, a Free stock API and a historical quotes API.   More docs on : https://financialmodelingprep.com/developer/docs\n    \n    \n\n    :param string symbol: symbol name defaults to AAPL\n    :param string? apikey:  defaults to rapid_api\n    '''\n    return await self._request_rapid_api('rapi_financial_modeling_prep_companies_cash_flow_statements',kwargs)\n        "
    },
    "rapi_quotient_equity_earnings": {
        "api_name": "equity_earnings",
        "category": "Finance",
        "tool_name": "quotient",
        "code": "async def rapi_quotient_equity_earnings(self,*args,**kwargs):\n    '''Market data API for intraday (1-minutes) data, end-of-day data, options data, crypto, forex, live prices, fundamental data, trading signal, and much more, on various assets (Stocks, ETFs, Funds, Indices, Forex, Cryptocurrencies, etc), on worldwide stock exchanges (us, canada, australia, uk and europe).\n    \n    \n\n    :param string to: The query end date (supported format is : **YYYY-mm-dd**), e.g., `2020-04-17`. defaults to 2020-04-17\n    :param string from: The query start date (supported format is : **YYYY-mm-dd**), e.g., `2019-01-01`. defaults to 2019-01-01\n    :param string symbol: The symbol of the asset to look for, e.g., `AAPL` (Apple Inc), `T` (AT&T Inc). defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_quotient_equity_earnings',kwargs)\n        "
    },
    "rapi_chaingateway_io_listaddresses": {
        "api_name": "listaddresses",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_listaddresses(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_listaddresses',kwargs)\n        "
    },
    "rapi_chaingateway_io_getexchangerate": {
        "api_name": "getexchangerate",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_getexchangerate(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_getexchangerate',kwargs)\n        "
    },
    "rapi_chaingateway_io_gettokenbalance": {
        "api_name": "gettokenbalance",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_gettokenbalance(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_gettokenbalance',kwargs)\n        "
    },
    "rapi_chaingateway_io_getgasprice": {
        "api_name": "getgasprice",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_getgasprice(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_getgasprice',kwargs)\n        "
    },
    "rapi_chaingateway_io_newaddress": {
        "api_name": "newaddress",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_newaddress(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_newaddress',kwargs)\n        "
    },
    "rapi_chaingateway_io_deleteaddress": {
        "api_name": "deleteaddress",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_deleteaddress(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_deleteaddress',kwargs)\n        "
    },
    "rapi_chaingateway_io_getblock": {
        "api_name": "getblock",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_getblock(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_getblock',kwargs)\n        "
    },
    "rapi_chaingateway_io_exportaddress": {
        "api_name": "exportaddress",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_exportaddress(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_exportaddress',kwargs)\n        "
    },
    "rapi_chaingateway_io_importaddress": {
        "api_name": "importaddress",
        "category": "Finance",
        "tool_name": "chaingateway_io",
        "code": "async def rapi_chaingateway_io_importaddress(self,*args,**kwargs):\n    '''Blockchain API to connect Web 2.0 with Web 3.0 in an easy way. We provide all tools you need to manage non custody wallets, send and receive transactions, use web hooks to receive notifications on deposits or check balances of tokens in an automatic way. All major blockchains are supported, as well as the tokens on them. Our API is secure and made in Germany.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chaingateway_io_importaddress',kwargs)\n        "
    },
    "rapi_currency_converter_by_api_ninjas_v1_convertcurrency": {
        "api_name": "v1_convertcurrency",
        "category": "Finance",
        "tool_name": "currency_converter_by_api_ninjas",
        "code": "async def rapi_currency_converter_by_api_ninjas_v1_convertcurrency(self,*args,**kwargs):\n    '''Convert currencies using the latest exchange rates. See more info at https://api-ninjas.com/api/convertcurrency.\n    \n    \n\n    :param integer amount: Amount of currency to convert. defaults to 5000\n    :param string have: Currency you currently hold. Must be 3-character currency code (e.g. **USD**). defaults to USD\n    :param string want: Currency you want to convert to. Must be 3-character currency code (e.g. **EUR**) defaults to EUR\n    '''\n    return await self._request_rapid_api('rapi_currency_converter_by_api_ninjas_v1_convertcurrency',kwargs)\n        "
    },
    "rapi_form_5500_data_form5500_planname": {
        "api_name": "form5500_planname",
        "category": "Finance",
        "tool_name": "form_5500_data",
        "code": "async def rapi_form_5500_data_form5500_planname(self,*args,**kwargs):\n    '''Get information from all US Corporate Retirement plans from the Form 5500.\n    \n    \n\n    :param integer EIN:  defaults to 311334685\n    '''\n    return await self._request_rapid_api('rapi_form_5500_data_form5500_planname',kwargs)\n        "
    },
    "rapi_exchange_rate_symbols": {
        "api_name": "symbols",
        "category": "Finance",
        "tool_name": "exchange_rate",
        "code": "async def rapi_exchange_rate_symbols(self,*args,**kwargs):\n    '''An API for current and historical foreign exchange rates published by the European Central Bank.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exchange_rate_symbols',kwargs)\n        "
    },
    "rapi_exchange_rate_historical": {
        "api_name": "historical",
        "category": "Finance",
        "tool_name": "exchange_rate",
        "code": "async def rapi_exchange_rate_historical(self,*args,**kwargs):\n    '''An API for current and historical foreign exchange rates published by the European Central Bank.\n    \n    \n\n    :param string date:  defaults to 2000-01-03\n    '''\n    return await self._request_rapid_api('rapi_exchange_rate_historical',kwargs)\n        "
    },
    "rapi_exchange_rate_latest": {
        "api_name": "latest",
        "category": "Finance",
        "tool_name": "exchange_rate",
        "code": "async def rapi_exchange_rate_latest(self,*args,**kwargs):\n    '''An API for current and historical foreign exchange rates published by the European Central Bank.\n    \n    \n\n    :param string? base:  defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_exchange_rate_latest',kwargs)\n        "
    },
    "rapi_exchange_rate_convert": {
        "api_name": "convert",
        "category": "Finance",
        "tool_name": "exchange_rate",
        "code": "async def rapi_exchange_rate_convert(self,*args,**kwargs):\n    '''An API for current and historical foreign exchange rates published by the European Central Bank.\n    \n    \n\n    :param string to:  defaults to USD\n    :param string from:  defaults to EUR\n    '''\n    return await self._request_rapid_api('rapi_exchange_rate_convert',kwargs)\n        "
    },
    "rapi_nfts_by_address_getnfts_metadata": {
        "api_name": "getnfts_metadata",
        "category": "Finance",
        "tool_name": "nfts_by_address",
        "code": "async def rapi_nfts_by_address_getnfts_metadata(self,*args,**kwargs):\n    '''Get all NFTs owned by an address at scale\n    \n    \n\n    :param string contractAddress: Address of NFT contract. Example for Bored APES: 0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb\n defaults to 0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\n    :param integer tokenId: Id for NFT defaults to 4671\n    '''\n    return await self._request_rapid_api('rapi_nfts_by_address_getnfts_metadata',kwargs)\n        "
    },
    "rapi_credit_card_number_validator_validate_card_number": {
        "api_name": "validate_card_number",
        "category": "Finance",
        "tool_name": "credit_card_number_validator",
        "code": "async def rapi_credit_card_number_validator_validate_card_number(self,*args,**kwargs):\n    '''Enter the first few all numbers of a Credit Card to determine if it is valid and its details. By simply providing the first few numbers or a complete credit card number, this API will validate what card type it is and if it is likely valid using algorithms.\n    \n    \n\n    :param string cardnumber:  defaults to 4682776017589385\n    '''\n    return await self._request_rapid_api('rapi_credit_card_number_validator_validate_card_number',kwargs)\n        "
    },
    "rapi_transaction_getpaymentinitiationinstructionsummary": {
        "api_name": "getpaymentinitiationinstructionsummary",
        "category": "Finance",
        "tool_name": "transaction",
        "code": "async def rapi_transaction_getpaymentinitiationinstructionsummary(self,*args,**kwargs):\n    '''Get transaction details\n    \n    \n\n    :param integer? limit: The maximum number of items to return in a page. If unspecified, the default limit will be returned. If the limit specified is greater than the maximum permitted by the API, the API will return the maximum permitted limit. Each API should define *maximum and *default limit. defaults to 25\n    :param string? end-to-end-identification: Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. The consumer of the API can filter the response using end to end identification when the \"uetr\" is not available. defaults to ABC/ABC-13679/2021-01-20\n    :param integer? offset: Specifies the offset / starting point in the list of all available items, starting from which results will be returned. The numeric offset identifies the page token, allowing users to advance to the next page in the collection. The value 0 (zero) identifies the first page of entry.\n    :param string? creation-to-date: The query parameter can use either a specific creation-from-date or date range in the form of creation-from-date and creation-to-date. For a specific date creation-to-date must not be provided. The result will be filtered on creation_date_time. If a origin server do not support the time component, it can ignore the time component. Expressed in YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS format. For example - 2021-04-01T12:01:01.000 or 2021-04-01T12:01:01 defaults to 2022-05-31\n    :param string? requested-execution-date: Date and time at which the payment is executed and the cash is at the disposal of the credit account owner. The result will be filtered on requested_execution_date. If a origin server do not support the time component, it can ignore the time component. Expressed in YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS format. For example - 2021-04-01T12:01:01.000 or 2021-04-01T12:01:01 defaults to 2021-09-15\n    :param string? instructed-amount: Specifies the amount as ordered in the payment initiation instruction before any deduction.\n defaults to 1000000.00\n    :param string? creation-from-date: The query parameter can use either a specific creation-from-date or date range in the form of creation-from-date and creation-to-date. The result will be filtered on creation_date_time. If a origin server do not support the time component, it can ignore the time component. Expressed in YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS format. For example - 2021-04-01T12:01:01.000 or 2021-04-01T12:01:01 defaults to 2022-05-30\n    '''\n    return await self._request_rapid_api('rapi_transaction_getpaymentinitiationinstructionsummary',kwargs)\n        "
    },
    "rapi_transaction_getdirectdebitinitiationinstructionsummary": {
        "api_name": "getdirectdebitinitiationinstructionsummary",
        "category": "Finance",
        "tool_name": "transaction",
        "code": "async def rapi_transaction_getdirectdebitinitiationinstructionsummary(self,*args,**kwargs):\n    '''Get transaction details\n    \n    \n\n    :param string? creation-from-date: The query parameter can use either a specific creation-from-date or date range in the form of creation-from-date and creation-to-date. The result will be filtered on creation_date_time. If a origin server do not support the time component, it can ignore the time component. Expressed in YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS format. For example - 2021-04-01T12:01:01.000 or 2021-04-01T12:01:01 defaults to 2022-05-30\n    :param integer? offset: Specifies the offset / starting point in the list of all available items, starting from which results will be returned. The numeric offset identifies the page token, allowing users to advance to the next page in the collection. The value 0 (zero) identifies the first page of entry.\n    :param string? creation-to-date: The query parameter can use either a specific creation-from-date or date range in the form of creation-from-date and creation-to-date. For a specific date creation-to-date must not be provided. The result will be filtered on creation_date_time. If a origin server do not support the time component, it can ignore the time component. Expressed in YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS format. For example - 2021-04-01T12:01:01.000 or 2021-04-01T12:01:01 defaults to 2022-05-31\n    :param string? end-to-end-identification: Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. The consumer of the API can filter the response using end to end identification when the \"uetr\" is not available. defaults to ABC/ABC-13679/2021-01-20\n    :param integer? limit: The maximum number of items to return in a page. If unspecified, the default limit will be returned. If the limit specified is greater than the maximum permitted by the API, the API will return the maximum permitted limit. Each API should define *maximum and *default limit. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_transaction_getdirectdebitinitiationinstructionsummary',kwargs)\n        "
    },
    "rapi_transaction_getpaymentinitiationinstruction": {
        "api_name": "getpaymentinitiationinstruction",
        "category": "Finance",
        "tool_name": "transaction",
        "code": "async def rapi_transaction_getpaymentinitiationinstruction(self,*args,**kwargs):\n    '''Get transaction details\n    \n    \n\n    :param string uetr: An RFC4122 UID used as a unique Payment Instruction Identifier. defaults to 7dca010b-fc3b-496c-b8a4-36ffd78f674d\n    '''\n    return await self._request_rapid_api('rapi_transaction_getpaymentinitiationinstruction',kwargs)\n        "
    },
    "rapi_litecoin_wallet_generate_litecoin_wallet": {
        "api_name": "generate_litecoin_wallet",
        "category": "Finance",
        "tool_name": "litecoin_wallet",
        "code": "async def rapi_litecoin_wallet_generate_litecoin_wallet(self,*args,**kwargs):\n    '''litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!\n    \n    \n\n    :param string? mnemonic: string <= 500 characters ( 24 words )\nOPTIONAL\nMnemonic to use for generation of extended public and private keys.\nexample :\n'next one hip dutch manage shock glide gospel arch vacuum ski biology hood tip wall invite flame cycle file clinic head among device autumn' defaults to next one hip dutch manage shock glide gospel arch vacuum ski biology hood tip wall invite flame cycle file clinic head among device autumn\n    '''\n    return await self._request_rapid_api('rapi_litecoin_wallet_generate_litecoin_wallet',kwargs)\n        "
    },
    "rapi_litecoin_wallet_get_mempool_transactions": {
        "api_name": "get_mempool_transactions",
        "category": "Finance",
        "tool_name": "litecoin_wallet",
        "code": "async def rapi_litecoin_wallet_get_mempool_transactions(self,*args,**kwargs):\n    '''litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_litecoin_wallet_get_mempool_transactions',kwargs)\n        "
    },
    "rapi_litecoin_wallet_get_litecoin_block_by_hash_or_height": {
        "api_name": "get_litecoin_block_by_hash_or_height",
        "category": "Finance",
        "tool_name": "litecoin_wallet",
        "code": "async def rapi_litecoin_wallet_get_litecoin_block_by_hash_or_height(self,*args,**kwargs):\n    '''litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!\n    \n    \n\n    :param string hash:  defaults to 1234314\n    '''\n    return await self._request_rapid_api('rapi_litecoin_wallet_get_litecoin_block_by_hash_or_height',kwargs)\n        "
    },
    "rapi_litecoin_wallet_get_litecoin_block_hash": {
        "api_name": "get_litecoin_block_hash",
        "category": "Finance",
        "tool_name": "litecoin_wallet",
        "code": "async def rapi_litecoin_wallet_get_litecoin_block_hash(self,*args,**kwargs):\n    '''litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!\n    \n    \n\n    :param integer i:  defaults to 23\n    '''\n    return await self._request_rapid_api('rapi_litecoin_wallet_get_litecoin_block_hash',kwargs)\n        "
    },
    "rapi_litecoin_wallet_get_litecoin_blockchain_information": {
        "api_name": "get_litecoin_blockchain_information",
        "category": "Finance",
        "tool_name": "litecoin_wallet",
        "code": "async def rapi_litecoin_wallet_get_litecoin_blockchain_information(self,*args,**kwargs):\n    '''litecoin blockchain wallet that support creating wallets & addresses, sending and receiving Litecoins and many more!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_litecoin_wallet_get_litecoin_blockchain_information',kwargs)\n        "
    },
    "rapi_wallet_get_user_wallets": {
        "api_name": "get_user_wallets",
        "category": "Finance",
        "tool_name": "wallet",
        "code": "async def rapi_wallet_get_user_wallets(self,*args,**kwargs):\n    '''This is your digital wallet, you can create, share, update values...\n    \n    \n\n    :param string userId:  defaults to 6492f433139a79cae6a3149e\n    '''\n    return await self._request_rapid_api('rapi_wallet_get_user_wallets',kwargs)\n        "
    },
    "rapi_wallet_get_user_by_id": {
        "api_name": "get_user_by_id",
        "category": "Finance",
        "tool_name": "wallet",
        "code": "async def rapi_wallet_get_user_by_id(self,*args,**kwargs):\n    '''This is your digital wallet, you can create, share, update values...\n    \n    \n\n    :param string id:  defaults to 6492f433139a79cae6a3149e\n    '''\n    return await self._request_rapid_api('rapi_wallet_get_user_by_id',kwargs)\n        "
    },
    "rapi_yahoo_finance_historical_stock_prices_gethistoricalprices": {
        "api_name": "gethistoricalprices",
        "category": "Finance",
        "tool_name": "yahoo_finance_historical_stock_prices",
        "code": "async def rapi_yahoo_finance_historical_stock_prices_gethistoricalprices(self,*args,**kwargs):\n    '''Download historical stock prices found as found on Yahoo Finance quickly and efficiently.\n\nA list of avaliable stock prices can be found here: https://filedn.com/lLxy9lfpvrpRqRrS9ftjPcF/lookupOverview.csv\n    \n    \n\n    :param string symbol: The *symbol* parameter, e.g. **AAPL**. defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_historical_stock_prices_gethistoricalprices',kwargs)\n        "
    },
    "rapi_stock_and_options_options": {
        "api_name": "options",
        "category": "Finance",
        "tool_name": "stock_and_options",
        "code": "async def rapi_stock_and_options_options(self,*args,**kwargs):\n    '''No. 1 rated U.S listed stock and options data provider with the lowest cost. The cloud based API has a simple interface and return easy to consume data in JSON format for options prices.\n    \n    \n\n    :param string ticker:  defaults to aapl\n    '''\n    return await self._request_rapid_api('rapi_stock_and_options_options',kwargs)\n        "
    },
    "rapi_stock_and_options_straddle": {
        "api_name": "straddle",
        "category": "Finance",
        "tool_name": "stock_and_options",
        "code": "async def rapi_stock_and_options_straddle(self,*args,**kwargs):\n    '''No. 1 rated U.S listed stock and options data provider with the lowest cost. The cloud based API has a simple interface and return easy to consume data in JSON format for options prices.\n    \n    \n\n    :param string ticker:  defaults to msft\n    '''\n    return await self._request_rapid_api('rapi_stock_and_options_straddle',kwargs)\n        "
    },
    "rapi_walnuttradingdash_free_access": {
        "api_name": "free_access",
        "category": "Finance",
        "tool_name": "walnuttradingdash",
        "code": "async def rapi_walnuttradingdash_free_access(self,*args,**kwargs):\n    '''Algo trading dashboard to backtest strategies with over 170 digital assets (crypto, forex, stocks) and 30 technical analysis strategies. Performance metrics, charts, and interactive visualizations available in real-time.\n    \n    \n\n    :param string get_dash_url:  defaults to True\n    '''\n    return await self._request_rapid_api('rapi_walnuttradingdash_free_access',kwargs)\n        "
    },
    "rapi_hryvna_today_v1_rates_landing": {
        "api_name": "v1_rates_landing",
        "category": "Finance",
        "tool_name": "hryvna_today",
        "code": "async def rapi_hryvna_today_v1_rates_landing(self,*args,**kwargs):\n    '''Exchange rates from Hryvna Today\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hryvna_today_v1_rates_landing',kwargs)\n        "
    },
    "rapi_hryvna_today_v1_rates_today": {
        "api_name": "v1_rates_today",
        "category": "Finance",
        "tool_name": "hryvna_today",
        "code": "async def rapi_hryvna_today_v1_rates_today(self,*args,**kwargs):\n    '''Exchange rates from Hryvna Today\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hryvna_today_v1_rates_today',kwargs)\n        "
    },
    "rapi_hryvna_today_v1_rates_averages": {
        "api_name": "v1_rates_averages",
        "category": "Finance",
        "tool_name": "hryvna_today",
        "code": "async def rapi_hryvna_today_v1_rates_averages(self,*args,**kwargs):\n    '''Exchange rates from Hryvna Today\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hryvna_today_v1_rates_averages',kwargs)\n        "
    },
    "rapi_hryvna_today_v1_rates_banks": {
        "api_name": "v1_rates_banks",
        "category": "Finance",
        "tool_name": "hryvna_today",
        "code": "async def rapi_hryvna_today_v1_rates_banks(self,*args,**kwargs):\n    '''Exchange rates from Hryvna Today\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hryvna_today_v1_rates_banks',kwargs)\n        "
    },
    "rapi_webull_stock_get_stat": {
        "api_name": "stock_get_stat",
        "category": "Finance",
        "tool_name": "webull",
        "code": "async def rapi_webull_stock_get_stat(self,*args,**kwargs):\n    '''Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com\n    \n    \n\n    :param integer tickerId: The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...  defaults to 913255598\n    '''\n    return await self._request_rapid_api('rapi_webull_stock_get_stat',kwargs)\n        "
    },
    "rapi_webull_stock_get_press_releases": {
        "api_name": "stock_get_press_releases",
        "category": "Finance",
        "tool_name": "webull",
        "code": "async def rapi_webull_stock_get_press_releases(self,*args,**kwargs):\n    '''Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com\n    \n    \n\n    :param integer tickerId: The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...  defaults to 913256135\n    :param integer? lastAnnouncementId: For paging purpose, the last announcement Id returned right in this endpoint, leave empty for the first query.\n    :param integer? limit: For paging purpose, the number of items per response defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_webull_stock_get_press_releases',kwargs)\n        "
    },
    "rapi_webull_stock_get_dividends_splits": {
        "api_name": "stock_get_dividends_splits",
        "category": "Finance",
        "tool_name": "webull",
        "code": "async def rapi_webull_stock_get_dividends_splits(self,*args,**kwargs):\n    '''Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com\n    \n    \n\n    :param integer tickerId: The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...  defaults to 913255598\n    '''\n    return await self._request_rapid_api('rapi_webull_stock_get_dividends_splits',kwargs)\n        "
    },
    "rapi_seeking_alpha_finance_markets_global_indices": {
        "api_name": "markets_global_indices",
        "category": "Finance",
        "tool_name": "seeking_alpha_finance",
        "code": "async def rapi_seeking_alpha_finance_markets_global_indices(self,*args,**kwargs):\n    '''Seeking Alpha is the world\u2019s largest investing community. Seeking Alpha\u2019s content has unparalleled breadth and depth: from stocks, ETFs and mutual funds to commodities and cryptocurrency.   **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_finance_markets_global_indices',kwargs)\n        "
    },
    "rapi_seeking_alpha_finance_markets_equities_groups": {
        "api_name": "markets_equities_groups",
        "category": "Finance",
        "tool_name": "seeking_alpha_finance",
        "code": "async def rapi_seeking_alpha_finance_markets_equities_groups(self,*args,**kwargs):\n    '''Seeking Alpha is the world\u2019s largest investing community. Seeking Alpha\u2019s content has unparalleled breadth and depth: from stocks, ETFs and mutual funds to commodities and cryptocurrency.   **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string category:  defaults to countries-equity\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_finance_markets_equities_groups',kwargs)\n        "
    },
    "rapi_seeking_alpha_finance_markets_day_watch": {
        "api_name": "markets_day_watch",
        "category": "Finance",
        "tool_name": "seeking_alpha_finance",
        "code": "async def rapi_seeking_alpha_finance_markets_day_watch(self,*args,**kwargs):\n    '''Seeking Alpha is the world\u2019s largest investing community. Seeking Alpha\u2019s content has unparalleled breadth and depth: from stocks, ETFs and mutual funds to commodities and cryptocurrency.   **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_finance_markets_day_watch',kwargs)\n        "
    },
    "rapi_seeking_alpha_finance_press_releases_data": {
        "api_name": "press_releases_data",
        "category": "Finance",
        "tool_name": "seeking_alpha_finance",
        "code": "async def rapi_seeking_alpha_finance_press_releases_data(self,*args,**kwargs):\n    '''Seeking Alpha is the world\u2019s largest investing community. Seeking Alpha\u2019s content has unparalleled breadth and depth: from stocks, ETFs and mutual funds to commodities and cryptocurrency.   **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param integer press_releases_id: Press releases ID defaults to 18970018\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_finance_press_releases_data',kwargs)\n        "
    },
    "rapi_seeking_alpha_finance_symbols_quotes": {
        "api_name": "symbols_quotes",
        "category": "Finance",
        "tool_name": "seeking_alpha_finance",
        "code": "async def rapi_seeking_alpha_finance_symbols_quotes(self,*args,**kwargs):\n    '''Seeking Alpha is the world\u2019s largest investing community. Seeking Alpha\u2019s content has unparalleled breadth and depth: from stocks, ETFs and mutual funds to commodities and cryptocurrency.   **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string symbol_ids: Symbol IDs defaults to 590019,581328\n    '''\n    return await self._request_rapid_api('rapi_seeking_alpha_finance_symbols_quotes',kwargs)\n        "
    },
    "rapi_optimism_block": {
        "api_name": "block",
        "category": "Finance",
        "tool_name": "optimism",
        "code": "async def rapi_optimism_block(self,*args,**kwargs):\n    '''All-In-One access to the Optimism blockchain data!\n\nMore features are coming soon!\n\nFeedback and feature requests should be sent to:\nangleitnerchristoph123@gmail.com\n    \n    \n\n    :param string block: Block you want to scan! defaults to 123\n    :param string? network: Specify wich network you wanna use! (mainnet/testnet)\n    '''\n    return await self._request_rapid_api('rapi_optimism_block',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_get_a_list_of_latest_profiles": {
        "api_name": "get_a_list_of_latest_profiles",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_get_a_list_of_latest_profiles(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_get_a_list_of_latest_profiles',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_get_a_list_of_most_watched_profiles": {
        "api_name": "get_a_list_of_most_watched_profiles",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_get_a_list_of_most_watched_profiles(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_get_a_list_of_most_watched_profiles',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_get_platform_by_slug": {
        "api_name": "get_platform_by_slug",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_get_platform_by_slug(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    :param string slug: Platform Slug defaults to ethereum\n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_get_platform_by_slug',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_get_profile_by_slug": {
        "api_name": "get_profile_by_slug",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_get_profile_by_slug(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    :param string slug: Slug of Coin defaults to bitcoin\n    :param boolean? explorers: 'true' if you want to display the list of explorers defaults to false\n    :param boolean? community: 'true' if you want to display the community metrics related to this coin defaults to false\n    :param boolean? repo: 'true' if you want to display the source code repo stats related to this coin defaults to false\n    :param boolean? contracts: 'true' if you want to display the smart contracts and audit data related to this coin defaults to false\n    :param boolean? news: 'true' if you want to display the latest 5 news stories related to this coin defaults to false\n    :param boolean? flags: 'true' if you want to display the red flags related to this coin defaults to false\n    :param boolean? exchanges: 'true' if you want to display the list of exchanges defaults to false\n    :param boolean? links: 'true' if you want to display the link to social media and project websites and artifacts defaults to false\n    :param boolean? tags: 'true' if you want to display the tags related to this coin defaults to false\n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_get_profile_by_slug',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_get_a_list_of_trending_profiles": {
        "api_name": "get_a_list_of_trending_profiles",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_get_a_list_of_trending_profiles(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_get_a_list_of_trending_profiles',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_list_all_profiles": {
        "api_name": "list_all_profiles",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_list_all_profiles(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    :param integer? page: the page number which to start from defaults to 1\n    :param boolean? community: 'true' if you want to display the community metrics related to this coin defaults to false\n    :param string? name: search all profile names. Search for more than 1 name by using a comma seperated list. defaults to bitcoin\n    :param boolean? repo: 'true' if you want to display the source code repo stats related to this coin defaults to false\n    :param boolean? explorers: 'true' if you want to display the list of explorers defaults to false\n    :param boolean? flags: 'true' if you want to display the red flags related to this coin defaults to false\n    :param string? symbol: search all profile symbols. Search for more than 1 slug by using a comma seperated list. defaults to BTC,ETH\n    :param boolean? exchanges: 'true' if you want to display the list of exchanges defaults to false\n    :param string? slug: search all profile slugs. Search for more than 1 slug by using a comma seperated list. defaults to bitcoin,ethereum\n    :param boolean? tags: 'true' if you want to display the tags related to this coin defaults to false\n    :param integer? limit: limit the number of records returned defaults to 10\n    :param boolean? contracts: 'true' if you want to display the smart contracts and audit data related to this coin defaults to false\n    :param boolean? links: 'true' if you want to display the link to social media and project websites and artifacts defaults to false\n    :param boolean? news: 'true' if you want to display the latest 5 news stories related to this coin defaults to false\n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_list_all_profiles',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_list_all_platforms": {
        "api_name": "list_all_platforms",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_list_all_platforms(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    :param string? symbol: search all platform symbolds. Wildcard searches can be performed by using the * character e.g. symbol=*TH. You can search for more than one item at a time by sending a comma seperated list e.g. symbol=TOK,*TH defaults to ETH\n    :param integer? limit: limit the number of records returned defaults to 10\n    :param string? name: search all platform names. Wildcard searches can be performed by using the * character e.g. name=*platform. You can search for more than one item at a time by sending a comma seperated list e.g. name=ethereum,*token defaults to ethereum\n    :param integer? page: the page number which to start from defaults to 10\n    :param string? slug: search all platform slugs. Wildcard searches can be performed by using the * character e.g. slug=*token. You can search for more than one item at a time by sending a comma seperated list e.g. slug=ethereum,*token defaults to ethereum\n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_list_all_platforms',kwargs)\n        "
    },
    "rapi_is_this_coin_a_scam_list_all_coins": {
        "api_name": "list_all_coins",
        "category": "Finance",
        "tool_name": "is_this_coin_a_scam",
        "code": "async def rapi_is_this_coin_a_scam_list_all_coins(self,*args,**kwargs):\n    '''Get access to real-time data on all major cryptocurrencies, including ratings, red flags, trending analytics, community metrics and more.\n    \n    \n\n    :param string? symbol: search all coin symbols. Wildcard searches can be performed by using the * character e.g. symbol=*BTC. You can search for more than one item at a time by sending a comma seperated list e.g. symbol=BTC,*TH\n    :param string? name: search all coin names. Wildcard searches can be performed by using the * character e.g. name=*coin. You can search for more than one item at a time by sending a comma seperated list e.g. name=bitcoin,*eth\n    :param integer? page: the page number which to start from defaults to 1\n    :param string? slug: search all coin slugs. Wildcard searches can be performed by using the * character e.g. slug=*coin. You can search for more than one item at a time by sending a comma seperated list e.g. slug=bitcoin,*eth defaults to bitcoin,ethereum\n    :param integer? limit: limit the number of records returned defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_is_this_coin_a_scam_list_all_coins',kwargs)\n        "
    },
    "rapi_yh_finance_v2_stock_get_daily_dividend_data": {
        "api_name": "stock_get_daily_dividend_data",
        "category": "Finance",
        "tool_name": "yh_finance_v2",
        "code": "async def rapi_yh_finance_v2_stock_get_daily_dividend_data(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string symbol: Ticker Symbol ( Ex. \\\\\\\\\"AAPL\\\\\\\\\" is Ticker symbol for Apple Inc. on the stock market ) defaults to AAPL\n    :param string end_date: end_date should be entered in the 'YYYY-MM-DD' format and is the last day that data will be pulled for.\n defaults to 2022-03-03\n    :param string start_date: start_date should be entered in the 'YYYY-MM-DD' format and is the first day that data will be pulled for. defaults to 2022-03-02\n    :param string? region: One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S defaults to US\n    '''\n    return await self._request_rapid_api('rapi_yh_finance_v2_stock_get_daily_dividend_data',kwargs)\n        "
    },
    "rapi_yh_finance_v2_stock_get_stock_historical_price_data": {
        "api_name": "stock_get_stock_historical_price_data",
        "category": "Finance",
        "tool_name": "yh_finance_v2",
        "code": "async def rapi_yh_finance_v2_stock_get_stock_historical_price_data(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string symbol: Ticker Symbol ( Ex. \\\\\\\\\\\\\\\\\\\"AAPL\\\\\\\\\\\\\\\\\\\" is Ticker symbol for Apple Inc. on the stock market ) defaults to AAPL\n    :param string start_date: start_date should be entered in the 'YYYY-MM-DD' format and is the first day that data will be pulled for.\n defaults to 2022-03-02\n    :param string time_interval: time_interval can be either 'daily', 'weekly', or 'monthly' defaults to daily\n    :param string end_date: end_date should be entered in the 'YYYY-MM-DD' format and is the last day that data will be pulled for.\n defaults to 2022-03-03\n    :param string? region:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_yh_finance_v2_stock_get_stock_historical_price_data',kwargs)\n        "
    },
    "rapi_yh_finance_v2_stock_get_financial_stmts": {
        "api_name": "stock_get_financial_stmts",
        "category": "Finance",
        "tool_name": "yh_finance_v2",
        "code": "async def rapi_yh_finance_v2_stock_get_financial_stmts(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string frequency: frequency can be either 'annual' or 'quarterly'.\n defaults to quarterly\n    :param string symbol: Ticker Symbol ( Ex. \\\\\\\\\"AAPL\\\\\\\\\" is Ticker symbol for Apple Inc. on the stock market ) defaults to AAPL\n    :param string statement_type: statement_type can be 'income', 'balance', 'cash' or a list of several.\n defaults to income\n    :param string? region: One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S defaults to US\n    '''\n    return await self._request_rapid_api('rapi_yh_finance_v2_stock_get_financial_stmts',kwargs)\n        "
    },
    "rapi_yh_finance_v2_stock_get_stock_price": {
        "api_name": "stock_get_stock_price",
        "category": "Finance",
        "tool_name": "yh_finance_v2",
        "code": "async def rapi_yh_finance_v2_stock_get_stock_price(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string symbol: Ticker Symbol ( Ex. \\\\\\\\\"AAPL\\\\\\\\\" is Ticker symbol for Apple Inc. on the stock market ) defaults to AAPL\n    :param string? region: One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S defaults to US\n    '''\n    return await self._request_rapid_api('rapi_yh_finance_v2_stock_get_stock_price',kwargs)\n        "
    },
    "rapi_currency_ex_currency_list": {
        "api_name": "currency_list",
        "category": "Finance",
        "tool_name": "currency_ex",
        "code": "async def rapi_currency_ex_currency_list(self,*args,**kwargs):\n    '''Provide full range of currency exchange rate.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_ex_currency_list',kwargs)\n        "
    },
    "rapi_currency_ex_get_exchange_rate": {
        "api_name": "get_exchange_rate",
        "category": "Finance",
        "tool_name": "currency_ex",
        "code": "async def rapi_currency_ex_get_exchange_rate(self,*args,**kwargs):\n    '''Provide full range of currency exchange rate.\n    \n    \n\n    :param ENUM to: \n    :param ENUM from: \n    '''\n    return await self._request_rapid_api('rapi_currency_ex_get_exchange_rate',kwargs)\n        "
    },
    "rapi_daily_sec_financial_statement_dataset_basic_daily": {
        "api_name": "basic_daily",
        "category": "Finance",
        "tool_name": "daily_sec_financial_statement_dataset",
        "code": "async def rapi_daily_sec_financial_statement_dataset_basic_daily(self,*args,**kwargs):\n    '''While the \"SEC Financial Statement Dataset\" https://www.sec.gov/dera/data/financial-statement-data-sets.html is only provided after each quarter, this API provides the data in the same structure daily.\n\n**Have a look at the tutorials on how to use the API**\n\n**BETA**\nThis API is in beta, as I try to find out if there is demand for that data. During the beta phase, I will only update the data once or twice a week.\n\nIf you want to stay informed about the project or give me some feedback, please...\n    \n    \n\n    :param string date:  defaults to 2022-11-10\n    '''\n    return await self._request_rapid_api('rapi_daily_sec_financial_statement_dataset_basic_daily',kwargs)\n        "
    },
    "rapi_daily_sec_financial_statement_dataset_premium_daily": {
        "api_name": "premium_daily",
        "category": "Finance",
        "tool_name": "daily_sec_financial_statement_dataset",
        "code": "async def rapi_daily_sec_financial_statement_dataset_premium_daily(self,*args,**kwargs):\n    '''While the \"SEC Financial Statement Dataset\" https://www.sec.gov/dera/data/financial-statement-data-sets.html is only provided after each quarter, this API provides the data in the same structure daily.\n\n**Have a look at the tutorials on how to use the API**\n\n**BETA**\nThis API is in beta, as I try to find out if there is demand for that data. During the beta phase, I will only update the data once or twice a week.\n\nIf you want to stay informed about the project or give me some feedback, please...\n    \n    \n\n    :param string date:  defaults to 2022-11-10\n    '''\n    return await self._request_rapid_api('rapi_daily_sec_financial_statement_dataset_premium_daily',kwargs)\n        "
    },
    "rapi_daily_sec_financial_statement_dataset_content": {
        "api_name": "content",
        "category": "Finance",
        "tool_name": "daily_sec_financial_statement_dataset",
        "code": "async def rapi_daily_sec_financial_statement_dataset_content(self,*args,**kwargs):\n    '''While the \"SEC Financial Statement Dataset\" https://www.sec.gov/dera/data/financial-statement-data-sets.html is only provided after each quarter, this API provides the data in the same structure daily.\n\n**Have a look at the tutorials on how to use the API**\n\n**BETA**\nThis API is in beta, as I try to find out if there is demand for that data. During the beta phase, I will only update the data once or twice a week.\n\nIf you want to stay informed about the project or give me some feedback, please...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_daily_sec_financial_statement_dataset_content',kwargs)\n        "
    },
    "rapi_yh_finance_complete_upgrade_downgrade_history": {
        "api_name": "upgrade_downgrade_history",
        "category": "Finance",
        "tool_name": "yh_finance_complete",
        "code": "async def rapi_yh_finance_complete_upgrade_downgrade_history(self,*args,**kwargs):\n    '''This API helps you to query stocks, quotes, movers and other financial summary.\n    \n    \n\n    :param string to: Date format: yyyy-mm-dd\n    :param string from: Date format: yyyy-mm-dd\n    :param string symbol: ticker... i.e: TSLA\n    :param string? period: \n    '''\n    return await self._request_rapid_api('rapi_yh_finance_complete_upgrade_downgrade_history',kwargs)\n        "
    },
    "rapi_yh_finance_complete_balansheet_financials": {
        "api_name": "balansheet_financials",
        "category": "Finance",
        "tool_name": "yh_finance_complete",
        "code": "async def rapi_yh_finance_complete_balansheet_financials(self,*args,**kwargs):\n    '''This API helps you to query stocks, quotes, movers and other financial summary.\n    \n    \n\n    :param string from: Date\n    :param string to: Date\n    :param string symbol: i.e: TSLA\n    :param string? period: \n    '''\n    return await self._request_rapid_api('rapi_yh_finance_complete_balansheet_financials',kwargs)\n        "
    },
    "rapi_piotrosky_f_score_getfscore": {
        "api_name": "getfscore",
        "category": "Finance",
        "tool_name": "piotrosky_f_score",
        "code": "async def rapi_piotrosky_f_score_getfscore(self,*args,**kwargs):\n    '''The Piotroski score is a discrete score between zero and nine that reflects nine criteria used to determine the strength of a firm's financial position. The Piotroski score is used to determine the best value stocks, with nine being the best and zero being the worst.\n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_piotrosky_f_score_getfscore',kwargs)\n        "
    },
    "rapi_changenow_crypto_exchange_list_of_available_currencies": {
        "api_name": "list_of_available_currencies",
        "category": "Finance",
        "tool_name": "changenow_crypto_exchange",
        "code": "async def rapi_changenow_crypto_exchange_list_of_available_currencies(self,*args,**kwargs):\n    '''Empower your business by letting your customers buy, sell, and exchange crypto. You will earn % on every transaction. 400+ cryptocurrencies and 75+ fiats are available. IMPORTANT: You should get your API key by creating a partner's account here: changenow.io/affiliate. Or email us: partners@changenow.io. \n    \n    \n\n    :param string? fixedRate: (Optional) Set true to return only  for the currencies  available on a fixed-rate flow defaults to true\n    :param string? active: (Optional) Set true to return only active currencies defaults to true\n    '''\n    return await self._request_rapid_api('rapi_changenow_crypto_exchange_list_of_available_currencies',kwargs)\n        "
    },
    "rapi_currency_converter_pro_latest_rates": {
        "api_name": "latest_rates",
        "category": "Finance",
        "tool_name": "currency_converter_pro",
        "code": "async def rapi_currency_converter_pro_latest_rates(self,*args,**kwargs):\n    '''Accurate and Reliable Data for 170 World Currencies. Exchange rates are updated every hour..\n    \n    \n\n    :param string base:  defaults to USD\n    :param string? currencies: You can pass individual currencies for faster response.\nExample:\n\nEUR,RSD,AUD,CAD\n    '''\n    return await self._request_rapid_api('rapi_currency_converter_pro_latest_rates',kwargs)\n        "
    },
    "rapi_currency_converter_pro_currencies": {
        "api_name": "currencies",
        "category": "Finance",
        "tool_name": "currency_converter_pro",
        "code": "async def rapi_currency_converter_pro_currencies(self,*args,**kwargs):\n    '''Accurate and Reliable Data for 170 World Currencies. Exchange rates are updated every hour..\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_converter_pro_currencies',kwargs)\n        "
    },
    "rapi_currency_converter_pro_convert_currency": {
        "api_name": "convert_currency",
        "category": "Finance",
        "tool_name": "currency_converter_pro",
        "code": "async def rapi_currency_converter_pro_convert_currency(self,*args,**kwargs):\n    '''Accurate and Reliable Data for 170 World Currencies. Exchange rates are updated every hour..\n    \n    \n\n    :param integer amount:  defaults to 100\n    :param string from:  defaults to USD\n    :param string to:  defaults to EUR\n    '''\n    return await self._request_rapid_api('rapi_currency_converter_pro_convert_currency',kwargs)\n        "
    },
    "rapi_sentitrade_daily_sentiment": {
        "api_name": "daily_sentiment",
        "category": "Finance",
        "tool_name": "sentitrade",
        "code": "async def rapi_sentitrade_daily_sentiment(self,*args,**kwargs):\n    '''JSON web API that performs NLP sentiment analysis on news headlines for stocks and cryptocurrencies, grading daily collective news sentiment. DISCLAIMER: this prototype version currently only supports Bitcoin (BTC) and Ethereum (ETH). Consider donating to support full development at main site: https://www.sentitrade.net/\n    \n    \n\n    :param string symbol:  defaults to BTC\n    :param DATE (YYYY-MM-DD) date:  defaults to 2023-01-01\n    '''\n    return await self._request_rapid_api('rapi_sentitrade_daily_sentiment',kwargs)\n        "
    },
    "rapi_bravenewcoin_assetbyid": {
        "api_name": "assetbyid",
        "category": "Finance",
        "tool_name": "bravenewcoin",
        "code": "async def rapi_bravenewcoin_assetbyid(self,*args,**kwargs):\n    '''Latest and historic cryptocurrency market data\n    \n    \n\n    :param string id: The unique resource identifier (UUID) of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f\n    '''\n    return await self._request_rapid_api('rapi_bravenewcoin_assetbyid',kwargs)\n        "
    },
    "rapi_bravenewcoin_marketbyid": {
        "api_name": "marketbyid",
        "category": "Finance",
        "tool_name": "bravenewcoin",
        "code": "async def rapi_bravenewcoin_marketbyid(self,*args,**kwargs):\n    '''Latest and historic cryptocurrency market data\n    \n    \n\n    :param string id: UUID. The unique resource identifier of a market e.g.  BTC/USD = 6ea0d2ef-6dd0-4adb-ad32-f7f3db58ccbe\n    '''\n    return await self._request_rapid_api('rapi_bravenewcoin_marketbyid',kwargs)\n        "
    },
    "rapi_bravenewcoin_market": {
        "api_name": "market",
        "category": "Finance",
        "tool_name": "bravenewcoin",
        "code": "async def rapi_bravenewcoin_market(self,*args,**kwargs):\n    '''Latest and historic cryptocurrency market data\n    \n    \n\n    :param string? quoteAssetId: UUID. Only return markets which contain the asset id on the quote side of the market. Supply the UUID of an asset e.g.  USD = e77b9824-126a-418e-a69c-a2e682578e94\n    :param string? baseAssetId: UUID. Only return markets which contain the asset id on the base side of the market. Supply the UUID of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f\n    '''\n    return await self._request_rapid_api('rapi_bravenewcoin_market',kwargs)\n        "
    },
    "rapi_exchangeratespro_historical_exchange_rates": {
        "api_name": "historical_exchange_rates",
        "category": "Finance",
        "tool_name": "exchangeratespro",
        "code": "async def rapi_exchangeratespro_historical_exchange_rates(self,*args,**kwargs):\n    '''Exchange rates for 185+ currencies updated every minute. Historical data back to 1999. Low latency with our global infrastructure.\n    \n    \n\n    :param DATE (YYYY-MM-DD) date: \n    '''\n    return await self._request_rapid_api('rapi_exchangeratespro_historical_exchange_rates',kwargs)\n        "
    },
    "rapi_exchangeratespro_latest_exchange_rates": {
        "api_name": "latest_exchange_rates",
        "category": "Finance",
        "tool_name": "exchangeratespro",
        "code": "async def rapi_exchangeratespro_latest_exchange_rates(self,*args,**kwargs):\n    '''Exchange rates for 185+ currencies updated every minute. Historical data back to 1999. Low latency with our global infrastructure.\n    \n    \n\n    :param ENUM? resolution: Select the resolution of the latest exchange rates. 1m will update with new rates every minute, 1h ever hour and 1d every day.\n    :param string? currencies: Provide a comma separated list of the currencies you want exchange rates for. As default all currencies are returned. ( example: USD,EUR,AUD,GBP )\n    :param string? base: Change the base currency of the returned rates. USD by default. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_exchangeratespro_latest_exchange_rates',kwargs)\n        "
    },
    "rapi_exchangeratespro_list_available_currencies": {
        "api_name": "list_available_currencies",
        "category": "Finance",
        "tool_name": "exchangeratespro",
        "code": "async def rapi_exchangeratespro_list_available_currencies(self,*args,**kwargs):\n    '''Exchange rates for 185+ currencies updated every minute. Historical data back to 1999. Low latency with our global infrastructure.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exchangeratespro_list_available_currencies',kwargs)\n        "
    },
    "rapi_bitcoin_news_get_all_bitcoin_news": {
        "api_name": "get_all_bitcoin_news",
        "category": "Finance",
        "tool_name": "bitcoin_news",
        "code": "async def rapi_bitcoin_news_get_all_bitcoin_news(self,*args,**kwargs):\n    '''An API showing all the latest news of Bitcoin around the world from all the major websites\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bitcoin_news_get_all_bitcoin_news',kwargs)\n        "
    },
    "rapi_bitcoin_news_get_individual_bitcoin_news_sources": {
        "api_name": "get_individual_bitcoin_news_sources",
        "category": "Finance",
        "tool_name": "bitcoin_news",
        "code": "async def rapi_bitcoin_news_get_individual_bitcoin_news_sources(self,*args,**kwargs):\n    '''An API showing all the latest news of Bitcoin around the world from all the major websites\n    \n    \n\n    :param string newspaperId:  defaults to coindesk\n    '''\n    return await self._request_rapid_api('rapi_bitcoin_news_get_individual_bitcoin_news_sources',kwargs)\n        "
    },
    "rapi_stock_analysis_earnings_history": {
        "api_name": "earnings_history",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_earnings_history(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_earnings_history',kwargs)\n        "
    },
    "rapi_stock_analysis_earnings_estimate": {
        "api_name": "earnings_estimate",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_earnings_estimate(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_earnings_estimate',kwargs)\n        "
    },
    "rapi_stock_analysis_earnings_revisions": {
        "api_name": "earnings_revisions",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_earnings_revisions(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_earnings_revisions',kwargs)\n        "
    },
    "rapi_stock_analysis_earnings_trend": {
        "api_name": "earnings_trend",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_earnings_trend(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_earnings_trend',kwargs)\n        "
    },
    "rapi_stock_analysis_growth_estimate": {
        "api_name": "growth_estimate",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_growth_estimate(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_growth_estimate',kwargs)\n        "
    },
    "rapi_stock_analysis_key_statistics": {
        "api_name": "key_statistics",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_key_statistics(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_key_statistics',kwargs)\n        "
    },
    "rapi_stock_analysis_revenue_estimate": {
        "api_name": "revenue_estimate",
        "category": "Finance",
        "tool_name": "stock_analysis",
        "code": "async def rapi_stock_analysis_revenue_estimate(self,*args,**kwargs):\n    '''Get company basic financials such as earnings, margin, P/E ratio, 52-week high/low,  dividend information, etc. This API also returns analysts' earnings estimates, upgrades, and downgrades.  \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_analysis_revenue_estimate',kwargs)\n        "
    },
    "rapi_crypto_currency_scraper_api_see_about_gainers_losers": {
        "api_name": "see_about_gainers_losers",
        "category": "Finance",
        "tool_name": "crypto_currency_scraper_api",
        "code": "async def rapi_crypto_currency_scraper_api_see_about_gainers_losers(self,*args,**kwargs):\n    '''A crypto currency API scraper to get the necessary data to build you application.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_currency_scraper_api_see_about_gainers_losers',kwargs)\n        "
    },
    "rapi_crypto_currency_scraper_api_see_about_nft_prices": {
        "api_name": "see_about_nft_prices",
        "category": "Finance",
        "tool_name": "crypto_currency_scraper_api",
        "code": "async def rapi_crypto_currency_scraper_api_see_about_nft_prices(self,*args,**kwargs):\n    '''A crypto currency API scraper to get the necessary data to build you application.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_currency_scraper_api_see_about_nft_prices',kwargs)\n        "
    },
    "rapi_crypto_currency_scraper_api_see_about_the_exchanges": {
        "api_name": "see_about_the_exchanges",
        "category": "Finance",
        "tool_name": "crypto_currency_scraper_api",
        "code": "async def rapi_crypto_currency_scraper_api_see_about_the_exchanges(self,*args,**kwargs):\n    '''A crypto currency API scraper to get the necessary data to build you application.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_currency_scraper_api_see_about_the_exchanges',kwargs)\n        "
    },
    "rapi_currency_exchange_fx_converter": {
        "api_name": "converter",
        "category": "Finance",
        "tool_name": "currency_exchange_fx",
        "code": "async def rapi_currency_exchange_fx_converter(self,*args,**kwargs):\n    '''Get the latest Currency rates for 100+ currencies. Updated every 60 Minutes.\n    \n    \n\n    :param string from_currency: The currency symbol from which the amount needs to be converted defaults to EUR\n    :param string to_currency: The Currency symbol in which the amount needs to be converted defaults to USD\n    :param string from_value: The Amount to be converted in base currency defaults to 1.00\n    '''\n    return await self._request_rapid_api('rapi_currency_exchange_fx_converter',kwargs)\n        "
    },
    "rapi_currency_converter_v2_convert": {
        "api_name": "convert",
        "category": "Finance",
        "tool_name": "currency_converter_v2",
        "code": "async def rapi_currency_converter_v2_convert(self,*args,**kwargs):\n    '''Accurate and reliable currency exchange rates for over 150 currencies\n    \n    \n\n    :param string to: Currency to which you are converting. defaults to BRL\n    :param string from: Currency from which you are converting. defaults to USD\n    :param integer? amount: (Optional) Amount value in From Currency. Default value is 1. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_currency_converter_v2_convert',kwargs)\n        "
    },
    "rapi_currency_converter_v2_list": {
        "api_name": "list",
        "category": "Finance",
        "tool_name": "currency_converter_v2",
        "code": "async def rapi_currency_converter_v2_list(self,*args,**kwargs):\n    '''Accurate and reliable currency exchange rates for over 150 currencies\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_currency_converter_v2_list',kwargs)\n        "
    },
    "rapi_gaialens_historical_esg_scores_gethistoricalscoresbyyear": {
        "api_name": "gethistoricalscoresbyyear",
        "category": "Finance",
        "tool_name": "gaialens_historical_esg_scores",
        "code": "async def rapi_gaialens_historical_esg_scores_gethistoricalscoresbyyear(self,*args,**kwargs):\n    '''Data-driven and transparent historical ESG scores for over 17,000 companies\n    \n    \n\n    :param string year: <= 2020 defaults to 2020\n    :param string? sedol: \n    :param string? isin: \n    :param string? companyname:  defaults to Apple Inc.\n    '''\n    return await self._request_rapid_api('rapi_gaialens_historical_esg_scores_gethistoricalscoresbyyear',kwargs)\n        "
    },
    "rapi_mboum_finance_market_undervalued_large_caps": {
        "api_name": "market_undervalued_large_caps",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_market_undervalued_large_caps(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param integer? start: Enter a start index defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_market_undervalued_large_caps',kwargs)\n        "
    },
    "rapi_mboum_finance_market_aggressive_small_caps": {
        "api_name": "market_aggressive_small_caps",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_market_aggressive_small_caps(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param integer? start: Enter a start index defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_market_aggressive_small_caps',kwargs)\n        "
    },
    "rapi_mboum_finance_market_day_losers": {
        "api_name": "market_day_losers",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_market_day_losers(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param integer? start: Enter a start index defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_market_day_losers',kwargs)\n        "
    },
    "rapi_mboum_finance_stock_insider_holders_stock": {
        "api_name": "stock_insider_holders_stock",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_stock_insider_holders_stock(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_stock_insider_holders_stock',kwargs)\n        "
    },
    "rapi_mboum_finance_stock_profile_stock": {
        "api_name": "stock_profile_stock",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_stock_profile_stock(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_stock_profile_stock',kwargs)\n        "
    },
    "rapi_mboum_finance_stock_balance_sheet_stock": {
        "api_name": "stock_balance_sheet_stock",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_stock_balance_sheet_stock(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_stock_balance_sheet_stock',kwargs)\n        "
    },
    "rapi_mboum_finance_stock_key_statistics_stock": {
        "api_name": "stock_key_statistics_stock",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_stock_key_statistics_stock(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_stock_key_statistics_stock',kwargs)\n        "
    },
    "rapi_mboum_finance_stock_financial_data_stock": {
        "api_name": "stock_financial_data_stock",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_stock_financial_data_stock(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_stock_financial_data_stock',kwargs)\n        "
    },
    "rapi_mboum_finance_market_most_watched": {
        "api_name": "market_most_watched",
        "category": "Finance",
        "tool_name": "mboum_finance",
        "code": "async def rapi_mboum_finance_market_most_watched(self,*args,**kwargs):\n    '''Mboum Finance Official API for stocks, options, ETFs, mutual funds, SEC Data, news, screeners and more! \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mboum_finance_market_most_watched',kwargs)\n        "
    },
    "rapi_corporate_supply_chain_supply_chain": {
        "api_name": "supply_chain",
        "category": "Finance",
        "tool_name": "corporate_supply_chain",
        "code": "async def rapi_corporate_supply_chain_supply_chain(self,*args,**kwargs):\n    '''Finding a company's actual suppliers and customers is often very difficult. Many companies do not want to reveal this information to their competitors.  Leveraging hybrid data sources to deliver a complete picture of company supply chain ecosystems, this Corporate Supply Chain API enables investors to construct hedges and build statistical arbitrage strategies for a given corporate supply chain.\n    \n    \n\n    :param string ticker: Enter the stock symbol for the company defaults to IBM\n    '''\n    return await self._request_rapid_api('rapi_corporate_supply_chain_supply_chain',kwargs)\n        "
    },
    "rapi_metals_prices_rates_api_carat": {
        "api_name": "carat",
        "category": "Finance",
        "tool_name": "metals_prices_rates_api",
        "code": "async def rapi_metals_prices_rates_api_carat(self,*args,**kwargs):\n    '''The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals. It allows developers to access and integrate the data into their own applications and systems. The API can be used for financial and commodity market analysis, currency conversion, and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_metals_prices_rates_api_carat',kwargs)\n        "
    },
    "rapi_metals_prices_rates_api_time_series": {
        "api_name": "time_series",
        "category": "Finance",
        "tool_name": "metals_prices_rates_api",
        "code": "async def rapi_metals_prices_rates_api_time_series(self,*args,**kwargs):\n    '''The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals. It allows developers to access and integrate the data into their own applications and systems. The API can be used for financial and commodity market analysis, currency conversion, and more.\n    \n    \n\n    :param string base: Enter the three-letter currency code or metal code of your preferred base currency. defaults to USD\n    :param string symbols: Enter the three-letter currency code or metal code of your preferred base currency. defaults to XAU\n    :param string end_date: The end date of your preferred timeframe. YYYY-MM-DD defaults to 2023-01-10\n    :param string start_date: The start date of your preferred timeframe. YYYY-MM-DD defaults to 2022-12-20\n    '''\n    return await self._request_rapid_api('rapi_metals_prices_rates_api_time_series',kwargs)\n        "
    },
    "rapi_metals_prices_rates_api_supported_symbols": {
        "api_name": "supported_symbols",
        "category": "Finance",
        "tool_name": "metals_prices_rates_api",
        "code": "async def rapi_metals_prices_rates_api_supported_symbols(self,*args,**kwargs):\n    '''The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals. It allows developers to access and integrate the data into their own applications and systems. The API can be used for financial and commodity market analysis, currency conversion, and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_metals_prices_rates_api_supported_symbols',kwargs)\n        "
    },
    "rapi_metals_prices_rates_api_historical_rates": {
        "api_name": "historical_rates",
        "category": "Finance",
        "tool_name": "metals_prices_rates_api",
        "code": "async def rapi_metals_prices_rates_api_historical_rates(self,*args,**kwargs):\n    '''The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals. It allows developers to access and integrate the data into their own applications and systems. The API can be used for financial and commodity market analysis, currency conversion, and more.\n    \n    \n\n    :param string date:  defaults to 2022-01-20\n    :param string symbols: Enter a list of comma-separated currency codes or metal codes to limit output codes. defaults to XAU\n    :param string base: Enter the three-letter currency code or metal code of your preferred base currency. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_metals_prices_rates_api_historical_rates',kwargs)\n        "
    },
    "rapi_metals_prices_rates_api_latest_rates": {
        "api_name": "latest_rates",
        "category": "Finance",
        "tool_name": "metals_prices_rates_api",
        "code": "async def rapi_metals_prices_rates_api_latest_rates(self,*args,**kwargs):\n    '''The Metals Prices Rates API provides real-time and historical metal prices and exchange rates for gold, silver, platinum, and other metals. It allows developers to access and integrate the data into their own applications and systems. The API can be used for financial and commodity market analysis, currency conversion, and more.\n    \n    \n\n    :param string symbols: Enter a list of comma-separated currency codes or metal codes to limit output codes. defaults to XAU\n    :param string base: Enter the three-letter currency code or metal code of your preferred base currency. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_metals_prices_rates_api_latest_rates',kwargs)\n        "
    },
    "rapi_crypto_grana_list_position_for_each_crypto": {
        "api_name": "list_position_for_each_crypto",
        "category": "Finance",
        "tool_name": "crypto_grana",
        "code": "async def rapi_crypto_grana_list_position_for_each_crypto(self,*args,**kwargs):\n    '''API to manage your position on crypto currency\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_grana_list_position_for_each_crypto',kwargs)\n        "
    },
    "rapi_real_time_finance_data_currency_news": {
        "api_name": "currency_news",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_currency_news(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string from_symbol: A 3-Letter currency code / symbol (ISO 4217). For example: *USD*. defaults to USD\n    :param string to_symbol: A 3-Letter currency code / symbol (ISO 4217). For example: *EUR*. defaults to EUR\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_currency_news',kwargs)\n        "
    },
    "rapi_real_time_finance_data_currency_exchange_rate": {
        "api_name": "currency_exchange_rate",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_currency_exchange_rate(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string from_symbol: A 3-Letter currency code / symbol (ISO 4217) to convert. For example: *USD*. defaults to USD\n    :param string to_symbol: A 3-Letter currency code / symbol (ISO 4217) to convert to. For example: *EUR*. defaults to EUR\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_currency_exchange_rate',kwargs)\n        "
    },
    "rapi_real_time_finance_data_stock_company_overview": {
        "api_name": "stock_company_overview",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_stock_company_overview(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`^DJI`*\n**e.g.** *`VTSAX`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_stock_company_overview',kwargs)\n        "
    },
    "rapi_real_time_finance_data_company_cash_flow": {
        "api_name": "company_cash_flow",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_company_cash_flow(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param ENUM period: Period for which to get company's cash flow.\n\n**Periods**: *QUARTERLY*, *ANNUAL*.\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`AAPL`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_company_cash_flow',kwargs)\n        "
    },
    "rapi_real_time_finance_data_company_balance_sheet": {
        "api_name": "company_balance_sheet",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_company_balance_sheet(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param ENUM period: Period for which to get company's balance sheet.\n\n**Periods**: *QUARTERLY*, *ANNUAL*.\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`AAPL`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_company_balance_sheet',kwargs)\n        "
    },
    "rapi_real_time_finance_data_company_income_statement": {
        "api_name": "company_income_statement",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_company_income_statement(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`AAPL`* defaults to AAPL:NASDAQ\n    :param ENUM period: Period for which to get company's income statement.\n\n**Periods**: *QUARTERLY*, *ANNUAL*.\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_company_income_statement',kwargs)\n        "
    },
    "rapi_real_time_finance_data_stock_news": {
        "api_name": "stock_news",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_stock_news(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string symbol: Stock symbol / ticker.\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`^DJI`*\n**e.g.** *`VTSAX`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_stock_news',kwargs)\n        "
    },
    "rapi_real_time_finance_data_stock_time_series": {
        "api_name": "stock_time_series",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_stock_time_series(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param ENUM period: Period for which to return time series and key events.\n\n**Periods:**\n- **1D** - 1 day.\n- **5D** - 5 days.\n- **1M** - 1 month.\n- **6M** - 6 months.\n- **YTD** - year-to-date.\n- **1Y** - 1 year.\n- **5Y** - 5 years.\n- **MAX** - all times.\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`^DJI`*\n**e.g.** *`VTSAX`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_stock_time_series',kwargs)\n        "
    },
    "rapi_real_time_finance_data_stock_quote": {
        "api_name": "stock_quote",
        "category": "Finance",
        "tool_name": "real_time_finance_data",
        "code": "async def rapi_real_time_finance_data_stock_quote(self,*args,**kwargs):\n    '''Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.\n    \n    \n\n    :param string symbol: Stock symbol (ticker).\n\n**e.g.** *`MSFT:NASDAQ`*\n**e.g.** *`MSFT`*\n**e.g.** *`^DJI`*\n**e.g.** *`VTSAX`* defaults to AAPL:NASDAQ\n    :param string? language: The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_real_time_finance_data_stock_quote',kwargs)\n        "
    },
    "rapi_financial_statements_balance_sheet_statement": {
        "api_name": "balance_sheet_statement",
        "category": "Finance",
        "tool_name": "financial_statements",
        "code": "async def rapi_financial_statements_balance_sheet_statement(self,*args,**kwargs):\n    '''Get standardized balance sheet, income statement, and cash flow statement for global companies going back 5 years. \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_financial_statements_balance_sheet_statement',kwargs)\n        "
    },
    "rapi_financial_statements_cash_flow_statement": {
        "api_name": "cash_flow_statement",
        "category": "Finance",
        "tool_name": "financial_statements",
        "code": "async def rapi_financial_statements_cash_flow_statement(self,*args,**kwargs):\n    '''Get standardized balance sheet, income statement, and cash flow statement for global companies going back 5 years. \n    \n    \n\n    :param string ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_financial_statements_cash_flow_statement',kwargs)\n        "
    },
    "rapi_financial_statements_income_statement": {
        "api_name": "income_statement",
        "category": "Finance",
        "tool_name": "financial_statements",
        "code": "async def rapi_financial_statements_income_statement(self,*args,**kwargs):\n    '''Get standardized balance sheet, income statement, and cash flow statement for global companies going back 5 years. \n    \n    \n\n    :param string? ticker:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_financial_statements_income_statement',kwargs)\n        "
    },
    "rapi_exchange_rates_live_get_all_currency_rates": {
        "api_name": "get_all_currency_rates",
        "category": "Finance",
        "tool_name": "exchange_rates_live",
        "code": "async def rapi_exchange_rates_live_get_all_currency_rates(self,*args,**kwargs):\n    '''An API showing all the latest currencies from official banks.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exchange_rates_live_get_all_currency_rates',kwargs)\n        "
    },
    "rapi_cryptocurrency_financial_data_trades_futures": {
        "api_name": "trades_futures",
        "category": "Finance",
        "tool_name": "cryptocurrency_financial_data",
        "code": "async def rapi_cryptocurrency_financial_data_trades_futures(self,*args,**kwargs):\n    '''Cryptocurrency financial data API for major exchanges. Candlesticks (OHLCV, VWAP, and Trade Count), Trades (tick-level). Spot and futures markets. Robust data catalog and documentation.\n    \n    \n\n    :param string market_venue: The name of an exchange or a venue defaults to BINANCE\n    :param string base: The second listed currency of a currency pair defaults to USDT\n    :param string symbol: The first listed currency of a currency pair defaults to BTC\n    :param string? expiration: The lifespan of a futures contract. Allowed values: `perpetual`(default), `weekly`, `quarterly`, `monthly` defaults to MONTHLY\n    :param string? end: End of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone defaults to 2022-10-19T11:00:00\n    :param string? delivery_date: The last day when a future contract is valid - *YYYY-MM-DD* defaults to 2022-10-28\n    :param integer? limit: Maximum number of records to return, max `10000` defaults to 100\n    :param string? start: Start of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone defaults to 2022-10-11T10:00:00\n    :param string? sort: The ordering of results: `asc` (from earliest to latest), `desc` (from latest to earliest) defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_financial_data_trades_futures',kwargs)\n        "
    },
    "rapi_cryptocurrency_financial_data_metadata": {
        "api_name": "metadata",
        "category": "Finance",
        "tool_name": "cryptocurrency_financial_data",
        "code": "async def rapi_cryptocurrency_financial_data_metadata(self,*args,**kwargs):\n    '''Cryptocurrency financial data API for major exchanges. Candlesticks (OHLCV, VWAP, and Trade Count), Trades (tick-level). Spot and futures markets. Robust data catalog and documentation.\n    \n    \n\n    :param string? asset_type:  defaults to spot\n    :param string? data_type:  defaults to metrics\n    :param string? symbol:  defaults to BTC\n    :param string? base:  defaults to USDT\n    :param string? market_venue:  defaults to BINANCE\n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_financial_data_metadata',kwargs)\n        "
    },
    "rapi_real_time_quotes_historical_crypto_price": {
        "api_name": "historical_crypto_price",
        "category": "Finance",
        "tool_name": "real_time_quotes",
        "code": "async def rapi_real_time_quotes_historical_crypto_price(self,*args,**kwargs):\n    '''Real-time and historical data of stocks, cryptocurrencies and forex based on multiple data sources such as Yahoo Finance\n    \n    \n\n    :param string target:  defaults to USD\n    :param ENUM interval: \n    :param string source:  defaults to BTC\n    '''\n    return await self._request_rapid_api('rapi_real_time_quotes_historical_crypto_price',kwargs)\n        "
    },
    "rapi_real_time_quotes_forex_symbols": {
        "api_name": "forex_symbols",
        "category": "Finance",
        "tool_name": "real_time_quotes",
        "code": "async def rapi_real_time_quotes_forex_symbols(self,*args,**kwargs):\n    '''Real-time and historical data of stocks, cryptocurrencies and forex based on multiple data sources such as Yahoo Finance\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_real_time_quotes_forex_symbols',kwargs)\n        "
    },
    "rapi_stock_data_symbol": {
        "api_name": "symbol",
        "category": "Finance",
        "tool_name": "stock_data",
        "code": "async def rapi_stock_data_symbol(self,*args,**kwargs):\n    '''Get the actual stock details of a symbol.Take a look at the long description  for the  detailed field list.\n    \n    \n\n    :param string Symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_stock_data_symbol',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_nfts_this_month": {
        "api_name": "top_nfts_this_month",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_nfts_this_month(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_nfts_this_month',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_nfts_this_week": {
        "api_name": "top_nfts_this_week",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_nfts_this_week(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_nfts_this_week',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_collections_this_month": {
        "api_name": "top_collections_this_month",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_collections_this_month(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_collections_this_month',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_collections_this_week": {
        "api_name": "top_collections_this_week",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_collections_this_week(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_collections_this_week',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_collections_today": {
        "api_name": "top_collections_today",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_collections_today(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_collections_today',kwargs)\n        "
    },
    "rapi_top_nft_sales_top_nfts_today": {
        "api_name": "top_nfts_today",
        "category": "Finance",
        "tool_name": "top_nft_sales",
        "code": "async def rapi_top_nft_sales_top_nfts_today(self,*args,**kwargs):\n    '''Top NFTs and collections sold today, this week, or this month.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_nft_sales_top_nfts_today',kwargs)\n        "
    },
    "rapi_business_credit_scores_distinct_tickers": {
        "api_name": "distinct_tickers",
        "category": "Finance",
        "tool_name": "business_credit_scores",
        "code": "async def rapi_business_credit_scores_distinct_tickers(self,*args,**kwargs):\n    '''Long term credit scores for 8 million companies\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_business_credit_scores_distinct_tickers',kwargs)\n        "
    },
    "rapi_fidelity_investments_quotes_get_chart": {
        "api_name": "quotes_get_chart",
        "category": "Finance",
        "tool_name": "fidelity_investments",
        "code": "async def rapi_fidelity_investments_quotes_get_chart(self,*args,**kwargs):\n    '''Query for quote data, market movers, international markets,  sector performance, orders, chart, and news\n    \n    \n\n    :param string symbol: Separated by comma for multiple symbols, support up to 3 symbols at a time defaults to .DJI,.IXIC,.SPX\n    :param string startDate: Date format must be strictly follow yyyy/MM/dd-HH:mm:ss defaults to 2020/02/27-09:30:00\n    :param string endDate: Date format must be strictly follow yyyy/MM/dd-HH:mm:ss defaults to 2020/03/02-23:00:00\n    :param string? intraday: Y or N defaults to Y\n    :param integer? granularity: From 1 to 6, use with intraday to specify day or month defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_fidelity_investments_quotes_get_chart',kwargs)\n        "
    },
    "rapi_fidelity_investments_market_get_international": {
        "api_name": "market_get_international",
        "category": "Finance",
        "tool_name": "fidelity_investments",
        "code": "async def rapi_fidelity_investments_market_get_international(self,*args,**kwargs):\n    '''Query for quote data, market movers, international markets,  sector performance, orders, chart, and news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fidelity_investments_market_get_international',kwargs)\n        "
    },
    "rapi_fidelity_investments_news_get_details": {
        "api_name": "news_get_details",
        "category": "Finance",
        "tool_name": "fidelity_investments",
        "code": "async def rapi_fidelity_investments_news_get_details(self,*args,**kwargs):\n    '''Query for quote data, market movers, international markets,  sector performance, orders, chart, and news\n    \n    \n\n    :param string resId: The value of resId field returned in .../news/list-top endpoint, such as : 202003011902RTRSNEWSCOMBINED_KBN20O2GM-OUSBS_1\n    '''\n    return await self._request_rapid_api('rapi_fidelity_investments_news_get_details',kwargs)\n        "
    },
    "rapi_fidelity_investments_news_list_top": {
        "api_name": "news_list_top",
        "category": "Finance",
        "tool_name": "fidelity_investments",
        "code": "async def rapi_fidelity_investments_news_list_top(self,*args,**kwargs):\n    '''Query for quote data, market movers, international markets,  sector performance, orders, chart, and news\n    \n    \n\n    :param string? symbol: The symbol of quote, market, etc..., such as : IMRN. Only one is allowed at a time\n    '''\n    return await self._request_rapid_api('rapi_fidelity_investments_news_list_top',kwargs)\n        "
    },
    "rapi_fidelity_investments_market_get_movers": {
        "api_name": "market_get_movers",
        "category": "Finance",
        "tool_name": "fidelity_investments",
        "code": "async def rapi_fidelity_investments_market_get_movers(self,*args,**kwargs):\n    '''Query for quote data, market movers, international markets,  sector performance, orders, chart, and news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fidelity_investments_market_get_movers',kwargs)\n        "
    },
    "rapi_gaialens_esg_news_getesgnews": {
        "api_name": "getesgnews",
        "category": "Finance",
        "tool_name": "gaialens_esg_news",
        "code": "async def rapi_gaialens_esg_news_getesgnews(self,*args,**kwargs):\n    '''Real-time ESG news API\n    \n    \n\n    :param string? date: Please provide date in DD/MM/YYYY format.\n    :param string? companyname:  defaults to Apple Inc.\n    :param string? sedol: \n    :param string? isin: \n    '''\n    return await self._request_rapid_api('rapi_gaialens_esg_news_getesgnews',kwargs)\n        "
    },
    "rapi_defi_data_protocols": {
        "api_name": "protocols",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_protocols(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_defi_data_protocols',kwargs)\n        "
    },
    "rapi_defi_data_protocol": {
        "api_name": "protocol",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_protocol(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    :param string protocol: protocol slug defaults to aave\n    '''\n    return await self._request_rapid_api('rapi_defi_data_protocol',kwargs)\n        "
    },
    "rapi_defi_data_charts": {
        "api_name": "charts",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_charts(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_defi_data_charts',kwargs)\n        "
    },
    "rapi_defi_data_charts_chain": {
        "api_name": "charts_chain",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_charts_chain(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    :param string chain: chain slug, you can get these from /v1/tvl/chains or the chains property on /v1/tvl/protocols defaults to Ethereum\n    '''\n    return await self._request_rapid_api('rapi_defi_data_charts_chain',kwargs)\n        "
    },
    "rapi_defi_data_tvl_protocol": {
        "api_name": "tvl_protocol",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_tvl_protocol(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    :param string protocol: protocol slug\n    '''\n    return await self._request_rapid_api('rapi_defi_data_tvl_protocol',kwargs)\n        "
    },
    "rapi_defi_data_chains": {
        "api_name": "chains",
        "category": "Finance",
        "tool_name": "defi_data",
        "code": "async def rapi_defi_data_chains(self,*args,**kwargs):\n    '''Free to use API to retrieve data about TVL and coins\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_defi_data_chains',kwargs)\n        "
    },
    "rapi_coinmill_currency_coinmill": {
        "api_name": "coinmill",
        "category": "Finance",
        "tool_name": "coinmill_currency",
        "code": "async def rapi_coinmill_currency_coinmill(self,*args,**kwargs):\n    '''JavaScript API for powering currency exchange rates on websites.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_coinmill_currency_coinmill',kwargs)\n        "
    },
    "rapi_trader_wagon_listportfolios": {
        "api_name": "listportfolios",
        "category": "Finance",
        "tool_name": "trader_wagon",
        "code": "async def rapi_trader_wagon_listportfolios(self,*args,**kwargs):\n    '''Trader Wagon API is specially designed to obtain traders' positions (portfolio).\n    \n    \n\n    :param integer? limit: The number of results to return defaults to 10\n    :param ENUM? portfolioType: Portfolio type\n    :param integer? available: List available portfolios defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_trader_wagon_listportfolios',kwargs)\n        "
    },
    "rapi_trader_wagon_getportfolioinfo": {
        "api_name": "getportfolioinfo",
        "category": "Finance",
        "tool_name": "trader_wagon",
        "code": "async def rapi_trader_wagon_getportfolioinfo(self,*args,**kwargs):\n    '''Trader Wagon API is specially designed to obtain traders' positions (portfolio).\n    \n    \n\n    :param integer portfolioId: Portfolio ID of the trader\n    '''\n    return await self._request_rapid_api('rapi_trader_wagon_getportfolioinfo',kwargs)\n        "
    },
    "rapi_trader_wagon_gettraderpositions": {
        "api_name": "gettraderpositions",
        "category": "Finance",
        "tool_name": "trader_wagon",
        "code": "async def rapi_trader_wagon_gettraderpositions(self,*args,**kwargs):\n    '''Trader Wagon API is specially designed to obtain traders' positions (portfolio).\n    \n    \n\n    :param integer portfolioId: Portfolio ID of the trader\n    '''\n    return await self._request_rapid_api('rapi_trader_wagon_gettraderpositions',kwargs)\n        "
    },
    "rapi_investing_get_commodities": {
        "api_name": "get_commodities",
        "category": "Finance",
        "tool_name": "investing",
        "code": "async def rapi_investing_get_commodities(self,*args,**kwargs):\n    '''This API provides complete data from Investing.com. Including Stocks, Indices, Commodities, News and many more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_investing_get_commodities',kwargs)\n        "
    },
    "rapi_investing_commodity_groups": {
        "api_name": "commodity_groups",
        "category": "Finance",
        "tool_name": "investing",
        "code": "async def rapi_investing_commodity_groups(self,*args,**kwargs):\n    '''This API provides complete data from Investing.com. Including Stocks, Indices, Commodities, News and many more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_investing_commodity_groups',kwargs)\n        "
    },
    "rapi_investing_meats_futures_prices": {
        "api_name": "meats_futures_prices",
        "category": "Finance",
        "tool_name": "investing",
        "code": "async def rapi_investing_meats_futures_prices(self,*args,**kwargs):\n    '''This API provides complete data from Investing.com. Including Stocks, Indices, Commodities, News and many more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_investing_meats_futures_prices',kwargs)\n        "
    },
    "rapi_investing_list_of_countries_for_stocks": {
        "api_name": "list_of_countries_for_stocks",
        "category": "Finance",
        "tool_name": "investing",
        "code": "async def rapi_investing_list_of_countries_for_stocks(self,*args,**kwargs):\n    '''This API provides complete data from Investing.com. Including Stocks, Indices, Commodities, News and many more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_investing_list_of_countries_for_stocks',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_most_visited": {
        "api_name": "most_visited",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_most_visited(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_most_visited',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_newly_listed": {
        "api_name": "newly_listed",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_newly_listed(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_newly_listed',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_top_gainers": {
        "api_name": "top_gainers",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_top_gainers(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_top_gainers',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_top_losers": {
        "api_name": "top_losers",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_top_losers(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_top_losers',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_videos": {
        "api_name": "videos",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_videos(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_videos',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_global_metric": {
        "api_name": "global_metric",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_global_metric(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_global_metric',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_coin_list": {
        "api_name": "coin_list",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_coin_list(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    :param string? page: Enter a page number defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_coin_list',kwargs)\n        "
    },
    "rapi_cryptocurrency_markets_trending": {
        "api_name": "trending",
        "category": "Finance",
        "tool_name": "cryptocurrency_markets",
        "code": "async def rapi_cryptocurrency_markets_trending(self,*args,**kwargs):\n    '''Official cryptocurrency market API provides a comprehensive list of coins, profiles, stats, trends, most watch, top gainers/losers, newly created, and more! This API is ideal for web and APP developers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_markets_trending',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_past_1_week": {
        "api_name": "past_1_week",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_past_1_week(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_past_1_week',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_past_3_years": {
        "api_name": "past_3_years",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_past_3_years(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_past_3_years',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_medium": {
        "api_name": "medium",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_medium(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_medium',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_past_1_year": {
        "api_name": "past_1_year",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_past_1_year(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_past_1_year',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_year_to_date": {
        "api_name": "year_to_date",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_year_to_date(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_year_to_date',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_past_3_months": {
        "api_name": "past_3_months",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_past_3_months(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_past_3_months',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_past_1_day": {
        "api_name": "past_1_day",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_past_1_day(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_past_1_day',kwargs)\n        "
    },
    "rapi_the_sandbox_sand_quote": {
        "api_name": "quote",
        "category": "Finance",
        "tool_name": "the_sandbox_sand",
        "code": "async def rapi_the_sandbox_sand_quote(self,*args,**kwargs):\n    '''An API dedicated to The Sandbox metaverse. Get the latest news and price data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_sandbox_sand_quote',kwargs)\n        "
    },
    "rapi_sec_filings_insider_trades": {
        "api_name": "insider_trades",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_insider_trades(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string? ticker: Publicly traded company's stock symbol. If not specified in the request, the endpoint will return insider trades for all companies on the most recent trading day, defaults to eeft\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_insider_trades',kwargs)\n        "
    },
    "rapi_sec_filings_income": {
        "api_name": "income",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_income(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string ticker: Publicly traded company's stock symbol defaults to googl\n    :param string? formType: 10K = Annual Report (default) | 10-Q = Quarterly Report defaults to 10-k\n    :param integer? filingorder: Retrieve an older financial statement by specifying number of filings to go back. For example, to retrieve the 10-K filed last year, specify a filingOrder value of 1. By default, the most recent filing is returned (filingOrder = 0) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_income',kwargs)\n        "
    },
    "rapi_sec_filings_cash_flows": {
        "api_name": "cash_flows",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_cash_flows(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string ticker: Publicly traded company's stock symbol defaults to fb\n    :param integer? filingOrder: Retrieve an older financial statement by specifying number of filings to go back. For example, to retrieve the second to most recent filing, specify a filingOrder value of 1. By default, the most recent filing is returned (filingOrder = 0) defaults to 0\n    :param string? formType: 10-K = Annual Report (default) | 10-Q = Quarterly Report defaults to 10-k\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_cash_flows',kwargs)\n        "
    },
    "rapi_sec_filings_balance_sheet": {
        "api_name": "balance_sheet",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_balance_sheet(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string ticker: Publicly traded company's stock symbol defaults to msft\n    :param string? formtype: 10-K = Annual Report (default) | 10-Q = Quarterly Report defaults to 10-k\n    :param integer? filingorder: Retrieve an older financial statement by specifying number of filings to go back. For example, to retrieve the second to most recent filing, specify a filingOrder value of 1. By default, the most recent filing is returned (filingOrder = 0) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_balance_sheet',kwargs)\n        "
    },
    "rapi_sec_filings_financial_statements_disclosures": {
        "api_name": "financial_statements_disclosures",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_financial_statements_disclosures(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string cik: Central Index Key (CIK) defaults to 1616262\n    :param string accessionNumber: SEC Filing Identifier defaults to 0001437749-21-013850\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_financial_statements_disclosures',kwargs)\n        "
    },
    "rapi_sec_filings_sec_filings": {
        "api_name": "sec_filings",
        "category": "Finance",
        "tool_name": "sec_filings",
        "code": "async def rapi_sec_filings_sec_filings(self,*args,**kwargs):\n    '''A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.\n    \n    \n\n    :param string identifier: Publicly traded company's stock symbol or Central Index Key (CIK) defaults to aapl\n    '''\n    return await self._request_rapid_api('rapi_sec_filings_sec_filings',kwargs)\n        "
    },
    "rapi_binance_smart_chain_block": {
        "api_name": "block",
        "category": "Finance",
        "tool_name": "binance_smart_chain",
        "code": "async def rapi_binance_smart_chain_block(self,*args,**kwargs):\n    '''All-In-One access to the BSC blockchain data!\n\nMore features are coming soon!\n\nFeedback and feature requests should be sent to:\nangleitnerchristoph123@gmail.com\n    \n    \n\n    :param string block: Block you want to scan! defaults to 123\n    :param string? network: Specify wich network you wanna use! (mainnet/testnet)\n    '''\n    return await self._request_rapid_api('rapi_binance_smart_chain_block',kwargs)\n        "
    },
    "rapi_binance_smart_chain_transaction": {
        "api_name": "transaction",
        "category": "Finance",
        "tool_name": "binance_smart_chain",
        "code": "async def rapi_binance_smart_chain_transaction(self,*args,**kwargs):\n    '''All-In-One access to the BSC blockchain data!\n\nMore features are coming soon!\n\nFeedback and feature requests should be sent to:\nangleitnerchristoph123@gmail.com\n    \n    \n\n    :param string hash: Transaction you want to scan! defaults to 0x675e20f06597d976c23cef8fd6ff8f9c56b75af711a22d8c2d936b49cc3ac2d9\n    :param string? network: Specify wich network you wanna use! (mainnet/testnet)\n    '''\n    return await self._request_rapid_api('rapi_binance_smart_chain_transaction',kwargs)\n        "
    },
    "rapi_inflation_by_api_ninjas_v1_inflation": {
        "api_name": "v1_inflation",
        "category": "Finance",
        "tool_name": "inflation_by_api_ninjas",
        "code": "async def rapi_inflation_by_api_ninjas_v1_inflation(self,*args,**kwargs):\n    '''Get current inflation data for the dozens of countries. See more info at https://api-ninjas.com/api/inflation.\n    \n    \n\n    :param string? type: inflation indicator type. Can be either CPI (Consumer Price Index) or HICP (Harmonized Index of Consumer Prices). If not provided, the CPI will be used by default.\n    '''\n    return await self._request_rapid_api('rapi_inflation_by_api_ninjas_v1_inflation',kwargs)\n        "
    },
    "rapi_us_stock_prices_live_stockprice": {
        "api_name": "stockprice",
        "category": "Finance",
        "tool_name": "us_stock_prices_live",
        "code": "async def rapi_us_stock_prices_live_stockprice(self,*args,**kwargs):\n    '''API for US Stock Exchange. Get the live prices and all the data.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string symbol:  defaults to TSLA\n    '''\n    return await self._request_rapid_api('rapi_us_stock_prices_live_stockprice',kwargs)\n        "
    },
    "rapi_indian_stock_exchange_api_stockprice": {
        "api_name": "stockprice",
        "category": "Finance",
        "tool_name": "indian_stock_exchange_api",
        "code": "async def rapi_indian_stock_exchange_api_stockprice(self,*args,**kwargs):\n    '''API for Indian Stock Exchange BSE/NSE.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string symbol:  defaults to TATAMOTORS\n    '''\n    return await self._request_rapid_api('rapi_indian_stock_exchange_api_stockprice',kwargs)\n        "
    },
    "rapi_forexgo_fx": {
        "api_name": "fx",
        "category": "Finance",
        "tool_name": "forexgo",
        "code": "async def rapi_forexgo_fx(self,*args,**kwargs):\n    '''Introducing ForexGo API - the powerful currency exchange solution for developers. Effortlessly integrate real-time forex rates and conversion capabilities into your applications with our easy-to-use API. Enhance your projects with accurate and up-to-date exchange data, empowering users across the globe to make informed financial decisions. Get started with ForexGo API today!\n    \n    \n\n    :param integer amount: Defines the value of the amount. defaults to 10\n    :param string from: Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR defaults to EUR\n    :param string to: Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR defaults to USD\n    :param string? date: ISO Date format:\n\nYYYY-MM-DDTHH:mm:ss.sssZ\n\nPull data from requested date.\n    '''\n    return await self._request_rapid_api('rapi_forexgo_fx',kwargs)\n        "
    },
    "rapi_jp_funda_getlatestbysecuritiescode": {
        "api_name": "getlatestbysecuritiescode",
        "category": "Finance",
        "tool_name": "jp_funda",
        "code": "async def rapi_jp_funda_getlatestbysecuritiescode(self,*args,**kwargs):\n    '''JP Funda API is an API that provides fundamental information based on the securities report data of Japanese companies in Json format.\n    \n    \n\n    :param integer securities_code:  defaults to 7203\n    '''\n    return await self._request_rapid_api('rapi_jp_funda_getlatestbysecuritiescode',kwargs)\n        "
    },
    "rapi_jp_funda_getlatestbyedinetcode": {
        "api_name": "getlatestbyedinetcode",
        "category": "Finance",
        "tool_name": "jp_funda",
        "code": "async def rapi_jp_funda_getlatestbyedinetcode(self,*args,**kwargs):\n    '''JP Funda API is an API that provides fundamental information based on the securities report data of Japanese companies in Json format.\n    \n    \n\n    :param string edinet_code:  defaults to E02142\n    '''\n    return await self._request_rapid_api('rapi_jp_funda_getlatestbyedinetcode',kwargs)\n        "
    },
    "rapi_jp_funda_getdisclosedweek": {
        "api_name": "getdisclosedweek",
        "category": "Finance",
        "tool_name": "jp_funda",
        "code": "async def rapi_jp_funda_getdisclosedweek(self,*args,**kwargs):\n    '''JP Funda API is an API that provides fundamental information based on the securities report data of Japanese companies in Json format.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jp_funda_getdisclosedweek',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_trades": {
        "api_name": "api_trades",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_trades(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    :param string? iSIN: \n    :param string? bIC: \n    :param string? to: \n    :param string? from: \n    :param integer? limit: \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_trades',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_stocks": {
        "api_name": "api_stocks",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_stocks(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_stocks',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_trades_stock": {
        "api_name": "api_trades_stock",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_trades_stock(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    :param string stock: \n    :param string? bIC: \n    :param integer? limit: \n    :param string? iSIN: \n    :param string? from: \n    :param string? to: \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_trades_stock',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_trades_day_day": {
        "api_name": "api_trades_day_day",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_trades_day_day(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    :param string day: \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_trades_day_day',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_trades_isin_isin": {
        "api_name": "api_trades_isin_isin",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_trades_isin_isin(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    :param string isin: \n    :param string? from: \n    :param integer? limit: \n    :param string? to: \n    :param string? bIC: \n    :param string? iSIN: \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_trades_isin_isin',kwargs)\n        "
    },
    "rapi_prague_stock_exchange_api_days": {
        "api_name": "api_days",
        "category": "Finance",
        "tool_name": "prague_stock_exchange",
        "code": "async def rapi_prague_stock_exchange_api_days(self,*args,**kwargs):\n    '''REST API for Prague Stock Exchange https://www.pse.cz\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_prague_stock_exchange_api_days',kwargs)\n        "
    },
    "rapi_exchanger_currency_rates_provider_supported_currencies": {
        "api_name": "supported_currencies",
        "category": "Finance",
        "tool_name": "exchanger_currency_rates_provider",
        "code": "async def rapi_exchanger_currency_rates_provider_supported_currencies(self,*args,**kwargs):\n    '''Get hourly updated rates for more than 150 currencies since 1999\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exchanger_currency_rates_provider_supported_currencies',kwargs)\n        "
    },
    "rapi_exchanger_currency_rates_provider_historical_rates": {
        "api_name": "historical_rates",
        "category": "Finance",
        "tool_name": "exchanger_currency_rates_provider",
        "code": "async def rapi_exchanger_currency_rates_provider_historical_rates(self,*args,**kwargs):\n    '''Get hourly updated rates for more than 150 currencies since 1999\n    \n    \n\n    :param string? date:  defaults to 2020-01-01\n    :param string? base:  defaults to eur\n    '''\n    return await self._request_rapid_api('rapi_exchanger_currency_rates_provider_historical_rates',kwargs)\n        "
    },
    "rapi_fake_credit_card_generator_generate_cc_number": {
        "api_name": "generate_cc_number",
        "category": "Finance",
        "tool_name": "fake_credit_card_generator",
        "code": "async def rapi_fake_credit_card_generator_generate_cc_number(self,*args,**kwargs):\n    '''Select the kind of card you want to generate and let the API generate a new Test Card for you. Using industry standard algorithms, the cards generated will be unique and tied to real instututions, providing a close to real testing number\n    \n    \n\n    :param ENUM? brand: Enter your desired card brand\n    '''\n    return await self._request_rapid_api('rapi_fake_credit_card_generator_generate_cc_number',kwargs)\n        "
    },
    "rapi_coinlore_cryptocurrency_global_crypto_stats": {
        "api_name": "global_crypto_stats",
        "category": "Finance",
        "tool_name": "coinlore_cryptocurrency",
        "code": "async def rapi_coinlore_cryptocurrency_global_crypto_stats(self,*args,**kwargs):\n    '''Provides cryptocurrency prices,exchanges,markets api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_coinlore_cryptocurrency_global_crypto_stats',kwargs)\n        "
    },
    "rapi_coinlore_cryptocurrency_all_coins_ticker": {
        "api_name": "all_coins_ticker",
        "category": "Finance",
        "tool_name": "coinlore_cryptocurrency",
        "code": "async def rapi_coinlore_cryptocurrency_all_coins_ticker(self,*args,**kwargs):\n    '''Provides cryptocurrency prices,exchanges,markets api\n    \n    \n\n    :param integer start:  defaults to 0\n    :param integer limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_coinlore_cryptocurrency_all_coins_ticker',kwargs)\n        "
    },
    "rapi_coinlore_cryptocurrency_get_ticker_for_specific_coin": {
        "api_name": "get_ticker_for_specific_coin",
        "category": "Finance",
        "tool_name": "coinlore_cryptocurrency",
        "code": "async def rapi_coinlore_cryptocurrency_get_ticker_for_specific_coin(self,*args,**kwargs):\n    '''Provides cryptocurrency prices,exchanges,markets api\n    \n    \n\n    :param integer id:  defaults to 90\n    '''\n    return await self._request_rapid_api('rapi_coinlore_cryptocurrency_get_ticker_for_specific_coin',kwargs)\n        "
    },
    "rapi_coinlore_cryptocurrency_get_exchanges": {
        "api_name": "get_exchanges",
        "category": "Finance",
        "tool_name": "coinlore_cryptocurrency",
        "code": "async def rapi_coinlore_cryptocurrency_get_exchanges(self,*args,**kwargs):\n    '''Provides cryptocurrency prices,exchanges,markets api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_coinlore_cryptocurrency_get_exchanges',kwargs)\n        "
    },
    "rapi_coinlore_cryptocurrency_get_markets_of_coin": {
        "api_name": "get_markets_of_coin",
        "category": "Finance",
        "tool_name": "coinlore_cryptocurrency",
        "code": "async def rapi_coinlore_cryptocurrency_get_markets_of_coin(self,*args,**kwargs):\n    '''Provides cryptocurrency prices,exchanges,markets api\n    \n    \n\n    :param integer id:  defaults to 90\n    '''\n    return await self._request_rapid_api('rapi_coinlore_cryptocurrency_get_markets_of_coin',kwargs)\n        "
    },
    "rapi_exchange_rates_api_currencies": {
        "api_name": "currencies",
        "category": "Finance",
        "tool_name": "exchange_rates_api",
        "code": "async def rapi_exchange_rates_api_currencies(self,*args,**kwargs):\n    '''This API retrieves all exchange rates between all currencies based on BCE.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exchange_rates_api_currencies',kwargs)\n        "
    },
    "rapi_exchange_rates_api_historical": {
        "api_name": "historical",
        "category": "Finance",
        "tool_name": "exchange_rates_api",
        "code": "async def rapi_exchange_rates_api_historical(self,*args,**kwargs):\n    '''This API retrieves all exchange rates between all currencies based on BCE.\n    \n    \n\n    :param string YYYY-MM-DD:  defaults to 2023-03-24\n    :param string? to:  defaults to EUR,USD\n    :param string? from:  defaults to CHF\n    '''\n    return await self._request_rapid_api('rapi_exchange_rates_api_historical',kwargs)\n        "
    },
    "rapi_exchange_rates_api_latest": {
        "api_name": "latest",
        "category": "Finance",
        "tool_name": "exchange_rates_api",
        "code": "async def rapi_exchange_rates_api_latest(self,*args,**kwargs):\n    '''This API retrieves all exchange rates between all currencies based on BCE.\n    \n    \n\n    :param string? to:  defaults to USD,AUD\n    :param string? from:  defaults to EUR\n    '''\n    return await self._request_rapid_api('rapi_exchange_rates_api_latest',kwargs)\n        "
    },
    "rapi_date_calculator_year_fractions": {
        "api_name": "year_fractions",
        "category": "Finance",
        "tool_name": "date_calculator",
        "code": "async def rapi_date_calculator_year_fractions(self,*args,**kwargs):\n    '''This API helps to perform some computations on dates: accrual factors, maturity dates, contract dates,  and other due dates, datetime delta, time zones conversion, recurring dates, and much more. \n    \n    \n\n    :param string start_date: The start date of the period time in YYYY-MM-DD format defaults to 2021-03-31\n    :param string end_date: The end date of the period time in YYYY-MM-DD format defaults to 2021-04-30\n    :param string dcc_types: The day count convention defaults to Actual360\n    '''\n    return await self._request_rapid_api('rapi_date_calculator_year_fractions',kwargs)\n        "
    },
    "rapi_date_calculator_time_zone_converter": {
        "api_name": "time_zone_converter",
        "category": "Finance",
        "tool_name": "date_calculator",
        "code": "async def rapi_date_calculator_time_zone_converter(self,*args,**kwargs):\n    '''This API helps to perform some computations on dates: accrual factors, maturity dates, contract dates,  and other due dates, datetime delta, time zones conversion, recurring dates, and much more. \n    \n    \n\n    :param string datetime: The date time in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime) defaults to 2021-03-21T20:10:00\n    :param string? from_tzname: The time zone name defaults to UTC\n    :param string? to_tzname: The time zone name defaults to UTC\n    '''\n    return await self._request_rapid_api('rapi_date_calculator_time_zone_converter',kwargs)\n        "
    },
    "rapi_date_calculator_rdates": {
        "api_name": "rdates",
        "category": "Finance",
        "tool_name": "date_calculator",
        "code": "async def rapi_date_calculator_rdates(self,*args,**kwargs):\n    '''This API helps to perform some computations on dates: accrual factors, maturity dates, contract dates,  and other due dates, datetime delta, time zones conversion, recurring dates, and much more. \n    \n    \n\n    :param string start_date: The start date w/ or w/o the time part in  [ISO 8601 format](https://www.w3.org/TR/NOTE-datetime) defaults to 2021-09-21\n    :param string rrules: The recurrence rules list as string seperated by space; Each rule should be prefixed by **RRULE:** defaults to RRULE:FREQ=MONTHLY;COUNT=36 RRULE:FREQ=YEARLY;COUNT=3\n    '''\n    return await self._request_rapid_api('rapi_date_calculator_rdates',kwargs)\n        "
    },
    "rapi_wealth_reader_api_entities": {
        "api_name": "entities",
        "category": "Finance",
        "tool_name": "wealth_reader_api",
        "code": "async def rapi_wealth_reader_api_entities(self,*args,**kwargs):\n    '''API providing standardised, real-time access to any entity's financial assets.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wealth_reader_api_entities',kwargs)\n        "
    },
    "rapi_kalshi_trading_api_getevents": {
        "api_name": "getevents",
        "category": "Finance",
        "tool_name": "kalshi_trading_api",
        "code": "async def rapi_kalshi_trading_api_getevents(self,*args,**kwargs):\n    '''An API for trading on Kalshi, a CFTC regulated exchange.\n    \n    \n\n    :param string? series_ticker: Series ticker to retrieve contracts for.\n    :param string? status: Restricts the events to those with certain statuses, as a comma separated list.\nThe following values are accepted: open, closed, settled.\n    :param string? cursor: The Cursor represents a pointer to the next page of records in the pagination.\nSo this optional parameter, when filled, should be filled with the cursor string returned in a previous request to this end-point.\nFilling this would basically tell the api to get the next page containing the number of records passed on the limit parameter.\nOn the other side not filling it tells the api you want to get the first page for another query.\nThe cursor does not store any filters, so if any filter parameters like series_ticker was passed in the original query they must be passed again.\n    :param integer? limit: Parameter to specify the number of results per page. Defaults to 100.\n    '''\n    return await self._request_rapid_api('rapi_kalshi_trading_api_getevents',kwargs)\n        "
    },
    "rapi_sales_tax_by_api_ninjas_v1_salestax": {
        "api_name": "v1_salestax",
        "category": "Finance",
        "tool_name": "sales_tax_by_api_ninjas",
        "code": "async def rapi_sales_tax_by_api_ninjas_v1_salestax(self,*args,**kwargs):\n    '''Calculate US sales tax by city or zip code. See more info at https://api-ninjas.com/api/salestax\n    \n    \n\n    :param string? state: State name.\n    :param string? city: City name.\n    :param string? zip_code: Valid US ZIP code. defaults to 90210\n    '''\n    return await self._request_rapid_api('rapi_sales_tax_by_api_ninjas_v1_salestax',kwargs)\n        "
    },
    "rapi_trading_view_stocks_get_financials": {
        "api_name": "stocks_get_financials",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_stocks_get_financials(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    :param string symbol: The format is \"exchange:symbol\". Ex : NASDAQ:TSLA defaults to NASDAQ:TSLA\n    :param string columns: One of the following (Separated by comma for multiple options) : ADR,ADX,ADX-DI,ADX-DI|1,ADX-DI|120,ADX-DI|15,ADX-DI|1M,ADX-DI|1W,ADX-DI|240,ADX-DI|30,ADX-DI|5,ADX-DI|60,ADX+DI,ADX|1,ADX|120,ADX|15,ADX|1M,ADX|1W,ADX|240,ADX|30,ADX|5,ADX|60,after&#95;tax&#95;margin,AO,AO|1,AO|120,AO|15,AO|1M,AO|1W,AO|240,AO|30,AO|5,AO|60,Aroon.Down,Aroon.Up,ATR,average&#95;volume,average&#95;volume&#95;10d&#95;calc,average&#95;volume&#95;30d&#95;calc,average&#95;volume&#95;60d&#95;calc,average&#95;volume&#95;90d&#95;calc,base&#95;currency&#95;logoid,basic&#95;elements,basic&#95;eps&#95;net&#95;income,BB.lower,BB.upper,BBPower,BBPower|1,BBPower|120,BBPower|15,BBPower|1M,BBPower|1W,BBPower|240,BBPower|30,BBPower|5,BBPower|60,beta&#95;1&#95;year,beta&#95;3&#95;year,beta&#95;5&#95;year,CCI20,CCI20|1,CCI20|120,CCI20|15,CCI20|1M,CCI20|1W,CCI20|240,CCI20|30,CCI20|5,CCI20|60,ChaikinMoneyFlow,change,change&#95;abs,change&#95;abs|1,change&#95;abs|15,change&#95;abs|1M,change&#95;abs|1W,change&#95;abs|240,change&#95;abs|5,change&#95;abs|60,change&#95;from&#95;open,change&#95;from&#95;open&#95;abs,change|1,change|15,change|1M,change|1W,change|240,change|5,change|60,close,close|1,close|120,close|15,close|1M,close|1W,close|240,close|30,close|5,close|60,country,currency&#95;logoid,current&#95;ratio,debt&#95;to&#95;assets,debt&#95;to&#95;equity,debt&#95;to&#95;equity&#95;fq,description,dividend&#95;yield&#95;recent,dividends&#95;paid,dividends&#95;per&#95;share&#95;fq,dividends&#95;yield,DonchCh20.Lower,DonchCh20.Upper,dps&#95;common&#95;stock&#95;prim&#95;issue&#95;fy,earnings&#95;per&#95;share&#95;basic&#95;ttm,earnings&#95;per&#95;share&#95;diluted&#95;ttm,earnings&#95;per&#95;share&#95;forecast&#95;next&#95;fq,earnings&#95;per&#95;share&#95;fq,earnings&#95;release&#95;date,earnings&#95;release&#95;next&#95;date,ebitda,elements,EMA10,EMA10|1,EMA10|120,EMA10|15,EMA10|1M,EMA10|1W,EMA10|240,EMA10|30,EMA10|5,EMA10|60,EMA100,EMA100|1,EMA100|120,EMA100|15,EMA100|1M,EMA100|1W,EMA100|240,EMA100|30,EMA100|5,EMA100|60,EMA20,EMA20|1,EMA20|120,EMA20|15,EMA20|1M,EMA20|1W,EMA20|240,EMA20|30,EMA20|5,EMA20|60,EMA200,EMA200|1,EMA200|120,EMA200|15,EMA200|1M,EMA200|1W,EMA200|240,EMA200|30,EMA200|5,EMA200|60,EMA30,EMA30|1,EMA30|120,EMA30|15,EMA30|1M,EMA30|1W,EMA30|240,EMA30|30,EMA30|5,EMA30|60,EMA5,EMA50,EMA50|1,EMA50|120,EMA50|15,EMA50|1M,EMA50|1W,EMA50|240,EMA50|30,EMA50|5,EMA50|60,enterprise&#95;value&#95;ebitda&#95;ttm,enterprise&#95;value&#95;fq,eps&#95;surprise&#95;fq,eps&#95;surprise&#95;percent&#95;fq,exchange,float&#95;shares&#95;outstanding,free&#95;cash&#95;flow,gap,goodwill,gross&#95;margin,gross&#95;profit,gross&#95;profit&#95;fq,high,High.1M,High.3M,High.6M,High.All,HullMA9,HullMA9|1,HullMA9|120,HullMA9|15,HullMA9|1M,HullMA9|1W,HullMA9|240,HullMA9|30,HullMA9|5,HullMA9|60,Ichimoku.BLine,Ichimoku.BLine|1,Ichimoku.BLine|120,Ichimoku.BLine|15,Ichimoku.BLine|1M,Ichimoku.BLine|1W,Ichimoku.BLine|240,Ichimoku.BLine|30,Ichimoku.BLine|5,Ichimoku.BLine|60,Ichimoku.CLine,Ichimoku.Lead1,Ichimoku.Lead2,industry,is&#95;primary,KltChnl.lower,KltChnl.upper,last&#95;annual&#95;eps,last&#95;annual&#95;revenue,logoid,long&#95;term&#95;capital,low,Low.1M,Low.3M,Low.6M,Low.All,MACD.macd,MACD.macd|1,MACD.macd|120,MACD.macd|15,MACD.macd|1M,MACD.macd|1W,MACD.macd|240,MACD.macd|30,MACD.macd|5,MACD.macd|60,MACD.signal,MACD.signal|1,MACD.signal|120,MACD.signal|15,MACD.signal|1M,MACD.signal|1W,MACD.signal|240,MACD.signal|30,MACD.signal|5,MACD.signal|60,market&#95;cap&#95;basic,market&#95;cap&#95;calc,Mom,Mom|1,Mom|120,Mom|15,Mom|1M,Mom|1W,Mom|240,Mom|30,Mom|5,Mom|60,MoneyFlow,name,net&#95;debt,net&#95;income,number&#95;of&#95;employees,number&#95;of&#95;shareholders,open,operating&#95;margin,P.SAR,Perf.1M,Perf.3M,Perf.6M,Perf.W,Perf.Y,Perf.YTD,Pivot.M.Camarilla.Middle,Pivot.M.Camarilla.Middle|1,Pivot.M.Camarilla.Middle|120,Pivot.M.Camarilla.Middle|15,Pivot.M.Camarilla.Middle|1M,Pivot.M.Camarilla.Middle|1W,Pivot.M.Camarilla.Middle|240,Pivot.M.Camarilla.Middle|30,Pivot.M.Camarilla.Middle|5,Pivot.M.Camarilla.Middle|60,Pivot.M.Camarilla.R1,Pivot.M.Camarilla.R1|1,Pivot.M.Camarilla.R1|120,Pivot.M.Camarilla.R1|15,Pivot.M.Camarilla.R1|1M,Pivot.M.Camarilla.R1|1W,Pivot.M.Camarilla.R1|240,Pivot.M.Camarilla.R1|30,Pivot.M.Camarilla.R1|5,Pivot.M.Camarilla.R1|60,Pivot.M.Camarilla.R2,Pivot.M.Camarilla.R2|1,Pivot.M.Camarilla.R2|120,Pivot.M.Camarilla.R2|15,Pivot.M.Camarilla.R2|1M,Pivot.M.Camarilla.R2|1W,Pivot.M.Camarilla.R2|240,Pivot.M.Camarilla.R2|30,Pivot.M.Camarilla.R2|5,Pivot.M.Camarilla.R2|60,Pivot.M.Camarilla.R3,Pivot.M.Camarilla.R3|1,Pivot.M.Camarilla.R3|120,Pivot.M.Camarilla.R3|15,Pivot.M.Camarilla.R3|1M,Pivot.M.Camarilla.R3|1W,Pivot.M.Camarilla.R3|240,Pivot.M.Camarilla.R3|30,Pivot.M.Camarilla.R3|5,Pivot.M.Camarilla.R3|60,Pivot.M.Camarilla.S1,Pivot.M.Camarilla.S1|1,Pivot.M.Camarilla.S1|120,Pivot.M.Camarilla.S1|15,Pivot.M.Camarilla.S1|1M,Pivot.M.Camarilla.S1|1W,Pivot.M.Camarilla.S1|240,Pivot.M.Camarilla.S1|30,Pivot.M.Camarilla.S1|5,Pivot.M.Camarilla.S1|60,Pivot.M.Camarilla.S2,Pivot.M.Camarilla.S2|1,Pivot.M.Camarilla.S2|120,Pivot.M.Camarilla.S2|15,Pivot.M.Camarilla.S2|1M,Pivot.M.Camarilla.S2|1W,Pivot.M.Camarilla.S2|240,Pivot.M.Camarilla.S2|30,Pivot.M.Camarilla.S2|5,Pivot.M.Camarilla.S2|60,Pivot.M.Camarilla.S3,Pivot.M.Camarilla.S3|1,Pivot.M.Camarilla.S3|120,Pivot.M.Camarilla.S3|15,Pivot.M.Camarilla.S3|1M,Pivot.M.Camarilla.S3|1W,Pivot.M.Camarilla.S3|240,Pivot.M.Camarilla.S3|30,Pivot.M.Camarilla.S3|5,Pivot.M.Camarilla.S3|60,Pivot.M.Classic.Middle,Pivot.M.Classic.Middle|1,Pivot.M.Classic.Middle|120,Pivot.M.Classic.Middle|15,Pivot.M.Classic.Middle|1M,Pivot.M.Classic.Middle|1W,Pivot.M.Classic.Middle|240,Pivot.M.Classic.Middle|30,Pivot.M.Classic.Middle|5,Pivot.M.Classic.Middle|60,Pivot.M.Classic.R1,Pivot.M.Classic.R1|1,Pivot.M.Classic.R1|120,Pivot.M.Classic.R1|15,Pivot.M.Classic.R1|1M,Pivot.M.Classic.R1|1W,Pivot.M.Classic.R1|240,Pivot.M.Classic.R1|30,Pivot.M.Classic.R1|5,Pivot.M.Classic.R1|60,Pivot.M.Classic.R2,Pivot.M.Classic.R2|1,Pivot.M.Classic.R2|120,Pivot.M.Classic.R2|15,Pivot.M.Classic.R2|1M,Pivot.M.Classic.R2|1W,Pivot.M.Classic.R2|240,Pivot.M.Classic.R2|30,Pivot.M.Classic.R2|5,Pivot.M.Classic.R2|60,Pivot.M.Classic.R3,Pivot.M.Classic.R3|1,Pivot.M.Classic.R3|120,Pivot.M.Classic.R3|15,Pivot.M.Classic.R3|1M,Pivot.M.Classic.R3|1W,Pivot.M.Classic.R3|240,Pivot.M.Classic.R3|30,Pivot.M.Classic.R3|5,Pivot.M.Classic.R3|60,Pivot.M.Classic.S1,Pivot.M.Classic.S1|1,Pivot.M.Classic.S1|120,Pivot.M.Classic.S1|15,Pivot.M.Classic.S1|1M,Pivot.M.Classic.S1|1W,Pivot.M.Classic.S1|240,Pivot.M.Classic.S1|30,Pivot.M.Classic.S1|5,Pivot.M.Classic.S1|60,Pivot.M.Classic.S2,Pivot.M.Classic.S2|1,Pivot.M.Classic.S2|120,Pivot.M.Classic.S2|15,Pivot.M.Classic.S2|1M,Pivot.M.Classic.S2|1W,Pivot.M.Classic.S2|240,Pivot.M.Classic.S2|30,Pivot.M.Classic.S2|5,Pivot.M.Classic.S2|60,Pivot.M.Classic.S3,Pivot.M.Classic.S3|1,Pivot.M.Classic.S3|120,Pivot.M.Classic.S3|15,Pivot.M.Classic.S3|1M,Pivot.M.Classic.S3|1W,Pivot.M.Classic.S3|240,Pivot.M.Classic.S3|30,Pivot.M.Classic.S3|5,Pivot.M.Classic.S3|60,Pivot.M.Demark.Middle,Pivot.M.Demark.Middle|1,Pivot.M.Demark.Middle|120,Pivot.M.Demark.Middle|15,Pivot.M.Demark.Middle|1M,Pivot.M.Demark.Middle|1W,Pivot.M.Demark.Middle|240,Pivot.M.Demark.Middle|30,Pivot.M.Demark.Middle|5,Pivot.M.Demark.Middle|60,Pivot.M.Demark.R1,Pivot.M.Demark.R1|1,Pivot.M.Demark.R1|120,Pivot.M.Demark.R1|15,Pivot.M.Demark.R1|1M,Pivot.M.Demark.R1|1W,Pivot.M.Demark.R1|240,Pivot.M.Demark.R1|30,Pivot.M.Demark.R1|5,Pivot.M.Demark.R1|60,Pivot.M.Demark.S1,Pivot.M.Demark.S1|1,Pivot.M.Demark.S1|120,Pivot.M.Demark.S1|15,Pivot.M.Demark.S1|1M,Pivot.M.Demark.S1|1W,Pivot.M.Demark.S1|240,Pivot.M.Demark.S1|30,Pivot.M.Demark.S1|5,Pivot.M.Demark.S1|60,Pivot.M.Fibonacci.Middle,Pivot.M.Fibonacci.Middle|1,Pivot.M.Fibonacci.Middle|120,Pivot.M.Fibonacci.Middle|15,Pivot.M.Fibonacci.Middle|1M,Pivot.M.Fibonacci.Middle|1W,Pivot.M.Fibonacci.Middle|240,Pivot.M.Fibonacci.Middle|30,Pivot.M.Fibonacci.Middle|5,Pivot.M.Fibonacci.Middle|60,Pivot.M.Fibonacci.R1,Pivot.M.Fibonacci.R1|1,Pivot.M.Fibonacci.R1|120,Pivot.M.Fibonacci.R1|15,Pivot.M.Fibonacci.R1|1M,Pivot.M.Fibonacci.R1|1W,Pivot.M.Fibonacci.R1|240,Pivot.M.Fibonacci.R1|30,Pivot.M.Fibonacci.R1|5,Pivot.M.Fibonacci.R1|60,Pivot.M.Fibonacci.R2,Pivot.M.Fibonacci.R2|1,Pivot.M.Fibonacci.R2|120,Pivot.M.Fibonacci.R2|15,Pivot.M.Fibonacci.R2|1M,Pivot.M.Fibonacci.R2|1W,Pivot.M.Fibonacci.R2|240,Pivot.M.Fibonacci.R2|30,Pivot.M.Fibonacci.R2|5,Pivot.M.Fibonacci.R2|60,Pivot.M.Fibonacci.R3,Pivot.M.Fibonacci.R3|1,Pivot.M.Fibonacci.R3|120,Pivot.M.Fibonacci.R3|15,Pivot.M.Fibonacci.R3|1M,Pivot.M.Fibonacci.R3|1W,Pivot.M.Fibonacci.R3|240,Pivot.M.Fibonacci.R3|30,Pivot.M.Fibonacci.R3|5,Pivot.M.Fibonacci.R3|60,Pivot.M.Fibonacci.S1,Pivot.M.Fibonacci.S1|1,Pivot.M.Fibonacci.S1|120,Pivot.M.Fibonacci.S1|15,Pivot.M.Fibonacci.S1|1M,Pivot.M.Fibonacci.S1|1W,Pivot.M.Fibonacci.S1|240,Pivot.M.Fibonacci.S1|30,Pivot.M.Fibonacci.S1|5,Pivot.M.Fibonacci.S1|60,Pivot.M.Fibonacci.S2,Pivot.M.Fibonacci.S2|1,Pivot.M.Fibonacci.S2|120,Pivot.M.Fibonacci.S2|15,Pivot.M.Fibonacci.S2|1M,Pivot.M.Fibonacci.S2|1W,Pivot.M.Fibonacci.S2|240,Pivot.M.Fibonacci.S2|30,Pivot.M.Fibonacci.S2|5,Pivot.M.Fibonacci.S2|60,Pivot.M.Fibonacci.S3,Pivot.M.Fibonacci.S3|1,Pivot.M.Fibonacci.S3|120,Pivot.M.Fibonacci.S3|15,Pivot.M.Fibonacci.S3|1M,Pivot.M.Fibonacci.S3|1W,Pivot.M.Fibonacci.S3|240,Pivot.M.Fibonacci.S3|30,Pivot.M.Fibonacci.S3|5,Pivot.M.Fibonacci.S3|60,Pivot.M.Woodie.Middle,Pivot.M.Woodie.Middle|1,Pivot.M.Woodie.Middle|120,Pivot.M.Woodie.Middle|15,Pivot.M.Woodie.Middle|1M,Pivot.M.Woodie.Middle|1W,Pivot.M.Woodie.Middle|240,Pivot.M.Woodie.Middle|30,Pivot.M.Woodie.Middle|5,Pivot.M.Woodie.Middle|60,Pivot.M.Woodie.R1,Pivot.M.Woodie.R1|1,Pivot.M.Woodie.R1|120,Pivot.M.Woodie.R1|15,Pivot.M.Woodie.R1|1M,Pivot.M.Woodie.R1|1W,Pivot.M.Woodie.R1|240,Pivot.M.Woodie.R1|30,Pivot.M.Woodie.R1|5,Pivot.M.Woodie.R1|60,Pivot.M.Woodie.R2,Pivot.M.Woodie.R2|1,Pivot.M.Woodie.R2|120,Pivot.M.Woodie.R2|15,Pivot.M.Woodie.R2|1M,Pivot.M.Woodie.R2|1W,Pivot.M.Woodie.R2|240,Pivot.M.Woodie.R2|30,Pivot.M.Woodie.R2|5,Pivot.M.Woodie.R2|60,Pivot.M.Woodie.R3,Pivot.M.Woodie.R3|1,Pivot.M.Woodie.R3|120,Pivot.M.Woodie.R3|15,Pivot.M.Woodie.R3|1M,Pivot.M.Woodie.R3|1W,Pivot.M.Woodie.R3|240,Pivot.M.Woodie.R3|30,Pivot.M.Woodie.R3|5,Pivot.M.Woodie.R3|60,Pivot.M.Woodie.S1,Pivot.M.Woodie.S1|1,Pivot.M.Woodie.S1|120,Pivot.M.Woodie.S1|15,Pivot.M.Woodie.S1|1M,Pivot.M.Woodie.S1|1W,Pivot.M.Woodie.S1|240,Pivot.M.Woodie.S1|30,Pivot.M.Woodie.S1|5,Pivot.M.Woodie.S1|60,Pivot.M.Woodie.S2,Pivot.M.Woodie.S2|1,Pivot.M.Woodie.S2|120,Pivot.M.Woodie.S2|15,Pivot.M.Woodie.S2|1M,Pivot.M.Woodie.S2|1W,Pivot.M.Woodie.S2|240,Pivot.M.Woodie.S2|30,Pivot.M.Woodie.S2|5,Pivot.M.Woodie.S2|60,Pivot.M.Woodie.S3,Pivot.M.Woodie.S3|1,Pivot.M.Woodie.S3|120,Pivot.M.Woodie.S3|15,Pivot.M.Woodie.S3|1M,Pivot.M.Woodie.S3|1W,Pivot.M.Woodie.S3|240,Pivot.M.Woodie.S3|30,Pivot.M.Woodie.S3|5,Pivot.M.Woodie.S3|60,post&#95;change,postmarket&#95;change,postmarket&#95;change&#95;abs,postmarket&#95;close,postmarket&#95;high,postmarket&#95;low,postmarket&#95;open,postmarket&#95;volume,pre&#95;change,pre&#95;tax&#95;margin,preferred&#95;dividends,premarket&#95;change,premarket&#95;change&#95;abs,premarket&#95;change&#95;from&#95;open,premarket&#95;change&#95;from&#95;open&#95;abs,premarket&#95;close,premarket&#95;gap,premarket&#95;high,premarket&#95;low,premarket&#95;open,premarket&#95;volume,price&#95;52&#95;week&#95;high,price&#95;52&#95;week&#95;low,price&#95;book&#95;fq,price&#95;book&#95;ratio,price&#95;earnings&#95;to&#95;growth&#95;ttm,price&#95;earnings&#95;ttm,price&#95;free&#95;cash&#95;flow&#95;ttm,price&#95;revenue&#95;ttm,price&#95;sales,price&#95;sales&#95;ratio,quick&#95;ratio,Rec.BBPower,Rec.BBPower|1,Rec.BBPower|120,Rec.BBPower|15,Rec.BBPower|1M,Rec.BBPower|1W,Rec.BBPower|240,Rec.BBPower|30,Rec.BBPower|5,Rec.BBPower|60,Rec.HullMA9,Rec.HullMA9|1,Rec.HullMA9|120,Rec.HullMA9|15,Rec.HullMA9|1M,Rec.HullMA9|1W,Rec.HullMA9|240,Rec.HullMA9|30,Rec.HullMA9|5,Rec.HullMA9|60,Rec.Ichimoku,Rec.Ichimoku|1,Rec.Ichimoku|120,Rec.Ichimoku|15,Rec.Ichimoku|1M,Rec.Ichimoku|1W,Rec.Ichimoku|240,Rec.Ichimoku|30,Rec.Ichimoku|5,Rec.Ichimoku|60,Rec.Stoch.RSI,Rec.Stoch.RSI|1,Rec.Stoch.RSI|120,Rec.Stoch.RSI|15,Rec.Stoch.RSI|1M,Rec.Stoch.RSI|1W,Rec.Stoch.RSI|240,Rec.Stoch.RSI|30,Rec.Stoch.RSI|5,Rec.Stoch.RSI|60,Rec.UO,Rec.UO|1,Rec.UO|120,Rec.UO|15,Rec.UO|1M,Rec.UO|1W,Rec.UO|240,Rec.UO|30,Rec.UO|5,Rec.UO|60,Rec.VWMA,Rec.VWMA|1,Rec.VWMA|120,Rec.VWMA|15,Rec.VWMA|1M,Rec.VWMA|1W,Rec.VWMA|240,Rec.VWMA|30,Rec.VWMA|5,Rec.VWMA|60,Rec.WR,Rec.WR|1,Rec.WR|120,Rec.WR|15,Rec.WR|1M,Rec.WR|1W,Rec.WR|240,Rec.WR|30,Rec.WR|5,Rec.WR|60,Recommend.All,Recommend.All|1,Recommend.All|120,Recommend.All|15,Recommend.All|1M,Recommend.All|1W,Recommend.All|240,Recommend.All|30,Recommend.All|5,Recommend.All|60,Recommend.MA,Recommend.MA|1,Recommend.MA|120,Recommend.MA|15,Recommend.MA|1M,Recommend.MA|1W,Recommend.MA|240,Recommend.MA|30,Recommend.MA|5,Recommend.MA|60,Recommend.Other,Recommend.Other|1,Recommend.Other|120,Recommend.Other|15,Recommend.Other|1M,Recommend.Other|1W,Recommend.Other|240,Recommend.Other|30,Recommend.Other|5,Recommend.Other|60,relative&#95;volume,relative&#95;volume&#95;10d&#95;calc,relative&#95;volume&#95;intraday|5,return&#95;of&#95;invested&#95;capital&#95;percent&#95;ttm,return&#95;on&#95;assets,return&#95;on&#95;equity,return&#95;on&#95;invested&#95;capital,revenue&#95;per&#95;employee,ROC,RSI,RSI|1,RSI|120,RSI|15,RSI|1M,RSI|1W,RSI|240,RSI|30,RSI|5,RSI|60,RSI7,sector,SMA10,SMA10|1,SMA10|120,SMA10|15,SMA10|1M,SMA10|1W,SMA10|240,SMA10|30,SMA10|5,SMA10|60,SMA100,SMA100|1,SMA100|120,SMA100|15,SMA100|1M,SMA100|1W,SMA100|240,SMA100|30,SMA100|5,SMA100|60,SMA20,SMA20|1,SMA20|120,SMA20|15,SMA20|1M,SMA20|1W,SMA20|240,SMA20|30,SMA20|5,SMA20|60,SMA200,SMA200|1,SMA200|120,SMA200|15,SMA200|1M,SMA200|1W,SMA200|240,SMA200|30,SMA200|5,SMA200|60,SMA30,SMA30|1,SMA30|120,SMA30|15,SMA30|1M,SMA30|1W,SMA30|240,SMA30|30,SMA30|5,SMA30|60,SMA5,SMA50,SMA50|1,SMA50|120,SMA50|15,SMA50|1M,SMA50|1W,SMA50|240,SMA50|30,SMA50|5,SMA50|60,Stoch.D,Stoch.D|1,Stoch.D|120,Stoch.D|15,Stoch.D|1M,Stoch.D|1W,Stoch.D|240,Stoch.D|30,Stoch.D|5,Stoch.D|60,Stoch.K,Stoch.K|1,Stoch.K|120,Stoch.K|15,Stoch.K|1M,Stoch.K|1W,Stoch.K|240,Stoch.K|30,Stoch.K|5,Stoch.K|60,Stoch.RSI.D,Stoch.RSI.K,Stoch.RSI.K|1,Stoch.RSI.K|120,Stoch.RSI.K|15,Stoch.RSI.K|1M,Stoch.RSI.K|1W,Stoch.RSI.K|240,Stoch.RSI.K|30,Stoch.RSI.K|5,Stoch.RSI.K|60,submarket,total&#95;assets,total&#95;capital,total&#95;current&#95;assets,total&#95;debt,total&#95;liabilities&#95;fq,total&#95;liabilities&#95;fy,total&#95;revenue,total&#95;shares&#95;outstanding,total&#95;shares&#95;outstanding&#95;fundamental,type,UO,UO|1,UO|120,UO|15,UO|1M,UO|1W,UO|240,UO|30,UO|5,UO|60,update&#95;mode,Value.Traded,Volatility.D,Volatility.M,Volatility.W,volume,VWAP,VWMA,VWMA|1,VWMA|120,VWMA|15,VWMA|1M,VWMA|1W,VWMA|240,VWMA|30,VWMA|5,VWMA|60,W.R,W.R|1,W.R|120,W.R|15,W.R|1M,W.R|1W,W.R|240,W.R|30,W.R|5,W.R|60 defaults to name,average_volume,close,open,change\n    :param string? screenerName: The value of screenerName field returned in .../countries/list endpoint defaults to america\n    :param string? lang: The language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_trading_view_stocks_get_financials',kwargs)\n        "
    },
    "rapi_trading_view_exchanges_list": {
        "api_name": "exchanges_list",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_exchanges_list(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_trading_view_exchanges_list',kwargs)\n        "
    },
    "rapi_trading_view_countries_list": {
        "api_name": "countries_list",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_countries_list(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_trading_view_countries_list',kwargs)\n        "
    },
    "rapi_trading_view_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_v2_auto_complete(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    :param string text: Any term or phrase that you are familiar with defaults to tesla\n    :param string? start: The offset of records to ignore for paging purpose. defaults to 0\n    :param string? search_type: One of the following : stock|futures|forex|index|bond|economic|bitcoin|crypto. Separated by comma for multiple options. Ex : bitcoin,crypto,stock,...\n    :param string? lang: The language code defaults to en\n    :param string? exchange: The value of \\\"value\\\" field returned in .../exchanges/list endpoint\n    '''\n    return await self._request_rapid_api('rapi_trading_view_v2_auto_complete',kwargs)\n        "
    },
    "rapi_trading_view_ideas_list": {
        "api_name": "ideas_list",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_ideas_list(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    :param string? locale: The language code defaults to en\n    :param string? category: Leave empty or one of the following : picked|newest|popular\n    :param string? stock_country: The country code, only functionable if the market parameter is stock. defaults to us\n    :param integer? page: The page index, for paging purpose defaults to 1\n    :param integer? per_page: The number of items per response, for paging purpose defaults to 20\n    :param string? market: Leave empty or one of the following : bond|futures|index|forex|bitcoin|stock\n    :param string? symbol: List ideas posts related to specified symbol. Ex : NASDAQ:AAPL\n    :param string? sort: One of the following : latest&#95;popular|recent|picked&#95;time defaults to latest_popular\n    '''\n    return await self._request_rapid_api('rapi_trading_view_ideas_list',kwargs)\n        "
    },
    "rapi_trading_view_ideas_get_comments": {
        "api_name": "ideas_get_comments",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_ideas_get_comments(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    :param string uuid: The value of image_url field returned in .../ideas/list endpoint defaults to CRK6Iv51\n    :param string? lang: The language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_trading_view_ideas_get_comments',kwargs)\n        "
    },
    "rapi_trading_view_ideas_detail": {
        "api_name": "ideas_detail",
        "category": "Finance",
        "tool_name": "trading_view",
        "code": "async def rapi_trading_view_ideas_detail(self,*args,**kwargs):\n    '''This API helps you to query for data which is obtained by professional providers who have direct and extensive access to stock quotes, futures, popular indices, Forex, Bitcoin and CFDs to create a financial community site/application, such as : tradingview.com\n    \n    \n\n    :param string uuid: The value of image_url field returned in .../ideas/list endpoint defaults to CRK6Iv51\n    :param string? lang: The language code defaults to en\n    '''\n    return await self._request_rapid_api('rapi_trading_view_ideas_detail',kwargs)\n        "
    },
    "rapi_fancyoptions_s_p_500_verticals": {
        "api_name": "s_p_500_verticals",
        "category": "Finance",
        "tool_name": "fancyoptions",
        "code": "async def rapi_fancyoptions_s_p_500_verticals(self,*args,**kwargs):\n    '''Find your edge with the stock options strategy scanner.  Monitor stock options with your options chain endpoints.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fancyoptions_s_p_500_verticals',kwargs)\n        "
    },
    "rapi_routing_number_bank_lookup_get_bank_info": {
        "api_name": "get_bank_info",
        "category": "Finance",
        "tool_name": "routing_number_bank_lookup",
        "code": "async def rapi_routing_number_bank_lookup_get_bank_info(self,*args,**kwargs):\n    '''Lookup a bank's information based on a routing number input. Choose either ACH or wire transfer bank information. Supports XML and JSON responses.\n    \n    \n\n    :param string routingNumber: The routing number that you want to lookup defaults to 121000248\n    :param string? format: Defines the format of the response. Default value is json. Possible inputs are 'xml' and 'json' defaults to json\n    :param string? paymentType: Choose to retrieve either the ACH or Wire Transfer information from the bank. Default value is ACH. Possible values: 'ach' and 'wire' defaults to ach\n    '''\n    return await self._request_rapid_api('rapi_routing_number_bank_lookup_get_bank_info',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_index_trend": {
        "api_name": "stock_index_trend",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_index_trend(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_index_trend',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_profile": {
        "api_name": "stock_profile",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_profile(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_profile',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_balance_sheet": {
        "api_name": "stock_balance_sheet",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_balance_sheet(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_balance_sheet',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_recommendation_trend": {
        "api_name": "stock_recommendation_trend",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_recommendation_trend(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_recommendation_trend',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_net_share_purchase_activity": {
        "api_name": "stock_net_share_purchase_activity",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_net_share_purchase_activity(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_net_share_purchase_activity',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_institution_ownership": {
        "api_name": "stock_institution_ownership",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_institution_ownership(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_institution_ownership',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_sec_filings": {
        "api_name": "stock_sec_filings",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_sec_filings(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_sec_filings',kwargs)\n        "
    },
    "rapi_yahoo_finance_v2_stock_earnings": {
        "api_name": "stock_earnings",
        "category": "Finance",
        "tool_name": "yahoo_finance_v2",
        "code": "async def rapi_yahoo_finance_v2_stock_earnings(self,*args,**kwargs):\n    '''Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance\n    \n    \n\n    :param string symbol: A single symbol defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_yahoo_finance_v2_stock_earnings',kwargs)\n        "
    },
    "rapi_bank_card_bin_num_check_check": {
        "api_name": "check",
        "category": "Finance",
        "tool_name": "bank_card_bin_num_check",
        "code": "async def rapi_bank_card_bin_num_check_check(self,*args,**kwargs):\n    '''A bank card bin number verification service is a system that can help verify the authenticity of a bank card by validating the first six digits, known as the Bank Identification Number (BIN) of the card. The BIN number, also known as the issuer identification number (IIN), is used to identify the institution that issued the card and can provide important information such as the card type, country of issuance, and card network.\n    \n    \n\n    :param integer binnum:  defaults to 535177\n    '''\n    return await self._request_rapid_api('rapi_bank_card_bin_num_check_check',kwargs)\n        "
    },
    "rapi_coinranking_get_coin_ohlc_data": {
        "api_name": "get_coin_ohlc_data",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_coin_ohlc_data(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param string uuid: UUID of the coin you want to request. UUIDs of coins can be found using the Get coins endpoint or by checking the URL on coinranking.com, e.g. https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc is the URL for Bitcoin, and the part before the + (Qwsogvtv82FCd) is the UUID. defaults to Qwsogvtv82FCd\n    :param string? referenceCurrencyUuid: UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar.\n\nDefault value: yhjMzLPhuIDl defaults to yhjMzLPhuIDl\n    :param integer? limit: Limit the amount of time periods for which the OHLC data is retrieved. For example, when interval=hour and limit is 10, data will be returned for the last 10 hours.\n\nDefault value: 50\nSize range: 0-100\n    :param string? interval: The interval determines the time period over which each OHLC item is determined.\n\nDefault value: day\nAllowed values:\nminute 5minutes hour 8hours day week month defaults to day\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_coin_ohlc_data',kwargs)\n        "
    },
    "rapi_coinranking_get_coin": {
        "api_name": "get_coin",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_coin(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param string uuid: UUID of the coin you want to request. UUIDs of coins can be found using the Get coins endpoint or by checking the URL on coinranking.com, e.g. https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc is the URL for Bitcoin, and the part before the + (Qwsogvtv82FCd) is the UUID. defaults to Qwsogvtv82FCd\n    :param string? timePeriod: Time period where the change and sparkline are based on\n\nDefault value: 24h\nAllowed values:\n24h 7d 30d defaults to 24h\n    :param string? referenceCurrencyUuid: UUID of reference currency, in which all the prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl defaults to yhjMzLPhuIDl\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_coin',kwargs)\n        "
    },
    "rapi_coinranking_get_coin_price": {
        "api_name": "get_coin_price",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_coin_price(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param string uuid: UUID of the coin you need the price defaults to Qwsogvtv82FCd\n    :param integer? timestamp: Timestamp. Epoch timestamp in seconds. If it is not provided this endpoint will get the latest price\n    :param string? referenceCurrencyUuid: UUID of reference currency. This is the currency the price is shown in, which defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl defaults to yhjMzLPhuIDl\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_coin_price',kwargs)\n        "
    },
    "rapi_coinranking_get_coins": {
        "api_name": "get_coins",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_coins(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param array? tags: Tags to filter the list on.\n\nAllowed values:\ndefi, stablecoin, nft, dex, exchange, staking, dao, meme, privacy\n\nArray parameters should be suffixed with brackets.\nExample: ?tags[]=defi&tags[]=nft.\n    :param string? orderDirection: Applies direction to the orderBy query, which can be in ascending or descending order.\n\nDefault value: desc\nAllowed values:\ndesc asc defaults to desc\n    :param integer? offset: Offset. Used for pagination.\n\nDefault value: 0 defaults to 0\n    :param string? search: Filter the results by searching for coin names or symbols.\n    :param integer? limit: Limit. Used for pagination.\n\nDefault value: 50\nSize range: 0-100 defaults to 50\n    :param array? symbols: Symbols to filter the list on.\n\nArray parameters should be suffixed with brackets.\nExample: ?symbols[]=BTC&symbols[]=ETH.\n    :param array? tiers: We seperate coins into three tiers. With this parameter you can filter coins on the tiers you need. Read more about out our tiers in our [methodology](https://support.coinranking.com/article/56-what-is-our-ranking-methodology)\n\nArray parameters should be suffixed with brackets.\nExample: ?tiers[]=1&tiers[]=2. defaults to 1\n    :param array? uuids: UUIDs to filter the list on. If you know the UUIDs of the coins you want to fetch, you can use this filter to get the specific coins.\n\nArray parameters should be suffixed with brackets.\nExample: ?uuids[]=razxDUgYGNAdQ&uuids[]=Qwsogvtv82FCd.\n    :param string? orderBy: Index to order by. All sortings excluding listedAt still take our different tiers of coins into account, read more about it in our methodology.\n\nDefault value: marketCap\nAllowed values:\nprice marketCap 24hVolume change listedAt defaults to marketCap\n    :param string? referenceCurrencyUuid: UUID of reference currency, in which all the prices are calculated. This includes the price, the change and the sparkline. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl defaults to yhjMzLPhuIDl\n    :param string? timePeriod: By setting the timeperiod the change percentage and sparkline in the response will be calculated accordingly\n\nDefault value: 24h\nAllowed values:\n3h 24h 7d 30d 3m 1y 3y 5y defaults to 24h\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_coins',kwargs)\n        "
    },
    "rapi_coinranking_get_reference_currencies": {
        "api_name": "get_reference_currencies",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_reference_currencies(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param array? types: A currency is one of three types: coin (e.g. Bitcoin, Ethereum, etc.), fiat (US Dollar, Euro, Yen, etc.) or a denominator (e.g. Satoshi). Filter the response by providing one or more types\n\nAllowed values:\ncoin, fiat, denominator\n\nArray parameters should be suffixed with brackets.\nExample: ?types[]=coin&types[]=fiat.\n    :param string? search: Filter the results by searching for currency names or symbols.\n    :param integer? offset: Offset. Used for pagination\n\nDefault value: 0 defaults to 0\n    :param integer? limit: Limit. Used for pagination\n\nDefault value: 20\nSize range: 0-100 defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_reference_currencies',kwargs)\n        "
    },
    "rapi_coinranking_get_search_suggestions": {
        "api_name": "get_search_suggestions",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_search_suggestions(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param string? query: Value to search on\n    :param string? referenceCurrencyUuid: UUID of reference currency, in which the coin prices are calculated. Defaults to US Dollar\n\nDefault value: yhjMzLPhuIDl defaults to yhjMzLPhuIDl\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_search_suggestions',kwargs)\n        "
    },
    "rapi_coinranking_get_coin_issuance_blockchains": {
        "api_name": "get_coin_issuance_blockchains",
        "category": "Finance",
        "tool_name": "coinranking",
        "code": "async def rapi_coinranking_get_coin_issuance_blockchains(self,*args,**kwargs):\n    '''A simple API for Cryptocurrency Prices - 28k+ users - Real-Time & Historical - Crypto Market Data - Coins - Exchanges - Free & Paid\n    \n    \n\n    :param string uuid: UUID of the coin you want to request the blockchains for defaults to Qwsogvtv82FCd\n    :param integer? offset: Offset. Used for pagination\n\nDefault value: 0 defaults to 0\n    :param integer? limit: Limit. Used for pagination\n\nDefault value: 50\nSize range: 0-100 defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_coinranking_get_coin_issuance_blockchains',kwargs)\n        "
    },
    "rapi_live_metal_prices_latest_in_chosen_currency": {
        "api_name": "latest_in_chosen_currency",
        "category": "Finance",
        "tool_name": "live_metal_prices",
        "code": "async def rapi_live_metal_prices_latest_in_chosen_currency(self,*args,**kwargs):\n    '''Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.\n    \n    \n\n    :param string requestedSymbols:  defaults to XAU,XAG,PA,PL,GBP,EUR\n    :param string requestedCurrency:  defaults to EUR\n    '''\n    return await self._request_rapid_api('rapi_live_metal_prices_latest_in_chosen_currency',kwargs)\n        "
    },
    "rapi_live_metal_prices_latest_retrieve_xau_xag_pa_pl_eur_gbp_usd": {
        "api_name": "latest_retrieve_xau_xag_pa_pl_eur_gbp_usd",
        "category": "Finance",
        "tool_name": "live_metal_prices",
        "code": "async def rapi_live_metal_prices_latest_retrieve_xau_xag_pa_pl_eur_gbp_usd(self,*args,**kwargs):\n    '''Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_live_metal_prices_latest_retrieve_xau_xag_pa_pl_eur_gbp_usd',kwargs)\n        "
    },
    "rapi_live_metal_prices_latest_retrieve_selected_160_symbols": {
        "api_name": "latest_retrieve_selected_160_symbols",
        "category": "Finance",
        "tool_name": "live_metal_prices",
        "code": "async def rapi_live_metal_prices_latest_retrieve_selected_160_symbols(self,*args,**kwargs):\n    '''Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.\n    \n    \n\n    :param string requestedSymbols:  defaults to XAU,XAG,PA,PL,GBP,EUR\n    '''\n    return await self._request_rapid_api('rapi_live_metal_prices_latest_retrieve_selected_160_symbols',kwargs)\n        "
    },
    "rapi_stoxx_get_list_of_publicly_traded_companies": {
        "api_name": "get_list_of_publicly_traded_companies",
        "category": "Finance",
        "tool_name": "stoxx",
        "code": "async def rapi_stoxx_get_list_of_publicly_traded_companies(self,*args,**kwargs):\n    '''Retrieve live and historical information for publicly traded companies\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stoxx_get_list_of_publicly_traded_companies',kwargs)\n        "
    },
    "rapi_stoxx_get_company_market_performance": {
        "api_name": "get_company_market_performance",
        "category": "Finance",
        "tool_name": "stoxx",
        "code": "async def rapi_stoxx_get_company_market_performance(self,*args,**kwargs):\n    '''Retrieve live and historical information for publicly traded companies\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stoxx_get_company_market_performance',kwargs)\n        "
    },
    "rapi_spachero_spac_database_spac_top_10_rankings": {
        "api_name": "spac_top_10_rankings",
        "category": "Finance",
        "tool_name": "spachero_spac_database",
        "code": "async def rapi_spachero_spac_database_spac_top_10_rankings(self,*args,**kwargs):\n    '''Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.\n    \n    \n\n    :param string sortby:  defaults to gainers\n    :param string period:  defaults to daily\n    :param string type:  defaults to common\n    '''\n    return await self._request_rapid_api('rapi_spachero_spac_database_spac_top_10_rankings',kwargs)\n        "
    },
    "rapi_spachero_spac_database_latest_spac_deals_ipos_closings": {
        "api_name": "latest_spac_deals_ipos_closings",
        "category": "Finance",
        "tool_name": "spachero_spac_database",
        "code": "async def rapi_spachero_spac_database_latest_spac_deals_ipos_closings(self,*args,**kwargs):\n    '''Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.\n    \n    \n\n    :param string event:  defaults to deals\n    '''\n    return await self._request_rapid_api('rapi_spachero_spac_database_latest_spac_deals_ipos_closings',kwargs)\n        "
    },
    "rapi_spachero_spac_database_spac_calendar": {
        "api_name": "spac_calendar",
        "category": "Finance",
        "tool_name": "spachero_spac_database",
        "code": "async def rapi_spachero_spac_database_spac_calendar(self,*args,**kwargs):\n    '''Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.\n    \n    \n\n    :param string type:  defaults to redemption\n    '''\n    return await self._request_rapid_api('rapi_spachero_spac_database_spac_calendar',kwargs)\n        "
    },
    "rapi_spachero_spac_database_spac_sec_filings": {
        "api_name": "spac_sec_filings",
        "category": "Finance",
        "tool_name": "spachero_spac_database",
        "code": "async def rapi_spachero_spac_database_spac_sec_filings(self,*args,**kwargs):\n    '''Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.\n    \n    \n\n    :param string? symbol:  defaults to ITAC\n    '''\n    return await self._request_rapid_api('rapi_spachero_spac_database_spac_sec_filings',kwargs)\n        "
    },
    "rapi_spachero_spac_database_spac_price_targets": {
        "api_name": "spac_price_targets",
        "category": "Finance",
        "tool_name": "spachero_spac_database",
        "code": "async def rapi_spachero_spac_database_spac_price_targets(self,*args,**kwargs):\n    '''Official spacHero  SPAC API  with live rankings, SPAC target names, merger meetings, warrant redemption deadlines, price targets, SEC filings, investor presentations and more.\n    \n    \n\n    :param string? symbol:  defaults to SOFI\n    '''\n    return await self._request_rapid_api('rapi_spachero_spac_database_spac_price_targets',kwargs)\n        "
    },
    "rapi_global_flight_data_singapore_scheduled_flights_growth": {
        "api_name": "singapore_scheduled_flights_growth",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_singapore_scheduled_flights_growth(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_singapore_scheduled_flights_growth',kwargs)\n        "
    },
    "rapi_global_flight_data_singapore_scheduled_flights_level": {
        "api_name": "singapore_scheduled_flights_level",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_singapore_scheduled_flights_level(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_singapore_scheduled_flights_level',kwargs)\n        "
    },
    "rapi_global_flight_data_south_korea_scheduled_flights_growth": {
        "api_name": "south_korea_scheduled_flights_growth",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_south_korea_scheduled_flights_growth(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_south_korea_scheduled_flights_growth',kwargs)\n        "
    },
    "rapi_global_flight_data_south_korea_scheduled_flights_level": {
        "api_name": "south_korea_scheduled_flights_level",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_south_korea_scheduled_flights_level(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_south_korea_scheduled_flights_level',kwargs)\n        "
    },
    "rapi_global_flight_data_spain_scheduled_flights_growth": {
        "api_name": "spain_scheduled_flights_growth",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_spain_scheduled_flights_growth(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_spain_scheduled_flights_growth',kwargs)\n        "
    },
    "rapi_global_flight_data_spain_scheduled_flights_level": {
        "api_name": "spain_scheduled_flights_level",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_spain_scheduled_flights_level(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_spain_scheduled_flights_level',kwargs)\n        "
    },
    "rapi_global_flight_data_sweden_scheduled_flights_growth": {
        "api_name": "sweden_scheduled_flights_growth",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_sweden_scheduled_flights_growth(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_sweden_scheduled_flights_growth',kwargs)\n        "
    },
    "rapi_global_flight_data_sweden_scheduled_flights_level": {
        "api_name": "sweden_scheduled_flights_level",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_sweden_scheduled_flights_level(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_sweden_scheduled_flights_level',kwargs)\n        "
    },
    "rapi_global_flight_data_uae_scheduled_flights_growth": {
        "api_name": "uae_scheduled_flights_growth",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_uae_scheduled_flights_growth(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_uae_scheduled_flights_growth',kwargs)\n        "
    },
    "rapi_global_flight_data_uae_scheduled_flights_level": {
        "api_name": "uae_scheduled_flights_level",
        "category": "Finance",
        "tool_name": "global_flight_data",
        "code": "async def rapi_global_flight_data_uae_scheduled_flights_level(self,*args,**kwargs):\n    '''Get scheduled departing flights data by country and by week.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_flight_data_uae_scheduled_flights_level',kwargs)\n        "
    },
    "rapi_gaialens_esg_scores_getesgscores": {
        "api_name": "getesgscores",
        "category": "Finance",
        "tool_name": "gaialens_esg_scores",
        "code": "async def rapi_gaialens_esg_scores_getesgscores(self,*args,**kwargs):\n    '''Real-time, data-driven and transparent ESG scores for over 17,500 companies\n    \n    \n\n    :param string? isin: \n    :param string? sedol: \n    :param string? companyname:  defaults to Apple Inc.\n    '''\n    return await self._request_rapid_api('rapi_gaialens_esg_scores_getesgscores',kwargs)\n        "
    },
    "rapi_stockyapiexchange_7_latest": {
        "api_name": "7_latest",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_7_latest(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_7_latest',kwargs)\n        "
    },
    "rapi_stockyapiexchange_6_daily": {
        "api_name": "6_daily",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_6_daily(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param DATE (YYYY-MM-DD)? startDate:  defaults to 2023-02-01\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_6_daily',kwargs)\n        "
    },
    "rapi_stockyapiexchange_5_history": {
        "api_name": "5_history",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_5_history(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param DATE (YYYY-MM-DD)? startDate:  defaults to 2023-02-01\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_5_history',kwargs)\n        "
    },
    "rapi_stockyapiexchange_4_charts": {
        "api_name": "4_charts",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_4_charts(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_4_charts',kwargs)\n        "
    },
    "rapi_stockyapiexchange_3_summary": {
        "api_name": "3_summary",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_3_summary(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_3_summary',kwargs)\n        "
    },
    "rapi_stockyapiexchange_2_stockdetails": {
        "api_name": "2_stockdetails",
        "category": "Finance",
        "tool_name": "stockyapiexchange",
        "code": "async def rapi_stockyapiexchange_2_stockdetails(self,*args,**kwargs):\n    '''Based on the request parameters, StockyAPIExchange can provide relevant information to the user, such as stock details, summary, charts, history, daily, or latest data. The API can also use autocomplete to suggest stock names or ticker symbols as the user types the keyword, making it easier for the front end develepor to create the perfect Tool\n    \n    \n\n    :param string? keyword:  defaults to GOOG\n    '''\n    return await self._request_rapid_api('rapi_stockyapiexchange_2_stockdetails',kwargs)\n        "
    },
    "rapi_stock_sentiment_api_market_data": {
        "api_name": "market_data",
        "category": "Finance",
        "tool_name": "stock_sentiment_api",
        "code": "async def rapi_stock_sentiment_api_market_data(self,*args,**kwargs):\n    '''Real-time social sentiment API to track news activity related to a certain stock\n    \n    \n\n    :param string ticker:  defaults to TSLA\n    '''\n    return await self._request_rapid_api('rapi_stock_sentiment_api_market_data',kwargs)\n        "
    },
    "rapi_schwab_market_get_sectors": {
        "api_name": "market_get_sectors",
        "category": "Finance",
        "tool_name": "schwab",
        "code": "async def rapi_schwab_market_get_sectors(self,*args,**kwargs):\n    '''Research investments, and follow market news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_schwab_market_get_sectors',kwargs)\n        "
    },
    "rapi_schwab_market_get_indices": {
        "api_name": "market_get_indices",
        "category": "Finance",
        "tool_name": "schwab",
        "code": "async def rapi_schwab_market_get_indices(self,*args,**kwargs):\n    '''Research investments, and follow market news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_schwab_market_get_indices',kwargs)\n        "
    },
    "rapi_schwab_quote_get_option_fundamentals": {
        "api_name": "quote_get_option_fundamentals",
        "category": "Finance",
        "tool_name": "schwab",
        "code": "async def rapi_schwab_quote_get_option_fundamentals(self,*args,**kwargs):\n    '''Research investments, and follow market news\n    \n    \n\n    :param string symbol: The symbol to get information defaults to TSLA\n    '''\n    return await self._request_rapid_api('rapi_schwab_quote_get_option_fundamentals',kwargs)\n        "
    },
    "rapi_schwab_market_get_top_mentions": {
        "api_name": "market_get_top_mentions",
        "category": "Finance",
        "tool_name": "schwab",
        "code": "async def rapi_schwab_market_get_top_mentions(self,*args,**kwargs):\n    '''Research investments, and follow market news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_schwab_market_get_top_mentions',kwargs)\n        "
    },
    "rapi_schwab_market_get_movers": {
        "api_name": "market_get_movers",
        "category": "Finance",
        "tool_name": "schwab",
        "code": "async def rapi_schwab_market_get_movers(self,*args,**kwargs):\n    '''Research investments, and follow market news\n    \n    \n\n    :param string rankType: One of the following : MostActives|PctChgGainers|PctChgLosers|NetGainers|NetLosers|52WkHigh|52WkLow defaults to MostActives\n    :param string exchange: One of the following : US|USN|USQ|USA defaults to US\n    :param string? sectorCusip: The value of Sectors/SectorCusip returned right in this endpoint. defaults to ALL\n    '''\n    return await self._request_rapid_api('rapi_schwab_market_get_movers',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_consumer_price_index": {
        "api_name": "consumer_price_index",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_consumer_price_index(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_consumer_price_index',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_10_year_bond_yield": {
        "api_name": "10_year_bond_yield",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_10_year_bond_yield(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_10_year_bond_yield',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_non_manufacturing_pmi": {
        "api_name": "non_manufacturing_pmi",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_non_manufacturing_pmi(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_non_manufacturing_pmi',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_consumer_sentiment_index": {
        "api_name": "consumer_sentiment_index",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_consumer_sentiment_index(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_consumer_sentiment_index',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_inflation": {
        "api_name": "inflation",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_inflation(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_inflation',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_prime_loan_rates": {
        "api_name": "prime_loan_rates",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_prime_loan_rates(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_prime_loan_rates',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_gdp_growth": {
        "api_name": "gdp_growth",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_gdp_growth(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_gdp_growth',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_fed_funds_overnight_rate": {
        "api_name": "fed_funds_overnight_rate",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_fed_funds_overnight_rate(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_fed_funds_overnight_rate',kwargs)\n        "
    },
    "rapi_u_s_economic_indicators_fed_policy_rates": {
        "api_name": "fed_policy_rates",
        "category": "Finance",
        "tool_name": "u_s_economic_indicators",
        "code": "async def rapi_u_s_economic_indicators_fed_policy_rates(self,*args,**kwargs):\n    '''Get key economic indicators for the United States.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_u_s_economic_indicators_fed_policy_rates',kwargs)\n        "
    },
    "rapi_crowdsense_get_top_coins_by_followers": {
        "api_name": "get_top_coins_by_followers",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_top_coins_by_followers(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_top_coins_by_followers',kwargs)\n        "
    },
    "rapi_crowdsense_get_top_coins_by_sentiment": {
        "api_name": "get_top_coins_by_sentiment",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_top_coins_by_sentiment(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_top_coins_by_sentiment',kwargs)\n        "
    },
    "rapi_crowdsense_get_coin_metrics_by_ticker": {
        "api_name": "get_coin_metrics_by_ticker",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_coin_metrics_by_ticker(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    :param string securityTicker:  defaults to eth\n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_coin_metrics_by_ticker',kwargs)\n        "
    },
    "rapi_crowdsense_get_top_coins_by_followers_change": {
        "api_name": "get_top_coins_by_followers_change",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_top_coins_by_followers_change(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_top_coins_by_followers_change',kwargs)\n        "
    },
    "rapi_crowdsense_get_top_coins_by_mentions": {
        "api_name": "get_top_coins_by_mentions",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_top_coins_by_mentions(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_top_coins_by_mentions',kwargs)\n        "
    },
    "rapi_crowdsense_get_top_coins_by_sentiment_change": {
        "api_name": "get_top_coins_by_sentiment_change",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_top_coins_by_sentiment_change(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_top_coins_by_sentiment_change',kwargs)\n        "
    },
    "rapi_crowdsense_get_coin_historical_metrics_by_ticker": {
        "api_name": "get_coin_historical_metrics_by_ticker",
        "category": "Finance",
        "tool_name": "crowdsense",
        "code": "async def rapi_crowdsense_get_coin_historical_metrics_by_ticker(self,*args,**kwargs):\n    '''The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...\n    \n    \n\n    :param string securityTicker:  defaults to btc\n    :param string date:  defaults to 04/26/2022 06:00 PM\n    :param string? timeFrame:  defaults to 1D\n    '''\n    return await self._request_rapid_api('rapi_crowdsense_get_coin_historical_metrics_by_ticker',kwargs)\n        "
    },
    "rapi_gaialens_company_names_getcompanynames": {
        "api_name": "getcompanynames",
        "category": "Finance",
        "tool_name": "gaialens_company_names",
        "code": "async def rapi_gaialens_company_names_getcompanynames(self,*args,**kwargs):\n    '''Get all company names within the GaiaLens Dataset\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gaialens_company_names_getcompanynames',kwargs)\n        "
    },
    "rapi_tokenlist_tokens": {
        "api_name": "tokens",
        "category": "Finance",
        "tool_name": "tokenlist",
        "code": "async def rapi_tokenlist_tokens(self,*args,**kwargs):\n    '''Collection of tokens and their contract addresses.\n    \n    \n\n    :param string network: arbitrum | aurora | avalanche | bsc | cronos | ethereum | fantom | harmony | heco | kcc | metis | moonriver | oasisemerald | optimism | polygon | telos\n    '''\n    return await self._request_rapid_api('rapi_tokenlist_tokens',kwargs)\n        "
    },
    "rapi_involve_thailand_fx_rates_get_latest_fx_rates": {
        "api_name": "get_latest_fx_rates",
        "category": "Finance",
        "tool_name": "involve_thailand_fx_rates",
        "code": "async def rapi_involve_thailand_fx_rates_get_latest_fx_rates(self,*args,**kwargs):\n    '''Involve Thailand FX Rates\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_involve_thailand_fx_rates_get_latest_fx_rates',kwargs)\n        "
    },
    "rapi_crypto_asset_cold_wallet_create_getactivecurrencylist": {
        "api_name": "getactivecurrencylist",
        "category": "Finance",
        "tool_name": "crypto_asset_cold_wallet_create",
        "code": "async def rapi_crypto_asset_cold_wallet_create_getactivecurrencylist(self,*args,**kwargs):\n    '''A free service that allows you to create cold wallets for various crypto assets such as BTC, ADA, ALGO, ATOM, AVAX, CHZ, DOT, EOS, LINK, MANA, MATIC, SHIB, SOL, TRX, ETH, LTC, XTZ, DOGE, XLM, and XRP. It can be a software or a website that you can use to create a cold wallet for the supported crypto assets. You can store the private key in a safe place and use the public key to receive the crypto assets. Some of these services also allow you to print out the private key on a physical paper an...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_asset_cold_wallet_create_getactivecurrencylist',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_stock_ownership": {
        "api_name": "stock_ownership",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_stock_ownership(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to MSFT\n    :param boolean includeCurrentQuarter:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_stock_ownership',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_holder": {
        "api_name": "holder",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_holder(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_holder',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_executives": {
        "api_name": "executives",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_executives(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to MSFT\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_executives',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_shares_float": {
        "api_name": "shares_float",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_shares_float(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to MSFT\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_shares_float',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_profile": {
        "api_name": "profile",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_profile(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to AAPL\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_profile',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_cashflow": {
        "api_name": "cashflow",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_cashflow(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to TSLA\n    :param string period:  defaults to quarter\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_cashflow',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_balance": {
        "api_name": "balance",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_balance(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    :param string symbol:  defaults to MSFT\n    :param string period:  defaults to quarter\n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_balance',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_crypto_symbol": {
        "api_name": "crypto_symbol",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_crypto_symbol(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_crypto_symbol',kwargs)\n        "
    },
    "rapi_holistic_finance_stock_data_forex_symbol": {
        "api_name": "forex_symbol",
        "category": "Finance",
        "tool_name": "holistic_finance_stock_data",
        "code": "async def rapi_holistic_finance_stock_data_forex_symbol(self,*args,**kwargs):\n    '''Provides stock data based on multiple sources such as Yahoo Finance.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_holistic_finance_stock_data_forex_symbol',kwargs)\n        "
    },
    "rapi_currency_quake_pair_strength": {
        "api_name": "pair_strength",
        "category": "Finance",
        "tool_name": "currency_quake",
        "code": "async def rapi_currency_quake_pair_strength(self,*args,**kwargs):\n    '''Provides Access to the statistical strength of all 8 major currencies, across 28 Forex pairs and on 4 different time frames.\n    \n    \n\n    :param string timeframe: Timeframe (h1, h4, d1 or w1) defaults to h1\n    '''\n    return await self._request_rapid_api('rapi_currency_quake_pair_strength',kwargs)\n        "
    },
    "rapi_currency_quake_symbol_strength": {
        "api_name": "symbol_strength",
        "category": "Finance",
        "tool_name": "currency_quake",
        "code": "async def rapi_currency_quake_symbol_strength(self,*args,**kwargs):\n    '''Provides Access to the statistical strength of all 8 major currencies, across 28 Forex pairs and on 4 different time frames.\n    \n    \n\n    :param string timeframe: Timeframe (h1, h4, d1 or w1) defaults to h1\n    '''\n    return await self._request_rapid_api('rapi_currency_quake_symbol_strength',kwargs)\n        "
    },
    "rapi_investing_financial_stocks_crypto_info": {
        "api_name": "crypto_info",
        "category": "Finance",
        "tool_name": "investing_financial_stocks",
        "code": "async def rapi_investing_financial_stocks_crypto_info(self,*args,**kwargs):\n    '''get all investing.com stocks realtime data in multi language and filters\n    \n    \n\n    :param string slug: get it from all crypto the name but slugged  defaults to binance-usd\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_investing_financial_stocks_crypto_info',kwargs)\n        "
    },
    "rapi_investing_financial_stocks_list": {
        "api_name": "list",
        "category": "Finance",
        "tool_name": "investing_financial_stocks",
        "code": "async def rapi_investing_financial_stocks_list(self,*args,**kwargs):\n    '''get all investing.com stocks realtime data in multi language and filters\n    \n    \n\n    :param string country: get from screener/filters defaults to 52\n    :param object? last: get from filters ranges but \n**max is required with min of every range** defaults to {min:10,max:100}\n    :param string? page:  defaults to 1\n    :param string? industry: get from screener/filters in id from industries list\n    :param string? sector: get from screener/filters in id from sectors list\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_investing_financial_stocks_list',kwargs)\n        "
    },
    "rapi_investing_financial_stocks_all_crypto": {
        "api_name": "all_crypto",
        "category": "Finance",
        "tool_name": "investing_financial_stocks",
        "code": "async def rapi_investing_financial_stocks_all_crypto(self,*args,**kwargs):\n    '''get all investing.com stocks realtime data in multi language and filters\n    \n    \n\n    :param string? page:  defaults to 1\n    :param string? lang:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_investing_financial_stocks_all_crypto',kwargs)\n        "
    },
    "rapi_funds_v1getfundlatestprice": {
        "api_name": "v1getfundlatestprice",
        "category": "Finance",
        "tool_name": "funds",
        "code": "async def rapi_funds_v1getfundlatestprice(self,*args,**kwargs):\n    '''Get daily and historical funds prices by ISIN ![](https://tip.ep-proxy.net/t/ra-funds)\n    \n    \n\n    :param string isin: Fund's ISIN defaults to LU0690375182\n    '''\n    return await self._request_rapid_api('rapi_funds_v1getfundlatestprice',kwargs)\n        "
    },
    "rapi_funds_v1getfundhistoricalprices": {
        "api_name": "v1getfundhistoricalprices",
        "category": "Finance",
        "tool_name": "funds",
        "code": "async def rapi_funds_v1getfundhistoricalprices(self,*args,**kwargs):\n    '''Get daily and historical funds prices by ISIN ![](https://tip.ep-proxy.net/t/ra-funds)\n    \n    \n\n    :param string isin: Fund's ISIN defaults to LU0690375182\n    :param string? to: Finishing date. Format YYYY-MM-DD. defaults to 2020-12-31\n    :param string? from: Starting date. Format YYYY-MM-DD. defaults to 2015-01-25\n    '''\n    return await self._request_rapid_api('rapi_funds_v1getfundhistoricalprices',kwargs)\n        "
    },
    "rapi_crypto_exchanges_exchange_by_id": {
        "api_name": "exchange_by_id",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_exchange_by_id(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    :param string exchangeId:  defaults to binance\n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_exchange_by_id',kwargs)\n        "
    },
    "rapi_crypto_exchanges_all_markets": {
        "api_name": "all_markets",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_all_markets(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_all_markets',kwargs)\n        "
    },
    "rapi_crypto_exchanges_all_exchanges": {
        "api_name": "all_exchanges",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_all_exchanges(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_all_exchanges',kwargs)\n        "
    },
    "rapi_crypto_exchanges_rate_by_id": {
        "api_name": "rate_by_id",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_rate_by_id(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    :param string id:  defaults to bitcoin\n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_rate_by_id',kwargs)\n        "
    },
    "rapi_crypto_exchanges_all_rates": {
        "api_name": "all_rates",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_all_rates(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_all_rates',kwargs)\n        "
    },
    "rapi_crypto_exchanges_all_assets": {
        "api_name": "all_assets",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_all_assets(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_all_assets',kwargs)\n        "
    },
    "rapi_crypto_exchanges_asset_by_id": {
        "api_name": "asset_by_id",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_asset_by_id(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    :param string id:  defaults to bitcoin\n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_asset_by_id',kwargs)\n        "
    },
    "rapi_crypto_exchanges_asset_markets_by_id": {
        "api_name": "asset_markets_by_id",
        "category": "Finance",
        "tool_name": "crypto_exchanges",
        "code": "async def rapi_crypto_exchanges_asset_markets_by_id(self,*args,**kwargs):\n    '''Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.\n    \n    \n\n    :param string id:  defaults to bitcoin\n    '''\n    return await self._request_rapid_api('rapi_crypto_exchanges_asset_markets_by_id',kwargs)\n        "
    },
    "rapi_macrotrends_finance_history_prices": {
        "api_name": "history_prices",
        "category": "Finance",
        "tool_name": "macrotrends_finance",
        "code": "async def rapi_macrotrends_finance_history_prices(self,*args,**kwargs):\n    '''Stocks API helps to query for the Financials Statement/Sheet that has over 10 years of finacial data.\n    \n    \n\n    :param string? range:  defaults to 1y\n    :param string? symbol:  defaults to TSLA\n    '''\n    return await self._request_rapid_api('rapi_macrotrends_finance_history_prices',kwargs)\n        "
    },
    "rapi_macrotrends_finance_financial_cash_statement": {
        "api_name": "financial_cash_statement",
        "category": "Finance",
        "tool_name": "macrotrends_finance",
        "code": "async def rapi_macrotrends_finance_financial_cash_statement(self,*args,**kwargs):\n    '''Stocks API helps to query for the Financials Statement/Sheet that has over 10 years of finacial data.\n    \n    \n\n    :param string symbol:  defaults to AMZN\n    :param string? formstyle:  defaults to dataframe\n    :param string? freq:  defaults to Q\n    '''\n    return await self._request_rapid_api('rapi_macrotrends_finance_financial_cash_statement',kwargs)\n        "
    },
    "rapi_macrotrends_finance_financial_income_statement": {
        "api_name": "financial_income_statement",
        "category": "Finance",
        "tool_name": "macrotrends_finance",
        "code": "async def rapi_macrotrends_finance_financial_income_statement(self,*args,**kwargs):\n    '''Stocks API helps to query for the Financials Statement/Sheet that has over 10 years of finacial data.\n    \n    \n\n    :param string symbol:  defaults to AAPL\n    :param string? formstyle:  defaults to dataframe\n    :param string? freq:  defaults to Q\n    '''\n    return await self._request_rapid_api('rapi_macrotrends_finance_financial_income_statement',kwargs)\n        "
    },
    "rapi_macrotrends_finance_financial_balance_sheet": {
        "api_name": "financial_balance_sheet",
        "category": "Finance",
        "tool_name": "macrotrends_finance",
        "code": "async def rapi_macrotrends_finance_financial_balance_sheet(self,*args,**kwargs):\n    '''Stocks API helps to query for the Financials Statement/Sheet that has over 10 years of finacial data.\n    \n    \n\n    :param string symbol:  defaults to MSFT\n    :param string? formstyle:  defaults to dataframe\n    :param string? freq:  defaults to Q\n    '''\n    return await self._request_rapid_api('rapi_macrotrends_finance_financial_balance_sheet',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_search": {
        "api_name": "coins_search",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_search(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param string string: A word or name of any currencies defaults to bit\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_search',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_analysis": {
        "api_name": "coins_get_analysis",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_analysis(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 1057391\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    :param integer? page: For paging purpose defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_analysis',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_fullsize_chart": {
        "api_name": "coins_get_fullsize_chart",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_fullsize_chart(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 33\n    :param integer? pair_interval: One of the following is allowed 60 (1min)|300 (5min)|900 (15min)|1800 (30min)|3600 (1h)|18000 (5h)|86400 (1d)|week (1w) |month (1m) defaults to 900\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_fullsize_chart',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_historical_data": {
        "api_name": "coins_get_historical_data",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_historical_data(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param string date_from: Date in ddmmyyyy format defaults to 20012020\n    :param string date_to: Date in ddmmyyyy format defaults to 19022020\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 33\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param string? interval: One of the following is allowed  day|week|month defaults to day\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_historical_data',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_markets": {
        "api_name": "coins_get_markets",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_markets(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer cur2: The value of edition&#95;currency&#95;id returned in .../get-meta-data endpoint defaults to 12\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 1057391\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_markets',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_overview": {
        "api_name": "coins_get_overview",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_overview(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 33\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_overview',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_get_meta_data": {
        "api_name": "get_meta_data",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_get_meta_data(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param string locale_info: The language code defaults to en_US\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_get_meta_data',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_coins_get_brief_chart": {
        "api_name": "coins_get_brief_chart",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_coins_get_brief_chart(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer pair_ID: Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc... defaults to 33\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    :param string? range: One of the following is allowed d|w|1m|1y|5y|max defaults to p\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_coins_get_brief_chart',kwargs)\n        "
    },
    "rapi_investing_cryptocurrency_markets_currencies_list": {
        "api_name": "currencies_list",
        "category": "Finance",
        "tool_name": "investing_cryptocurrency_markets",
        "code": "async def rapi_investing_cryptocurrency_markets_currencies_list(self,*args,**kwargs):\n    '''These APIs provide data of all cryptocurrencies, markets, ideal for tracking prices and exchange rates.\n    \n    \n\n    :param integer? time_utc_offset: UTC value in seconds, for example : utc+8 -> 8 * 60 * 60 = 28800 defaults to 28800\n    :param integer? lang_ID: The value of all&#95;langs/lang&#95;ID returned in .../get-meta-data endpoint defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_investing_cryptocurrency_markets_currencies_list',kwargs)\n        "
    },
    "rapi_scoring_tables_api_marks_women": {
        "api_name": "marks_women",
        "category": "Health_and_Fitness",
        "tool_name": "scoring_tables_api",
        "code": "async def rapi_scoring_tables_api_marks_women(self,*args,**kwargs):\n    '''This API uses the World Athletics scoring tables and pulls the marks required for certain point values.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_scoring_tables_api_marks_women',kwargs)\n        "
    },
    "rapi_scoring_tables_api_marks_men": {
        "api_name": "marks_men",
        "category": "Health_and_Fitness",
        "tool_name": "scoring_tables_api",
        "code": "async def rapi_scoring_tables_api_marks_men(self,*args,**kwargs):\n    '''This API uses the World Athletics scoring tables and pulls the marks required for certain point values.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_scoring_tables_api_marks_men',kwargs)\n        "
    },
    "rapi_scoring_tables_api_marks_men_points": {
        "api_name": "marks_men_points",
        "category": "Health_and_Fitness",
        "tool_name": "scoring_tables_api",
        "code": "async def rapi_scoring_tables_api_marks_men_points(self,*args,**kwargs):\n    '''This API uses the World Athletics scoring tables and pulls the marks required for certain point values.\n    \n    \n\n    :param integer points: Please enter a number between 1 and 1400. defaults to 1400\n    '''\n    return await self._request_rapid_api('rapi_scoring_tables_api_marks_men_points',kwargs)\n        "
    },
    "rapi_airvisual_stations_v2_get_measurements": {
        "api_name": "stations_v2_get_measurements",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_stations_v2_get_measurements(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param string id: The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint defaults to Jmy9oL75KSZnsqi6L\n    :param string? x-user-timezone:  defaults to Asia/Singapore\n    :param string? x-units-temperature: One of the following : fahrenheit|celsius defaults to celsius\n    :param string? x-user-lang:  defaults to en-US\n    :param string? x-units-pressure: One of the following : hg|mbar defaults to mbar\n    :param string? x-units-distance: One of the following : miles|kilometer defaults to kilometer\n    :param string? x-aqi-index: One of the following : us|cn defaults to us\n    '''\n    return await self._request_rapid_api('rapi_airvisual_stations_v2_get_measurements',kwargs)\n        "
    },
    "rapi_airvisual_cities_v2_get_information": {
        "api_name": "cities_v2_get_information",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_cities_v2_get_information(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param string id: The value of id field (type is city) that returned in \u2026/v2/auto-complete endpoint defaults to hW7vArorRd8cT9h6v\n    :param string? x-units-temperature: One of the following : fahrenheit|celsius defaults to celsius\n    :param string? x-aqi-index: One of the following : us|cn defaults to us\n    :param string? x-user-timezone:  defaults to Asia/Singapore\n    :param string? x-user-lang:  defaults to en-US\n    :param string? x-units-pressure: One of the following : hg|mbar defaults to mbar\n    :param string? x-units-distance: One of the following : miles|kilometer defaults to kilometer\n    '''\n    return await self._request_rapid_api('rapi_airvisual_cities_v2_get_information',kwargs)\n        "
    },
    "rapi_airvisual_places_v2_list_by_map": {
        "api_name": "places_v2_list_by_map",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_places_v2_list_by_map(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param integer NElat: North East latitude of boundary defaults to 40.95240778688068\n    :param integer NElon: North East longitude of boundary defaults to -73.43762621283531\n    :param integer SWlat: Sount West latitude of boundary defaults to 40.43539120253853\n    :param integer SWlon: Sount West longitude of boundary defaults to -74.41956583410503\n    :param string? x-user-lang:  defaults to en-US\n    :param string? x-units-pressure: One of the following : hg|mbar defaults to mbar\n    :param string? x-units-temperature: One of the following : fahrenheit|celsius defaults to celsius\n    :param string? x-user-timezone:  defaults to Asia/Singapore\n    :param string? x-aqi-index: One of the following : us|cn defaults to us\n    :param string? x-units-distance: One of the following : miles|kilometer defaults to kilometer\n    '''\n    return await self._request_rapid_api('rapi_airvisual_places_v2_list_by_map',kwargs)\n        "
    },
    "rapi_airvisual_v2_auto_complete": {
        "api_name": "v2_auto_complete",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_v2_auto_complete(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param string q: Name of countries, cities, districts, places, etc... defaults to singapore\n    :param string? x-units-pressure: One of the following : hg|mbar defaults to mbar\n    :param string? x-aqi-index: One of the following : us|cn defaults to us\n    :param string? x-units-temperature: One of the following : fahrenheit|celsius defaults to celsius\n    :param string? x-units-distance: One of the following : miles|kilometer defaults to kilometer\n    :param string? x-user-timezone:  defaults to Asia/Singapore\n    :param string? x-user-lang:  defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_airvisual_v2_auto_complete',kwargs)\n        "
    },
    "rapi_airvisual_cities_get_information_deprecated": {
        "api_name": "cities_get_information_deprecated",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_cities_get_information_deprecated(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param string id: The value of id field (type is city) that received from .../auto-complete API defaults to hW7vArorRd8cT9h6v\n    :param string? aqiIndex: AQI index (us | cn) defaults to us\n    :param string? timezone:  defaults to Asia/Singapore\n    :param string? lang:  defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_airvisual_cities_get_information_deprecated',kwargs)\n        "
    },
    "rapi_airvisual_cities_get_measurements_deprecated": {
        "api_name": "cities_get_measurements_deprecated",
        "category": "Health_and_Fitness",
        "tool_name": "airvisual",
        "code": "async def rapi_airvisual_cities_get_measurements_deprecated(self,*args,**kwargs):\n    '''Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application\n    \n    \n\n    :param string id: The value of id field (type is city) that received from .../auto-complete API defaults to hW7vArorRd8cT9h6v\n    :param string? timezone:  defaults to Asia/Singapore\n    :param string? lang:  defaults to en_US\n    :param string? aqiIndex:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_airvisual_cities_get_measurements_deprecated',kwargs)\n        "
    },
    "rapi_appointment_system_api_appointment_time_list": {
        "api_name": "appointment_time_list",
        "category": "Health_and_Fitness",
        "tool_name": "appointment_system_api",
        "code": "async def rapi_appointment_system_api_appointment_time_list(self,*args,**kwargs):\n    '''Appointment System Api with user operations and admin operations. Api has all appointment operations for a clinic\n    \n    \n\n    :param string date:  defaults to 2022.09.05\n    :param string? clinicName:  defaults to DemoClinic\n    '''\n    return await self._request_rapid_api('rapi_appointment_system_api_appointment_time_list',kwargs)\n        "
    },
    "rapi_cancer_rates_by_usa_state_get_by_state": {
        "api_name": "get_by_state",
        "category": "Health_and_Fitness",
        "tool_name": "cancer_rates_by_usa_state",
        "code": "async def rapi_cancer_rates_by_usa_state_get_by_state(self,*args,**kwargs):\n    '''list of usa states ranked by cancer rates\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cancer_rates_by_usa_state_get_by_state',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_food_item_by_id": {
        "api_name": "view_food_item_by_id",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_food_item_by_id(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_food_item_by_id',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_all_food_items": {
        "api_name": "view_all_food_items",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_all_food_items(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    :param integer? limit: limit the length of response defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_all_food_items',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_all_types_with_their_food_items": {
        "api_name": "view_all_types_with_their_food_items",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_all_types_with_their_food_items(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_all_types_with_their_food_items',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_all_cores_with_their_food_items": {
        "api_name": "view_all_cores_with_their_food_items",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_all_cores_with_their_food_items(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_all_cores_with_their_food_items',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_food_items_by_type": {
        "api_name": "view_food_items_by_type",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_food_items_by_type(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_food_items_by_type',kwargs)\n        "
    },
    "rapi_ind_nutrient_api_view_food_item_by_name": {
        "api_name": "view_food_item_by_name",
        "category": "Health_and_Fitness",
        "tool_name": "ind_nutrient_api",
        "code": "async def rapi_ind_nutrient_api_view_food_item_by_name(self,*args,**kwargs):\n    '''This API provides users with nutritional information for Indian foods. Users can retrieve a list of Indian dishes with their corresponding nutritional values, including the number of calories, the amount of protein, fat, and carbohydrates in grams.\n\nBase URL: \n\nAuthorization-free integration: Follow the endpoint definitions to seamlessly integrate the Ind Nutrients API into your app for accessing Indian nutrient data without any authentication requirements.\n\nBase URL: https://indnutrientsapi....\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ind_nutrient_api_view_food_item_by_name',kwargs)\n        "
    },
    "rapi_clinicalmarkers_bmi": {
        "api_name": "bmi",
        "category": "Health_and_Fitness",
        "tool_name": "clinicalmarkers",
        "code": "async def rapi_clinicalmarkers_bmi(self,*args,**kwargs):\n    '''Easy calculation of clinical markers for medical applications.\n    \n    \n\n    :param integer HeightInCentrimetres: \n    :param integer WeightInKilograms: \n    '''\n    return await self._request_rapid_api('rapi_clinicalmarkers_bmi',kwargs)\n        "
    },
    "rapi_clinicalmarkers_bsa": {
        "api_name": "bsa",
        "category": "Health_and_Fitness",
        "tool_name": "clinicalmarkers",
        "code": "async def rapi_clinicalmarkers_bsa(self,*args,**kwargs):\n    '''Easy calculation of clinical markers for medical applications.\n    \n    \n\n    :param integer WeightInKilograms: \n    :param integer HeightInCentrimetres: \n    '''\n    return await self._request_rapid_api('rapi_clinicalmarkers_bsa',kwargs)\n        "
    },
    "rapi_musclewiki_get_exercise_by_id": {
        "api_name": "get_exercise_by_id",
        "category": "Health_and_Fitness",
        "tool_name": "musclewiki",
        "code": "async def rapi_musclewiki_get_exercise_by_id(self,*args,**kwargs):\n    '''The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.\n    \n    \n\n    :param string id: Exercise's ID defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_musclewiki_get_exercise_by_id',kwargs)\n        "
    },
    "rapi_musclewiki_get_exercises": {
        "api_name": "get_exercises",
        "category": "Health_and_Fitness",
        "tool_name": "musclewiki",
        "code": "async def rapi_musclewiki_get_exercises(self,*args,**kwargs):\n    '''The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.\n    \n    \n\n    :param string? force: Filter by force\n    :param string? name: Filter by exercises name\n    :param string? muscle: Filter by targeted muscle\n    :param string? category: Filter by category\n    :param string? difficulty: Filter by difficulty\n    '''\n    return await self._request_rapid_api('rapi_musclewiki_get_exercises',kwargs)\n        "
    },
    "rapi_musclewiki_get_attributes": {
        "api_name": "get_attributes",
        "category": "Health_and_Fitness",
        "tool_name": "musclewiki",
        "code": "async def rapi_musclewiki_get_attributes(self,*args,**kwargs):\n    '''The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_musclewiki_get_attributes',kwargs)\n        "
    },
    "rapi_calories_burned_by_api_ninjas_v1_caloriesburned": {
        "api_name": "v1_caloriesburned",
        "category": "Health_and_Fitness",
        "tool_name": "calories_burned_by_api_ninjas",
        "code": "async def rapi_calories_burned_by_api_ninjas_v1_caloriesburned(self,*args,**kwargs):\n    '''Calories burned calculator for hundreds of different sports/activities. See more info at https://api-ninjas.com/api/caloriesburned.\n    \n    \n\n    :param string activity: name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing) defaults to skiing\n    :param integer? weight: weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.\n    :param string? duration: how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).\n    '''\n    return await self._request_rapid_api('rapi_calories_burned_by_api_ninjas_v1_caloriesburned',kwargs)\n        "
    },
    "rapi_exercisedb_list_of_bodyparts": {
        "api_name": "list_of_bodyparts",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_list_of_bodyparts(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exercisedb_list_of_bodyparts',kwargs)\n        "
    },
    "rapi_exercisedb_list_of_target_muscles": {
        "api_name": "list_of_target_muscles",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_list_of_target_muscles(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exercisedb_list_of_target_muscles',kwargs)\n        "
    },
    "rapi_exercisedb_list_of_equipment": {
        "api_name": "list_of_equipment",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_list_of_equipment(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exercisedb_list_of_equipment',kwargs)\n        "
    },
    "rapi_exercisedb_exercise_by_id": {
        "api_name": "exercise_by_id",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_exercise_by_id(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    :param string id: `id` property of exercise object\n    '''\n    return await self._request_rapid_api('rapi_exercisedb_exercise_by_id',kwargs)\n        "
    },
    "rapi_exercisedb_list_by_name": {
        "api_name": "list_by_name",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_list_by_name(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    :param string name: `name` property of exercise object\n    '''\n    return await self._request_rapid_api('rapi_exercisedb_list_by_name',kwargs)\n        "
    },
    "rapi_exercisedb_list_of_all_exercises": {
        "api_name": "list_of_all_exercises",
        "category": "Health_and_Fitness",
        "tool_name": "exercisedb",
        "code": "async def rapi_exercisedb_list_of_all_exercises(self,*args,**kwargs):\n    '''The ExerciseDB gives you access to over 1300 exercises with individual exercise data and animated demonstrations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_exercisedb_list_of_all_exercises',kwargs)\n        "
    },
    "rapi_exercises_by_api_ninjas_v1_exercises": {
        "api_name": "v1_exercises",
        "category": "Health_and_Fitness",
        "tool_name": "exercises_by_api_ninjas",
        "code": "async def rapi_exercises_by_api_ninjas_v1_exercises(self,*args,**kwargs):\n    '''Get workout exercises for every muscle group. See more info at https://api-ninjas.com/api/exercises.\n    \n    \n\n    :param integer? offset: number of results to offset for pagination. Default is 0.\n    :param string? muscle: muscle group targeted by the exercise. Possible values are:\n\nabdominals\nabductors\nadductors\nbiceps\ncalves\nchest\nforearms\nglutes\nhamstrings\nlats\nlower_back\nmiddle_back\nneck\nquadriceps\ntraps\ntriceps defaults to biceps\n    :param string? type: exercise type. Possible values are:\n\ncardio\nolympic_weightlifting\nplyometrics\npowerlifting\nstrength\nstretching\nstrongman\n    :param string? difficulty: difficulty level of the exercise. Possible values are:\n\nbeginner\nintermediate\nexpert\n    :param string? name: name of exercise. This value can be partial (e.g. press will match Dumbbell Bench Press)\n    '''\n    return await self._request_rapid_api('rapi_exercises_by_api_ninjas_v1_exercises',kwargs)\n        "
    },
    "rapi_fastingcenters_get_all_fastingcenters": {
        "api_name": "get_all_fastingcenters",
        "category": "Health_and_Fitness",
        "tool_name": "fastingcenters",
        "code": "async def rapi_fastingcenters_get_all_fastingcenters(self,*args,**kwargs):\n    '''fastingcenters \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fastingcenters_get_all_fastingcenters',kwargs)\n        "
    },
    "rapi_pregnancy_calculator_api_fertility_window_get": {
        "api_name": "fertility_window_get",
        "category": "Health_and_Fitness",
        "tool_name": "pregnancy_calculator_api",
        "code": "async def rapi_pregnancy_calculator_api_fertility_window_get(self,*args,**kwargs):\n    '''Welcome to the Pregnancy Calculator API. This API provides endpoints for calculating Fertility Window, Pregnancy Due Date, Pregnancy Week, and Pregnancy Weight Recommendation. With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure of a request. In case of an error, the response will contain an error message in JSON format. The HTTP status cod...\n    \n    \n\n    :param string cycle_length: The length of the menstrual cycle in days. defaults to 28\n    :param string menstrual_date: The date of the first day of the last menstrual period in the format '**YYYY-MM-DD**'. defaults to 2023-06-01\n    '''\n    return await self._request_rapid_api('rapi_pregnancy_calculator_api_fertility_window_get',kwargs)\n        "
    },
    "rapi_pregnancy_calculator_api_conception_date": {
        "api_name": "conception_date",
        "category": "Health_and_Fitness",
        "tool_name": "pregnancy_calculator_api",
        "code": "async def rapi_pregnancy_calculator_api_conception_date(self,*args,**kwargs):\n    '''Welcome to the Pregnancy Calculator API. This API provides endpoints for calculating Fertility Window, Pregnancy Due Date, Pregnancy Week, and Pregnancy Weight Recommendation. With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure of a request. In case of an error, the response will contain an error message in JSON format. The HTTP status cod...\n    \n    \n\n    :param string conception_date: The date of conception in the format '**YYYY-MM-DD**' defaults to 2023-05-01\n    '''\n    return await self._request_rapid_api('rapi_pregnancy_calculator_api_conception_date',kwargs)\n        "
    },
    "rapi_pregnancy_calculator_api_last_menstrual_period_lmp": {
        "api_name": "last_menstrual_period_lmp",
        "category": "Health_and_Fitness",
        "tool_name": "pregnancy_calculator_api",
        "code": "async def rapi_pregnancy_calculator_api_last_menstrual_period_lmp(self,*args,**kwargs):\n    '''Welcome to the Pregnancy Calculator API. This API provides endpoints for calculating Fertility Window, Pregnancy Due Date, Pregnancy Week, and Pregnancy Weight Recommendation. With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure of a request. In case of an error, the response will contain an error message in JSON format. The HTTP status cod...\n    \n    \n\n    :param string cycle_length: The average length of the user's menstrual cycle in days. defaults to 28\n    :param string last_period_date: The date of the user's last menstrual period in the format '**YYYY-MM-DD**'. defaults to 2023-01-01\n    '''\n    return await self._request_rapid_api('rapi_pregnancy_calculator_api_last_menstrual_period_lmp',kwargs)\n        "
    },
    "rapi_selector_tipo_consultas_generar_fhir_id_qr": {
        "api_name": "generar_fhir_id_qr",
        "category": "Health_and_Fitness",
        "tool_name": "selector_tipo_consultas",
        "code": "async def rapi_selector_tipo_consultas_generar_fhir_id_qr(self,*args,**kwargs):\n    '''decide el tipo de consulta\n    \n    \n\n    :param string fhir_id:  defaults to a554c619-bc73-4080-9cc9-74da38789d48\n    '''\n    return await self._request_rapid_api('rapi_selector_tipo_consultas_generar_fhir_id_qr',kwargs)\n        "
    },
    "rapi_selector_tipo_consultas_triage_virtual": {
        "api_name": "triage_virtual",
        "category": "Health_and_Fitness",
        "tool_name": "selector_tipo_consultas",
        "code": "async def rapi_selector_tipo_consultas_triage_virtual(self,*args,**kwargs):\n    '''decide el tipo de consulta\n    \n    \n\n    :param string id:  defaults to me duele la cabeza\n    '''\n    return await self._request_rapid_api('rapi_selector_tipo_consultas_triage_virtual',kwargs)\n        "
    },
    "rapi_health_calculator_api_daily_caloric_needs": {
        "api_name": "daily_caloric_needs",
        "category": "Health_and_Fitness",
        "tool_name": "health_calculator_api",
        "code": "async def rapi_health_calculator_api_daily_caloric_needs(self,*args,**kwargs):\n    '''Welcome to the Health Calculator API. This API provides endpoints for calculating Body Mass Index (BMI), Body Fat Percentage, Basal Metabolic Rate (BMR), Daily Caloric Needs (DCN), Daily Water Intake (DWI), Target Heart Rate (THR), Macronutrients Distribution and Ideal Body Weight (IBW). With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure ...\n    \n    \n\n    :param string activity_level: The activity level of the person. Valid values are \\\"**sedentary**\\\", \\\"**lightly_active**\\\", \\\"**moderately_active**\\\", \\\"**very_active**\\\", or \\\"**extra_active**\\\". defaults to sedentary\n    :param string gender: The gender of the person. Valid values are \\\"**male**\\\" or \\\"**female**\\\". defaults to male\n    :param string goal: The goal of the person. Valid values are \\\"**weight_loss**\\\", \\\"**maintenance**\\\", or \\\"**weight_gain**\\\". defaults to maintenance\n    :param integer weight: The weight of the person in **kilograms**. defaults to 60\n    :param integer height: The height of the person in **centimeters**. defaults to 170\n    :param integer age: The age of the person in years. defaults to 30\n    :param string? equation: The equation to use for caloric needs estimation. Valid values are \\\"**harris**\\\" (default) or \\\"**mifflin**\\\". defaults to mifflin\n    '''\n    return await self._request_rapid_api('rapi_health_calculator_api_daily_caloric_needs',kwargs)\n        "
    },
    "rapi_health_calculator_api_body_mass_index": {
        "api_name": "body_mass_index",
        "category": "Health_and_Fitness",
        "tool_name": "health_calculator_api",
        "code": "async def rapi_health_calculator_api_body_mass_index(self,*args,**kwargs):\n    '''Welcome to the Health Calculator API. This API provides endpoints for calculating Body Mass Index (BMI), Body Fat Percentage, Basal Metabolic Rate (BMR), Daily Caloric Needs (DCN), Daily Water Intake (DWI), Target Heart Rate (THR), Macronutrients Distribution and Ideal Body Weight (IBW). With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure ...\n    \n    \n\n    :param integer height: The height in **centimeters**. Required. defaults to 170\n    :param integer weight: The weight in **kilograms**. Required. defaults to 80\n    :param string? units: The desired units of measurement to implement in the JSON Response. Possible values are **metric** (default) or **imperial**. (Optional). defaults to metric\n    '''\n    return await self._request_rapid_api('rapi_health_calculator_api_body_mass_index',kwargs)\n        "
    },
    "rapi_health_calculator_api_bodyfat": {
        "api_name": "bodyfat",
        "category": "Health_and_Fitness",
        "tool_name": "health_calculator_api",
        "code": "async def rapi_health_calculator_api_bodyfat(self,*args,**kwargs):\n    '''Welcome to the Health Calculator API. This API provides endpoints for calculating Body Mass Index (BMI), Body Fat Percentage, Basal Metabolic Rate (BMR), Daily Caloric Needs (DCN), Daily Water Intake (DWI), Target Heart Rate (THR), Macronutrients Distribution and Ideal Body Weight (IBW). With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure ...\n    \n    \n\n    :param integer height: The height in **centimeters**. Required. defaults to 165\n    :param integer weight: The weight in **kilograms**. Required. defaults to 78\n    :param string gender: The gender of the person. Possible values are **male** or **female**. Required. defaults to female\n    :param integer age: The age of the person in years. Required. defaults to 27\n    :param string? unit: The desired units of measurement to implement in the JSON Response. Possible values are **metric** (default) or **imperial**. (Optional). defaults to metric\n    '''\n    return await self._request_rapid_api('rapi_health_calculator_api_bodyfat',kwargs)\n        "
    },
    "rapi_health_calculator_api_bodyfat_imperial": {
        "api_name": "bodyfat_imperial",
        "category": "Health_and_Fitness",
        "tool_name": "health_calculator_api",
        "code": "async def rapi_health_calculator_api_bodyfat_imperial(self,*args,**kwargs):\n    '''Welcome to the Health Calculator API. This API provides endpoints for calculating Body Mass Index (BMI), Body Fat Percentage, Basal Metabolic Rate (BMR), Daily Caloric Needs (DCN), Daily Water Intake (DWI), Target Heart Rate (THR), Macronutrients Distribution and Ideal Body Weight (IBW). With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure ...\n    \n    \n\n    :param integer age: The age of the person in **years**. Required. defaults to 26\n    :param integer weight: The weight of the person in **pounds**. Required. defaults to 180\n    :param string gender: The gender of the person. Must be either '**male**' or '**female**'. Required. defaults to male\n    :param integer height: The height of the person in **inches**. Required. defaults to 77\n    '''\n    return await self._request_rapid_api('rapi_health_calculator_api_bodyfat_imperial',kwargs)\n        "
    },
    "rapi_body_mass_index_bmi_calculator_metric_kilograms": {
        "api_name": "metric_kilograms",
        "category": "Health_and_Fitness",
        "tool_name": "body_mass_index_bmi_calculator",
        "code": "async def rapi_body_mass_index_bmi_calculator_metric_kilograms(self,*args,**kwargs):\n    '''Use this API to calculate the Body Mass Index of an individual based on their height and weight.\n    \n    \n\n    :param integer weight: The weight of someone in kilograms (kgs) defaults to 150\n    :param integer height: The height of someone in meters (m) defaults to 1.83\n    '''\n    return await self._request_rapid_api('rapi_body_mass_index_bmi_calculator_metric_kilograms',kwargs)\n        "
    },
    "rapi_body_mass_index_bmi_calculator_imperial_pounds": {
        "api_name": "imperial_pounds",
        "category": "Health_and_Fitness",
        "tool_name": "body_mass_index_bmi_calculator",
        "code": "async def rapi_body_mass_index_bmi_calculator_imperial_pounds(self,*args,**kwargs):\n    '''Use this API to calculate the Body Mass Index of an individual based on their height and weight.\n    \n    \n\n    :param integer weight: The weight of someone in pounds (lbs)  defaults to 150\n    :param integer height: The height of someone in inches (in) defaults to 68\n    '''\n    return await self._request_rapid_api('rapi_body_mass_index_bmi_calculator_imperial_pounds',kwargs)\n        "
    },
    "rapi_cities_cost_of_living_get_currencies_list": {
        "api_name": "get_currencies_list",
        "category": "Travel",
        "tool_name": "cities_cost_of_living",
        "code": "async def rapi_cities_cost_of_living_get_currencies_list(self,*args,**kwargs):\n    '''Get detailed information about the living expenses of 650+ cities around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cities_cost_of_living_get_currencies_list',kwargs)\n        "
    },
    "rapi_cities_cost_of_living_get_cities_list": {
        "api_name": "get_cities_list",
        "category": "Travel",
        "tool_name": "cities_cost_of_living",
        "code": "async def rapi_cities_cost_of_living_get_cities_list(self,*args,**kwargs):\n    '''Get detailed information about the living expenses of 650+ cities around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cities_cost_of_living_get_cities_list',kwargs)\n        "
    },
    "rapi_irctc_trainsbetweenstations": {
        "api_name": "trainsbetweenstations",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_trainsbetweenstations(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param string toStationCode:  defaults to bdts\n    :param string fromStationCode:  defaults to bju\n    '''\n    return await self._request_rapid_api('rapi_irctc_trainsbetweenstations',kwargs)\n        "
    },
    "rapi_irctc_get_fare": {
        "api_name": "get_fare",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_get_fare(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param integer trainNo:  defaults to 19038\n    :param string toStationCode:  defaults to BVI\n    :param string fromStationCode:  defaults to ST\n    '''\n    return await self._request_rapid_api('rapi_irctc_get_fare',kwargs)\n        "
    },
    "rapi_irctc_gettrainclasses": {
        "api_name": "gettrainclasses",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_gettrainclasses(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param integer trainNo:  defaults to 19038\n    '''\n    return await self._request_rapid_api('rapi_irctc_gettrainclasses',kwargs)\n        "
    },
    "rapi_irctc_get_train_schedule": {
        "api_name": "get_train_schedule",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_get_train_schedule(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param string trainNo:  defaults to 12936\n    '''\n    return await self._request_rapid_api('rapi_irctc_get_train_schedule',kwargs)\n        "
    },
    "rapi_irctc_get_train_live_status": {
        "api_name": "get_train_live_status",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_get_train_live_status(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param string trainNo:  defaults to 19038\n    :param string? startDay: Optional File\nstart day range from 0-4\n0 = Day 1\n1 = 1 Day Ago\n2 = 2 Day Ago\n3 = 3 Day Ago\n4 = 4 Day Ago defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_irctc_get_train_live_status',kwargs)\n        "
    },
    "rapi_irctc_trainsbetweenstations_v3": {
        "api_name": "trainsbetweenstations_v3",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_trainsbetweenstations_v3(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param DATE (YYYY-MM-DD) dateOfJourney: \n    :param string toStationCode:  defaults to NDLS\n    :param string fromStationCode:  defaults to BVI\n    '''\n    return await self._request_rapid_api('rapi_irctc_trainsbetweenstations_v3',kwargs)\n        "
    },
    "rapi_irctc_searchtrain": {
        "api_name": "searchtrain",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_searchtrain(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param integer query:  defaults to 190\n    '''\n    return await self._request_rapid_api('rapi_irctc_searchtrain',kwargs)\n        "
    },
    "rapi_irctc_searchstation": {
        "api_name": "searchstation",
        "category": "Travel",
        "tool_name": "irctc",
        "code": "async def rapi_irctc_searchstation(self,*args,**kwargs):\n    '''An API with various functionalities for Indian railways IRCTC API. We are not affiliated with Indian railways IRCTC in any form, and this is not an official API, but all the results are real-time and accurate. You can get in touch with us at https://t.me/rapidapisupport. For payment related inquiries, APIs and customised plans.\n    \n    \n\n    :param string query:  defaults to BJU\n    '''\n    return await self._request_rapid_api('rapi_irctc_searchstation',kwargs)\n        "
    },
    "rapi_gas_price_europeancountries": {
        "api_name": "europeancountries",
        "category": "Travel",
        "tool_name": "gas_price",
        "code": "async def rapi_gas_price_europeancountries(self,*args,**kwargs):\n    '''Reach gasoline and diesel prices in different fuel stations in different cities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gas_price_europeancountries',kwargs)\n        "
    },
    "rapi_gas_price_canada": {
        "api_name": "canada",
        "category": "Travel",
        "tool_name": "gas_price",
        "code": "async def rapi_gas_price_canada(self,*args,**kwargs):\n    '''Reach gasoline and diesel prices in different fuel stations in different cities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gas_price_canada',kwargs)\n        "
    },
    "rapi_gas_price_usacitieslist": {
        "api_name": "usacitieslist",
        "category": "Travel",
        "tool_name": "gas_price",
        "code": "async def rapi_gas_price_usacitieslist(self,*args,**kwargs):\n    '''Reach gasoline and diesel prices in different fuel stations in different cities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gas_price_usacitieslist',kwargs)\n        "
    },
    "rapi_booking_com_list_of_hotel_types": {
        "api_name": "list_of_hotel_types",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_hotel_types(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? hotel_type_id: Hotel type ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_hotel_types',kwargs)\n        "
    },
    "rapi_booking_com_list_of_room_facility_types": {
        "api_name": "list_of_room_facility_types",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_room_facility_types(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? room_facility_type_id: Room facility type ID\n    :param string? facility_type_id: Facility type ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_room_facility_types',kwargs)\n        "
    },
    "rapi_booking_com_list_of_hotel_facility_types": {
        "api_name": "list_of_hotel_facility_types",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_hotel_facility_types(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? hotel_facility_type_id: Hotel facility type ID\n    :param string? facility_type_id: Facility type ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_hotel_facility_types',kwargs)\n        "
    },
    "rapi_booking_com_list_of_room_types": {
        "api_name": "list_of_room_types",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_room_types(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? room_type_id: Room type ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_room_types',kwargs)\n        "
    },
    "rapi_booking_com_list_of_hotel_chains": {
        "api_name": "list_of_hotel_chains",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_hotel_chains(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? name: Hotel chain name\n    :param string? chain_id: Chain ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_hotel_chains',kwargs)\n        "
    },
    "rapi_booking_com_list_of_countries": {
        "api_name": "list_of_countries",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_list_of_countries(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    :param string? country: Country ID\n    '''\n    return await self._request_rapid_api('rapi_booking_com_list_of_countries',kwargs)\n        "
    },
    "rapi_booking_com_meta_properties_description": {
        "api_name": "meta_properties_description",
        "category": "Travel",
        "tool_name": "booking_com",
        "code": "async def rapi_booking_com_meta_properties_description(self,*args,**kwargs):\n    '''Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_booking_com_meta_properties_description',kwargs)\n        "
    },
    "rapi_ai_trip_planner_get_trip_plan": {
        "api_name": "get_trip_plan",
        "category": "Travel",
        "tool_name": "ai_trip_planner",
        "code": "async def rapi_ai_trip_planner_get_trip_plan(self,*args,**kwargs):\n    '''The API generates personalized trip plans based on the user's specified number of days and location. Using AI, the system recommends popular tourist attractions, local experiences, and accommodations based on user preferences and past travel behavior. The generated trip plans can be customized and adjusted to suit the user's needs, making it a valuable tool for anyone planning a trip.\n    \n    \n\n    :param integer days:  defaults to 3\n    :param string destination:  defaults to London,UK\n    '''\n    return await self._request_rapid_api('rapi_ai_trip_planner_get_trip_plan',kwargs)\n        "
    },
    "rapi_hotels_com_provider_hotel_details": {
        "api_name": "hotel_details",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_hotel_details(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param string domain:  defaults to AE\n    :param string locale:  defaults to en_GB\n    :param integer hotel_id: Hotel ID defaults to 1105156\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_hotel_details',kwargs)\n        "
    },
    "rapi_hotels_com_provider_hotel_info": {
        "api_name": "hotel_info",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_hotel_info(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param integer hotel_id: Hotel ID defaults to 1105156\n    :param string locale:  defaults to en_GB\n    :param string domain:  defaults to AE\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_hotel_info',kwargs)\n        "
    },
    "rapi_hotels_com_provider_regions_search": {
        "api_name": "regions_search",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_regions_search(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param string locale:  defaults to en_GB\n    :param string query: Query. Live search defaults to Prag\n    :param string domain:  defaults to AE\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_regions_search',kwargs)\n        "
    },
    "rapi_hotels_com_provider_domains_list": {
        "api_name": "domains_list",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_domains_list(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_domains_list',kwargs)\n        "
    },
    "rapi_hotels_com_provider_reviews_scores": {
        "api_name": "reviews_scores",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_reviews_scores(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param string domain:  defaults to AE\n    :param integer hotel_id: Hotel ID defaults to 1105156\n    :param string locale:  defaults to en_GB\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_reviews_scores',kwargs)\n        "
    },
    "rapi_hotels_com_provider_reviews_list": {
        "api_name": "reviews_list",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_reviews_list(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param string domain:  defaults to AE\n    :param string locale:  defaults to en_GB\n    :param integer hotel_id: Hotel ID defaults to 1105156\n    :param integer? page_number: Number of page defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_reviews_list',kwargs)\n        "
    },
    "rapi_hotels_com_provider_reviews_summary": {
        "api_name": "reviews_summary",
        "category": "Travel",
        "tool_name": "hotels_com_provider",
        "code": "async def rapi_hotels_com_provider_reviews_summary(self,*args,**kwargs):\n    '''Search hotels, see prices, photos of the hotels, reviews.  **Site:** www.hotels.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel api:** https://rapi.one\n    \n    \n\n    :param string locale:  defaults to en_GB\n    :param string domain:  defaults to AE\n    :param integer hotel_id: Hotel ID defaults to 1105156\n    '''\n    return await self._request_rapid_api('rapi_hotels_com_provider_reviews_summary',kwargs)\n        "
    },
    "rapi_nomad_list_cities_latin_america": {
        "api_name": "latin_america",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_latin_america(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort_by:  defaults to overall_score\n    :param string? page:  defaults to 1\n    :param string? sort:  defaults to desc\n    :param string? size:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_latin_america',kwargs)\n        "
    },
    "rapi_nomad_list_cities_north_america": {
        "api_name": "north_america",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_north_america(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort_by:  defaults to overall_score\n    :param string? sort:  defaults to desc\n    :param string? size:  defaults to 20\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_north_america',kwargs)\n        "
    },
    "rapi_nomad_list_cities_middle_east": {
        "api_name": "middle_east",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_middle_east(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? page:  defaults to 1\n    :param string? sort:  defaults to desc\n    :param string? sort_by:  defaults to overall_score\n    :param string? size:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_middle_east',kwargs)\n        "
    },
    "rapi_nomad_list_cities_oceania": {
        "api_name": "oceania",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_oceania(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort_by:  defaults to overall_score\n    :param string? page:  defaults to 1\n    :param string? sort:  defaults to desc\n    :param string? size:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_oceania',kwargs)\n        "
    },
    "rapi_nomad_list_cities_africa": {
        "api_name": "africa",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_africa(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort:  defaults to desc\n    :param string? sort_by:  defaults to overall_score\n    :param string? page:  defaults to 1\n    :param string? size:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_africa',kwargs)\n        "
    },
    "rapi_nomad_list_cities_asia": {
        "api_name": "asia",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_asia(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort:  defaults to desc\n    :param string? sort_by:  defaults to overall_score\n    :param string? size:  defaults to 20\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_asia',kwargs)\n        "
    },
    "rapi_nomad_list_cities_europe": {
        "api_name": "europe",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_europe(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort:  defaults to desc\n    :param string? page:  defaults to 1\n    :param string? sort_by:  defaults to overall_score\n    :param string? size:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_europe',kwargs)\n        "
    },
    "rapi_nomad_list_cities_all_citites": {
        "api_name": "all_citites",
        "category": "Travel",
        "tool_name": "nomad_list_cities",
        "code": "async def rapi_nomad_list_cities_all_citites(self,*args,**kwargs):\n    '''Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents\n    \n    \n\n    :param string? sort:  defaults to desc\n    :param string? sort_by:  defaults to overall_score\n    :param string? size:  defaults to 20\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_nomad_list_cities_all_citites',kwargs)\n        "
    },
    "rapi_ukrail_getukrail": {
        "api_name": "getukrail",
        "category": "Travel",
        "tool_name": "ukrail",
        "code": "async def rapi_ukrail_getukrail(self,*args,**kwargs):\n    '''UKRail is an API for UK train times. Sourced from National Rail Enquiries live departure boards SOAP web service (OpenLDBWS) \n\nTheir webservice can be, to put it mildly, tricky to work with so UKRail aims to make things a little easier!\n\nSuited for small businesses who may want to leverage rail data on a website or phone app.\n\nAdditionally, it is Ideal for train enthusiasts who may want to use data from the live departure boards for one of their projects - model railways (including mimic pane...\n    \n    \n\n    :param string CMD:  defaults to GetDepartureBoard\n    :param integer? NumberQueries:  defaults to 5\n    :param string? CRS:  defaults to KGX\n    '''\n    return await self._request_rapid_api('rapi_ukrail_getukrail',kwargs)\n        "
    },
    "rapi_asr_hub_api_tripdetails_mfref": {
        "api_name": "api_tripdetails_mfref",
        "category": "Travel",
        "tool_name": "asr_hub",
        "code": "async def rapi_asr_hub_api_tripdetails_mfref(self,*args,**kwargs):\n    '''ASR Hub is a nomalized XML API which integrates airline content from multiple sources like Direct &amp; NDC connect, Multi-GDS and aggregators from various markets and\u00a0 offers search, ticket, Payments, ancillary sales, and post bookings services through a single API.\u00a0 ASR Hub 1.0 provides the complete Travel Tech Stack for Airline Retailing\u200b.\n    \n    \n\n    :param string MFRef: \n    '''\n    return await self._request_rapid_api('rapi_asr_hub_api_tripdetails_mfref',kwargs)\n        "
    },
    "rapi_asr_hub_api_schedulechangeaccept_mfref_flightid": {
        "api_name": "api_schedulechangeaccept_mfref_flightid",
        "category": "Travel",
        "tool_name": "asr_hub",
        "code": "async def rapi_asr_hub_api_schedulechangeaccept_mfref_flightid(self,*args,**kwargs):\n    '''ASR Hub is a nomalized XML API which integrates airline content from multiple sources like Direct &amp; NDC connect, Multi-GDS and aggregators from various markets and\u00a0 offers search, ticket, Payments, ancillary sales, and post bookings services through a single API.\u00a0 ASR Hub 1.0 provides the complete Travel Tech Stack for Airline Retailing\u200b.\n    \n    \n\n    :param integer FlightId: \n    :param string MFRef: \n    '''\n    return await self._request_rapid_api('rapi_asr_hub_api_schedulechangeaccept_mfref_flightid',kwargs)\n        "
    },
    "rapi_great_circle_math_api_get_distance_by_city_state_country": {
        "api_name": "get_distance_by_city_state_country",
        "category": "Travel",
        "tool_name": "great_circle_math_api",
        "code": "async def rapi_great_circle_math_api_get_distance_by_city_state_country(self,*args,**kwargs):\n    '''An api to perform mileage calculations by receiving location information.\n    \n    \n\n    :param string country1:  defaults to us\n    :param string country2:  defaults to us\n    :param string state2:  defaults to ca\n    :param string city2:  defaults to sacramento\n    :param string city1:  defaults to birmingham\n    :param string state1:  defaults to al\n    '''\n    return await self._request_rapid_api('rapi_great_circle_math_api_get_distance_by_city_state_country',kwargs)\n        "
    },
    "rapi_priceline_com_provider_download_airports": {
        "api_name": "download_airports",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_download_airports(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param string? resume_key: Resume results from given ID.\n    :param integer? limit: Limits the number of results from the response. defaults to 500\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_download_airports',kwargs)\n        "
    },
    "rapi_priceline_com_provider_auto_complete": {
        "api_name": "auto_complete",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_auto_complete(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param string string: Search keyword. Airport or City being searched. defaults to winn\n    :param boolean? get_airports_in_cities: If City is used as string include airports in that city.  defaults to True\n    :param boolean? get_cities: Include cities in search results. Valid Options: True or False. defaults to True\n    :param integer? max_results: Number passed is the maximum number of results returned.\n    :param boolean? get_airports: Include airports in search results. Valid Options: True or False. defaults to True\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_auto_complete',kwargs)\n        "
    },
    "rapi_priceline_com_provider_download_property_types": {
        "api_name": "download_property_types",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_download_property_types(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param integer? limit: Limits the number of results from the response. defaults to 100\n    :param string? resume_key: Resume results from given ID.\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_download_property_types',kwargs)\n        "
    },
    "rapi_priceline_com_provider_download_chains": {
        "api_name": "download_chains",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_download_chains(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param string? resume_key: Resume results from given ID.\n    :param integer? limit: Limits the number of results from the response. defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_download_chains',kwargs)\n        "
    },
    "rapi_priceline_com_provider_download_areas": {
        "api_name": "download_areas",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_download_areas(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param integer? limit: Limits the number of results from the response. defaults to 100\n    :param string? resume_key: Resume results from given ID.\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_download_areas',kwargs)\n        "
    },
    "rapi_priceline_com_provider_download_states": {
        "api_name": "download_states",
        "category": "Travel",
        "tool_name": "priceline_com_provider",
        "code": "async def rapi_priceline_com_provider_download_states(self,*args,**kwargs):\n    '''priceline.com | Lets you search hotels, cars for rent, flights. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other travel  api:** https://rapi.one\n    \n    \n\n    :param integer? limit: Limits the number of results from the response. defaults to 100\n    :param string? resume_key: Resume results from given ID.\n    '''\n    return await self._request_rapid_api('rapi_priceline_com_provider_download_states',kwargs)\n        "
    },
    "rapi_airbnb_listings_listing_status_full": {
        "api_name": "listing_status_full",
        "category": "Travel",
        "tool_name": "airbnb_listings",
        "code": "async def rapi_airbnb_listings_listing_status_full(self,*args,**kwargs):\n    '''Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nData are not in realtime but updated as frequently as possible. Each time property prices, details or statuses are requested we prioritize this property to be updated multiple times/day for the next 24 hours. So on your very first request of a property data you may get not updated data.\n    \n    \n\n    :param string id: the listing id defaults to 619966061834034729\n    '''\n    return await self._request_rapid_api('rapi_airbnb_listings_listing_status_full',kwargs)\n        "
    },
    "rapi_airbnb_listings_amenities": {
        "api_name": "amenities",
        "category": "Travel",
        "tool_name": "airbnb_listings",
        "code": "async def rapi_airbnb_listings_amenities(self,*args,**kwargs):\n    '''Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nData are not in realtime but updated as frequently as possible. Each time property prices, details or statuses are requested we prioritize this property to be updated multiple times/day for the next 24 hours. So on your very first request of a property data you may get not updated data.\n    \n    \n\n    :param integer offset: index to start from defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_airbnb_listings_amenities',kwargs)\n        "
    },
    "rapi_airbnb_listings_markets": {
        "api_name": "markets",
        "category": "Travel",
        "tool_name": "airbnb_listings",
        "code": "async def rapi_airbnb_listings_markets(self,*args,**kwargs):\n    '''Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nData are not in realtime but updated as frequently as possible. Each time property prices, details or statuses are requested we prioritize this property to be updated multiple times/day for the next 24 hours. So on your very first request of a property data you may get not updated data.\n    \n    \n\n    :param integer offset: index to start from defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_airbnb_listings_markets',kwargs)\n        "
    },
    "rapi_turkey_public_holidays_isupdate": {
        "api_name": "isupdate",
        "category": "Travel",
        "tool_name": "turkey_public_holidays",
        "code": "async def rapi_turkey_public_holidays_isupdate(self,*args,**kwargs):\n    '''Public Holidays Api where you can see the Turkey public holidays of the next 2 years\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_turkey_public_holidays_isupdate',kwargs)\n        "
    },
    "rapi_biggest_cities_get_all_cities": {
        "api_name": "get_all_cities",
        "category": "Travel",
        "tool_name": "biggest_cities",
        "code": "async def rapi_biggest_cities_get_all_cities(self,*args,**kwargs):\n    '''List of top biggest cities\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_biggest_cities_get_all_cities',kwargs)\n        "
    },
    "rapi_ski_resorts_and_conditions_resort_view": {
        "api_name": "resort_view",
        "category": "Travel",
        "tool_name": "ski_resorts_and_conditions",
        "code": "async def rapi_ski_resorts_and_conditions_resort_view(self,*args,**kwargs):\n    '''Ski Resorts and Conditions\n    \n    \n\n    :param string id:  defaults to whistler-blackcomb\n    '''\n    return await self._request_rapid_api('rapi_ski_resorts_and_conditions_resort_view',kwargs)\n        "
    },
    "rapi_ski_resorts_and_conditions_resorts": {
        "api_name": "resorts",
        "category": "Travel",
        "tool_name": "ski_resorts_and_conditions",
        "code": "async def rapi_ski_resorts_and_conditions_resorts(self,*args,**kwargs):\n    '''Ski Resorts and Conditions\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ski_resorts_and_conditions_resorts',kwargs)\n        "
    },
    "rapi_ranked_crime_cities_ranked_world_crime_cities": {
        "api_name": "ranked_world_crime_cities",
        "category": "Travel",
        "tool_name": "ranked_crime_cities",
        "code": "async def rapi_ranked_crime_cities_ranked_world_crime_cities(self,*args,**kwargs):\n    '''Worlds Ranked Crime Cities\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ranked_crime_cities_ranked_world_crime_cities',kwargs)\n        "
    },
    "rapi_flixbus_stations": {
        "api_name": "stations",
        "category": "Travel",
        "tool_name": "flixbus",
        "code": "async def rapi_flixbus_stations(self,*args,**kwargs):\n    '''A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flixbus_stations',kwargs)\n        "
    },
    "rapi_septa_get_alerts": {
        "api_name": "get_alerts",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_get_alerts(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param string? req1:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_septa_get_alerts',kwargs)\n        "
    },
    "rapi_septa_bus_trolley_locations": {
        "api_name": "bus_trolley_locations",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_bus_trolley_locations(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param string route:  defaults to 17\n    '''\n    return await self._request_rapid_api('rapi_septa_bus_trolley_locations',kwargs)\n        "
    },
    "rapi_septa_bus_detours": {
        "api_name": "bus_detours",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_bus_detours(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param integer? req1: Route number defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_septa_bus_detours',kwargs)\n        "
    },
    "rapi_septa_bus_trolley_routes": {
        "api_name": "bus_trolley_routes",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_bus_trolley_routes(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param string req1: Route number defaults to 23\n    '''\n    return await self._request_rapid_api('rapi_septa_bus_trolley_routes',kwargs)\n        "
    },
    "rapi_septa_plain_text_bus_schedules": {
        "api_name": "plain_text_bus_schedules",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_plain_text_bus_schedules(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param integer req1: Stop ID defaults to 17842\n    :param string? req2: Route number defaults to 17\n    :param string? req3: Inbound/outbound defaults to i\n    '''\n    return await self._request_rapid_api('rapi_septa_plain_text_bus_schedules',kwargs)\n        "
    },
    "rapi_septa_get_locations": {
        "api_name": "get_locations",
        "category": "Travel",
        "tool_name": "septa",
        "code": "async def rapi_septa_get_locations(self,*args,**kwargs):\n    '''Provides hackathon-style access to the SEPTA API.\r\n\r\nAllows introspection of the SEPTA locations and routes, and provides basically-realtime data on delays, alerts, vehicles, and routes.\n    \n    \n\n    :param integer lon: Longitude defaults to -75.33299748\n    :param integer lat: Latitude defaults to 40.11043326\n    :param integer? radius: Number of miles (accepts a decimal) defaults to 3\n    :param string? type: One of [bus_stops , rail_stations , perk_locations , trolley_stops , sales_locations]\n    '''\n    return await self._request_rapid_api('rapi_septa_get_locations',kwargs)\n        "
    },
    "rapi_skyscanner_api_locations": {
        "api_name": "locations",
        "category": "Travel",
        "tool_name": "skyscanner_api",
        "code": "async def rapi_skyscanner_api_locations(self,*args,**kwargs):\n    '''The Skyscanner API offers developers a way to integrate Skyscanner's data into their own applications, allowing users to access and interact with the vast travel data offered by Skyscanner. \n\n![](https://tip.ep-proxy.net/t/ra-ss-main)\n    \n    \n\n    :param string locale: Locale of the request. \nList of locales can be retrieved from the `Locales` endpoint.\n defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_skyscanner_api_locations',kwargs)\n        "
    },
    "rapi_skyscanner_api_locales": {
        "api_name": "locales",
        "category": "Travel",
        "tool_name": "skyscanner_api",
        "code": "async def rapi_skyscanner_api_locales(self,*args,**kwargs):\n    '''The Skyscanner API offers developers a way to integrate Skyscanner's data into their own applications, allowing users to access and interact with the vast travel data offered by Skyscanner. \n\n![](https://tip.ep-proxy.net/t/ra-ss-main)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_skyscanner_api_locales',kwargs)\n        "
    },
    "rapi_skyscanner_api_markets": {
        "api_name": "markets",
        "category": "Travel",
        "tool_name": "skyscanner_api",
        "code": "async def rapi_skyscanner_api_markets(self,*args,**kwargs):\n    '''The Skyscanner API offers developers a way to integrate Skyscanner's data into their own applications, allowing users to access and interact with the vast travel data offered by Skyscanner. \n\n![](https://tip.ep-proxy.net/t/ra-ss-main)\n    \n    \n\n    :param string locale: Locale of the request.\nList of locales can be retrieved from the `Locales` endpoint.\n defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_skyscanner_api_markets',kwargs)\n        "
    },
    "rapi_skyscanner_api_carriers": {
        "api_name": "carriers",
        "category": "Travel",
        "tool_name": "skyscanner_api",
        "code": "async def rapi_skyscanner_api_carriers(self,*args,**kwargs):\n    '''The Skyscanner API offers developers a way to integrate Skyscanner's data into their own applications, allowing users to access and interact with the vast travel data offered by Skyscanner. \n\n![](https://tip.ep-proxy.net/t/ra-ss-main)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_skyscanner_api_carriers',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_category_category_category": {
        "api_name": "webcams_list_category_category_category",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_category_category_category(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param string category: Comma separated list of category names.\n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_category_category_category',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_country_country_country": {
        "api_name": "webcams_list_country_country_country",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_country_country_country(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param string country: Comma separated ISO 3166-1-alpha-2 codes for the countries.\n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_country_country_country',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_region_region_region": {
        "api_name": "webcams_list_region_region_region",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_region_region_region(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param string region: Comma separated list of ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.\n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_region_region_region',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_orderby_order_sort": {
        "api_name": "webcams_list_orderby_order_sort",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_orderby_order_sort(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param string sort: Possible values are: \"asc\" (ascending), or \"desc\" (descending).\n    :param string order: Possible values are: \"popularity\" (default order: \"desc\"), \"hotness\" (default order: \"desc\"), \"new\" (default order: \"desc\"), \"recent\" (default order: \"desc\"), \"random\" (default order: \"asc\"), or \"distance\" (default order: \"asc\", only available if the modifier \"nearby\" has been applied).\n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_orderby_order_sort',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_limit_limit_offset": {
        "api_name": "webcams_list_limit_limit_offset",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_limit_limit_offset(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param integer limit: Maximum number of webcams in the result list.\n    :param integer? offset: Offset for the first item in the result list. defaults to 0\n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_limit_limit_offset',kwargs)\n        "
    },
    "rapi_webcams_travel_webcams_list_property_property_property": {
        "api_name": "webcams_list_property_property_property",
        "category": "Travel",
        "tool_name": "webcams_travel",
        "code": "async def rapi_webcams_travel_webcams_list_property_property_property(self,*args,**kwargs):\n    '''The World's Largest Landscape Webcam API ***** Get webcams by categories, country, region or just nearby your location ***** Get timelapse slideshows for every webcam ***** Get an uncluttered webcam layer for your map\n    \n    \n\n    :param string property: \n    :param string? lang: Localize the results to this language, if available. Default: \"en\". defaults to en\n    :param string? show: Content to be listed in the response. Possible values are: \"webcams\", \"categories\", \"continents\", \"countries\", \"regions\", \"properties\". Default is \"webcams\". defaults to webcams:image,location\n    '''\n    return await self._request_rapid_api('rapi_webcams_travel_webcams_list_property_property_property',kwargs)\n        "
    },
    "rapi_vehicle_charging_stations_get_stations": {
        "api_name": "get_stations",
        "category": "Travel",
        "tool_name": "vehicle_charging_stations",
        "code": "async def rapi_vehicle_charging_stations_get_stations(self,*args,**kwargs):\n    '''Find EV charging stations for cars\nYou can use this API to retrieve charging location information,\n    \n    \n\n    :param string? distance: Unit: Miles defaults to 100\n    :param string? longitude:  defaults to 2.4379392\n    :param string? latitude:  defaults to 44.351488\n    '''\n    return await self._request_rapid_api('rapi_vehicle_charging_stations_get_stations',kwargs)\n        "
    },
    "rapi_borders_usa_borders_waiting_times": {
        "api_name": "usa_borders_waiting_times",
        "category": "Travel",
        "tool_name": "borders",
        "code": "async def rapi_borders_usa_borders_waiting_times(self,*args,**kwargs):\n    '''USA Cross Border Waiting Times is an API service that provides real-time updates on wait times at various border crossings between the United States/Canada and United States/Mexico. \n    \n    \n\n    :param string? country: \n    :param string? portName: \n    '''\n    return await self._request_rapid_api('rapi_borders_usa_borders_waiting_times',kwargs)\n        "
    },
    "rapi_booking_com_v2_stays_auto_complete": {
        "api_name": "stays_auto_complete",
        "category": "Travel",
        "tool_name": "booking_com_v2",
        "code": "async def rapi_booking_com_v2_stays_auto_complete(self,*args,**kwargs):\n    '''Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel\n    \n    \n\n    :param string location:  defaults to ch\n    :param string? language_code: `code `item from `languages ` endpoint\n\nDefault: en-us defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_com_v2_stays_auto_complete',kwargs)\n        "
    },
    "rapi_booking_com_v2_stays_properties_detail_photos": {
        "api_name": "stays_properties_detail_photos",
        "category": "Travel",
        "tool_name": "booking_com_v2",
        "code": "async def rapi_booking_com_v2_stays_properties_detail_photos(self,*args,**kwargs):\n    '''Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel\n    \n    \n\n    :param string? language_code: `code `item from `languages `endpoint\n\nDefault: en-us defaults to en-us\n    :param string? id_detail: `idDetail `from `stays/properties/list `endpoint defaults to cr/la-buena-vida-cabinas\n    '''\n    return await self._request_rapid_api('rapi_booking_com_v2_stays_properties_detail_photos',kwargs)\n        "
    },
    "rapi_booking_com_v2_stays_properties_list": {
        "api_name": "stays_properties_list",
        "category": "Travel",
        "tool_name": "booking_com_v2",
        "code": "async def rapi_booking_com_v2_stays_properties_list(self,*args,**kwargs):\n    '''Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel\n    \n    \n\n    :param string location:  defaults to Benidorm, Valencia Community, Spain\n    :param integer? rooms: \n    :param string? filter_by: After calling this api, the response will include item filters. \nGet the urlId from filters[filter index] -> options[option index] -> urlId to set the value for this field.\n\n**If there are multiple filters, they are separated by semicolons (;)**\n\nEx: class=1; distance=3220\n    :param integer? min_bathroom: \n    :param integer? min_bedroom: \n    :param integer? children_age: children_age must be numbers separated by commas\nEx: 1,2,4\n    :param integer? adults: \n    :param integer? children: \n    :param string? currency_code: `code `item from `currencies `endpoint\n\nDefault: USD defaults to USD\n    :param ENUM? sort_by: \n    :param integer? page: \n    :param string? language_code: `code `item from `languages `endpoint\n\nDefault: en-us defaults to en-us\n    :param string? checkin_date: Format: YYYY-MM-DD\nEx: 2023-07-01\n    :param string? checkout_date: Format: YYYY-MM-DD\nEx: 2023-07-31\n    '''\n    return await self._request_rapid_api('rapi_booking_com_v2_stays_properties_list',kwargs)\n        "
    },
    "rapi_booking_com_v2_stays_properties_detail": {
        "api_name": "stays_properties_detail",
        "category": "Travel",
        "tool_name": "booking_com_v2",
        "code": "async def rapi_booking_com_v2_stays_properties_detail(self,*args,**kwargs):\n    '''Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel\n    \n    \n\n    :param string id_detail: `idDetail ` from `stays/properties/list` endpoint defaults to cr/playa-grande-inn\n    :param string? language_code: `code` item from` languages` endpoint\n\nDefault: en-us defaults to en-us\n    :param string? currency_code: `code `item from `currencies `endpoint\n\nDefault: USD defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_booking_com_v2_stays_properties_detail',kwargs)\n        "
    },
    "rapi_booking_com_v2_currencies": {
        "api_name": "currencies",
        "category": "Travel",
        "tool_name": "booking_com_v2",
        "code": "async def rapi_booking_com_v2_currencies(self,*args,**kwargs):\n    '''Real-time data, unofficial API Booking.com\nThis API helps to query rooms, price, facilities, policities.. from many hotels around the world to create a travel\n    \n    \n\n    :param string? language_code: `code ` item from `languages `endpoint\nDefault: en-us defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_com_v2_currencies',kwargs)\n        "
    },
    "rapi_flight_fare_search_airport_search": {
        "api_name": "airport_search",
        "category": "Travel",
        "tool_name": "flight_fare_search",
        "code": "async def rapi_flight_fare_search_airport_search(self,*args,**kwargs):\n    '''Elevate your travel game with Flight Fare Search API! Get real-time flight data, fares, and airport info for seamless travel planning. Transform your app into a powerful travel companion with Flight Fare Search.\n    \n    \n\n    :param string query:  defaults to LHR\n    '''\n    return await self._request_rapid_api('rapi_flight_fare_search_airport_search',kwargs)\n        "
    },
    "rapi_skyscanner_flights_results": {
        "api_name": "results",
        "category": "Travel",
        "tool_name": "skyscanner_flights",
        "code": "async def rapi_skyscanner_flights_results(self,*args,**kwargs):\n    '''Pricing and flight itineraries information on Skyscanner.\n    \n    \n\n    :param string m:  defaults to 5\n    :param string token:  defaults to API_KEY\n    '''\n    return await self._request_rapid_api('rapi_skyscanner_flights_results',kwargs)\n        "
    },
    "rapi_flight_data_v2_city_data_in_json_format": {
        "api_name": "city_data_in_json_format",
        "category": "Travel",
        "tool_name": "flight_data_v2",
        "code": "async def rapi_flight_data_v2_city_data_in_json_format(self,*args,**kwargs):\n    '''Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_data_v2_city_data_in_json_format',kwargs)\n        "
    },
    "rapi_flight_data_v2_special_offers": {
        "api_name": "special_offers",
        "category": "Travel",
        "tool_name": "flight_data_v2",
        "code": "async def rapi_flight_data_v2_special_offers(self,*args,**kwargs):\n    '''Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_data_v2_special_offers',kwargs)\n        "
    },
    "rapi_flight_data_v2_airport_data_in_json_format": {
        "api_name": "airport_data_in_json_format",
        "category": "Travel",
        "tool_name": "flight_data_v2",
        "code": "async def rapi_flight_data_v2_airport_data_in_json_format(self,*args,**kwargs):\n    '''Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_data_v2_airport_data_in_json_format',kwargs)\n        "
    },
    "rapi_flight_data_v2_data_of_countries_in_json_format": {
        "api_name": "data_of_countries_in_json_format",
        "category": "Travel",
        "tool_name": "flight_data_v2",
        "code": "async def rapi_flight_data_v2_data_of_countries_in_json_format(self,*args,**kwargs):\n    '''Travelpayouts Data API \u2013 the way to get travel insights for your site or blog. Get flight price trends and find popular destinations for your customers.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_data_v2_data_of_countries_in_json_format',kwargs)\n        "
    },
    "rapi_where_to_credit_api_1_0_programs": {
        "api_name": "api_1_0_programs",
        "category": "Travel",
        "tool_name": "where_to_credit",
        "code": "async def rapi_where_to_credit_api_1_0_programs(self,*args,**kwargs):\n    '''The Where to Credit API provides mileage earning calculations for frequent flyer programs around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_where_to_credit_api_1_0_programs',kwargs)\n        "
    },
    "rapi_iata_airport_codes_get_all_iata_airport_codes": {
        "api_name": "get_all_iata_airport_codes",
        "category": "Travel",
        "tool_name": "iata_airport_codes",
        "code": "async def rapi_iata_airport_codes_get_all_iata_airport_codes(self,*args,**kwargs):\n    '''A list of world iata airport codes\n    \n    \n\n    :param integer? Code:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_iata_airport_codes_get_all_iata_airport_codes',kwargs)\n        "
    },
    "rapi_world_airports_directory_searchairports": {
        "api_name": "searchairports",
        "category": "Travel",
        "tool_name": "world_airports_directory",
        "code": "async def rapi_world_airports_directory_searchairports(self,*args,**kwargs):\n    '''API returns all matching airpot details based on the most relevant keyword of city, airport code, city code etc. among collection of all airports around the world.\n    \n    \n\n    :param string matchingKeywordAirportOrCityOrCode:  defaults to dub\n    :param string sortBy: Valid format to sort is `field:order`\ne.g. `AirportName:asc`, `AirportName:desc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order defaults to AirportName:asc\n    :param integer page: This controls the pagination of results.\nDefault is `1` defaults to 1\n    :param integer limit: This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `20` defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_world_airports_directory_searchairports',kwargs)\n        "
    },
    "rapi_world_airports_directory_listallairports": {
        "api_name": "listallairports",
        "category": "Travel",
        "tool_name": "world_airports_directory",
        "code": "async def rapi_world_airports_directory_listallairports(self,*args,**kwargs):\n    '''API returns all matching airpot details based on the most relevant keyword of city, airport code, city code etc. among collection of all airports around the world.\n    \n    \n\n    :param integer limit:  defaults to 20\n    :param integer page:  defaults to 1\n    :param string sortBy: Valid format to sort is `field:order`\ne.g. `name:asc`, `name:desc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order defaults to name:asc\n    '''\n    return await self._request_rapid_api('rapi_world_airports_directory_listallairports',kwargs)\n        "
    },
    "rapi_kayak_flights_results": {
        "api_name": "results",
        "category": "Travel",
        "tool_name": "kayak_flights",
        "code": "async def rapi_kayak_flights_results(self,*args,**kwargs):\n    '''Pricing and flight itineraries information on KAYAK.\n    \n    \n\n    :param string m:  defaults to 5\n    :param string token:  defaults to API_KEY\n    '''\n    return await self._request_rapid_api('rapi_kayak_flights_results',kwargs)\n        "
    },
    "rapi_airports_info_airport_info": {
        "api_name": "airport_info",
        "category": "Travel",
        "tool_name": "airports_info",
        "code": "async def rapi_airports_info_airport_info(self,*args,**kwargs):\n    '''All airports around the globe are here.\nTHIS IS A TEST\n\n\n    \n    \n\n    :param string IATA: IATA Airport defaults to JFK\n    '''\n    return await self._request_rapid_api('rapi_airports_info_airport_info',kwargs)\n        "
    },
    "rapi_world_cities_by_homicide_rate_get_by_homicide_rate": {
        "api_name": "get_by_homicide_rate",
        "category": "Travel",
        "tool_name": "world_cities_by_homicide_rate",
        "code": "async def rapi_world_cities_by_homicide_rate_get_by_homicide_rate(self,*args,**kwargs):\n    '''World cities by homicide rate\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_cities_by_homicide_rate_get_by_homicide_rate',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airlineaircrafts": {
        "api_name": "airlineaircrafts",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airlineaircrafts(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string ident: The ident of the airline, as returned by /airline/search\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airlineaircrafts',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airlineinfo": {
        "api_name": "airlineinfo",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airlineinfo(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string? name: The name of the airline. Not case sensitive\n    :param string? iata: The IATA code of the airline, must have a length of 3\n    :param string? ident: The ident of the airline, as returned by /airline/search\n    :param string? icao: The ICAO code of the airline, must have a length of 4\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airlineinfo',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airportmetar": {
        "api_name": "airportmetar",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airportmetar(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string ident: The ident of the airport (e.g. as returned by /airport/search)\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airportmetar',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airportsearch": {
        "api_name": "airportsearch",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airportsearch(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string? country: The ISO 3166-1 alpha-2 code country code to request\n    :param string? bbox: A bbox (min Longitude , min Latitude , max Longitude , max Latitude), will restrict results to airports within that box\n    :param string? timezone: The timezone of the airport (e.g. Europe/Berlin)\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airportsearch',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airportflights": {
        "api_name": "airportflights",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airportflights(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string direction: Direction, one of \"arrival\", \"departure\"\n    :param string time: Timestamp in UTC. If direction is \"arrival\", show flights with scheduled arrival time prior to this timestamp. If direction is \"departure\", show flights with scheduled departure time after this timestamp. Expected in any valid format, such as 2022-01-01T12:00:00.000Z. Maximum range of flights returned is 30 days.\n    :param string ident: Ident of the airport to request. Ident is the unique identifier as returned by /airport/search or /airport/info endpoints.\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airportflights',kwargs)\n        "
    },
    "rapi_flightera_flight_data_airportinfo": {
        "api_name": "airportinfo",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_airportinfo(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string? icao: The ICAO code of the airport, must have a length of 4\n    :param string? iata: The IATA code of the airport, must have a length of 3\n    :param string? localID: Local identifiers of the airport, currently mostly available for the US & CA (FAA-ID). Max length is 6\n    :param string? ident: The ident of the airport, as returned by /airport/search\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_airportinfo',kwargs)\n        "
    },
    "rapi_flightera_flight_data_aircraftsearch": {
        "api_name": "aircraftsearch",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_aircraftsearch(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string? airline_ident: The ident of the airline, as returned by /airline/search\n    :param string? model: Model ICAO code\n    :param string? country: Two letter country code\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_aircraftsearch',kwargs)\n        "
    },
    "rapi_flightera_flight_data_flightstatistics": {
        "api_name": "flightstatistics",
        "category": "Travel",
        "tool_name": "flightera_flight_data",
        "code": "async def rapi_flightera_flight_data_flightstatistics(self,*args,**kwargs):\n    '''Flight status, on-time performance and statistics by Flightera\n    \n    \n\n    :param string flnr: The flight number to request\n    :param string? aptFrom: Departure airport ident\n    :param string? aptTo: Arrival airport ident\n    '''\n    return await self._request_rapid_api('rapi_flightera_flight_data_flightstatistics',kwargs)\n        "
    },
    "rapi_flixbus_v2_autocomplete": {
        "api_name": "autocomplete",
        "category": "Travel",
        "tool_name": "flixbus_v2",
        "code": "async def rapi_flixbus_v2_autocomplete(self,*args,**kwargs):\n    '''New Flixbus API that provides Flixbus travel search, timetables, stops, cities, routes and autocomplete. \n    \n    \n\n    :param string query: query string defaults to ljubljana\n    :param ENUM? locale: language of query and results\n    '''\n    return await self._request_rapid_api('rapi_flixbus_v2_autocomplete',kwargs)\n        "
    },
    "rapi_airports_finder_get_airports_by_city": {
        "api_name": "get_airports_by_city",
        "category": "Travel",
        "tool_name": "airports_finder",
        "code": "async def rapi_airports_finder_get_airports_by_city(self,*args,**kwargs):\n    '''Airport Finder is a robust API designed to locate airports worldwide. It provides accurate and up-to-date information about airports, including names, IATA codes, locations, time zones, and more. With its easy integration and comprehensive data, Airport Finder simplifies the process of incorporating airport information into your application. Deploy it to enhance travel-related services, flight booking platforms, or any application that requires efficient airport search capabilities.\n    \n    \n\n    :param string city:  defaults to dallas\n    '''\n    return await self._request_rapid_api('rapi_airports_finder_get_airports_by_city',kwargs)\n        "
    },
    "rapi_airports_finder_get_airport_details_by_code": {
        "api_name": "get_airport_details_by_code",
        "category": "Travel",
        "tool_name": "airports_finder",
        "code": "async def rapi_airports_finder_get_airport_details_by_code(self,*args,**kwargs):\n    '''Airport Finder is a robust API designed to locate airports worldwide. It provides accurate and up-to-date information about airports, including names, IATA codes, locations, time zones, and more. With its easy integration and comprehensive data, Airport Finder simplifies the process of incorporating airport information into your application. Deploy it to enhance travel-related services, flight booking platforms, or any application that requires efficient airport search capabilities.\n    \n    \n\n    :param string code:  defaults to DFW\n    '''\n    return await self._request_rapid_api('rapi_airports_finder_get_airport_details_by_code',kwargs)\n        "
    },
    "rapi_tripit_list": {
        "api_name": "list",
        "category": "Travel",
        "tool_name": "tripit",
        "code": "async def rapi_tripit_list(self,*args,**kwargs):\n    '''TripIt organizes travel plans into an itinerary that has all of your trip details in one place. Simply forward confirmation emails to plans@tripit.com and TripIt will automatically build an itinerary for your trip that you can access anytime, either online or from a mobile device. With the TripIt API, you can...\r\n\r\nAdd travel information to a TripIt account, enabling:\r\nInstant availability of clean, professional looking itineraries accessible on the web or via mobile device\r\nSeamless calendar integration via TripIt\u2019s iCal feeds feature\r\nAccess to many third party productivity applications that use the TripIt API\r\n\r\nImport travel information from a TripIt traveler\u2019s account, enabling:\r\nSeamless email import technology for your customers to add travel plans to your application\r\nInsight into a traveler\u2019s entire trip (air, hotel, car, restaurants, meetings, etc.)\r\nOutputting travel data to social network applications such as Facebook and LinkedIn\n    \n    \n\n    :param string object_type: is one of the following strings:  trip object points_program\n    :param string filter_parameter: Valid values for <filter parameter> and <filter value> depend on the <object type>.  See  http://tripit.github.io/api/doc/v1/index.html#resource_section for a table of valid combinations.\n    :param string filter_value: Valid values for <filter parameter> and <filter value> depend on the <object type>.  See  http://tripit.github.io/api/doc/v1/index.html#resource_section for a table of valid combinations.\n    '''\n    return await self._request_rapid_api('rapi_tripit_list',kwargs)\n        "
    },
    "rapi_biggestcities_get_all_cities": {
        "api_name": "get_all_cities",
        "category": "Travel",
        "tool_name": "biggestcities",
        "code": "async def rapi_biggestcities_get_all_cities(self,*args,**kwargs):\n    '''A List of Worlds Biggest Cities\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_biggestcities_get_all_cities',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_top_tier_stays_filter": {
        "api_name": "get_top_tier_stays_filter",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_top_tier_stays_filter(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    :param string? languageId: Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.\n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_top_tier_stays_filter',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_property_type_filters": {
        "api_name": "get_property_type_filters",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_property_type_filters(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    :param string? languageId: Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.\n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_property_type_filters',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_type_of_place_filters": {
        "api_name": "get_type_of_place_filters",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_type_of_place_filters(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    :param string? languageId: Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.\n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_type_of_place_filters',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_amenities_filters": {
        "api_name": "get_amenities_filters",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_amenities_filters(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    :param string? languageId: Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.\n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_amenities_filters',kwargs)\n        "
    },
    "rapi_airbnb_v2_test_api": {
        "api_name": "test_api",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_test_api(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_test_api',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_currency": {
        "api_name": "get_currency",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_currency(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_currency',kwargs)\n        "
    },
    "rapi_airbnb_v2_get_category": {
        "api_name": "get_category",
        "category": "Travel",
        "tool_name": "airbnb_v2",
        "code": "async def rapi_airbnb_v2_get_category(self,*args,**kwargs):\n    ''' Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.\n    \n    \n\n    :param string? languageId: Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.\n    '''\n    return await self._request_rapid_api('rapi_airbnb_v2_get_category',kwargs)\n        "
    },
    "rapi_hotels_reviews_v2_list_deprecated": {
        "api_name": "reviews_v2_list_deprecated",
        "category": "Travel",
        "tool_name": "hotels",
        "code": "async def rapi_hotels_reviews_v2_list_deprecated(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travelling site/application, such as : hotels.com\n    \n    \n\n    :param string hotelId: The value of id field that received from \u2026/properties/list endpoint defaults to 1053457920\n    :param string? reviewOrder: One of the following : rating&#95;highest&#95;first|rating&#95;lowest&#95;first|date&#95;newest&#95;first defaults to date_newest_first\n    :param string? paginationURL: The value of nextURL field returned right in this endpoint, used to load next page.\n    :param string? tripTypeFilter: One of the following : all|romance|family|with-friends|other defaults to all\n    '''\n    return await self._request_rapid_api('rapi_hotels_reviews_v2_list_deprecated',kwargs)\n        "
    },
    "rapi_hotels_locations_search_deprecated": {
        "api_name": "locations_search_deprecated",
        "category": "Travel",
        "tool_name": "hotels",
        "code": "async def rapi_hotels_locations_search_deprecated(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travelling site/application, such as : hotels.com\n    \n    \n\n    :param string query: Name of countries, cities, districts, places, etc... defaults to new york\n    :param string? locale: The language code defaults to en_US\n    '''\n    return await self._request_rapid_api('rapi_hotels_locations_search_deprecated',kwargs)\n        "
    },
    "rapi_real_time_pnr_status_api_for_indian_railways_pnr_status": {
        "api_name": "pnr_status",
        "category": "Travel",
        "tool_name": "real_time_pnr_status_api_for_indian_railways",
        "code": "async def rapi_real_time_pnr_status_api_for_indian_railways_pnr_status(self,*args,**kwargs):\n    '''It is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.\n    \n    \n\n    :param integer pnr_status:  defaults to 6217743114\n    '''\n    return await self._request_rapid_api('rapi_real_time_pnr_status_api_for_indian_railways_pnr_status',kwargs)\n        "
    },
    "rapi_bart_advisory_information": {
        "api_name": "advisory_information",
        "category": "Travel",
        "tool_name": "bart",
        "code": "async def rapi_bart_advisory_information(self,*args,**kwargs):\n    '''The BART API gives you access to pretty much all of the BART service and station data available on the BART website.\n    \n    \n\n    :param string cmd: See more examples http://api.bart.gov/docs/overview/examples.aspx defaults to bsa\n    :param string? orig: Optional station filter. Uses 4 character BART station abbreviations (http://api.bart.gov/docs/overview/abbrev.aspx)\n    '''\n    return await self._request_rapid_api('rapi_bart_advisory_information',kwargs)\n        "
    },
    "rapi_bart_route_information": {
        "api_name": "route_information",
        "category": "Travel",
        "tool_name": "bart",
        "code": "async def rapi_bart_route_information(self,*args,**kwargs):\n    '''The BART API gives you access to pretty much all of the BART service and station data available on the BART website.\n    \n    \n\n    :param string cmd: See more examples http://api.bart.gov/docs/overview/examples.aspx defaults to routes\n    '''\n    return await self._request_rapid_api('rapi_bart_route_information',kwargs)\n        "
    },
    "rapi_bart_station_information": {
        "api_name": "station_information",
        "category": "Travel",
        "tool_name": "bart",
        "code": "async def rapi_bart_station_information(self,*args,**kwargs):\n    '''The BART API gives you access to pretty much all of the BART service and station data available on the BART website.\n    \n    \n\n    :param string cmd: See more examples at http://api.bart.gov/docs/overview/examples.aspx defaults to stns\n    '''\n    return await self._request_rapid_api('rapi_bart_station_information',kwargs)\n        "
    },
    "rapi_bart_real_time_information": {
        "api_name": "real_time_information",
        "category": "Travel",
        "tool_name": "bart",
        "code": "async def rapi_bart_real_time_information(self,*args,**kwargs):\n    '''The BART API gives you access to pretty much all of the BART service and station data available on the BART website.\n    \n    \n\n    :param string cmd: See more examples http://api.bart.gov/docs/overview/examples.aspx defaults to etd\n    :param string orig: Specifies the station. Stations are referenced by their abbreviations (http://api.bart.gov/docs/overview/abbrev.aspx). You can also use 'ALL' to get all of the current ETD's.\n    '''\n    return await self._request_rapid_api('rapi_bart_real_time_information',kwargs)\n        "
    },
    "rapi_tripadvisor_search_flights_multicity": {
        "api_name": "search_flights_multicity",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_search_flights_multicity(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    :param ENUM sortOrder: Sort by parameter\n    :param ENUM classOfService: Traveller cabin class.\n    :param object legs: The legs must contain the origin, destination and date in object format and must be passed in an array.\nEXAMPLE:\n[\n{'sourceAirportCode':'BOS','destinationAirportCode':'LON','date':'2022-12-18'},{'sourceAirportCode':'LON','destinationAirportCode':'BOS','date':'2022-12-26'},\n\u2026\n]\n**Note**: If there are multiple stops, there should be more leg objects on the board. defaults to [{\"sourceAirportCode\":\"BOS\",\"destinationAirportCode\":\"LON\",\"date\":\"2023-10-18\"},{\"sourceAirportCode\":\"LON\",\"destinationAirportCode\":\"BOS\",\"date\":\"2023-10-26\"}]\n    :param string? pageLoadUid: Pass **pageLoadUid** from the previous API call to get a complete response.\n\n    :param string? currencyCode: **currencyCode** can be retrieved from **Get Currency** API from **Configs** collection. defaults to USD\n    :param string? searchId: Pass **searchId** from the previous API call to get a complete response.\n\n    :param string? searchHash: Pass **searchHash** from the previous API call to get a complete response.\n\n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_search_flights_multicity',kwargs)\n        "
    },
    "rapi_tripadvisor_get_currency": {
        "api_name": "get_currency",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_get_currency(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_get_currency',kwargs)\n        "
    },
    "rapi_tripadvisor_rental_search": {
        "api_name": "rental_search",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_rental_search(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    :param DATE (YYYY-MM-DD) arrival: Checkin Date\nFormat: YYYY-MM-DD\n    :param ENUM sortOrder: Sort by parameter\n    :param string geoId: Get geoId of the place from Rental Search API from the Vacation Rentals collection.\n    :param DATE (YYYY-MM-DD) departure: Checkout Date\nFormat: YYYY-MM-DD\n    :param integer? page: Page number. The default page number is 1. defaults to 1\n    :param string? currencyCode: **currencyCode** can be retrieved from **Get Currency** API from **Configs** collection. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_rental_search',kwargs)\n        "
    },
    "rapi_tripadvisor_get_cruises_details": {
        "api_name": "get_cruises_details",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_get_cruises_details(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    :param string seoName: **seoName** can be retrieved from **Search Cruises** API and **Get Cruises Quick Links** API from the **Cruises collection**. defaults to MSC Magnifica\n    :param string shipId: **shipId** can be retrieved from **Search Cruises** API and **Get Cruises Quick Links** API from the **Cruises collection**. defaults to 15691635\n    :param string? currencyCode: **currencyCode** can be retrieved from **Get Currency** API from **Configs** collection. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_get_cruises_details',kwargs)\n        "
    },
    "rapi_tripadvisor_get_cruises_quick_links": {
        "api_name": "get_cruises_quick_links",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_get_cruises_quick_links(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_get_cruises_quick_links',kwargs)\n        "
    },
    "rapi_tripadvisor_get_cruises_location": {
        "api_name": "get_cruises_location",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_get_cruises_location(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_get_cruises_location',kwargs)\n        "
    },
    "rapi_tripadvisor_search_vacation_rental_location": {
        "api_name": "search_vacation_rental_location",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_search_vacation_rental_location(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    :param string query: Name of the location where you want to search for **Vacation Rentals**. defaults to new\n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_search_vacation_rental_location',kwargs)\n        "
    },
    "rapi_tripadvisor_get_restaurant_details": {
        "api_name": "get_restaurant_details",
        "category": "Travel",
        "tool_name": "tripadvisor",
        "code": "async def rapi_tripadvisor_get_restaurant_details(self,*args,**kwargs):\n    '''Tripadvisor API helps to query realtime  Hotels search, Flights prices, Restaurants, Attracting locations, etc to create a travelling site.\n    \n    \n\n    :param string restaurantsId: Get id from **search restaurant** API defaults to Restaurant_Review-g304554-d8010527-Reviews-Saptami-Mumbai_Maharashtra\n    :param string? currencyCode: **currencyCode** can be retrieved from **Get Currency** API from **Configs** collection. defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_tripadvisor_get_restaurant_details',kwargs)\n        "
    },
    "rapi_booking_properties_v2_get_rooms": {
        "api_name": "properties_v2_get_rooms",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_v2_get_rooms(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param string rec_room_qty:  defaults to 1\n    :param string arrival_date: The check-in date at hotel defaults to 2022-10-5\n    :param string rec_guest_qty: The number of adults separated by comma, and how you arrange them in rooms defaults to 2\n    :param string hotel_id: The value of hotel_id field from properties/list API defaults to 1720410\n    :param string departure_date: The check-out date  defaults to 2022-10-10\n    :param string? units: One of the following : metric|imperial defaults to imperial\n    :param string? currency_code: The currency code defaults to USD\n    :param string? block_ids: The value of 'block_ids' field returned in .../properties/list endpoint\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    :param string? rec_children_qty: The number of children separated by comma, and how you arrange them in rooms\n    :param string? rec_children_age: The year old of each child that separated by comma. Ex : 5,12\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_v2_get_rooms',kwargs)\n        "
    },
    "rapi_booking_properties_get_policies": {
        "api_name": "properties_get_policies",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_get_policies(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param integer hotel_ids: The value of hotel_id field from properties/list API defaults to 1528418\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    :param string? currency_code: The currency code defaults to USD\n    :param string? departure_date: The check-out date at hotel defaults to 2019-03-15\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_get_policies',kwargs)\n        "
    },
    "rapi_booking_properties_get_featured_reviews": {
        "api_name": "properties_get_featured_reviews",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_get_featured_reviews(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param string hotel_id: The value of hotel_id from properties/list API defaults to 1528418\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_get_featured_reviews',kwargs)\n        "
    },
    "rapi_booking_properties_list_by_map": {
        "api_name": "properties_list_by_map",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_list_by_map(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param string arrival_date: The check-in date at hotel, the format is yyyy-MM-dd. Ex : 2022-08-14\n    :param string room_qty: The number of rooms defaults to 1\n    :param string departure_date: The check-out date, the format is yyyy-MM-dd. Ex : 2022-08-15\n    :param string guest_qty: The number of adults defaults to 1\n    :param string bbox: Coordinate of bounding box - latitude (bottom left),latitude (top right),longitude (bottom left),longitude (top right) defaults to 14.291283,14.948423,120.755688,121.136864\n    :param string? travel_purpose: One of the followings : leisure|business defaults to leisure\n    :param string? categories_filter: The id returned by .../filters/list API, values separated by comma defaults to class::1,class::2,class::3\n    :param integer? children_qty: The number of children defaults to 2\n    :param string? search_id: Pass \\\\\\\"none\\\\\\\" or value returned right in this API defaults to none\n    :param string? children_age: The year old of each child that separated by comma defaults to 11,5\n    :param string? price_filter_currencycode: The base currency to calculate exchange rate defaults to USD\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    :param string? order_by: One of the followings : popularity|distance|class&#95;descending|class&#95;ascending|deals|review&#95;score|price defaults to popularity\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_list_by_map',kwargs)\n        "
    },
    "rapi_booking_properties_list": {
        "api_name": "properties_list",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_list(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param integer offset: The number of items to ignore as offset for paging (fixed 30 items returned per page). You are interested in the optional parameter 'search_id' defaults to 0\n    :param string departure_date: The check-out date, the format is yyyy-MM-dd. Ex : 2022-08-15\n    :param integer room_qty: The number of rooms defaults to 1\n    :param integer guest_qty: The number of adults defaults to 1\n    :param string arrival_date: The check-in date at hotel, the format is yyyy-MM-dd. Ex : 2022-08-14\n    :param string search_type: Value of dest_type returned by locations/auto-complete API defaults to city\n    :param integer dest_ids: Value of dest&#95;id or city&#95;ufi field from locations/auto-complete API (Don't pass this if you use latlong as search&#95;type) defaults to -3712125\n    :param string? price_filter_currencycode: The base currency to calculate exchange rate defaults to USD\n    :param string? travel_purpose: One of the followings : leisure|business defaults to leisure\n    :param string? latitude: 10.838039 - Don't pass this param if you DON'T use latlong as search_type\n    :param string? longitude: 106.686102 - Don't pass this param if you DON'T use latlong as search_type\n    :param string? categories_filter: The id returned by .../filters/list API, separated by comma for multiple options. Ex : price::9-40,free_cancellation::1,class::1,class::0,class::2\n    :param string? order_by: One of the followings : popularity|distance|class&#95;descending|class&#95;ascending|deals|review&#95;score|price defaults to popularity\n    :param string? children_age: The year old of each child that separated by comma defaults to 5,7\n    :param integer? children_qty: The number of children defaults to 2\n    :param string? search_id: Pass 'none' or value returned right in this API. You need to pass this parameter to get 'offset' working defaults to none\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_list',kwargs)\n        "
    },
    "rapi_booking_properties_get_static_map": {
        "api_name": "properties_get_static_map",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_properties_get_static_map(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param integer width: The width of image in pixel defaults to 720\n    :param integer longitude: The latitude co-ordinate defaults to 106.663626\n    :param integer zoom: Zoom in/out of map defaults to 18\n    :param integer height: The height of image in pixel defaults to 280\n    :param integer latitude: The latitude co-ordinate defaults to 10.807570\n    :param string? currency_code: The currency code defaults to USD\n    :param string? languagecode: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja\\\",         \\\"ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_properties_get_static_map',kwargs)\n        "
    },
    "rapi_booking_currency_get_exchange_rates": {
        "api_name": "currency_get_exchange_rates",
        "category": "Travel",
        "tool_name": "booking",
        "code": "async def rapi_booking_currency_get_exchange_rates(self,*args,**kwargs):\n    '''This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travel site such as : booking.com\n    \n    \n\n    :param string base_currency: One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw defaults to USD\n    :param string? languagecode: The language code of specific country defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_booking_currency_get_exchange_rates',kwargs)\n        "
    },
    "rapi_dados_cnpj_cnpj": {
        "api_name": "cnpj",
        "category": "Database",
        "tool_name": "dados_cnpj",
        "code": "async def rapi_dados_cnpj_cnpj(self,*args,**kwargs):\n    '''Busca os dados de um CNPJ diretamente na base de dados da Receita Federal.\n    \n    \n\n    :param string cnpj:  defaults to 22543331000100\n    '''\n    return await self._request_rapid_api('rapi_dados_cnpj_cnpj',kwargs)\n        "
    },
    "rapi_restaurants_near_me_usa_get_all_city_names": {
        "api_name": "get_all_city_names",
        "category": "Database",
        "tool_name": "restaurants_near_me_usa",
        "code": "async def rapi_restaurants_near_me_usa_get_all_city_names(self,*args,**kwargs):\n    '''USA Restaurants database. Find restaurants near you by querying this complete and comprehensive restaurant API. The API will return 10 results per page. Please use the \"page\" field for pagination.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_restaurants_near_me_usa_get_all_city_names',kwargs)\n        "
    },
    "rapi_restaurants_near_me_usa_get_all_state_names": {
        "api_name": "get_all_state_names",
        "category": "Database",
        "tool_name": "restaurants_near_me_usa",
        "code": "async def rapi_restaurants_near_me_usa_get_all_state_names(self,*args,**kwargs):\n    '''USA Restaurants database. Find restaurants near you by querying this complete and comprehensive restaurant API. The API will return 10 results per page. Please use the \"page\" field for pagination.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_restaurants_near_me_usa_get_all_state_names',kwargs)\n        "
    },
    "rapi_restaurants_near_me_usa_get_all_restaurant_locations": {
        "api_name": "get_all_restaurant_locations",
        "category": "Database",
        "tool_name": "restaurants_near_me_usa",
        "code": "async def rapi_restaurants_near_me_usa_get_all_restaurant_locations(self,*args,**kwargs):\n    '''USA Restaurants database. Find restaurants near you by querying this complete and comprehensive restaurant API. The API will return 10 results per page. Please use the \"page\" field for pagination.\n    \n    \n\n    :param integer page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_restaurants_near_me_usa_get_all_restaurant_locations',kwargs)\n        "
    },
    "rapi_python_libraries_tst_view_user_list": {
        "api_name": "view_user_list",
        "category": "Database",
        "tool_name": "python_libraries_tst",
        "code": "async def rapi_python_libraries_tst_view_user_list(self,*args,**kwargs):\n    '''Testing for mock api endpointss\n    \n    \n\n    :param string userId:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_python_libraries_tst_view_user_list',kwargs)\n        "
    },
    "rapi_data_breach_checker_data_breach_checker_endpoint": {
        "api_name": "data_breach_checker_endpoint",
        "category": "Database",
        "tool_name": "data_breach_checker",
        "code": "async def rapi_data_breach_checker_data_breach_checker_endpoint(self,*args,**kwargs):\n    '''The Data Breach Checker API allows users to check if their data has been compromised in any known data breaches. By simply entering an email address, the API searches through a vast database of known data breaches using the reputable \"Have I Been Pwned\" backend. The API is easy to integrate into existing applications, making it an essential tool for companies and individuals seeking to enhance their cybersecurity posture. \n    \n    \n\n    :param string email:  defaults to example@xyz.com\n    '''\n    return await self._request_rapid_api('rapi_data_breach_checker_data_breach_checker_endpoint',kwargs)\n        "
    },
    "rapi_list_movies_v3_movie_details": {
        "api_name": "movie_details",
        "category": "Database",
        "tool_name": "list_movies_v3",
        "code": "async def rapi_list_movies_v3_movie_details(self,*args,**kwargs):\n    '''This Movies API contains the data of the best movies ever made in a very easy-to-use and organized format.\n\nGreat choice for REST API based Frontend Developer Projects.\n\nIn the case of accessing the complete list, the Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and ID of the movies are listed.\n\nThis is a lightweight web service, (REST interface), which provides an easy way to access our database.\n\nAn API (Application programming...\n    \n    \n\n    :param integer? movie_id: The YTS ID of the movie or the IMDB ID defaults to 10\n    :param integer? imdb_id: The YTS ID of the movie or the IMDB ID defaults to 10\n    :param boolean? with_cast: When set the data returned will include the added information about the cast defaults to false\n    :param boolean? with_images: When set the data returned will include the added image URLs defaults to false\n    '''\n    return await self._request_rapid_api('rapi_list_movies_v3_movie_details',kwargs)\n        "
    },
    "rapi_list_movies_v3_movie_suggestions": {
        "api_name": "movie_suggestions",
        "category": "Database",
        "tool_name": "list_movies_v3",
        "code": "async def rapi_list_movies_v3_movie_suggestions(self,*args,**kwargs):\n    '''This Movies API contains the data of the best movies ever made in a very easy-to-use and organized format.\n\nGreat choice for REST API based Frontend Developer Projects.\n\nIn the case of accessing the complete list, the Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and ID of the movies are listed.\n\nThis is a lightweight web service, (REST interface), which provides an easy way to access our database.\n\nAn API (Application programming...\n    \n    \n\n    :param integer? movie_id:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_list_movies_v3_movie_suggestions',kwargs)\n        "
    },
    "rapi_list_movies_v3_list_movies": {
        "api_name": "list_movies",
        "category": "Database",
        "tool_name": "list_movies_v3",
        "code": "async def rapi_list_movies_v3_list_movies(self,*args,**kwargs):\n    '''This Movies API contains the data of the best movies ever made in a very easy-to-use and organized format.\n\nGreat choice for REST API based Frontend Developer Projects.\n\nIn the case of accessing the complete list, the Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and ID of the movies are listed.\n\nThis is a lightweight web service, (REST interface), which provides an easy way to access our database.\n\nAn API (Application programming...\n    \n    \n\n    :param string? genre: Used to filter by a given genre (See http://www.imdb.com/genre/ for full list) defaults to all\n    :param string? order_by: Orders the results by either Ascending or Descending order. defaults to desc\n    :param boolean? with_rt_ratings: Returns the list with the Rotten Tomatoes rating included. defaults to false\n    :param string? sort_by: Sorts the results by choosen value. defaults to date_added\n    :param integer? page: used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30. defaults to 1\n    :param string? query_term: Used for movie search, matching on: Movie Title/IMDB Code, Actor Name/IMDb, Director Name/IMDb Code. defaults to 0\n    :param string? quality: Used to filter by a given quality. defaults to all\n    :param integer? minimum_rating: used to filter movie by a given minimum IMDB rating. defaults to 0\n    :param integer? limit: The limit of results per page that has been set. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_list_movies_v3_list_movies',kwargs)\n        "
    },
    "rapi_indian_rto_s_names_search_all_rto_s": {
        "api_name": "all_rto_s",
        "category": "Database",
        "tool_name": "indian_rto_s_names_search",
        "code": "async def rapi_indian_rto_s_names_search_all_rto_s(self,*args,**kwargs):\n    '''Search all India's RTO names by name, city PREFIX, like MH (for maharashtra), GA, CA, TA, etc\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_indian_rto_s_names_search_all_rto_s',kwargs)\n        "
    },
    "rapi_world_history_timeline_historic_event_by_year": {
        "api_name": "historic_event_by_year",
        "category": "Database",
        "tool_name": "world_history_timeline",
        "code": "async def rapi_world_history_timeline_historic_event_by_year(self,*args,**kwargs):\n    '''Introducing the World History Timeline API by Pizza API - an extensive resource for exploring world historical events from 3200 BCE to the year 2000. This API gives you access to a vast database of information on the most significant moments in human history, including the dates and events all organized in an easy-to-use format for developers.  \n\nWith the World History Timeline API, you can delve into the history of ancient civilizations, witness the key events of the Middle Ages, and underst...\n    \n    \n\n    :param string year:  defaults to 400\n    '''\n    return await self._request_rapid_api('rapi_world_history_timeline_historic_event_by_year',kwargs)\n        "
    },
    "rapi_world_history_timeline_random_historic_event": {
        "api_name": "random_historic_event",
        "category": "Database",
        "tool_name": "world_history_timeline",
        "code": "async def rapi_world_history_timeline_random_historic_event(self,*args,**kwargs):\n    '''Introducing the World History Timeline API by Pizza API - an extensive resource for exploring world historical events from 3200 BCE to the year 2000. This API gives you access to a vast database of information on the most significant moments in human history, including the dates and events all organized in an easy-to-use format for developers.  \n\nWith the World History Timeline API, you can delve into the history of ancient civilizations, witness the key events of the Middle Ages, and underst...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_history_timeline_random_historic_event',kwargs)\n        "
    },
    "rapi_roman_gods_by_pizza_api_search_roman_god_by_name": {
        "api_name": "search_roman_god_by_name",
        "category": "Database",
        "tool_name": "roman_gods_by_pizza_api",
        "code": "async def rapi_roman_gods_by_pizza_api_search_roman_god_by_name(self,*args,**kwargs):\n    '''With the Roman Gods API, you can access information about gods such as Jupiter, the king of the gods, and his wife Juno, the goddess of marriage and childbirth. You can also learn about other prominent gods, such as Mars, the god of war, Venus, the goddess of love and beauty, and Mercury, the messenger of the gods.  \n\nThis API is ideal for anyone looking to build applications centered around ancient mythology, history, or culture. Whether you're developing a website, a mobile app, or a game, ...\n    \n    \n\n    :param string god:  defaults to jupiter\n    '''\n    return await self._request_rapid_api('rapi_roman_gods_by_pizza_api_search_roman_god_by_name',kwargs)\n        "
    },
    "rapi_roman_gods_by_pizza_api_random_roman_god": {
        "api_name": "random_roman_god",
        "category": "Database",
        "tool_name": "roman_gods_by_pizza_api",
        "code": "async def rapi_roman_gods_by_pizza_api_random_roman_god(self,*args,**kwargs):\n    '''With the Roman Gods API, you can access information about gods such as Jupiter, the king of the gods, and his wife Juno, the goddess of marriage and childbirth. You can also learn about other prominent gods, such as Mars, the god of war, Venus, the goddess of love and beauty, and Mercury, the messenger of the gods.  \n\nThis API is ideal for anyone looking to build applications centered around ancient mythology, history, or culture. Whether you're developing a website, a mobile app, or a game, ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_roman_gods_by_pizza_api_random_roman_god',kwargs)\n        "
    },
    "rapi_vct_global_contract_database_pacific": {
        "api_name": "pacific",
        "category": "Database",
        "tool_name": "vct_global_contract_database",
        "code": "async def rapi_vct_global_contract_database_pacific(self,*args,**kwargs):\n    '''Get the VCT contract information for all 3 regions via this API. Updated every few hours.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_vct_global_contract_database_pacific',kwargs)\n        "
    },
    "rapi_vct_global_contract_database_emea": {
        "api_name": "emea",
        "category": "Database",
        "tool_name": "vct_global_contract_database",
        "code": "async def rapi_vct_global_contract_database_emea(self,*args,**kwargs):\n    '''Get the VCT contract information for all 3 regions via this API. Updated every few hours.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_vct_global_contract_database_emea',kwargs)\n        "
    },
    "rapi_vct_global_contract_database_americas": {
        "api_name": "americas",
        "category": "Database",
        "tool_name": "vct_global_contract_database",
        "code": "async def rapi_vct_global_contract_database_americas(self,*args,**kwargs):\n    '''Get the VCT contract information for all 3 regions via this API. Updated every few hours.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_vct_global_contract_database_americas',kwargs)\n        "
    },
    "rapi_dogbreeddb_paginated": {
        "api_name": "paginated",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_paginated(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_paginated',kwargs)\n        "
    },
    "rapi_dogbreeddb_order_by_descending": {
        "api_name": "order_by_descending",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_order_by_descending(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string ordering:  defaults to -breedName\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_order_by_descending',kwargs)\n        "
    },
    "rapi_dogbreeddb_order_by_ascending": {
        "api_name": "order_by_ascending",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_order_by_ascending(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string ordering:  defaults to breedName\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_order_by_ascending',kwargs)\n        "
    },
    "rapi_dogbreeddb_origin": {
        "api_name": "origin",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_origin(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string origin:  defaults to germany\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_origin',kwargs)\n        "
    },
    "rapi_dogbreeddb_fur_color": {
        "api_name": "fur_color",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_fur_color(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string furColor__icontains:  defaults to white\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_fur_color',kwargs)\n        "
    },
    "rapi_dogbreeddb_search": {
        "api_name": "search",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_search(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string search:  defaults to alaskan\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_search',kwargs)\n        "
    },
    "rapi_dogbreeddb_single_dog_breed": {
        "api_name": "single_dog_breed",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_single_dog_breed(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer id:  defaults to 47\n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_single_dog_breed',kwargs)\n        "
    },
    "rapi_dogbreeddb_all_dog_breed": {
        "api_name": "all_dog_breed",
        "category": "Database",
        "tool_name": "dogbreeddb",
        "code": "async def rapi_dogbreeddb_all_dog_breed(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dogbreeddb_all_dog_breed',kwargs)\n        "
    },
    "rapi_mongodb_wix_get_tenant": {
        "api_name": "get_tenant",
        "category": "Database",
        "tool_name": "mongodb_wix",
        "code": "async def rapi_mongodb_wix_get_tenant(self,*args,**kwargs):\n    '''Adapter for MongoDb Atlas\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mongodb_wix_get_tenant',kwargs)\n        "
    },
    "rapi_mongodb_wix_get_vault_by_name": {
        "api_name": "get_vault_by_name",
        "category": "Database",
        "tool_name": "mongodb_wix",
        "code": "async def rapi_mongodb_wix_get_vault_by_name(self,*args,**kwargs):\n    '''Adapter for MongoDb Atlas\n    \n    \n\n    :param string name:  defaults to Vault_XEDKR\n    '''\n    return await self._request_rapid_api('rapi_mongodb_wix_get_vault_by_name',kwargs)\n        "
    },
    "rapi_mongodb_wix_get_schema_by_name": {
        "api_name": "get_schema_by_name",
        "category": "Database",
        "tool_name": "mongodb_wix",
        "code": "async def rapi_mongodb_wix_get_schema_by_name(self,*args,**kwargs):\n    '''Adapter for MongoDb Atlas\n    \n    \n\n    :param string schemaname:  defaults to car\n    '''\n    return await self._request_rapid_api('rapi_mongodb_wix_get_schema_by_name',kwargs)\n        "
    },
    "rapi_mongodb_wix_get_tenant_by_id": {
        "api_name": "get_tenant_by_id",
        "category": "Database",
        "tool_name": "mongodb_wix",
        "code": "async def rapi_mongodb_wix_get_tenant_by_id(self,*args,**kwargs):\n    '''Adapter for MongoDb Atlas\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_mongodb_wix_get_tenant_by_id',kwargs)\n        "
    },
    "rapi_portfolio_work": {
        "api_name": "work",
        "category": "Database",
        "tool_name": "portfolio",
        "code": "async def rapi_portfolio_work(self,*args,**kwargs):\n    '''Sami Malik Portfolio\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_portfolio_work',kwargs)\n        "
    },
    "rapi_portfolio_web": {
        "api_name": "web",
        "category": "Database",
        "tool_name": "portfolio",
        "code": "async def rapi_portfolio_web(self,*args,**kwargs):\n    '''Sami Malik Portfolio\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_portfolio_web',kwargs)\n        "
    },
    "rapi_all_cars_names_image_and_variants_info_search_all_cars": {
        "api_name": "search_all_cars",
        "category": "Database",
        "tool_name": "all_cars_names_image_and_variants_info",
        "code": "async def rapi_all_cars_names_image_and_variants_info_search_all_cars(self,*args,**kwargs):\n    '''Search All Cars Names, Image and Variants Info with this api ,search once and get list of all cars. use it for auto-suggestion\n    \n    \n\n    :param string vehicle_type:  defaults to car\n    '''\n    return await self._request_rapid_api('rapi_all_cars_names_image_and_variants_info_search_all_cars',kwargs)\n        "
    },
    "rapi_test_test": {
        "api_name": "test",
        "category": "Database",
        "tool_name": "test",
        "code": "async def rapi_test_test(self,*args,**kwargs):\n    '''Futtest\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_test_test',kwargs)\n        "
    },
    "rapi_women_in_tech_getcompanies": {
        "api_name": "getcompanies",
        "category": "Database",
        "tool_name": "women_in_tech",
        "code": "async def rapi_women_in_tech_getcompanies(self,*args,**kwargs):\n    '''A dataset of Women-led startups worldwide\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_women_in_tech_getcompanies',kwargs)\n        "
    },
    "rapi_airplanesdb_airplanes_ordered_by_descending": {
        "api_name": "airplanes_ordered_by_descending",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_airplanes_ordered_by_descending(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param string ordering:  defaults to -plane\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_airplanes_ordered_by_descending',kwargs)\n        "
    },
    "rapi_airplanesdb_airplanes_ordered_by_ascending": {
        "api_name": "airplanes_ordered_by_ascending",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_airplanes_ordered_by_ascending(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param string ordering:  defaults to plane\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_airplanes_ordered_by_ascending',kwargs)\n        "
    },
    "rapi_airplanesdb_search_by_engine": {
        "api_name": "search_by_engine",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_search_by_engine(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param string engine__icontains:  defaults to rolls\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_search_by_engine',kwargs)\n        "
    },
    "rapi_airplanesdb_airplanes_by_brand": {
        "api_name": "airplanes_by_brand",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_airplanes_by_brand(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param string brand:  defaults to Airbus\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_airplanes_by_brand',kwargs)\n        "
    },
    "rapi_airplanesdb_search": {
        "api_name": "search",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_search(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param string search:  defaults to a380\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_search',kwargs)\n        "
    },
    "rapi_airplanesdb_single_airplane": {
        "api_name": "single_airplane",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_single_airplane(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    :param integer id:  defaults to 76\n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_single_airplane',kwargs)\n        "
    },
    "rapi_airplanesdb_all_airplanes": {
        "api_name": "all_airplanes",
        "category": "Database",
        "tool_name": "airplanesdb",
        "code": "async def rapi_airplanesdb_all_airplanes(self,*args,**kwargs):\n    '''Get the basic specifications on all types of commercial airplanes.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_airplanesdb_all_airplanes',kwargs)\n        "
    },
    "rapi_weed_strain_all_strains_descending": {
        "api_name": "all_strains_descending",
        "category": "Database",
        "tool_name": "weed_strain",
        "code": "async def rapi_weed_strain_all_strains_descending(self,*args,**kwargs):\n    '''Basic information on all weed strain. Build mobile apps for weed strains.\n    \n    \n\n    :param string ordering:  defaults to -strain\n    '''\n    return await self._request_rapid_api('rapi_weed_strain_all_strains_descending',kwargs)\n        "
    },
    "rapi_weed_strain_difficulty": {
        "api_name": "difficulty",
        "category": "Database",
        "tool_name": "weed_strain",
        "code": "async def rapi_weed_strain_difficulty(self,*args,**kwargs):\n    '''Basic information on all weed strain. Build mobile apps for weed strains.\n    \n    \n\n    :param string difficulty:  defaults to medium\n    '''\n    return await self._request_rapid_api('rapi_weed_strain_difficulty',kwargs)\n        "
    },
    "rapi_weed_strain_single_strain": {
        "api_name": "single_strain",
        "category": "Database",
        "tool_name": "weed_strain",
        "code": "async def rapi_weed_strain_single_strain(self,*args,**kwargs):\n    '''Basic information on all weed strain. Build mobile apps for weed strains.\n    \n    \n\n    :param integer id:  defaults to 45\n    '''\n    return await self._request_rapid_api('rapi_weed_strain_single_strain',kwargs)\n        "
    },
    "rapi_weed_strain_all_strains": {
        "api_name": "all_strains",
        "category": "Database",
        "tool_name": "weed_strain",
        "code": "async def rapi_weed_strain_all_strains(self,*args,**kwargs):\n    '''Basic information on all weed strain. Build mobile apps for weed strains.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_weed_strain_all_strains',kwargs)\n        "
    },
    "rapi_hhside_hhside": {
        "api_name": "hhside",
        "category": "Database",
        "tool_name": "hhside",
        "code": "async def rapi_hhside_hhside(self,*args,**kwargs):\n    '''none\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hhside_hhside',kwargs)\n        "
    },
    "rapi_suggestuse_detail_info": {
        "api_name": "detail_info",
        "category": "Database",
        "tool_name": "suggestuse",
        "code": "async def rapi_suggestuse_detail_info(self,*args,**kwargs):\n    '''This api provides access to information about alternatives to various applications, for computers, smartphones or online services.\n    \n    \n\n    :param string slug:  defaults to dropbox\n    '''\n    return await self._request_rapid_api('rapi_suggestuse_detail_info',kwargs)\n        "
    },
    "rapi_car_code_obd2_code": {
        "api_name": "obd2_code",
        "category": "Database",
        "tool_name": "car_code",
        "code": "async def rapi_car_code_obd2_code(self,*args,**kwargs):\n    '''This is a simple API that will return the human readable version of DTC codes (OBD-II Trouble Codes).\n    \n    \n\n    :param string code:  defaults to P0001\n    '''\n    return await self._request_rapid_api('rapi_car_code_obd2_code',kwargs)\n        "
    },
    "rapi_motorcycle_specs_database_models_by_make": {
        "api_name": "models_by_make",
        "category": "Database",
        "tool_name": "motorcycle_specs_database",
        "code": "async def rapi_motorcycle_specs_database_models_by_make(self,*args,**kwargs):\n    '''--- DEMO http://api-motorcycle.makingdatameaningful.com/ ----\n\nThe complete Motorcycle Database with specifications for all Makes & Models [year 1900 to 2023].  Full specs & images included. Real-Time updated.\nWe provide a motorcycle database delivered through API. There are more than 35,000 moto models available along with 20+ technical information fields. One image per model is also included.  Our fast API is delivered through several endpoints in order to satisfy different request types.  ...\n    \n    \n\n    :param string make:  defaults to Yamaha\n    '''\n    return await self._request_rapid_api('rapi_motorcycle_specs_database_models_by_make',kwargs)\n        "
    },
    "rapi_motorcycle_specs_database_specifications_by_make_model": {
        "api_name": "specifications_by_make_model",
        "category": "Database",
        "tool_name": "motorcycle_specs_database",
        "code": "async def rapi_motorcycle_specs_database_specifications_by_make_model(self,*args,**kwargs):\n    '''--- DEMO http://api-motorcycle.makingdatameaningful.com/ ----\n\nThe complete Motorcycle Database with specifications for all Makes & Models [year 1900 to 2023].  Full specs & images included. Real-Time updated.\nWe provide a motorcycle database delivered through API. There are more than 35,000 moto models available along with 20+ technical information fields. One image per model is also included.  Our fast API is delivered through several endpoints in order to satisfy different request types.  ...\n    \n    \n\n    :param string make:  defaults to Aprilia\n    :param string model:  defaults to Dorsoduro 1200\n    '''\n    return await self._request_rapid_api('rapi_motorcycle_specs_database_specifications_by_make_model',kwargs)\n        "
    },
    "rapi_motorcycle_specs_database_models_by_make_id": {
        "api_name": "models_by_make_id",
        "category": "Database",
        "tool_name": "motorcycle_specs_database",
        "code": "async def rapi_motorcycle_specs_database_models_by_make_id(self,*args,**kwargs):\n    '''--- DEMO http://api-motorcycle.makingdatameaningful.com/ ----\n\nThe complete Motorcycle Database with specifications for all Makes & Models [year 1900 to 2023].  Full specs & images included. Real-Time updated.\nWe provide a motorcycle database delivered through API. There are more than 35,000 moto models available along with 20+ technical information fields. One image per model is also included.  Our fast API is delivered through several endpoints in order to satisfy different request types.  ...\n    \n    \n\n    :param string id:  defaults to 485\n    '''\n    return await self._request_rapid_api('rapi_motorcycle_specs_database_models_by_make_id',kwargs)\n        "
    },
    "rapi_winget_api_get_complete_package_list": {
        "api_name": "get_complete_package_list",
        "category": "Database",
        "tool_name": "winget_api",
        "code": "async def rapi_winget_api_get_complete_package_list(self,*args,**kwargs):\n    '''Uses the Winget database to fetch informations. Updated every 3 hours.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_winget_api_get_complete_package_list',kwargs)\n        "
    },
    "rapi_veiculos_api_veiculo_tipo": {
        "api_name": "veiculo_tipo",
        "category": "Database",
        "tool_name": "veiculos_api",
        "code": "async def rapi_veiculos_api_veiculo_tipo(self,*args,**kwargs):\n    '''Tabela FIPE - Busca por marca, modelo e vers\u00e3o.\n    \n    \n\n    :param string veiculo_tipo:  defaults to carros\n    '''\n    return await self._request_rapid_api('rapi_veiculos_api_veiculo_tipo',kwargs)\n        "
    },
    "rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo_id_modelo_ano": {
        "api_name": "veiculo_tipo_id_marca_id_modelo_id_modelo_ano",
        "category": "Database",
        "tool_name": "veiculos_api",
        "code": "async def rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo_id_modelo_ano(self,*args,**kwargs):\n    '''Tabela FIPE - Busca por marca, modelo e vers\u00e3o.\n    \n    \n\n    :param string id_modelo_ano:  defaults to 1995-1\n    :param string veiculo_tipo:  defaults to carros\n    :param string id_marca:  defaults to 6\n    :param string id_modelo:  defaults to 43\n    '''\n    return await self._request_rapid_api('rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo_id_modelo_ano',kwargs)\n        "
    },
    "rapi_veiculos_api_veiculo_tipo_id_marca": {
        "api_name": "veiculo_tipo_id_marca",
        "category": "Database",
        "tool_name": "veiculos_api",
        "code": "async def rapi_veiculos_api_veiculo_tipo_id_marca(self,*args,**kwargs):\n    '''Tabela FIPE - Busca por marca, modelo e vers\u00e3o.\n    \n    \n\n    :param string veiculo_tipo:  defaults to carros\n    :param string id_marca:  defaults to 6\n    '''\n    return await self._request_rapid_api('rapi_veiculos_api_veiculo_tipo_id_marca',kwargs)\n        "
    },
    "rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo": {
        "api_name": "veiculo_tipo_id_marca_id_modelo",
        "category": "Database",
        "tool_name": "veiculos_api",
        "code": "async def rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo(self,*args,**kwargs):\n    '''Tabela FIPE - Busca por marca, modelo e vers\u00e3o.\n    \n    \n\n    :param string id_marca:  defaults to 6\n    :param string id_modelo:  defaults to 43\n    :param string veiculo_tipo:  defaults to carros\n    '''\n    return await self._request_rapid_api('rapi_veiculos_api_veiculo_tipo_id_marca_id_modelo',kwargs)\n        "
    },
    "rapi_mocking_rock_get_geo_location_of_ip_address": {
        "api_name": "get_geo_location_of_ip_address",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_geo_location_of_ip_address(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    :param string ip: Send a proper IPV4 .If valid IP will return result. defaults to 34.89.89.28\n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_geo_location_of_ip_address',kwargs)\n        "
    },
    "rapi_mocking_rock_get_locales_list": {
        "api_name": "get_locales_list",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_locales_list(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_locales_list',kwargs)\n        "
    },
    "rapi_mocking_rock_get_sample_businessprofile": {
        "api_name": "get_sample_businessprofile",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_sample_businessprofile(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    :param string? locale: Pass locale to set language and regional details of profile generated. For single count by default its \\\\\\\"en\\\\\\\" .  defaults to en\n    :param integer? count: Use to get number of profiles . Max count 1000 for now  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_sample_businessprofile',kwargs)\n        "
    },
    "rapi_mocking_rock_get_sample_userprofile": {
        "api_name": "get_sample_userprofile",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_sample_userprofile(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    :param integer? count: Use to get number of profiles . Max count 1000 for now  defaults to 2\n    :param string? locale: Pass locale to set language and regional details of profile generated. For single count by default its \\\"en\\\" .  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_sample_userprofile',kwargs)\n        "
    },
    "rapi_mocking_rock_get_country_codes": {
        "api_name": "get_country_codes",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_country_codes(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_country_codes',kwargs)\n        "
    },
    "rapi_mocking_rock_get_countrywise_city_data": {
        "api_name": "get_countrywise_city_data",
        "category": "Database",
        "tool_name": "mocking_rock",
        "code": "async def rapi_mocking_rock_get_countrywise_city_data(self,*args,**kwargs):\n    '''An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    \n    \n    \n\n    :param string? iso3: PASS 3 character long ISO3 code. You  can get it from country Codes API  defaults to IND\n    :param string? country: PASS  country name . You  can get it from country Codes API  defaults to IND\n    :param integer? count: Pass count value to get maximum number of results to be returned if available  defaults to 2\n    :param string? iso2: PASS 2 character long ISO2 code. You  can get it from country Codes API  defaults to IN\n    '''\n    return await self._request_rapid_api('rapi_mocking_rock_get_countrywise_city_data',kwargs)\n        "
    },
    "rapi_businessmate_get_list_of_languages": {
        "api_name": "get_list_of_languages",
        "category": "Database",
        "tool_name": "businessmate",
        "code": "async def rapi_businessmate_get_list_of_languages(self,*args,**kwargs):\n    '''Grab your business opportunities contact with ease and get a thousand phone numbers, websites, etc., with only one click.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_businessmate_get_list_of_languages',kwargs)\n        "
    },
    "rapi_catbreeddb_paginated": {
        "api_name": "paginated",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_paginated(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_paginated',kwargs)\n        "
    },
    "rapi_catbreeddb_order_by_descending": {
        "api_name": "order_by_descending",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_order_by_descending(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    :param string ordering:  defaults to -breedName\n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_order_by_descending',kwargs)\n        "
    },
    "rapi_catbreeddb_order_by_ascending": {
        "api_name": "order_by_ascending",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_order_by_ascending(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    :param string ordering:  defaults to breedName\n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_order_by_ascending',kwargs)\n        "
    },
    "rapi_catbreeddb_fur_color": {
        "api_name": "fur_color",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_fur_color(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    :param string furColor__icontains:  defaults to black\n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_fur_color',kwargs)\n        "
    },
    "rapi_catbreeddb_breed_type": {
        "api_name": "breed_type",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_breed_type(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    :param string breedType:  defaults to Natural\n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_breed_type',kwargs)\n        "
    },
    "rapi_catbreeddb_single_cat_breed": {
        "api_name": "single_cat_breed",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_single_cat_breed(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    :param integer id:  defaults to 34\n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_single_cat_breed',kwargs)\n        "
    },
    "rapi_catbreeddb_all_cats": {
        "api_name": "all_cats",
        "category": "Database",
        "tool_name": "catbreeddb",
        "code": "async def rapi_catbreeddb_all_cats(self,*args,**kwargs):\n    '''Get the basic metadata on all breeds of cats from around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_catbreeddb_all_cats',kwargs)\n        "
    },
    "rapi_taekwondo_athlete_world_ranking_get_u_58_athlete_ranking": {
        "api_name": "get_u_58_athlete_ranking",
        "category": "Database",
        "tool_name": "taekwondo_athlete_world_ranking",
        "code": "async def rapi_taekwondo_athlete_world_ranking_get_u_58_athlete_ranking(self,*args,**kwargs):\n    '''Taekwondo_Athlete_World_Ranking\n    \n    \n\n    :param string? Country: \n    '''\n    return await self._request_rapid_api('rapi_taekwondo_athlete_world_ranking_get_u_58_athlete_ranking',kwargs)\n        "
    },
    "rapi_taekwondo_athlete_world_ranking_get_u_54_athlete_ranking": {
        "api_name": "get_u_54_athlete_ranking",
        "category": "Database",
        "tool_name": "taekwondo_athlete_world_ranking",
        "code": "async def rapi_taekwondo_athlete_world_ranking_get_u_54_athlete_ranking(self,*args,**kwargs):\n    '''Taekwondo_Athlete_World_Ranking\n    \n    \n\n    :param string? Country: \n    '''\n    return await self._request_rapid_api('rapi_taekwondo_athlete_world_ranking_get_u_54_athlete_ranking',kwargs)\n        "
    },
    "rapi_test1_e1": {
        "api_name": "e1",
        "category": "Database",
        "tool_name": "test1",
        "code": "async def rapi_test1_e1(self,*args,**kwargs):\n    '''Test1AA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_test1_e1',kwargs)\n        "
    },
    "rapi_legend_of_takada_kenshi_main": {
        "api_name": "main",
        "category": "Database",
        "tool_name": "legend_of_takada_kenshi",
        "code": "async def rapi_legend_of_takada_kenshi_main(self,*args,**kwargs):\n    '''An API that randomly returns the legend of Takada Kenshi\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_legend_of_takada_kenshi_main',kwargs)\n        "
    },
    "rapi_felina_multisig_wallet_api_get_nfts": {
        "api_name": "get_nfts",
        "category": "Database",
        "tool_name": "felina_multisig_wallet_api",
        "code": "async def rapi_felina_multisig_wallet_api_get_nfts(self,*args,**kwargs):\n    '''Handles the database of the wallet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_felina_multisig_wallet_api_get_nfts',kwargs)\n        "
    },
    "rapi_felina_multisig_wallet_api_read_transactions": {
        "api_name": "read_transactions",
        "category": "Database",
        "tool_name": "felina_multisig_wallet_api",
        "code": "async def rapi_felina_multisig_wallet_api_read_transactions(self,*args,**kwargs):\n    '''Handles the database of the wallet\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_felina_multisig_wallet_api_read_transactions',kwargs)\n        "
    },
    "rapi_database_of_airports_api_airports": {
        "api_name": "airports",
        "category": "Database",
        "tool_name": "database_of_airports_api",
        "code": "async def rapi_database_of_airports_api_airports(self,*args,**kwargs):\n    '''The Database of Airports API is a useful resource for developers looking to obtain detailed information on airports worldwide. With the ability to access data such as airport location, IATA and ICAO codes, and other relevant details using the IATA code.\n    \n    \n\n    :param string codeIataAirport: Use this parameter to get information about a specific airport, you can search based on IATA code. defaults to LAX\n    '''\n    return await self._request_rapid_api('rapi_database_of_airports_api_airports',kwargs)\n        "
    },
    "rapi_card_databse_hsdb": {
        "api_name": "hsdb",
        "category": "Database",
        "tool_name": "card_databse",
        "code": "async def rapi_card_databse_hsdb(self,*args,**kwargs):\n    '''Hearthstone\n    \n    \n\n    :param string? HSDB: \n    '''\n    return await self._request_rapid_api('rapi_card_databse_hsdb',kwargs)\n        "
    },
    "rapi_whois_history_whois_history_v1": {
        "api_name": "whois_history_v1",
        "category": "Database",
        "tool_name": "whois_history",
        "code": "async def rapi_whois_history_whois_history_v1(self,*args,**kwargs):\n    '''WHOIS History API lets you find out about current and past domain owners and all other relevant registration details that can be gathered from WHOIS records. \n    \n    \n\n    :param string domainName: The domain for which historic WHOIS data is requested. defaults to google.com\n    :param string? createdDateTo: If present, search through domains created before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? createdDateFrom: If present, search through domains created after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? outputFormat: Response output format. Acceptable values: XML or JSON. Defaults to JSON.\n    :param string? expiredDateTo: If present, search through domains expired before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? updatedDateTo: If present, search through domains updated before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? mode: preview \u2013 return only the number of domains. No credits deducted. purchase \u2013 return the actual list of domains (limited to 10,000). 1 request costs 50 DRS credits. Default: preview\n    :param string? updatedDateFrom: If present, search through domains updated after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? expiredDateFrom: If present, search through domains expired after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.\n    :param string? sinceDate: If present, search through activities discovered since the given date. Sometimes there is a latency between the actual added/renewal/expired date and the date when our system detected this change. Acceptable values: date in \"YYYY-MM-DD\" format.\n    '''\n    return await self._request_rapid_api('rapi_whois_history_whois_history_v1',kwargs)\n        "
    },
    "rapi_light_switch_switches": {
        "api_name": "switches",
        "category": "Database",
        "tool_name": "light_switch",
        "code": "async def rapi_light_switch_switches(self,*args,**kwargs):\n    '''\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_light_switch_switches',kwargs)\n        "
    },
    "rapi_sitedomain_domain_detail": {
        "api_name": "domain_detail",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_domain_detail(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    :param integer did: \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_domain_detail',kwargs)\n        "
    },
    "rapi_sitedomain_domain_type": {
        "api_name": "domain_type",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_domain_type(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_domain_type',kwargs)\n        "
    },
    "rapi_sitedomain_status_list": {
        "api_name": "status_list",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_status_list(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_status_list',kwargs)\n        "
    },
    "rapi_sitedomain_theme_detail": {
        "api_name": "theme_detail",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_theme_detail(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    :param integer dtid: \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_theme_detail',kwargs)\n        "
    },
    "rapi_sitedomain_industry_list": {
        "api_name": "industry_list",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_industry_list(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    :param string alias: \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_industry_list',kwargs)\n        "
    },
    "rapi_sitedomain_language_list": {
        "api_name": "language_list",
        "category": "Database",
        "tool_name": "sitedomain",
        "code": "async def rapi_sitedomain_language_list(self,*args,**kwargs):\n    '''site adm domain\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sitedomain_language_list',kwargs)\n        "
    },
    "rapi_watch_database_get_watches_by_brand_family_model": {
        "api_name": "get_watches_by_brand_family_model",
        "category": "Database",
        "tool_name": "watch_database",
        "code": "async def rapi_watch_database_get_watches_by_brand_family_model(self,*args,**kwargs):\n    '''Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...\n    \n    \n\n    :param string brandName:  defaults to Omega\n    :param string model:  defaults to 2005.75.00\n    :param string family:  defaults to Aqua Terra\n    '''\n    return await self._request_rapid_api('rapi_watch_database_get_watches_by_brand_family_model',kwargs)\n        "
    },
    "rapi_watch_database_get_all_models_by_brand_and_family": {
        "api_name": "get_all_models_by_brand_and_family",
        "category": "Database",
        "tool_name": "watch_database",
        "code": "async def rapi_watch_database_get_all_models_by_brand_and_family(self,*args,**kwargs):\n    '''Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...\n    \n    \n\n    :param string family:  defaults to Aqua Terra\n    :param string brandName:  defaults to Omega\n    '''\n    return await self._request_rapid_api('rapi_watch_database_get_all_models_by_brand_and_family',kwargs)\n        "
    },
    "rapi_watch_database_get_all_family_by_brand_name": {
        "api_name": "get_all_family_by_brand_name",
        "category": "Database",
        "tool_name": "watch_database",
        "code": "async def rapi_watch_database_get_all_family_by_brand_name(self,*args,**kwargs):\n    '''Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...\n    \n    \n\n    :param string brandName:  defaults to Omega\n    '''\n    return await self._request_rapid_api('rapi_watch_database_get_all_family_by_brand_name',kwargs)\n        "
    },
    "rapi_watch_database_get_all_brands": {
        "api_name": "get_all_brands",
        "category": "Database",
        "tool_name": "watch_database",
        "code": "async def rapi_watch_database_get_all_brands(self,*args,**kwargs):\n    '''Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_watch_database_get_all_brands',kwargs)\n        "
    },
    "rapi_joke_test_random_joke": {
        "api_name": "random_joke",
        "category": "Database",
        "tool_name": "joke_test",
        "code": "async def rapi_joke_test_random_joke(self,*args,**kwargs):\n    '''This is a Joke Test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_joke_test_random_joke',kwargs)\n        "
    },
    "rapi_data_axle_consumer_phone_search_consumer_phone_search": {
        "api_name": "consumer_phone_search",
        "category": "Database",
        "tool_name": "data_axle_consumer_phone_search",
        "code": "async def rapi_data_axle_consumer_phone_search_consumer_phone_search(self,*args,**kwargs):\n    '''Find relevant people in real-time.\n    \n    \n\n    :param string limit:  defaults to 20\n    :param string packages:  defaults to standard_v2\n    :param string? query:  defaults to (206) 555-1212\n    '''\n    return await self._request_rapid_api('rapi_data_axle_consumer_phone_search_consumer_phone_search',kwargs)\n        "
    },
    "rapi_list_of_philosophers_random_philosopher": {
        "api_name": "random_philosopher",
        "category": "Database",
        "tool_name": "list_of_philosophers",
        "code": "async def rapi_list_of_philosophers_random_philosopher(self,*args,**kwargs):\n    '''With the Philosophers API, you can learn about philosophers such as Socrates, Plato, and Aristotle, as well as lesser-known but equally important thinkers. You can access information on the philosophies of these thinkers, as well as the historical context in which they lived.  This API is perfect for anyone looking to build applications centered around philosophy, history, or culture. Whether you're developing a website, a mobile app, or a game, the Philosophers API by Pizza API will provide ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_list_of_philosophers_random_philosopher',kwargs)\n        "
    },
    "rapi_list_of_philosophers_search_philosopher_by_name": {
        "api_name": "search_philosopher_by_name",
        "category": "Database",
        "tool_name": "list_of_philosophers",
        "code": "async def rapi_list_of_philosophers_search_philosopher_by_name(self,*args,**kwargs):\n    '''With the Philosophers API, you can learn about philosophers such as Socrates, Plato, and Aristotle, as well as lesser-known but equally important thinkers. You can access information on the philosophies of these thinkers, as well as the historical context in which they lived.  This API is perfect for anyone looking to build applications centered around philosophy, history, or culture. Whether you're developing a website, a mobile app, or a game, the Philosophers API by Pizza API will provide ...\n    \n    \n\n    :param string? name:  defaults to Friedrich Nietzsche\n    '''\n    return await self._request_rapid_api('rapi_list_of_philosophers_search_philosopher_by_name',kwargs)\n        "
    },
    "rapi_demo_project_get_products": {
        "api_name": "get_products",
        "category": "Database",
        "tool_name": "demo_project",
        "code": "async def rapi_demo_project_get_products(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer skip: \n    :param integer limit: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_get_products',kwargs)\n        "
    },
    "rapi_demo_project_get_products_in_category": {
        "api_name": "get_products_in_category",
        "category": "Database",
        "tool_name": "demo_project",
        "code": "async def rapi_demo_project_get_products_in_category(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer limit: \n    :param string category: \n    :param integer skip: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_get_products_in_category',kwargs)\n        "
    },
    "rapi_demo_project_get_order": {
        "api_name": "get_order",
        "category": "Database",
        "tool_name": "demo_project",
        "code": "async def rapi_demo_project_get_order(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_get_order',kwargs)\n        "
    },
    "rapi_pageantdb_single_country": {
        "api_name": "single_country",
        "category": "Database",
        "tool_name": "pageantdb",
        "code": "async def rapi_pageantdb_single_country(self,*args,**kwargs):\n    '''Metadata on publicly available information on various pageant contests. \n    \n    \n\n    :param integer id:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_pageantdb_single_country',kwargs)\n        "
    },
    "rapi_pageantdb_countries": {
        "api_name": "countries",
        "category": "Database",
        "tool_name": "pageantdb",
        "code": "async def rapi_pageantdb_countries(self,*args,**kwargs):\n    '''Metadata on publicly available information on various pageant contests. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pageantdb_countries',kwargs)\n        "
    },
    "rapi_pageantdb_search": {
        "api_name": "search",
        "category": "Database",
        "tool_name": "pageantdb",
        "code": "async def rapi_pageantdb_search(self,*args,**kwargs):\n    '''Metadata on publicly available information on various pageant contests. \n    \n    \n\n    :param string search:  defaults to 1987\n    '''\n    return await self._request_rapid_api('rapi_pageantdb_search',kwargs)\n        "
    },
    "rapi_pageantdb_single_contest": {
        "api_name": "single_contest",
        "category": "Database",
        "tool_name": "pageantdb",
        "code": "async def rapi_pageantdb_single_contest(self,*args,**kwargs):\n    '''Metadata on publicly available information on various pageant contests. \n    \n    \n\n    :param integer id:  defaults to 35\n    '''\n    return await self._request_rapid_api('rapi_pageantdb_single_contest',kwargs)\n        "
    },
    "rapi_pageantdb_all_pageant_contests": {
        "api_name": "all_pageant_contests",
        "category": "Database",
        "tool_name": "pageantdb",
        "code": "async def rapi_pageantdb_all_pageant_contests(self,*args,**kwargs):\n    '''Metadata on publicly available information on various pageant contests. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pageantdb_all_pageant_contests',kwargs)\n        "
    },
    "rapi_kfc_locations_get_all_city_names": {
        "api_name": "get_all_city_names",
        "category": "Database",
        "tool_name": "kfc_locations",
        "code": "async def rapi_kfc_locations_get_all_city_names(self,*args,**kwargs):\n    '''Our KFC Locations API is a comprehensive and accurate data source of all KFC restaurant locations in the United States. This API allows users to retrieve detailed information about each location, including address, phone number, hours of operation, and more. This data can be easily integrated into a wide range of use cases, such as delivery services, marketing, retail analysis, navigation, and research and development.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kfc_locations_get_all_city_names',kwargs)\n        "
    },
    "rapi_kfc_locations_get_all_kfc_locations": {
        "api_name": "get_all_kfc_locations",
        "category": "Database",
        "tool_name": "kfc_locations",
        "code": "async def rapi_kfc_locations_get_all_kfc_locations(self,*args,**kwargs):\n    '''Our KFC Locations API is a comprehensive and accurate data source of all KFC restaurant locations in the United States. This API allows users to retrieve detailed information about each location, including address, phone number, hours of operation, and more. This data can be easily integrated into a wide range of use cases, such as delivery services, marketing, retail analysis, navigation, and research and development.\n    \n    \n\n    :param integer page: 10 results per page defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_kfc_locations_get_all_kfc_locations',kwargs)\n        "
    },
    "rapi_kfc_locations_get_all_state_names": {
        "api_name": "get_all_state_names",
        "category": "Database",
        "tool_name": "kfc_locations",
        "code": "async def rapi_kfc_locations_get_all_state_names(self,*args,**kwargs):\n    '''Our KFC Locations API is a comprehensive and accurate data source of all KFC restaurant locations in the United States. This API allows users to retrieve detailed information about each location, including address, phone number, hours of operation, and more. This data can be easily integrated into a wide range of use cases, such as delivery services, marketing, retail analysis, navigation, and research and development.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kfc_locations_get_all_state_names',kwargs)\n        "
    },
    "rapi_stars_api_star": {
        "api_name": "star",
        "category": "Education",
        "tool_name": "stars_api",
        "code": "async def rapi_stars_api_star(self,*args,**kwargs):\n    '''API to serve information about stars and planets scraped from wikipedia. Get to know over 200 stars and surrounding planets, in just a few lines of code.\n    \n    \n\n    :param string id:  defaults to 4\n    '''\n    return await self._request_rapid_api('rapi_stars_api_star',kwargs)\n        "
    },
    "rapi_stars_api_stars_list": {
        "api_name": "stars_list",
        "category": "Education",
        "tool_name": "stars_api",
        "code": "async def rapi_stars_api_stars_list(self,*args,**kwargs):\n    '''API to serve information about stars and planets scraped from wikipedia. Get to know over 200 stars and surrounding planets, in just a few lines of code.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stars_api_stars_list',kwargs)\n        "
    },
    "rapi_stars_api_planet_list": {
        "api_name": "planet_list",
        "category": "Education",
        "tool_name": "stars_api",
        "code": "async def rapi_stars_api_planet_list(self,*args,**kwargs):\n    '''API to serve information about stars and planets scraped from wikipedia. Get to know over 200 stars and surrounding planets, in just a few lines of code.\n    \n    \n\n    :param string? starid:  defaults to 4\n    '''\n    return await self._request_rapid_api('rapi_stars_api_planet_list',kwargs)\n        "
    },
    "rapi_numbers_get_date_fact": {
        "api_name": "get_date_fact",
        "category": "Education",
        "tool_name": "numbers",
        "code": "async def rapi_numbers_get_date_fact(self,*args,**kwargs):\n    '''An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"\n    \n    \n\n    :param string month: The 1-indexed month (eg. 6 for June) defaults to 6\n    :param string day: The day of the month defaults to 21\n    :param string? fragment: Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d. defaults to True\n    :param string? json: Specify \"true\" to return result as JSON instead of plaintext. defaults to True\n    '''\n    return await self._request_rapid_api('rapi_numbers_get_date_fact',kwargs)\n        "
    },
    "rapi_numbers_get_math_fact": {
        "api_name": "get_math_fact",
        "category": "Education",
        "tool_name": "numbers",
        "code": "async def rapi_numbers_get_math_fact(self,*args,**kwargs):\n    '''An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"\n    \n    \n\n    :param string number: The integer of interest defaults to 1729\n    :param string? fragment: Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d. defaults to True\n    :param string? json: Specify \"true\" to return result as JSON instead of plaintext. defaults to True\n    '''\n    return await self._request_rapid_api('rapi_numbers_get_math_fact',kwargs)\n        "
    },
    "rapi_numbers_get_trivia_fact": {
        "api_name": "get_trivia_fact",
        "category": "Education",
        "tool_name": "numbers",
        "code": "async def rapi_numbers_get_trivia_fact(self,*args,**kwargs):\n    '''An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"\n    \n    \n\n    :param string number: The integer of interest defaults to 42\n    :param string? fragment: Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d. defaults to True\n    :param string? notfound: Specifies what to return if the number is not found. Value can be \"default\" (to return a canned message), \"floor\" (to round down to the largest number that does have an associated fact, and return that fact), or \"ceil\" (which is like floor but rounds up to the smallest number that has an associated fact). defaults to floor\n    :param string? json: Specify \"true\" to return result as JSON instead of plaintext. defaults to True\n    '''\n    return await self._request_rapid_api('rapi_numbers_get_trivia_fact',kwargs)\n        "
    },
    "rapi_numbers_get_year_fact": {
        "api_name": "get_year_fact",
        "category": "Education",
        "tool_name": "numbers",
        "code": "async def rapi_numbers_get_year_fact(self,*args,**kwargs):\n    '''An API for interesting facts about numbers. Provides trivia, math, date, and year facts about numbers. \r\n\r\nFor example, \"5 is the number of platonic solids\", \"42 is the number of little squares forming the left side trail of Microsoft's Windows 98 logo\", \"February 27th is the day in 1964 that the government of Italy asks for help to keep the Leaning Tower of Pisa from toppling over\"\n    \n    \n\n    :param string year: The year of interest defaults to 1492\n    :param string? fragment: Add \"?fragment=true\" to return the fact as a sentence fragment that can be easily included as part of a larger sentence. This means that the first word is lowercase and ending punctuation is omitted. For trivia and math, a noun phrase is returned that can be used in a sentence like \u201cWe now have more users than [fact as fragment]!\u201d. defaults to True\n    :param string? json: Specify \"true\" to return result as JSON instead of plaintext. defaults to True\n    '''\n    return await self._request_rapid_api('rapi_numbers_get_year_fact',kwargs)\n        "
    },
    "rapi_apideveloper_getdata": {
        "api_name": "getdata",
        "category": "Education",
        "tool_name": "apideveloper",
        "code": "async def rapi_apideveloper_getdata(self,*args,**kwargs):\n    '''apiDeveloper test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_apideveloper_getdata',kwargs)\n        "
    },
    "rapi_dr_almotawa_quotes_get_random_quote": {
        "api_name": "get_random_quote",
        "category": "Education",
        "tool_name": "dr_almotawa_quotes",
        "code": "async def rapi_dr_almotawa_quotes_get_random_quote(self,*args,**kwargs):\n    '''This API provides above 40000 Arabic quotes by Dr Abdulaziz Almotawa.\n    \n    \n\n    :param integer? limit: This parameter is to get a quote with characters length less than the number specified defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_dr_almotawa_quotes_get_random_quote',kwargs)\n        "
    },
    "rapi_allah_name_get": {
        "api_name": "get",
        "category": "Education",
        "tool_name": "allah_name",
        "code": "async def rapi_allah_name_get(self,*args,**kwargs):\n    '''99 name of Allah with Arabic as well as English word and with explanation and benefit\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_allah_name_get',kwargs)\n        "
    },
    "rapi_kittichai_kittichai": {
        "api_name": "kittichai",
        "category": "Education",
        "tool_name": "kittichai",
        "code": "async def rapi_kittichai_kittichai(self,*args,**kwargs):\n    '''Education\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kittichai_kittichai',kwargs)\n        "
    },
    "rapi_physical_quantities_constants_and_equations_get_equations": {
        "api_name": "get_equations",
        "category": "Education",
        "tool_name": "physical_quantities_constants_and_equations",
        "code": "async def rapi_physical_quantities_constants_and_equations_get_equations(self,*args,**kwargs):\n    '''This API retrieves physical quantities,constants and equations formatted as JSON \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_physical_quantities_constants_and_equations_get_equations',kwargs)\n        "
    },
    "rapi_old_english_translator_translate_to_old_english": {
        "api_name": "translate_to_old_english",
        "category": "Education",
        "tool_name": "old_english_translator",
        "code": "async def rapi_old_english_translator_translate_to_old_english(self,*args,**kwargs):\n    '''Convert modern day English phrases to Old English, the language of the Anglo-Saxons.\n    \n    \n\n    :param string text: Text to convert to old English. defaults to A hearty meal, a happy laughter is all we need.\n    '''\n    return await self._request_rapid_api('rapi_old_english_translator_translate_to_old_english',kwargs)\n        "
    },
    "rapi_top_2023_it_certifications_get_all_certifications": {
        "api_name": "get_all_certifications",
        "category": "Education",
        "tool_name": "top_2023_it_certifications",
        "code": "async def rapi_top_2023_it_certifications_get_all_certifications(self,*args,**kwargs):\n    '''A list of Top IT Certifications for 2023\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_2023_it_certifications_get_all_certifications',kwargs)\n        "
    },
    "rapi_thefluentme_get_all_posts": {
        "api_name": "get_all_posts",
        "category": "Education",
        "tool_name": "thefluentme",
        "code": "async def rapi_thefluentme_get_all_posts(self,*args,**kwargs):\n    '''The AI-powered language pronunciation API with ChatGPT\n    \n    \n\n    :param integer? per_page:  defaults to 10\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_thefluentme_get_all_posts',kwargs)\n        "
    },
    "rapi_thefluentme_get_all_languages": {
        "api_name": "get_all_languages",
        "category": "Education",
        "tool_name": "thefluentme",
        "code": "async def rapi_thefluentme_get_all_languages(self,*args,**kwargs):\n    '''The AI-powered language pronunciation API with ChatGPT\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thefluentme_get_all_languages',kwargs)\n        "
    },
    "rapi_thefluentme_get_language_by_id": {
        "api_name": "get_language_by_id",
        "category": "Education",
        "tool_name": "thefluentme",
        "code": "async def rapi_thefluentme_get_language_by_id(self,*args,**kwargs):\n    '''The AI-powered language pronunciation API with ChatGPT\n    \n    \n\n    :param integer language_id: \n    '''\n    return await self._request_rapid_api('rapi_thefluentme_get_language_by_id',kwargs)\n        "
    },
    "rapi_thefluentme_get_all_scores": {
        "api_name": "get_all_scores",
        "category": "Education",
        "tool_name": "thefluentme",
        "code": "async def rapi_thefluentme_get_all_scores(self,*args,**kwargs):\n    '''The AI-powered language pronunciation API with ChatGPT\n    \n    \n\n    :param integer? page:  defaults to 1\n    :param integer? per_page:  defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_thefluentme_get_all_scores',kwargs)\n        "
    },
    "rapi_master_dictionary_word_infos": {
        "api_name": "word_infos",
        "category": "Education",
        "tool_name": "master_dictionary",
        "code": "async def rapi_master_dictionary_word_infos(self,*args,**kwargs):\n    '''A dictionary rich information for a word with definitions, meanings, phonetics, synonyms and much more.\n    \n    \n\n    :param string word:  defaults to hello\n    '''\n    return await self._request_rapid_api('rapi_master_dictionary_word_infos',kwargs)\n        "
    },
    "rapi_indonesia_school_list_school_detail": {
        "api_name": "school_detail",
        "category": "Education",
        "tool_name": "indonesia_school_list",
        "code": "async def rapi_indonesia_school_list_school_detail(self,*args,**kwargs):\n    '''This API provides School List in Indonesia by Province (Propinsi), City (Kabupaten), and District (Kecamatan).\n    \n    \n\n    :param string? sekolah_id_enkrip:  defaults to 5DB43D89E6BFB0F76FBC\n    '''\n    return await self._request_rapid_api('rapi_indonesia_school_list_school_detail',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_own_test_result": {
        "api_name": "retrieve_own_test_result",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_own_test_result(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    :param string test_id: The unique ID of the test definition defaults to 7OuHq7RcQOCsnGWR58TnBw\n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_own_test_result',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_objectives": {
        "api_name": "retrieve_objectives",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_objectives(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_objectives',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_test_question": {
        "api_name": "retrieve_test_question",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_test_question(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    :param string test_id: The unique ID for the predefined test defaults to oUcrG729TwKN2SsvrQpNww\n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_test_question',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_own_user": {
        "api_name": "retrieve_own_user",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_own_user(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_own_user',kwargs)\n        "
    },
    "rapi_drillster_2_0_submit_test_answer": {
        "api_name": "submit_test_answer",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_submit_test_answer(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    :param string reference: The unique identifier of the answered question defaults to 9J0D9O8NQ0CguRsOJXp1DA\n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_submit_test_answer',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_group_results": {
        "api_name": "retrieve_group_results",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_group_results(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    :param string group_id: The unique ID for the group defaults to nYrK9udUc-UGvRS2kxaPtaB-0wzeHAJzM6vlL1te6wI\n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_group_results',kwargs)\n        "
    },
    "rapi_drillster_2_0_retrieve_list_of_groups": {
        "api_name": "retrieve_list_of_groups",
        "category": "Education",
        "tool_name": "drillster_2_0",
        "code": "async def rapi_drillster_2_0_retrieve_list_of_groups(self,*args,**kwargs):\n    '''Drillster is an open cloud based memorization platform that helps users learn more in less time. Use our API to integrate with Drillster or to create your own memorization solution.\r\n\r\nFor detailed information about this API, please refer to http://www.drillster.com/info/api-2/.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_drillster_2_0_retrieve_list_of_groups',kwargs)\n        "
    },
    "rapi_real_estate_exam_flashcards": {
        "api_name": "flashcards",
        "category": "Education",
        "tool_name": "real_estate_exam",
        "code": "async def rapi_real_estate_exam_flashcards(self,*args,**kwargs):\n    '''Questions, answers, and flash cards to ace the National Real Estate exam.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_real_estate_exam_flashcards',kwargs)\n        "
    },
    "rapi_real_estate_exam_qanda": {
        "api_name": "qanda",
        "category": "Education",
        "tool_name": "real_estate_exam",
        "code": "async def rapi_real_estate_exam_qanda(self,*args,**kwargs):\n    '''Questions, answers, and flash cards to ace the National Real Estate exam.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_real_estate_exam_qanda',kwargs)\n        "
    },
    "rapi_uncovered_treasure_random": {
        "api_name": "random",
        "category": "Education",
        "tool_name": "uncovered_treasure",
        "code": "async def rapi_uncovered_treasure_random(self,*args,**kwargs):\n    '''The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.\n    \n    \n\n    :param string? callback: Optional JSONP callback\n    '''\n    return await self._request_rapid_api('rapi_uncovered_treasure_random',kwargs)\n        "
    },
    "rapi_uncovered_treasure_verse_verse": {
        "api_name": "verse_verse",
        "category": "Education",
        "tool_name": "uncovered_treasure",
        "code": "async def rapi_uncovered_treasure_verse_verse(self,*args,**kwargs):\n    '''The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.\n    \n    \n\n    :param string verse: Use common English name with chapter number and optionally verse, such as \"1 Corinthians 1\", \"1 Corinthians 1:5\" or \"James 3\". Does NOT support ranged searches, such as \"James 3:1-4\". defaults to Acts 21:8\n    :param string? callback: Optional JSONP callback\n    '''\n    return await self._request_rapid_api('rapi_uncovered_treasure_verse_verse',kwargs)\n        "
    },
    "rapi_uncovered_treasure_search_searchterm": {
        "api_name": "search_searchterm",
        "category": "Education",
        "tool_name": "uncovered_treasure",
        "code": "async def rapi_uncovered_treasure_search_searchterm(self,*args,**kwargs):\n    '''The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.\n    \n    \n\n    :param string searchterm: e.g. \"God's plan\"\n    :param string? callback: Optional JSONP callback\n    '''\n    return await self._request_rapid_api('rapi_uncovered_treasure_search_searchterm',kwargs)\n        "
    },
    "rapi_uncovered_treasure_today": {
        "api_name": "today",
        "category": "Education",
        "tool_name": "uncovered_treasure",
        "code": "async def rapi_uncovered_treasure_today(self,*args,**kwargs):\n    '''The Uncovered Treasure API has more than 25,000 revealed truths from every Book and chapter in the Bible as recorded by Phil Largent over the last 25 years.\n    \n    \n\n    :param string? callback: Optional JSONP callback\n    '''\n    return await self._request_rapid_api('rapi_uncovered_treasure_today',kwargs)\n        "
    },
    "rapi_testapi_fetchproject": {
        "api_name": "fetchproject",
        "category": "Education",
        "tool_name": "testapi",
        "code": "async def rapi_testapi_fetchproject(self,*args,**kwargs):\n    '''OliAPI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_testapi_fetchproject',kwargs)\n        "
    },
    "rapi_chemical_elements_get_all_chemical_elements": {
        "api_name": "get_all_chemical_elements",
        "category": "Education",
        "tool_name": "chemical_elements",
        "code": "async def rapi_chemical_elements_get_all_chemical_elements(self,*args,**kwargs):\n    '''This API retrieves data of chemical elements and their properties collected from authoritative sources in JSON format\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chemical_elements_get_all_chemical_elements',kwargs)\n        "
    },
    "rapi_seventraderapi_get_countries": {
        "api_name": "get_countries",
        "category": "Education",
        "tool_name": "seventraderapi",
        "code": "async def rapi_seventraderapi_get_countries(self,*args,**kwargs):\n    '''Football API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_seventraderapi_get_countries',kwargs)\n        "
    },
    "rapi_tdot_school_data_get_paginate": {
        "api_name": "get_paginate",
        "category": "Education",
        "tool_name": "tdot_school_data",
        "code": "async def rapi_tdot_school_data_get_paginate(self,*args,**kwargs):\n    '''Data about tdscb locations\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tdot_school_data_get_paginate',kwargs)\n        "
    },
    "rapi_tdot_school_data_get_all_locations": {
        "api_name": "get_all_locations",
        "category": "Education",
        "tool_name": "tdot_school_data",
        "code": "async def rapi_tdot_school_data_get_all_locations(self,*args,**kwargs):\n    '''Data about tdscb locations\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tdot_school_data_get_all_locations',kwargs)\n        "
    },
    "rapi_dictionary_wordsearchenglish": {
        "api_name": "wordsearchenglish",
        "category": "Education",
        "tool_name": "dictionary",
        "code": "async def rapi_dictionary_wordsearchenglish(self,*args,**kwargs):\n    '''Dictionaries API gives you access to our world-renowned dictionary data, including definitions, translations, synonyms, and audio pronunciations.\n    \n    \n\n    :param string query: Enter word defaults to book\n    '''\n    return await self._request_rapid_api('rapi_dictionary_wordsearchenglish',kwargs)\n        "
    },
    "rapi_dictionary_wordsearchturkish": {
        "api_name": "wordsearchturkish",
        "category": "Education",
        "tool_name": "dictionary",
        "code": "async def rapi_dictionary_wordsearchturkish(self,*args,**kwargs):\n    '''Dictionaries API gives you access to our world-renowned dictionary data, including definitions, translations, synonyms, and audio pronunciations.\n    \n    \n\n    :param string query: Enter word defaults to kalem\n    '''\n    return await self._request_rapid_api('rapi_dictionary_wordsearchturkish',kwargs)\n        "
    },
    "rapi_data_visualisation_getting_data": {
        "api_name": "getting_data",
        "category": "Education",
        "tool_name": "data_visualisation",
        "code": "async def rapi_data_visualisation_getting_data(self,*args,**kwargs):\n    '''nothing to describe\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_data_visualisation_getting_data',kwargs)\n        "
    },
    "rapi_covid19ph_covid": {
        "api_name": "covid",
        "category": "Education",
        "tool_name": "covid19ph",
        "code": "async def rapi_covid19ph_covid(self,*args,**kwargs):\n    '''COVID\n    \n    \n\n    :param string infected:  defaults to 1000\n    :param string tested:  defaults to 200\n    '''\n    return await self._request_rapid_api('rapi_covid19ph_covid',kwargs)\n        "
    },
    "rapi_hadiths_api_get_category_by_id": {
        "api_name": "get_category_by_id",
        "category": "Education",
        "tool_name": "hadiths_api",
        "code": "async def rapi_hadiths_api_get_category_by_id(self,*args,**kwargs):\n    '''A collection of hadiths API in one place, Sahih Bukhari, Sahih muslim, Ibn majah, Abu Dawud. working on compiling timidhi and nezai insha Allah.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hadiths_api_get_category_by_id',kwargs)\n        "
    },
    "rapi_tech_exams_getonequestionwithanswers": {
        "api_name": "getonequestionwithanswers",
        "category": "Education",
        "tool_name": "tech_exams",
        "code": "async def rapi_tech_exams_getonequestionwithanswers(self,*args,**kwargs):\n    '''Tech Exams offers flexible, affordable and the most up to date test banks for self-study training and exam creation. Practice exams for CompTIA,  and coming soon, Microsoft, EC-Council, SANS, PMI, ISC2, CISCO, ISACA, CITRIX, ITIL, VMware, Juniper.\n    \n    \n\n    :param string id:  defaults to 1028\n    '''\n    return await self._request_rapid_api('rapi_tech_exams_getonequestionwithanswers',kwargs)\n        "
    },
    "rapi_book_finder_find_books": {
        "api_name": "find_books",
        "category": "Education",
        "tool_name": "book_finder",
        "code": "async def rapi_book_finder_find_books(self,*args,**kwargs):\n    '''Find books by title, author, series, and reading complexity. Try the demo: [https://bookfinder-1-r7047837.deta.app](https://bookfinder-1-r7047837.deta.app/)\n    \n    \n\n    :param string? book_type: Book type, fiction or nonfiction. defaults to Fiction\n    :param string? categories: Semicolon separated book categories to search for, e.g., 'Mystery & Suspense; Science Fiction & Fantasy'. Available categories include: ['Animals, Bugs & Pets', 'Art, Creativity & Music', 'General Literature', 'Hobbies, Sports & Outdoors', 'Science Fiction & Fantasy', 'Real Life', 'Science & Technology', 'Mystery & Suspense', 'Reference']\n    :param integer? lexile_max: Maximum Lexile measure. defaults to 800\n    :param string? series: Series name. defaults to Wings of fire\n    :param integer? lexile_min: Minimum Lexile measure. defaults to 600\n    :param integer? page: Page of the results. defaults to 1\n    :param string? author: Name of the author.\n    :param string? title: Terms to be appeared in book title.\n    :param integer? results_per_page: Results per page. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_book_finder_find_books',kwargs)\n        "
    },
    "rapi_dcps_project_subject": {
        "api_name": "subject",
        "category": "Education",
        "tool_name": "dcps_project",
        "code": "async def rapi_dcps_project_subject(self,*args,**kwargs):\n    '''Gets all DCPS Data\n    \n    \n\n    :param string subject: \n    '''\n    return await self._request_rapid_api('rapi_dcps_project_subject',kwargs)\n        "
    },
    "rapi_dcps_project_schoolname": {
        "api_name": "schoolname",
        "category": "Education",
        "tool_name": "dcps_project",
        "code": "async def rapi_dcps_project_schoolname(self,*args,**kwargs):\n    '''Gets all DCPS Data\n    \n    \n\n    :param string name: \n    '''\n    return await self._request_rapid_api('rapi_dcps_project_schoolname',kwargs)\n        "
    },
    "rapi_dcps_project_schoolcode": {
        "api_name": "schoolcode",
        "category": "Education",
        "tool_name": "dcps_project",
        "code": "async def rapi_dcps_project_schoolcode(self,*args,**kwargs):\n    '''Gets all DCPS Data\n    \n    \n\n    :param string code: \n    '''\n    return await self._request_rapid_api('rapi_dcps_project_schoolcode',kwargs)\n        "
    },
    "rapi_dcps_project_all": {
        "api_name": "all",
        "category": "Education",
        "tool_name": "dcps_project",
        "code": "async def rapi_dcps_project_all(self,*args,**kwargs):\n    '''Gets all DCPS Data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dcps_project_all',kwargs)\n        "
    },
    "rapi_periodictable_periodic_table": {
        "api_name": "periodic_table",
        "category": "Education",
        "tool_name": "periodictable",
        "code": "async def rapi_periodictable_periodic_table(self,*args,**kwargs):\n    '''It provides detailed information about periodic table\n    \n    \n\n    :param string? all: \n    '''\n    return await self._request_rapid_api('rapi_periodictable_periodic_table',kwargs)\n        "
    },
    "rapi_uurrooster_v2_download": {
        "api_name": "download",
        "category": "Education",
        "tool_name": "uurrooster_v2",
        "code": "async def rapi_uurrooster_v2_download(self,*args,**kwargs):\n    '''Widget\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_uurrooster_v2_download',kwargs)\n        "
    },
    "rapi_helioviewer_v1_downloadscreenshot": {
        "api_name": "downloadscreenshot",
        "category": "Education",
        "tool_name": "helioviewer_v1",
        "code": "async def rapi_helioviewer_v1_downloadscreenshot(self,*args,**kwargs):\n    '''Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.\n    \n    \n\n    :param integer id: Unique screenshot identifier (provided by the response to a `takeScreenshot` request). defaults to 3240748\n    '''\n    return await self._request_rapid_api('rapi_helioviewer_v1_downloadscreenshot',kwargs)\n        "
    },
    "rapi_helioviewer_v1_getmoviestatus": {
        "api_name": "getmoviestatus",
        "category": "Education",
        "tool_name": "helioviewer_v1",
        "code": "async def rapi_helioviewer_v1_getmoviestatus(self,*args,**kwargs):\n    '''Helioviewer is an open-source project for the visualization of solar and heliospheric data, funded by ESA and NASA.\n    \n    \n\n    :param string id: Unique movie identifier (provided by the response to a `queueMovie` request). defaults to VXvX5\n    :param string format: Movie format (`mp4`, `webm`, or `flv`). defaults to mp4\n    :param boolean? verbose: Optionally include extra metadata in the response. defaults to checked\n    :param string? callback: Wrap the response object in a function call of your choosing.\n    :param string? token: \n    '''\n    return await self._request_rapid_api('rapi_helioviewer_v1_getmoviestatus',kwargs)\n        "
    },
    "rapi_fachaapi_clientes": {
        "api_name": "clientes",
        "category": "Education",
        "tool_name": "fachaapi",
        "code": "async def rapi_fachaapi_clientes(self,*args,**kwargs):\n    '''testing\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fachaapi_clientes',kwargs)\n        "
    },
    "rapi_apigabin_base": {
        "api_name": "base",
        "category": "Education",
        "tool_name": "apigabin",
        "code": "async def rapi_apigabin_base(self,*args,**kwargs):\n    '''L'api de gabin\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_apigabin_base',kwargs)\n        "
    },
    "rapi_news_space_get_space_news": {
        "api_name": "get_space_news",
        "category": "Education",
        "tool_name": "news_space",
        "code": "async def rapi_news_space_get_space_news(self,*args,**kwargs):\n    '''Space news scraper API for project\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_space_get_space_news',kwargs)\n        "
    },
    "rapi_numbers_translator_numbers_translator": {
        "api_name": "numbers_translator",
        "category": "Education",
        "tool_name": "numbers_translator",
        "code": "async def rapi_numbers_translator_numbers_translator(self,*args,**kwargs):\n    '''Convert numerical numbers to words. For example 23879908709817834 will give you \"Twenty-three quadrillion eight hundred seventy-nine trillion nine hundred eight billion seven hundred nine million eight hundred seventeen thousand eight hundred thirty-four\".\n    \n    \n\n    :param string? text: Numerical value of the number defaults to 23879908709817834\n    '''\n    return await self._request_rapid_api('rapi_numbers_translator_numbers_translator',kwargs)\n        "
    },
    "rapi_learn_to_read_and_write_japanese_kanji_kanji_english_meaning": {
        "api_name": "kanji_english_meaning",
        "category": "Education",
        "tool_name": "learn_to_read_and_write_japanese_kanji",
        "code": "async def rapi_learn_to_read_and_write_japanese_kanji_kanji_english_meaning(self,*args,**kwargs):\n    '''Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.\n    \n    \n\n    :param string kem: Simplified English kanji meaning defaults to parent\n    '''\n    return await self._request_rapid_api('rapi_learn_to_read_and_write_japanese_kanji_kanji_english_meaning',kwargs)\n        "
    },
    "rapi_learn_to_read_and_write_japanese_kanji_radical_position": {
        "api_name": "radical_position",
        "category": "Education",
        "tool_name": "learn_to_read_and_write_japanese_kanji",
        "code": "async def rapi_learn_to_read_and_write_japanese_kanji_radical_position(self,*args,**kwargs):\n    '''Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.\n    \n    \n\n    :param string rpos: Hiragana or romaji defaults to hen\n    '''\n    return await self._request_rapid_api('rapi_learn_to_read_and_write_japanese_kanji_radical_position',kwargs)\n        "
    },
    "rapi_learn_to_read_and_write_japanese_kanji_kanji_character": {
        "api_name": "kanji_character",
        "category": "Education",
        "tool_name": "learn_to_read_and_write_japanese_kanji",
        "code": "async def rapi_learn_to_read_and_write_japanese_kanji_kanji_character(self,*args,**kwargs):\n    '''Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.\n    \n    \n\n    :param string kanji: Kanji character defaults to \u89aa\n    '''\n    return await self._request_rapid_api('rapi_learn_to_read_and_write_japanese_kanji_kanji_character',kwargs)\n        "
    },
    "rapi_tcyonlinedictionary_tcyonline_dictionary_endpoint": {
        "api_name": "tcyonline_dictionary_endpoint",
        "category": "Education",
        "tool_name": "tcyonlinedictionary",
        "code": "async def rapi_tcyonlinedictionary_tcyonline_dictionary_endpoint(self,*args,**kwargs):\n    '''TCYonlineDictionary for antonyms and synonyms\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_tcyonlinedictionary_tcyonline_dictionary_endpoint',kwargs)\n        "
    },
    "rapi_word_of_the_day_word_of_the_day_from_dc": {
        "api_name": "word_of_the_day_from_dc",
        "category": "Education",
        "tool_name": "word_of_the_day",
        "code": "async def rapi_word_of_the_day_word_of_the_day_from_dc(self,*args,**kwargs):\n    '''Get the word of the day with type and meaning etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_word_of_the_day_word_of_the_day_from_dc',kwargs)\n        "
    },
    "rapi_word_of_the_day_word_of_the_day_from_mw": {
        "api_name": "word_of_the_day_from_mw",
        "category": "Education",
        "tool_name": "word_of_the_day",
        "code": "async def rapi_word_of_the_day_word_of_the_day_from_mw(self,*args,**kwargs):\n    '''Get the word of the day with type and meaning etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_word_of_the_day_word_of_the_day_from_mw',kwargs)\n        "
    },
    "rapi_word_of_the_day_word_of_the_day_from_cd": {
        "api_name": "word_of_the_day_from_cd",
        "category": "Education",
        "tool_name": "word_of_the_day",
        "code": "async def rapi_word_of_the_day_word_of_the_day_from_cd(self,*args,**kwargs):\n    '''Get the word of the day with type and meaning etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_word_of_the_day_word_of_the_day_from_cd',kwargs)\n        "
    },
    "rapi_word_of_the_day_recent_word_of_the_day_from_dc": {
        "api_name": "recent_word_of_the_day_from_dc",
        "category": "Education",
        "tool_name": "word_of_the_day",
        "code": "async def rapi_word_of_the_day_recent_word_of_the_day_from_dc(self,*args,**kwargs):\n    '''Get the word of the day with type and meaning etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_word_of_the_day_recent_word_of_the_day_from_dc',kwargs)\n        "
    },
    "rapi_word_of_the_day_get_word_of_the_day_from_multiple_sources": {
        "api_name": "get_word_of_the_day_from_multiple_sources",
        "category": "Education",
        "tool_name": "word_of_the_day",
        "code": "async def rapi_word_of_the_day_get_word_of_the_day_from_multiple_sources(self,*args,**kwargs):\n    '''Get the word of the day with type and meaning etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_word_of_the_day_get_word_of_the_day_from_multiple_sources',kwargs)\n        "
    },
    "rapi_hellonext_speakers": {
        "api_name": "speakers",
        "category": "Education",
        "tool_name": "hellonext",
        "code": "async def rapi_hellonext_speakers(self,*args,**kwargs):\n    '''for hello next app\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hellonext_speakers',kwargs)\n        "
    },
    "rapi_atmosphere_nitrous_oxide_levels_nitrous_endpoint": {
        "api_name": "nitrous_endpoint",
        "category": "Science",
        "tool_name": "atmosphere_nitrous_oxide_levels",
        "code": "async def rapi_atmosphere_nitrous_oxide_levels_nitrous_endpoint(self,*args,**kwargs):\n    '''This API provides on a monthly basis, the amount of nitrous oxide in the atmosphere from 2001 to the present. Expressed as a mole fraction in dry air, parts per million (ppm).\n    \n    \n\n    :param object? nitrous: \n    '''\n    return await self._request_rapid_api('rapi_atmosphere_nitrous_oxide_levels_nitrous_endpoint',kwargs)\n        "
    },
    "rapi_tle_collection": {
        "api_name": "collection",
        "category": "Science",
        "tool_name": "tle",
        "code": "async def rapi_tle_collection(self,*args,**kwargs):\n    '''API provides up to date NORAD two line element sets for number of Earth orbiting satellites. Data is provided by CelesTrak and served in web application friendly JSON format.\n    \n    \n\n    :param string? search:  defaults to ISS\n    '''\n    return await self._request_rapid_api('rapi_tle_collection',kwargs)\n        "
    },
    "rapi_crossref_recordcount": {
        "api_name": "recordcount",
        "category": "Science",
        "tool_name": "crossref",
        "code": "async def rapi_crossref_recordcount(self,*args,**kwargs):\n    '''Crossref makes research outputs easy to find, cite, link, assess, and reuse.\n    \n    \n\n    :param integer rows:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_crossref_recordcount',kwargs)\n        "
    },
    "rapi_dna2protein_dna2aminoacid": {
        "api_name": "dna2aminoacid",
        "category": "Science",
        "tool_name": "dna2protein",
        "code": "async def rapi_dna2protein_dna2aminoacid(self,*args,**kwargs):\n    '''A set of simple end-points to convert DNA and mRNA sequences to amino-acids\n    \n    \n\n    :param string dna: The DNA sequence used for the transformation to Amino Acids defaults to TACAAAGGCTAACGTCCTAGAGCTATT\n    '''\n    return await self._request_rapid_api('rapi_dna2protein_dna2aminoacid',kwargs)\n        "
    },
    "rapi_dna2protein_mrna2aminoacid": {
        "api_name": "mrna2aminoacid",
        "category": "Science",
        "tool_name": "dna2protein",
        "code": "async def rapi_dna2protein_mrna2aminoacid(self,*args,**kwargs):\n    '''A set of simple end-points to convert DNA and mRNA sequences to amino-acids\n    \n    \n\n    :param string mRNA: the mRNA sequence used to find the Amino Acid sequence. defaults to AUGUUUCCGAUUGCAGGAUCUCGAUAA\n    '''\n    return await self._request_rapid_api('rapi_dna2protein_mrna2aminoacid',kwargs)\n        "
    },
    "rapi_dna2protein_mrna2dna": {
        "api_name": "mrna2dna",
        "category": "Science",
        "tool_name": "dna2protein",
        "code": "async def rapi_dna2protein_mrna2dna(self,*args,**kwargs):\n    '''A set of simple end-points to convert DNA and mRNA sequences to amino-acids\n    \n    \n\n    :param string mRNA: The mRNA sequence as a string of letters. defaults to UACGUACG\n    '''\n    return await self._request_rapid_api('rapi_dna2protein_mrna2dna',kwargs)\n        "
    },
    "rapi_atmosphere_methane_concentration_methane_endpoint": {
        "api_name": "methane_endpoint",
        "category": "Science",
        "tool_name": "atmosphere_methane_concentration",
        "code": "async def rapi_atmosphere_methane_concentration_methane_endpoint(self,*args,**kwargs):\n    '''This API provides on a monthly basis, the amount of methane in the atmosphere from 1983 to the present. Expressed as a mole fraction in dry air, parts per million (ppm).\n    \n    \n\n    :param object? methane: \n    '''\n    return await self._request_rapid_api('rapi_atmosphere_methane_concentration_methane_endpoint',kwargs)\n        "
    },
    "rapi_test_random_usr_copy": {
        "api_name": "random_usr_copy",
        "category": "Science",
        "tool_name": "test",
        "code": "async def rapi_test_random_usr_copy(self,*args,**kwargs):\n    '''Test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_test_random_usr_copy',kwargs)\n        "
    },
    "rapi_test_random_usr": {
        "api_name": "random_usr",
        "category": "Science",
        "tool_name": "test",
        "code": "async def rapi_test_random_usr(self,*args,**kwargs):\n    '''Test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_test_random_usr',kwargs)\n        "
    },
    "rapi_carbonsutra_vehicles_models": {
        "api_name": "vehicles_models",
        "category": "Science",
        "tool_name": "carbonsutra",
        "code": "async def rapi_carbonsutra_vehicles_models(self,*args,**kwargs):\n    '''Carbon Emission Estimations for Organizations.\n    \n    \n\n    :param string vehicle_make: \n    '''\n    return await self._request_rapid_api('rapi_carbonsutra_vehicles_models',kwargs)\n        "
    },
    "rapi_carbonsutra_vehicles_makes": {
        "api_name": "vehicles_makes",
        "category": "Science",
        "tool_name": "carbonsutra",
        "code": "async def rapi_carbonsutra_vehicles_makes(self,*args,**kwargs):\n    '''Carbon Emission Estimations for Organizations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_carbonsutra_vehicles_makes',kwargs)\n        "
    },
    "rapi_stars_by_api_ninjas_v1_stars": {
        "api_name": "v1_stars",
        "category": "Science",
        "tool_name": "stars_by_api_ninjas",
        "code": "async def rapi_stars_by_api_ninjas_v1_stars(self,*args,**kwargs):\n    '''Get key statistics for thousands of stars discovered in the known universe. See more info at https://api-ninjas.com/api/stars.\n    \n    \n\n    :param integer? min_distance_light_year: minimum distance the star is from Earth in light years.\n    :param integer? min_apparent_magnitude: minimum apparent magnitude brightness of the star.\n    :param integer? constellation: the constellation the star belongs to.\n    :param integer? max_apparent_magnitude: maximum apparent magnitude brightness of the star.\n    :param integer? offset: number of results to offset for pagination.\n    :param string? name: the name of the star. Note that many of the star names contain greek characters. defaults to vega\n    :param integer? max_absolute_magnitude: maximum absolute magnitude brightness of the star.\n    :param integer? min_absolute_magnitude: minimum absolute magnitude brightness of the star.\n    :param integer? max_distance_light_year: maximum distance the star is from Earth in light years.\n    '''\n    return await self._request_rapid_api('rapi_stars_by_api_ninjas_v1_stars',kwargs)\n        "
    },
    "rapi_astronomy_get_positions_for_body": {
        "api_name": "get_positions_for_body",
        "category": "Science",
        "tool_name": "astronomy",
        "code": "async def rapi_astronomy_get_positions_for_body(self,*args,**kwargs):\n    '''A data retrieval interface for the skies... (visit astronomyapi.com and obtain your free API key)\n    \n    \n\n    :param DATE (YYYY-MM-DD) to_date:  defaults to 2017-12-21\n    :param string body:  defaults to venus\n    :param integer latitude:  defaults to 33.775867\n    :param DATE (YYYY-MM-DD) from_date:  defaults to 2017-12-20\n    :param integer longitude:  defaults to -84.39733\n    :param string? time:  defaults to 12:00:00\n    :param integer? elevation:  defaults to 166\n    '''\n    return await self._request_rapid_api('rapi_astronomy_get_positions_for_body',kwargs)\n        "
    },
    "rapi_astronomy_get_all_bodies_positions": {
        "api_name": "get_all_bodies_positions",
        "category": "Science",
        "tool_name": "astronomy",
        "code": "async def rapi_astronomy_get_all_bodies_positions(self,*args,**kwargs):\n    '''A data retrieval interface for the skies... (visit astronomyapi.com and obtain your free API key)\n    \n    \n\n    :param integer latitude:  defaults to 33.775867\n    :param integer longitude:  defaults to -84.39733\n    :param DATE (YYYY-MM-DD) from_date:  defaults to 2017-12-20\n    :param DATE (YYYY-MM-DD) to_date:  defaults to 2017-12-21\n    :param integer? elevation:  defaults to 166\n    :param string? time:  defaults to 12:00:00\n    '''\n    return await self._request_rapid_api('rapi_astronomy_get_all_bodies_positions',kwargs)\n        "
    },
    "rapi_teste_loginuser": {
        "api_name": "loginuser",
        "category": "Science",
        "tool_name": "teste",
        "code": "async def rapi_teste_loginuser(self,*args,**kwargs):\n    '''teste\n    \n    \n\n    :param string password: The password for login in clear text\n    :param string username: The user name for login\n    '''\n    return await self._request_rapid_api('rapi_teste_loginuser',kwargs)\n        "
    },
    "rapi_teste_getinventory": {
        "api_name": "getinventory",
        "category": "Science",
        "tool_name": "teste",
        "code": "async def rapi_teste_getinventory(self,*args,**kwargs):\n    '''teste\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_teste_getinventory',kwargs)\n        "
    },
    "rapi_numerology_api_info": {
        "api_name": "info",
        "category": "Science",
        "tool_name": "numerology_api",
        "code": "async def rapi_numerology_api_info(self,*args,**kwargs):\n    '''This is an API to help you compute the numerology of your familly member, friends and other persons\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_numerology_api_info',kwargs)\n        "
    },
    "rapi_numerology_api_description": {
        "api_name": "description",
        "category": "Science",
        "tool_name": "numerology_api",
        "code": "async def rapi_numerology_api_description(self,*args,**kwargs):\n    '''This is an API to help you compute the numerology of your familly member, friends and other persons\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_numerology_api_description',kwargs)\n        "
    },
    "rapi_manatee_jokes_random": {
        "api_name": "random",
        "category": "Science",
        "tool_name": "manatee_jokes",
        "code": "async def rapi_manatee_jokes_random(self,*args,**kwargs):\n    '''A CORS-enabled collection of manatee jokes\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_manatee_jokes_random',kwargs)\n        "
    },
    "rapi_al_quran_get_base_information": {
        "api_name": "get_base_information",
        "category": "Science",
        "tool_name": "al_quran",
        "code": "async def rapi_al_quran_get_base_information(self,*args,**kwargs):\n    '''Quickly retrieve original Arabic text, translation, transliteration and Word Search from the Koran /Quran\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_al_quran_get_base_information',kwargs)\n        "
    },
    "rapi_al_quran_get_specific_ayah_verse": {
        "api_name": "get_specific_ayah_verse",
        "category": "Science",
        "tool_name": "al_quran",
        "code": "async def rapi_al_quran_get_specific_ayah_verse(self,*args,**kwargs):\n    '''Quickly retrieve original Arabic text, translation, transliteration and Word Search from the Koran /Quran\n    \n    \n\n    :param integer chapterId: Refers to a *Surah/Chapter* in the Koran\n**Min Value: *1***\n**Max Value: *114*** defaults to 38\n    :param integer verseId: A valid *Ayah/verse* number from a specific chapter from the Quran defaults to 29\n    '''\n    return await self._request_rapid_api('rapi_al_quran_get_specific_ayah_verse',kwargs)\n        "
    },
    "rapi_planets_by_api_ninjas_v1_planets": {
        "api_name": "v1_planets",
        "category": "Science",
        "tool_name": "planets_by_api_ninjas",
        "code": "async def rapi_planets_by_api_ninjas_v1_planets(self,*args,**kwargs):\n    '''Get statistics on thousands of planets in the known universe. See more info at https://api-ninjas.com/api/planets.\n    \n    \n\n    :param integer? max_period: maximum orbital period of the planet in Earth days.\n    :param integer? max_temperature: maximum average surface temperature of the planet in Kelvin.\n    :param integer? offset: number of results to offset for pagination.\n    :param integer? max_distance_light_year: maximum distance the planet is from Earth in light years.\n    :param integer? min_distance_light_year: minimum distance the planet is from Earth in light years.\n    :param integer? max_mass: maximum mass of the planet in Jupiters (1 Jupiter = 1.898 \u00d7 10^27 kg).\n    :param integer? max_semi_major_axis: maximum semi major axis of planet in astronomical units (AU).\n    :param integer? min_mass: minimum mass of the planet in Jupiters (1 Jupiter = 1.898 \u00d7 10^27 kg).\n    :param integer? min_semi_major_axis: minimum semi major axis of planet in astronomical units (AU).\n    :param string? name:  name of the planet. defaults to Mars\n    :param integer? min_temperature: minimum average surface temperature of the planet in Kelvin.\n    :param integer? max_radius: maximum average radius of the planet in Jupiters (1 Jupiter = 69911 km).\n    :param integer? min_radius: minimum average radius of the planet in Jupiters (1 Jupiter = 69911 km).\n    :param integer? min_period: minimum orbital period of the planet in Earth days.\n    '''\n    return await self._request_rapid_api('rapi_planets_by_api_ninjas_v1_planets',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_birth_details": {
        "api_name": "birth_details",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_birth_details(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param integer longitude:  defaults to 78.1000\n    :param string timezone:  defaults to Asia/Calcutta\n    :param string time:  defaults to 20:34:35\n    :param string date:  defaults to 2022-06-22\n    :param integer latitude:  defaults to 11.3900\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_birth_details',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_get_tamil_calendar_date": {
        "api_name": "get_tamil_calendar_date",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_get_tamil_calendar_date(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2023-04-14\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_get_tamil_calendar_date',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_convert_planet_degree_to_planet_angle": {
        "api_name": "convert_planet_degree_to_planet_angle",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_convert_planet_degree_to_planet_angle(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param integer degree:  defaults to 67.5666666667\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_convert_planet_degree_to_planet_angle',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_convert_planet_angle_to_planet_degree": {
        "api_name": "convert_planet_angle_to_planet_degree",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_convert_planet_angle_to_planet_degree(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param string angle:  defaults to 67.34.0\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_convert_planet_angle_to_planet_degree',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_get_sun_rise_and_sun_set_time": {
        "api_name": "get_sun_rise_and_sun_set_time",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_get_sun_rise_and_sun_set_time(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2023-04-14\n    :param integer latitude:  defaults to 12.9716\n    :param integer longitude:  defaults to 77.5946\n    :param string? timezone:  defaults to Asia/Calcutta\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_get_sun_rise_and_sun_set_time',kwargs)\n        "
    },
    "rapi_yawin_indian_astrology_get_planet_position_angles": {
        "api_name": "get_planet_position_angles",
        "category": "Science",
        "tool_name": "yawin_indian_astrology",
        "code": "async def rapi_yawin_indian_astrology_get_planet_position_angles(self,*args,**kwargs):\n    '''Indian astrology API for planet positions, ascension calculations, and prediction findings, Basic tools that help in astrological calculations\n    \n    \n\n    :param string dateofbirth:  defaults to 2022-06-22\n    :param string timeofbirth:  defaults to 20:34:35\n    :param integer? longitude:  defaults to 100.5666666667\n    :param string? timezone:  defaults to Asia/Calcutta\n    :param integer? latitude:  defaults to 60.2347652345\n    '''\n    return await self._request_rapid_api('rapi_yawin_indian_astrology_get_planet_position_angles',kwargs)\n        "
    },
    "rapi_materials_platform_for_data_science_mpds": {
        "api_name": "mpds",
        "category": "Science",
        "tool_name": "materials_platform_for_data_science",
        "code": "async def rapi_materials_platform_for_data_science_mpds(self,*args,**kwargs):\n    '''Curated data for materials science, thermodynamics, metallurgy, semiconductors, nanotechnology, solid state physics, crystallography, etc.\n    \n    \n\n    :param string q: JSON-serialized URL-encoded Object with the retrieval criteria, e.g. {\"elements\":\"Ag-K\"} defaults to %7B%22elements%22%3A%22Ag-K%22%7D\n    '''\n    return await self._request_rapid_api('rapi_materials_platform_for_data_science_mpds',kwargs)\n        "
    },
    "rapi_cryptocurrency_news_coindesk": {
        "api_name": "coindesk",
        "category": "Cryptography",
        "tool_name": "cryptocurrency_news",
        "code": "async def rapi_cryptocurrency_news_coindesk(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_news_coindesk',kwargs)\n        "
    },
    "rapi_cryptocurrency_news_bitcoinist": {
        "api_name": "bitcoinist",
        "category": "Cryptography",
        "tool_name": "cryptocurrency_news",
        "code": "async def rapi_cryptocurrency_news_bitcoinist(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_news_bitcoinist',kwargs)\n        "
    },
    "rapi_cryptocurrency_news_the_guardian": {
        "api_name": "the_guardian",
        "category": "Cryptography",
        "tool_name": "cryptocurrency_news",
        "code": "async def rapi_cryptocurrency_news_the_guardian(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_news_the_guardian',kwargs)\n        "
    },
    "rapi_cryptocurrency_news_bsc_news": {
        "api_name": "bsc_news",
        "category": "Cryptography",
        "tool_name": "cryptocurrency_news",
        "code": "async def rapi_cryptocurrency_news_bsc_news(self,*args,**kwargs):\n    '''Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cryptocurrency_news_bsc_news',kwargs)\n        "
    },
    "rapi_counter_get_current_count": {
        "api_name": "get_current_count",
        "category": "Monitoring",
        "tool_name": "counter",
        "code": "async def rapi_counter_get_current_count(self,*args,**kwargs):\n    '''Count views on your website or any other specific action on your application.\n    \n    \n\n    :param string? CLABEL:  defaults to blue\n    :param string? COLOR:  defaults to red\n    :param string? IDV:  defaults to sample\n    '''\n    return await self._request_rapid_api('rapi_counter_get_current_count',kwargs)\n        "
    },
    "rapi_counter_get_count_and_increase_by_one": {
        "api_name": "get_count_and_increase_by_one",
        "category": "Monitoring",
        "tool_name": "counter",
        "code": "async def rapi_counter_get_count_and_increase_by_one(self,*args,**kwargs):\n    '''Count views on your website or any other specific action on your application.\n    \n    \n\n    :param string? ID: \n    :param string? CLABEL:  defaults to blue\n    :param string? COLOR:  defaults to red\n    '''\n    return await self._request_rapid_api('rapi_counter_get_count_and_increase_by_one',kwargs)\n        "
    },
    "rapi_price_tracking_tools_camelizer_get_prices": {
        "api_name": "camelizer_get_prices",
        "category": "Monitoring",
        "tool_name": "price_tracking_tools",
        "code": "async def rapi_price_tracking_tools_camelizer_get_prices(self,*args,**kwargs):\n    '''This API currently helps to query for prices of products from Amazon. We will support more other sites/brands soon. Stay tune!\n    \n    \n\n    :param string asin: The asin number of a product from Amazon, and must be in the correct format. Ex : B08QB93S6R\n    :param string? locale: One of the following : au|ca|fr|de|it|es|uk|us defaults to us\n    '''\n    return await self._request_rapid_api('rapi_price_tracking_tools_camelizer_get_prices',kwargs)\n        "
    },
    "rapi_price_tracking_tools_camelizer_get_price_chart": {
        "api_name": "camelizer_get_price_chart",
        "category": "Monitoring",
        "tool_name": "price_tracking_tools",
        "code": "async def rapi_price_tracking_tools_camelizer_get_price_chart(self,*args,**kwargs):\n    '''This API currently helps to query for prices of products from Amazon. We will support more other sites/brands soon. Stay tune!\n    \n    \n\n    :param string asin: The asin number of a product from Amazon, and must be in the correct format. Ex : B08QB93S6R\n    :param string? lang: One of the following : en|fr|de|it|es defaults to en\n    :param string? tp: Time period. One of the following : 1m|3m|6m|1y|all defaults to 3m\n    :param integer? w: The width of the chart defaults to 720\n    :param integer? h: The height of the chart defaults to 480\n    :param string? country: One of the following : au|ca|fr|de|it|es|uk|us defaults to us\n    '''\n    return await self._request_rapid_api('rapi_price_tracking_tools_camelizer_get_price_chart',kwargs)\n        "
    },
    "rapi_otp_sms": {
        "api_name": "sms",
        "category": "Monitoring",
        "tool_name": "otp",
        "code": "async def rapi_otp_sms(self,*args,**kwargs):\n    '''send Account Registration OTP\n    \n    \n\n    :param string mobileno:  defaults to 9629029442\n    '''\n    return await self._request_rapid_api('rapi_otp_sms',kwargs)\n        "
    },
    "rapi_scan_web_heades_api_scan_headers": {
        "api_name": "scan_headers",
        "category": "Monitoring",
        "tool_name": "scan_web_heades_api",
        "code": "async def rapi_scan_web_heades_api_scan_headers(self,*args,**kwargs):\n    '''This API takes domain name as parameter and returns headers status as response\n    \n    \n\n    :param string domain:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_scan_web_heades_api_scan_headers',kwargs)\n        "
    },
    "rapi_ssl_snitch_check": {
        "api_name": "check",
        "category": "Monitoring",
        "tool_name": "ssl_snitch",
        "code": "async def rapi_ssl_snitch_check(self,*args,**kwargs):\n    '''The easy way to monitor SSL certificate expirations.\n    \n    \n\n    :param string domain:  defaults to test.com\n    :param string? extended:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_ssl_snitch_check',kwargs)\n        "
    },
    "rapi_mx_email_server_up_or_down_check_email_server": {
        "api_name": "check_email_server",
        "category": "Monitoring",
        "tool_name": "mx_email_server_up_or_down",
        "code": "async def rapi_mx_email_server_up_or_down_check_email_server(self,*args,**kwargs):\n    '''With this API you can check if email server exist or not on some domain.\n    \n    \n\n    :param string domain:  defaults to microsoft.com\n    '''\n    return await self._request_rapid_api('rapi_mx_email_server_up_or_down_check_email_server',kwargs)\n        "
    },
    "rapi_newly_registered_domains_emailvalidation": {
        "api_name": "emailvalidation",
        "category": "Monitoring",
        "tool_name": "newly_registered_domains",
        "code": "async def rapi_newly_registered_domains_emailvalidation(self,*args,**kwargs):\n    '''Newly Registered Domains API (v1) lets you check which domains have been added.\n    \n    \n\n    :param string email: Email to be verified defaults to info@peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_newly_registered_domains_emailvalidation',kwargs)\n        "
    },
    "rapi_newly_registered_domains_newlyregistereddomains": {
        "api_name": "newlyregistereddomains",
        "category": "Monitoring",
        "tool_name": "newly_registered_domains",
        "code": "async def rapi_newly_registered_domains_newlyregistereddomains(self,*args,**kwargs):\n    '''Newly Registered Domains API (v1) lets you check which domains have been added.\n    \n    \n\n    :param integer? page: page of domain to be searched defaults to 1\n    :param string? exclude: exclude keywords of domain to be searched\n    :param string? date: registered date of domain to be searched defaults to 2023-06-12\n    :param string? keywords: contains keywords of domain to be searched\n    '''\n    return await self._request_rapid_api('rapi_newly_registered_domains_newlyregistereddomains',kwargs)\n        "
    },
    "rapi_newly_registered_domains_whois": {
        "api_name": "whois",
        "category": "Monitoring",
        "tool_name": "newly_registered_domains",
        "code": "async def rapi_newly_registered_domains_whois(self,*args,**kwargs):\n    '''Newly Registered Domains API (v1) lets you check which domains have been added.\n    \n    \n\n    :param string domain: domain name of WhoIS to be searched defaults to peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_newly_registered_domains_whois',kwargs)\n        "
    },
    "rapi_opensquat_get_daily_domains": {
        "api_name": "get_daily_domains",
        "category": "Monitoring",
        "tool_name": "opensquat",
        "code": "async def rapi_opensquat_get_daily_domains(self,*args,**kwargs):\n    '''The openSquat is an open-source project for phishing domain and domain squatting detection by searching daily newly registered domains impersonating legit domains.\n    \n    \n\n    :param string keyword:  defaults to Google\n    '''\n    return await self._request_rapid_api('rapi_opensquat_get_daily_domains',kwargs)\n        "
    },
    "rapi_world_population_by_decade_and_growth_rate_get_by_decade": {
        "api_name": "get_by_decade",
        "category": "Monitoring",
        "tool_name": "world_population_by_decade_and_growth_rate",
        "code": "async def rapi_world_population_by_decade_and_growth_rate_get_by_decade(self,*args,**kwargs):\n    '''world population by decade and growth rate\n    \n    \n\n    :param integer? decade:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_world_population_by_decade_and_growth_rate_get_by_decade',kwargs)\n        "
    },
    "rapi_similar_web_countries_list": {
        "api_name": "countries_list",
        "category": "Monitoring",
        "tool_name": "similar_web",
        "code": "async def rapi_similar_web_countries_list(self,*args,**kwargs):\n    '''This API helps you to query website traffic and key metrics for any website, including engagement rate, traffic ranking, keyword ranking and traffic source... to create a plugin like similarweb.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_similar_web_countries_list',kwargs)\n        "
    },
    "rapi_similar_web_get_analysis": {
        "api_name": "get_analysis",
        "category": "Monitoring",
        "tool_name": "similar_web",
        "code": "async def rapi_similar_web_get_analysis(self,*args,**kwargs):\n    '''This API helps you to query website traffic and key metrics for any website, including engagement rate, traffic ranking, keyword ranking and traffic source... to create a plugin like similarweb.com\n    \n    \n\n    :param string domain: Any site or domain that you are familiar with. Ex : amazon.com\n    '''\n    return await self._request_rapid_api('rapi_similar_web_get_analysis',kwargs)\n        "
    },
    "rapi_screenshot_maker_take_screenshot": {
        "api_name": "take_screenshot",
        "category": "Monitoring",
        "tool_name": "screenshot_maker",
        "code": "async def rapi_screenshot_maker_take_screenshot(self,*args,**kwargs):\n    '''Take perfect screenshot from websites. Powered by nodejs\n\nThe service work through proxy servers. \nUse proxyCountry : asia | europe | north_america\nOr proxyState : france | canada | singapore | united_kingdom | germany\notherwise it will pick one randomly\n    \n    \n\n    :param string targetUrl: Website url defaults to https://www.google.it\n    :param ENUM? proxyState: \n    :param ENUM? proxyCountry: \n    :param integer? clickDelay:  defaults to 500\n    :param ENUM? fullpage: take screenshot of the entire website page, from header to footer\n    :param string? removables: remove divs/html by selector\n    :param integer? clickCount:  defaults to 1\n    :param ENUM? hasTouch: Specify if the viewport supports touch events.\n    :param string? clickSelector: This method fetches an element with selector, scrolls it into view if needed, and then uses Page.mouse to click in the center of the element. If there's no element matching selector, the method throws an error.\n    :param ENUM? isFullyLoaded: consider navigation to be finished when there are no more than 0 network connections for at least 500 ms. \nThan take screenshot\n    :param ENUM? clickButton: Mouse button to be used, left click or right click etc\n    :param integer? pageHeight: Set browser page height defaults to 1024\n    :param ENUM? isMobile: Whether the meta viewport tag is taken into account.\n    :param integer? pageWidth: Set browser page width defaults to 1024\n    :param ENUM? isLandScape: Specifies if the viewport is in landscape mode.\n    :param integer? deviceScaleFactor: Specify device scale factor. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_screenshot_maker_take_screenshot',kwargs)\n        "
    },
    "rapi_youtube_classification_api_tags_video_id": {
        "api_name": "tags_video_id",
        "category": "Monitoring",
        "tool_name": "youtube_classification_api",
        "code": "async def rapi_youtube_classification_api_tags_video_id(self,*args,**kwargs):\n    '''Train your own machine learning project Stop wasting time scrolling through a list of videos. Use our Youtube classification API to get the information you need in the most efficient way possible. With our API and your favorite programming language, you can classify videos into like count, comment count, and rating count so that you can find what you're looking for in no time.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_youtube_classification_api_tags_video_id',kwargs)\n        "
    },
    "rapi_youtube_classification_api_more_on_inside": {
        "api_name": "more_on_inside",
        "category": "Monitoring",
        "tool_name": "youtube_classification_api",
        "code": "async def rapi_youtube_classification_api_more_on_inside(self,*args,**kwargs):\n    '''Train your own machine learning project Stop wasting time scrolling through a list of videos. Use our Youtube classification API to get the information you need in the most efficient way possible. With our API and your favorite programming language, you can classify videos into like count, comment count, and rating count so that you can find what you're looking for in no time.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_youtube_classification_api_more_on_inside',kwargs)\n        "
    },
    "rapi_youtube_classification_api_overview_of_channels": {
        "api_name": "overview_of_channels",
        "category": "Monitoring",
        "tool_name": "youtube_classification_api",
        "code": "async def rapi_youtube_classification_api_overview_of_channels(self,*args,**kwargs):\n    '''Train your own machine learning project Stop wasting time scrolling through a list of videos. Use our Youtube classification API to get the information you need in the most efficient way possible. With our API and your favorite programming language, you can classify videos into like count, comment count, and rating count so that you can find what you're looking for in no time.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_youtube_classification_api_overview_of_channels',kwargs)\n        "
    },
    "rapi_patient_example": {
        "api_name": "example",
        "category": "Monitoring",
        "tool_name": "patient",
        "code": "async def rapi_patient_example(self,*args,**kwargs):\n    '''Patient Database Management\n    \n    \n\n    :param string? data:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_patient_example',kwargs)\n        "
    },
    "rapi_neuro_high_quality_translation_list_of_available_languages": {
        "api_name": "list_of_available_languages",
        "category": "Translation",
        "tool_name": "neuro_high_quality_translation",
        "code": "async def rapi_neuro_high_quality_translation_list_of_available_languages(self,*args,**kwargs):\n    '''High-quality text translation based on neural networks and our own multi-model\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_neuro_high_quality_translation_list_of_available_languages',kwargs)\n        "
    },
    "rapi_deep_translate_languages": {
        "api_name": "languages",
        "category": "Translation",
        "tool_name": "deep_translate",
        "code": "async def rapi_deep_translate_languages(self,*args,**kwargs):\n    '''100x cheaper than Google Translate. Same API. Same quality.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_deep_translate_languages',kwargs)\n        "
    },
    "rapi_text_translator_v2_getlanguages": {
        "api_name": "getlanguages",
        "category": "Translation",
        "tool_name": "text_translator_v2",
        "code": "async def rapi_text_translator_v2_getlanguages(self,*args,**kwargs):\n    '''Translate text to 100+ languages \u200b. Fast processing, cost saving. Free up to 100,000 characters per month\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_translator_v2_getlanguages',kwargs)\n        "
    },
    "rapi_google_translate_v3_supported_languages": {
        "api_name": "supported_languages",
        "category": "Translation",
        "tool_name": "google_translate_v3",
        "code": "async def rapi_google_translate_v3_supported_languages(self,*args,**kwargs):\n    '''Use Google Translate API, Same quality result but x100 cheaper. Fast and stable translation service\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_google_translate_v3_supported_languages',kwargs)\n        "
    },
    "rapi_webit_language_dictionary_synonyms_temporarily_unavailable": {
        "api_name": "dictionary_synonyms_temporarily_unavailable",
        "category": "Translation",
        "tool_name": "webit_language",
        "code": "async def rapi_webit_language_dictionary_synonyms_temporarily_unavailable(self,*args,**kwargs):\n    '''A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.\n    \n    \n\n    :param string language: \n    :param string q: \n    '''\n    return await self._request_rapid_api('rapi_webit_language_dictionary_synonyms_temporarily_unavailable',kwargs)\n        "
    },
    "rapi_webit_language_dictionary_examples_temporarily_unavailable": {
        "api_name": "dictionary_examples_temporarily_unavailable",
        "category": "Translation",
        "tool_name": "webit_language",
        "code": "async def rapi_webit_language_dictionary_examples_temporarily_unavailable(self,*args,**kwargs):\n    '''A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.\n    \n    \n\n    :param string q: \n    :param string language: \n    '''\n    return await self._request_rapid_api('rapi_webit_language_dictionary_examples_temporarily_unavailable',kwargs)\n        "
    },
    "rapi_webit_language_dictionary_antonyms_temporarily_unavailable": {
        "api_name": "dictionary_antonyms_temporarily_unavailable",
        "category": "Translation",
        "tool_name": "webit_language",
        "code": "async def rapi_webit_language_dictionary_antonyms_temporarily_unavailable(self,*args,**kwargs):\n    '''A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.\n    \n    \n\n    :param string language: \n    :param string q: \n    '''\n    return await self._request_rapid_api('rapi_webit_language_dictionary_antonyms_temporarily_unavailable',kwargs)\n        "
    },
    "rapi_webit_language_transliterate_any_to_latin": {
        "api_name": "transliterate_any_to_latin",
        "category": "Translation",
        "tool_name": "webit_language",
        "code": "async def rapi_webit_language_transliterate_any_to_latin(self,*args,**kwargs):\n    '''A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.\n    \n    \n\n    :param string text: Transliterate any text to Latin. defaults to \u3053\u3093\u306b\u3061\u306f\u3002\n    '''\n    return await self._request_rapid_api('rapi_webit_language_transliterate_any_to_latin',kwargs)\n        "
    },
    "rapi_fast_and_highly_accurate_language_detection_languages": {
        "api_name": "languages",
        "category": "Translation",
        "tool_name": "fast_and_highly_accurate_language_detection",
        "code": "async def rapi_fast_and_highly_accurate_language_detection_languages(self,*args,**kwargs):\n    '''Fast and highly accurate (99.9% accuracy for most major languages*) language detection in 176 languages based on the Fast Text Machine Learning model. Please see the \"About\" section for details on languages and accuracy data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fast_and_highly_accurate_language_detection_languages',kwargs)\n        "
    },
    "rapi_translate_v3_fast_language_detection": {
        "api_name": "fast_language_detection",
        "category": "Translation",
        "tool_name": "translate_v3",
        "code": "async def rapi_translate_v3_fast_language_detection(self,*args,**kwargs):\n    '''Easy and reliable Machine Translation  and Language Detection\n    \n    \n\n    :param string text:  defaults to this is accurate and it can improve if it's longer\n    '''\n    return await self._request_rapid_api('rapi_translate_v3_fast_language_detection',kwargs)\n        "
    },
    "rapi_translate_v3_translate": {
        "api_name": "translate",
        "category": "Translation",
        "tool_name": "translate_v3",
        "code": "async def rapi_translate_v3_translate(self,*args,**kwargs):\n    '''Easy and reliable Machine Translation  and Language Detection\n    \n    \n\n    :param string text:  defaults to this is accurate and it can improve if it's longer\n    :param string dest:  defaults to es\n    :param string? src:  defaults to auto\n    '''\n    return await self._request_rapid_api('rapi_translate_v3_translate',kwargs)\n        "
    },
    "rapi_translef_translator_list_of_available_languages": {
        "api_name": "list_of_available_languages",
        "category": "Translation",
        "tool_name": "translef_translator",
        "code": "async def rapi_translef_translator_list_of_available_languages(self,*args,**kwargs):\n    '''Translate text to 85+ languages. 0.3$ for million symbols \nFree translation of 50.000 characters.\nSimple and intuitive API.\nFor all questions, please contact telegram - https://t.me/translef\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_translef_translator_list_of_available_languages',kwargs)\n        "
    },
    "rapi_tribal_mail_translate_allowance": {
        "api_name": "allowance",
        "category": "Translation",
        "tool_name": "tribal_mail_translate",
        "code": "async def rapi_tribal_mail_translate_allowance(self,*args,**kwargs):\n    '''A fast, affordable, and accurate translation API for publishers, websites, and businesses. Translate into 75 different languages/variants using one of the most advanced translation machine learning algorithms in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tribal_mail_translate_allowance',kwargs)\n        "
    },
    "rapi_translator_get_languages": {
        "api_name": "get_languages",
        "category": "Translation",
        "tool_name": "translator",
        "code": "async def rapi_translator_get_languages(self,*args,**kwargs):\n    '''Text Translation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_translator_get_languages',kwargs)\n        "
    },
    "rapi_indic_translator_querytranslator": {
        "api_name": "querytranslator",
        "category": "Translation",
        "tool_name": "indic_translator",
        "code": "async def rapi_indic_translator_querytranslator(self,*args,**kwargs):\n    '''Indic Translator is an advance AI based Translator Indian languages translator API. It has outperformed Google and other translators for tricky Indian languages. Indic Translator has been especially designed for Indian languages, and has been trained on advance deep learning algorithm to perform well on nuanced Indian languages.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_indic_translator_querytranslator',kwargs)\n        "
    },
    "rapi_translate_all_languages_languages": {
        "api_name": "languages",
        "category": "Translation",
        "tool_name": "translate_all_languages",
        "code": "async def rapi_translate_all_languages_languages(self,*args,**kwargs):\n    '''Translate All Language -  Text Translator\n\n100x cheaper than Google Translate. Same API. Same quality.  Translate All Languages provides a simple API for translating plain text between any of 100+ supported languages. If you don\u2019t know what language the text is written in, our API will detect the language of the original request.  \n\ntelegram DM: @justapi1\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_translate_all_languages_languages',kwargs)\n        "
    },
    "rapi_rushtranslate_list_languages": {
        "api_name": "list_languages",
        "category": "Translation",
        "tool_name": "rushtranslate",
        "code": "async def rapi_rushtranslate_list_languages(self,*args,**kwargs):\n    '''Human powered document translation API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rushtranslate_list_languages',kwargs)\n        "
    },
    "rapi_aibit_translator_get_supported_languages": {
        "api_name": "get_supported_languages",
        "category": "Translation",
        "tool_name": "aibit_translator",
        "code": "async def rapi_aibit_translator_get_supported_languages(self,*args,**kwargs):\n    '''\u2713 Blazing Speed, Reliability, Availability.\n\u2713 110+ Languages Supported.\n\u2713 Stay Ahead with Regular Weekly Updates.\n\u2713 Join our Discord: https://discord.gg/tawdu5rG\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_aibit_translator_get_supported_languages',kwargs)\n        "
    },
    "rapi_nitro_rates": {
        "api_name": "rates",
        "category": "Translation",
        "tool_name": "nitro",
        "code": "async def rapi_nitro_rates(self,*args,**kwargs):\n    '''The Nitro API provides automated access to Nitro, a professional human-powered translation service with support for 70+ languages. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nitro_rates',kwargs)\n        "
    },
    "rapi_english_synonyms_get_synonyms": {
        "api_name": "get_synonyms",
        "category": "Translation",
        "tool_name": "english_synonyms",
        "code": "async def rapi_english_synonyms_get_synonyms(self,*args,**kwargs):\n    '''Get all english synonyms from a given word\n    \n    \n\n    :param string word: An english word defaults to bourgeois\n    '''\n    return await self._request_rapid_api('rapi_english_synonyms_get_synonyms',kwargs)\n        "
    },
    "rapi_translate_it_options": {
        "api_name": "options",
        "category": "Translation",
        "tool_name": "translate_it",
        "code": "async def rapi_translate_it_options(self,*args,**kwargs):\n    '''Api translator, with this api you could get translate your text easily from one of the supported languages to another one\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_translate_it_options',kwargs)\n        "
    },
    "rapi_13f918yf19o1t1f1of1t9_endpoint1": {
        "api_name": "endpoint1",
        "category": "Translation",
        "tool_name": "13f918yf19o1t1f1of1t9",
        "code": "async def rapi_13f918yf19o1t1f1of1t9_endpoint1(self,*args,**kwargs):\n    '''rrrrrrr\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_13f918yf19o1t1f1of1t9_endpoint1',kwargs)\n        "
    },
    "rapi_microsoft_translator_text_languages": {
        "api_name": "languages",
        "category": "Translation",
        "tool_name": "microsoft_translator_text",
        "code": "async def rapi_microsoft_translator_text_languages(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that enables you to easily conduct real-time text translation.\n    \n    \n\n    :param string api-version: Version of the API requested by the client. Value must be **3.0**. defaults to 3.0\n    :param string? scope: A comma-separated list of names defining the group of languages to return. Allowed group names are- `translation`, `transliteration` and `dictionary`. If no scope is given, then all groups are returned, which is equivalent to passing `scope=translation,transliteration,dictionary`. To decide which set of supported languages is appropriate for your scenario, see the description of the response object.\n    '''\n    return await self._request_rapid_api('rapi_microsoft_translator_text_languages',kwargs)\n        "
    },
    "rapi_long_translator_languages": {
        "api_name": "languages",
        "category": "Translation",
        "tool_name": "long_translator",
        "code": "async def rapi_long_translator_languages(self,*args,**kwargs):\n    '''Translate text into other languages. \nCan translate long texts, fast processing, cost-effective.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_long_translator_languages',kwargs)\n        "
    },
    "rapi_rapid_translate_get_languages": {
        "api_name": "get_languages",
        "category": "Translation",
        "tool_name": "rapid_translate",
        "code": "async def rapi_rapid_translate_get_languages(self,*args,**kwargs):\n    '''Translate texts between 50+ natural languages.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rapid_translate_get_languages',kwargs)\n        "
    },
    "rapi_dictionary_by_api_ninjas_v1_dictionary": {
        "api_name": "v1_dictionary",
        "category": "Translation",
        "tool_name": "dictionary_by_api_ninjas",
        "code": "async def rapi_dictionary_by_api_ninjas_v1_dictionary(self,*args,**kwargs):\n    '''Look up any word in the English dictionary. See more info at https://api-ninjas.com/api/dictionary.\n    \n    \n\n    :param string word: Word to look up. defaults to bright\n    '''\n    return await self._request_rapid_api('rapi_dictionary_by_api_ninjas_v1_dictionary',kwargs)\n        "
    },
    "rapi_cheap_translate_goo_translate_languages": {
        "api_name": "goo_translate_languages",
        "category": "Translation",
        "tool_name": "cheap_translate",
        "code": "async def rapi_cheap_translate_goo_translate_languages(self,*args,**kwargs):\n    '''translate via google translate, bing translate\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cheap_translate_goo_translate_languages',kwargs)\n        "
    },
    "rapi_cheap_translate_translate_languages": {
        "api_name": "translate_languages",
        "category": "Translation",
        "tool_name": "cheap_translate",
        "code": "async def rapi_cheap_translate_translate_languages(self,*args,**kwargs):\n    '''translate via google translate, bing translate\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cheap_translate_translate_languages',kwargs)\n        "
    },
    "rapi_joj_translate_translate": {
        "api_name": "translate",
        "category": "Translation",
        "tool_name": "joj_translate",
        "code": "async def rapi_joj_translate_translate(self,*args,**kwargs):\n    '''Fast and scalable API service from the world's most used translation service!\n    \n    \n\n    :param string text: Text to be translated defaults to article\n    :param string target: Language to be translated defaults to es\n    :param string? source: Language of the text source (default: `auto`) defaults to auto\n    '''\n    return await self._request_rapid_api('rapi_joj_translate_translate',kwargs)\n        "
    },
    "rapi_youtube_video_summarizer_v1_youtube_summarizevideowithtoken": {
        "api_name": "v1_youtube_summarizevideowithtoken",
        "category": "Tools",
        "tool_name": "youtube_video_summarizer",
        "code": "async def rapi_youtube_video_summarizer_v1_youtube_summarizevideowithtoken(self,*args,**kwargs):\n    '''A powerful tool for generating concise summaries of YouTube videos, highlighting the most important points for easy note-taking and referencing.\n    \n    \n\n    :param string videoURL: The URL of the YouTube video to summarize. defaults to https://www.youtube.com/watch?v=Yzx7ihtCGBs\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_summarizer_v1_youtube_summarizevideowithtoken',kwargs)\n        "
    },
    "rapi_unitconversion_info": {
        "api_name": "info",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_info(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unitconversion_info',kwargs)\n        "
    },
    "rapi_unitconversion_temperature_from_to_number": {
        "api_name": "temperature_from_to_number",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_temperature_from_to_number(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    :param string to:  defaults to celsius\n    :param integer number:  defaults to 90\n    :param string from:  defaults to fahrenheit\n    '''\n    return await self._request_rapid_api('rapi_unitconversion_temperature_from_to_number',kwargs)\n        "
    },
    "rapi_unitconversion_pressure_from_to_number": {
        "api_name": "pressure_from_to_number",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_pressure_from_to_number(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    :param string from:  defaults to pascal\n    :param integer number:  defaults to 100\n    :param string to:  defaults to decibar\n    '''\n    return await self._request_rapid_api('rapi_unitconversion_pressure_from_to_number',kwargs)\n        "
    },
    "rapi_unitconversion_mass_from_to_number": {
        "api_name": "mass_from_to_number",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_mass_from_to_number(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    :param integer number:  defaults to 100\n    :param string from:  defaults to gram\n    :param string to:  defaults to pound\n    '''\n    return await self._request_rapid_api('rapi_unitconversion_mass_from_to_number',kwargs)\n        "
    },
    "rapi_unitconversion_force_from_to_number": {
        "api_name": "force_from_to_number",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_force_from_to_number(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    :param string from:  defaults to newton\n    :param string to:  defaults to dyne\n    :param integer number:  defaults to 1000\n    '''\n    return await self._request_rapid_api('rapi_unitconversion_force_from_to_number',kwargs)\n        "
    },
    "rapi_unitconversion_data_from_to_number": {
        "api_name": "data_from_to_number",
        "category": "Tools",
        "tool_name": "unitconversion",
        "code": "async def rapi_unitconversion_data_from_to_number(self,*args,**kwargs):\n    '''App to easily convert units\n    \n    \n\n    :param integer number:  defaults to 1024\n    :param string to:  defaults to byte\n    :param string from:  defaults to bit\n    '''\n    return await self._request_rapid_api('rapi_unitconversion_data_from_to_number',kwargs)\n        "
    },
    "rapi_arespass_about": {
        "api_name": "about",
        "category": "Tools",
        "tool_name": "arespass",
        "code": "async def rapi_arespass_about(self,*args,**kwargs):\n    '''AresPass is a password analyzer that calculates its entropy and shows a complete report that includes the password fragments having low randomness. Among the analysis carried out are multi-language word search, keyboard sequence search or irregular entropy distribution, to mention some of them.\n    \n    \n\n    :param string? outputFormat: **The format of the returned metadata.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n\n    '''\n    return await self._request_rapid_api('rapi_arespass_about',kwargs)\n        "
    },
    "rapi_arespass_ec": {
        "api_name": "ec",
        "category": "Tools",
        "tool_name": "arespass",
        "code": "async def rapi_arespass_ec(self,*args,**kwargs):\n    '''AresPass is a password analyzer that calculates its entropy and shows a complete report that includes the password fragments having low randomness. Among the analysis carried out are multi-language word search, keyboard sequence search or irregular entropy distribution, to mention some of them.\n    \n    \n\n    :param string password: **The password to be analyzed.**\n\nMinimum length is 4 characters; maximum length is 128 characters.\n\nBeware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.\n\nFor more information about this issue, please refer to RFC 3986 (\"*Uniform Resource Identifier (URI): Generic Syntax*\"), sections 2.1, 2.2 and 2.4.\n\n    :param integer? penalty: **The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**\n\nThe penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.\n\nThe character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.\n\nThe default value is *0.25*.\n\n    :param string? outputFormat: **The format of the returned analysis.**\n\nAllowed values are *json*, *xml* and *yaml*.\n\nThe default value is *xml*.\n\n    :param string? reqId: **An identifier for this request.**\n\nThe request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.\n\nThis identifier is echoed in the returned response. Its value has no effect on the password analysis.\n\nIf this parameter is unset, a randomly generated identifier will be automatically assigned to this request.\n\n    '''\n    return await self._request_rapid_api('rapi_arespass_ec',kwargs)\n        "
    },
    "rapi_youtube_video_download_info_get_video_info": {
        "api_name": "get_video_info",
        "category": "Tools",
        "tool_name": "youtube_video_download_info",
        "code": "async def rapi_youtube_video_download_info_get_video_info(self,*args,**kwargs):\n    '''Download YouTube Videos/MP4. Forever Free Version.\n    \n    \n\n    :param string id: Youtube Video Id. defaults to UxxajLWwzqY\n    :param string? geo: Country code in ISO 3166 format of the end user.\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_download_info_get_video_info',kwargs)\n        "
    },
    "rapi_dateclock_birthday": {
        "api_name": "birthday",
        "category": "Tools",
        "tool_name": "dateclock",
        "code": "async def rapi_dateclock_birthday(self,*args,**kwargs):\n    '''Complete Converter Date Report also Between, Birthday and many more!\n#date #birthday #between #query #islamic #calendar\nI\u2019m on telegram chat me if there a problem/request\nhttps://t.me/franc0jr\n    \n    \n\n    :param string date:  defaults to 1993-12-24\n    '''\n    return await self._request_rapid_api('rapi_dateclock_birthday',kwargs)\n        "
    },
    "rapi_dateclock_date_converter_timezone": {
        "api_name": "date_converter_timezone",
        "category": "Tools",
        "tool_name": "dateclock",
        "code": "async def rapi_dateclock_date_converter_timezone(self,*args,**kwargs):\n    '''Complete Converter Date Report also Between, Birthday and many more!\n#date #birthday #between #query #islamic #calendar\nI\u2019m on telegram chat me if there a problem/request\nhttps://t.me/franc0jr\n    \n    \n\n    :param string? format: \n    :param string? date:  defaults to 7 Days Ago\n    :param string? tz:  defaults to UTC+8\n    '''\n    return await self._request_rapid_api('rapi_dateclock_date_converter_timezone',kwargs)\n        "
    },
    "rapi_ytconvert_search": {
        "api_name": "search",
        "category": "Tools",
        "tool_name": "ytconvert",
        "code": "async def rapi_ytconvert_search(self,*args,**kwargs):\n    '''Download mp4 and mp3 from youtube\n    \n    \n\n    :param string SearchQuery:  defaults to Skillet\n    '''\n    return await self._request_rapid_api('rapi_ytconvert_search',kwargs)\n        "
    },
    "rapi_qr_code_v18_qrcode": {
        "api_name": "qrcode",
        "category": "Tools",
        "tool_name": "qr_code_v18",
        "code": "async def rapi_qr_code_v18_qrcode(self,*args,**kwargs):\n    '''API that returns a downloadable QR Code as a png from an input text param\n    \n    \n\n    :param string text:  defaults to https://google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_v18_qrcode',kwargs)\n        "
    },
    "rapi_exerra_phishing_check_check_a_url": {
        "api_name": "check_a_url",
        "category": "Tools",
        "tool_name": "exerra_phishing_check",
        "code": "async def rapi_exerra_phishing_check_check_a_url(self,*args,**kwargs):\n    '''This API checks URLs to see whether they are known phishing attempts. \n    \n    \n\n    :param string url: This is the URL that the API will check.\nMust be a valid HTTP(s) URL or it will throw a 400 defaults to https://exerra.xyz\n    '''\n    return await self._request_rapid_api('rapi_exerra_phishing_check_check_a_url',kwargs)\n        "
    },
    "rapi_demo_project_v13_get_products": {
        "api_name": "get_products",
        "category": "Tools",
        "tool_name": "demo_project_v13",
        "code": "async def rapi_demo_project_v13_get_products(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer limit: \n    :param integer skip: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v13_get_products',kwargs)\n        "
    },
    "rapi_easy_qr_code_generate_qr_code": {
        "api_name": "generate_qr_code",
        "category": "Tools",
        "tool_name": "easy_qr_code",
        "code": "async def rapi_easy_qr_code_generate_qr_code(self,*args,**kwargs):\n    '''Simple QR Code generator. https://easy-qr-code.p.rapidapi.com/generate?content=https://google.com\n    \n    \n\n    :param string content:  defaults to https://google.com\n    '''\n    return await self._request_rapid_api('rapi_easy_qr_code_generate_qr_code',kwargs)\n        "
    },
    "rapi_python_3_code_compiler_python_3_versions": {
        "api_name": "python_3_versions",
        "category": "Tools",
        "tool_name": "python_3_code_compiler",
        "code": "async def rapi_python_3_code_compiler_python_3_versions(self,*args,**kwargs):\n    '''Python 3 Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_python_3_code_compiler_python_3_versions',kwargs)\n        "
    },
    "rapi_onboarding_project_v3_get_products": {
        "api_name": "get_products",
        "category": "Tools",
        "tool_name": "onboarding_project_v3",
        "code": "async def rapi_onboarding_project_v3_get_products(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer limit: \n    :param integer skip: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_v3_get_products',kwargs)\n        "
    },
    "rapi_onboarding_project_v3_get_products_in_category": {
        "api_name": "get_products_in_category",
        "category": "Tools",
        "tool_name": "onboarding_project_v3",
        "code": "async def rapi_onboarding_project_v3_get_products_in_category(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param string category: \n    :param integer limit: \n    :param integer skip: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_v3_get_products_in_category',kwargs)\n        "
    },
    "rapi_onboarding_project_v3_get_product": {
        "api_name": "get_product",
        "category": "Tools",
        "tool_name": "onboarding_project_v3",
        "code": "async def rapi_onboarding_project_v3_get_product(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_v3_get_product',kwargs)\n        "
    },
    "rapi_captcha_generator_captcha_generator": {
        "api_name": "captcha_generator",
        "category": "Tools",
        "tool_name": "captcha_generator",
        "code": "async def rapi_captcha_generator_captcha_generator(self,*args,**kwargs):\n    '''A captcha generator tool with different settings for difficulty.\n    \n    \n\n    :param string? fontname: Supported fontnames:  'sora', 'noto-sans', 'ubuntu'. Default = 'sora' defaults to sora\n    :param integer? noise_number: An integer value. Default = 10 defaults to 10\n    :param string? text: A custom captcha solution text. Default text solution is set aleatory\n    '''\n    return await self._request_rapid_api('rapi_captcha_generator_captcha_generator',kwargs)\n        "
    },
    "rapi_seo_fast_audit_analysis": {
        "api_name": "analysis",
        "category": "Tools",
        "tool_name": "seo_fast_audit",
        "code": "async def rapi_seo_fast_audit_analysis(self,*args,**kwargs):\n    '''One click onpage SEO audit API : Analyse the content from an URL the major SEO tags : title, description, H1, img, and links. insanely fast &lt; 200ms\n    \n    \n\n    :param string url:  defaults to https://docteurseo.fr/\n    '''\n    return await self._request_rapid_api('rapi_seo_fast_audit_analysis',kwargs)\n        "
    },
    "rapi_ruby_code_compiler_ruby_versions": {
        "api_name": "ruby_versions",
        "category": "Tools",
        "tool_name": "ruby_code_compiler",
        "code": "async def rapi_ruby_code_compiler_ruby_versions(self,*args,**kwargs):\n    '''Ruby Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ruby_code_compiler_ruby_versions',kwargs)\n        "
    },
    "rapi_youtube_video_data_extractor_extract_data": {
        "api_name": "extract_data",
        "category": "Tools",
        "tool_name": "youtube_video_data_extractor",
        "code": "async def rapi_youtube_video_data_extractor_extract_data(self,*args,**kwargs):\n    '''It is a simple api used to extract YouTube Video data such as title,description,etc.\n    \n    \n\n    :param string url:  defaults to https://www.youtube.com/watch?v=RG9TMn1FJzc\n    '''\n    return await self._request_rapid_api('rapi_youtube_video_data_extractor_extract_data',kwargs)\n        "
    },
    "rapi_isbehindcdn_isbehindcdn": {
        "api_name": "isbehindcdn",
        "category": "Tools",
        "tool_name": "isbehindcdn",
        "code": "async def rapi_isbehindcdn_isbehindcdn(self,*args,**kwargs):\n    '''Check if domain is fronted by CDN provider.\n    \n    \n\n    :param string domainname:  defaults to example.com\n    '''\n    return await self._request_rapid_api('rapi_isbehindcdn_isbehindcdn',kwargs)\n        "
    },
    "rapi_custom_qr_code_with_logo_v2_simple_qr_code": {
        "api_name": "simple_qr_code",
        "category": "Tools",
        "tool_name": "custom_qr_code_with_logo_v2",
        "code": "async def rapi_custom_qr_code_with_logo_v2_simple_qr_code(self,*args,**kwargs):\n    '''Custom QR codes with a logo allow businesses to create personalized QR codes with their own brand logo integrated into the code. Try it today!\n    \n    \n\n    :param string link:  defaults to https://www.google.com/\n    :param string? color: Optional. Default: #000\n    '''\n    return await self._request_rapid_api('rapi_custom_qr_code_with_logo_v2_simple_qr_code',kwargs)\n        "
    },
    "rapi_scala_code_compiler_scala_versions": {
        "api_name": "scala_versions",
        "category": "Tools",
        "tool_name": "scala_code_compiler",
        "code": "async def rapi_scala_code_compiler_scala_versions(self,*args,**kwargs):\n    '''Scala Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_scala_code_compiler_scala_versions',kwargs)\n        "
    },
    "rapi_qrcodeutils_qrcodefree": {
        "api_name": "qrcodefree",
        "category": "Tools",
        "tool_name": "qrcodeutils",
        "code": "async def rapi_qrcodeutils_qrcodefree(self,*args,**kwargs):\n    '''QR Code Generator API. The API will return directly QR Code image. For more details please visit https://www.qrcodeutils.com\n    \n    \n\n    :param string text: Barcode text defaults to https://www.digicatech.com\n    :param boolean? validate: true / false . Default true defaults to True\n    :param integer? size: Size of the output image in pixels. Max: 250 Default: 150 defaults to 150\n    :param string? type: Warning: the parameter must be named lowercase png,svg or eps defaults to svg\n    :param string? level: Correction Level L (Low) 7% of codewords can be restored. Level M (Medium) 15% of codewords can be restored. Level Q (Quartile)[39] 25% of codewords can be restored. Level H (High) 30% of codewords can be restored. H,L,Q,M . Default M defaults to M\n    '''\n    return await self._request_rapid_api('rapi_qrcodeutils_qrcodefree',kwargs)\n        "
    },
    "rapi_qrcodeutils_qrcodepro": {
        "api_name": "qrcodepro",
        "category": "Tools",
        "tool_name": "qrcodeutils",
        "code": "async def rapi_qrcodeutils_qrcodepro(self,*args,**kwargs):\n    '''QR Code Generator API. The API will return directly QR Code image. For more details please visit https://www.qrcodeutils.com\n    \n    \n\n    :param string text: Barcode text defaults to https://www.digicatech.com\n    :param boolean? validate: true / false . Default true defaults to True\n    :param boolean? setlabel: true / false . Default false\n    :param string? forecolor: Foreground color in Hexadecimal value. Note: Please do not enter the # prefix defaults to 000000\n    :param string? type: Warning: the parameter must be named lowercase png,svg or eps defaults to svg\n    :param string? labeltext: \n    :param integer? size: Size of the output image in pixels. Max: 4000 Default: 150 defaults to 150\n    :param string? labelalign: left , right and center. Default center defaults to center\n    :param string? backcolor: Background color in Hexadecimal value. Note: Please do not enter the # prefix defaults to FFFFFF\n    :param string? level: Correction Level L (Low) 7% of codewords can be restored. Level M (Medium) 15% of codewords can be restored. Level Q (Quartile)[39] 25% of codewords can be restored. Level H (High) 30% of codewords can be restored. H,L,Q,M . Default M. H,L,Q,M . Default M defaults to M\n    '''\n    return await self._request_rapid_api('rapi_qrcodeutils_qrcodepro',kwargs)\n        "
    },
    "rapi_variable_size_qr_code_api_qr_code_image": {
        "api_name": "qr_code_image",
        "category": "Tools",
        "tool_name": "variable_size_qr_code_api",
        "code": "async def rapi_variable_size_qr_code_api_qr_code_image(self,*args,**kwargs):\n    '''This api takes a URL and the desired size of the QR Code and returns the QR Code image.\n    \n    \n\n    :param integer? size:  defaults to 5\n    :param string? url:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_variable_size_qr_code_api_qr_code_image',kwargs)\n        "
    },
    "rapi_famous_quotes_get_random_quotes": {
        "api_name": "get_random_quotes",
        "category": "Tools",
        "tool_name": "famous_quotes",
        "code": "async def rapi_famous_quotes_get_random_quotes(self,*args,**kwargs):\n    '''Over 100 000 of famous quotes, 100 categories and 10K authors\n    \n    \n\n    :param integer count:  defaults to 2\n    :param string category:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_famous_quotes_get_random_quotes',kwargs)\n        "
    },
    "rapi_famous_quotes_list_categories": {
        "api_name": "list_categories",
        "category": "Tools",
        "tool_name": "famous_quotes",
        "code": "async def rapi_famous_quotes_list_categories(self,*args,**kwargs):\n    '''Over 100 000 of famous quotes, 100 categories and 10K authors\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_famous_quotes_list_categories',kwargs)\n        "
    },
    "rapi_perf_monitor_metrics_performance_monitor_metrics": {
        "api_name": "performance_monitor_metrics",
        "category": "Tools",
        "tool_name": "perf_monitor_metrics",
        "code": "async def rapi_perf_monitor_metrics_performance_monitor_metrics(self,*args,**kwargs):\n    '''Real-Time Performance Monitoring API for TI Systems\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_perf_monitor_metrics_performance_monitor_metrics',kwargs)\n        "
    },
    "rapi_unit_measurement_conversion_get_a_list_of_all_units": {
        "api_name": "get_a_list_of_all_units",
        "category": "Tools",
        "tool_name": "unit_measurement_conversion",
        "code": "async def rapi_unit_measurement_conversion_get_a_list_of_all_units(self,*args,**kwargs):\n    '''Perform accurate and hassle-free conversions between various measurement units for weight, length, area, volume, speed, fuel, pressure, and temperature with our API. It supports local units and returns both the converted value and abbreviation (if available) for quick and easy integration into your projects.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unit_measurement_conversion_get_a_list_of_all_units',kwargs)\n        "
    },
    "rapi_go_code_compiler_go_versions": {
        "api_name": "go_versions",
        "category": "Tools",
        "tool_name": "go_code_compiler",
        "code": "async def rapi_go_code_compiler_go_versions(self,*args,**kwargs):\n    '''Go Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_go_code_compiler_go_versions',kwargs)\n        "
    },
    "rapi_c99_code_compiler_c99_versions": {
        "api_name": "c99_versions",
        "category": "Tools",
        "tool_name": "c99_code_compiler",
        "code": "async def rapi_c99_code_compiler_c99_versions(self,*args,**kwargs):\n    '''C99 Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_c99_code_compiler_c99_versions',kwargs)\n        "
    },
    "rapi_question_explorer_full_data": {
        "api_name": "full_data",
        "category": "Tools",
        "tool_name": "question_explorer",
        "code": "async def rapi_question_explorer_full_data(self,*args,**kwargs):\n    '''Question Explorer\n    \n    \n\n    :param string keyword:  defaults to email marketing\n    :param string? FullData:  defaults to digital marketing\n    '''\n    return await self._request_rapid_api('rapi_question_explorer_full_data',kwargs)\n        "
    },
    "rapi_question_explorer_data": {
        "api_name": "data",
        "category": "Tools",
        "tool_name": "question_explorer",
        "code": "async def rapi_question_explorer_data(self,*args,**kwargs):\n    '''Question Explorer\n    \n    \n\n    :param string keyword:  defaults to Email marketing\n    '''\n    return await self._request_rapid_api('rapi_question_explorer_data',kwargs)\n        "
    },
    "rapi_bitly_example_sendsms": {
        "api_name": "sendsms",
        "category": "Tools",
        "tool_name": "bitly_example",
        "code": "async def rapi_bitly_example_sendsms(self,*args,**kwargs):\n    '''this a login api\n    \n    \n\n    :param string? msg: \n    :param string? phone: \n    :param string? pwd: \n    :param string? uid: \n    '''\n    return await self._request_rapid_api('rapi_bitly_example_sendsms',kwargs)\n        "
    },
    "rapi_java_code_compiler_java_versions": {
        "api_name": "java_versions",
        "category": "Tools",
        "tool_name": "java_code_compiler",
        "code": "async def rapi_java_code_compiler_java_versions(self,*args,**kwargs):\n    '''Java Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_java_code_compiler_java_versions',kwargs)\n        "
    },
    "rapi_tmail_get_email_id": {
        "api_name": "get_email_id",
        "category": "Tools",
        "tool_name": "tmail",
        "code": "async def rapi_tmail_get_email_id(self,*args,**kwargs):\n    '''Temporary Disposable Email Address | Disposable email  is a service that allows to receive email at a temporary address that self-destructed after a certain time elapses.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tmail_get_email_id',kwargs)\n        "
    },
    "rapi_uptosite_link_shortener_get_long_url": {
        "api_name": "get_long_url",
        "category": "Tools",
        "tool_name": "uptosite_link_shortener",
        "code": "async def rapi_uptosite_link_shortener_get_long_url(self,*args,**kwargs):\n    '''Link Shortener API for developers\n    \n    \n\n    :param string slug:  defaults to ntt-chrome\n    '''\n    return await self._request_rapid_api('rapi_uptosite_link_shortener_get_long_url',kwargs)\n        "
    },
    "rapi_bulk_whois_bulk_whois": {
        "api_name": "bulk_whois",
        "category": "Tools",
        "tool_name": "bulk_whois",
        "code": "async def rapi_bulk_whois_bulk_whois(self,*args,**kwargs):\n    '''Bulk WHOIS API. Parsed to JSON. All TLDs supported.   Online since 2016.\n    \n    \n\n    :param string? ip: IP address. Will get resolved to domain.\n    :param string? format: json: rich, structured json, raw: raw data, split: formatted lines defaults to split\n    :param string? domain: Domain name\n    :param string? domains: Coma separated domain names defaults to foo.com,example.org,google.com\n    '''\n    return await self._request_rapid_api('rapi_bulk_whois_bulk_whois',kwargs)\n        "
    },
    "rapi_token_api_generate": {
        "api_name": "generate",
        "category": "Tools",
        "tool_name": "token_api",
        "code": "async def rapi_token_api_generate(self,*args,**kwargs):\n    '''Generate a new token for Unlimited Language API. Token is only valid for ~5 minuts, so it has to be generated frequently\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_token_api_generate',kwargs)\n        "
    },
    "rapi_qr_code_api_v67_qr_code_image_copy": {
        "api_name": "qr_code_image_copy",
        "category": "Tools",
        "tool_name": "qr_code_api_v67",
        "code": "async def rapi_qr_code_api_v67_qr_code_image_copy(self,*args,**kwargs):\n    '''This API takes a URL or string and returns a QR code image\n    \n    \n\n    :param string url:  defaults to www.duckduckgo.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_api_v67_qr_code_image_copy',kwargs)\n        "
    },
    "rapi_waktu_solat_solat_time": {
        "api_name": "solat_time",
        "category": "Tools",
        "tool_name": "waktu_solat",
        "code": "async def rapi_waktu_solat_solat_time(self,*args,**kwargs):\n    '''Information on prayer times in Malaysia. Sources of information from e-solat.gov.my\n    \n    \n\n    :param string code: zone code, get from API /solat/list defaults to SWK07\n    '''\n    return await self._request_rapid_api('rapi_waktu_solat_solat_time',kwargs)\n        "
    },
    "rapi_waktu_solat_solat_list": {
        "api_name": "solat_list",
        "category": "Tools",
        "tool_name": "waktu_solat",
        "code": "async def rapi_waktu_solat_solat_list(self,*args,**kwargs):\n    '''Information on prayer times in Malaysia. Sources of information from e-solat.gov.my\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_waktu_solat_solat_list',kwargs)\n        "
    },
    "rapi_overnight_policy_rate_opr": {
        "api_name": "opr",
        "category": "Tools",
        "tool_name": "overnight_policy_rate",
        "code": "async def rapi_overnight_policy_rate_opr(self,*args,**kwargs):\n    '''Malaysia Overnight Policy Rate (OPR) decided by the Monetary Policy Committee.\nData source from Bank Negara Malaysia, https://www.bnm.gov.my\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_overnight_policy_rate_opr',kwargs)\n        "
    },
    "rapi_free_url_un_shortener_url": {
        "api_name": "url",
        "category": "Tools",
        "tool_name": "free_url_un_shortener",
        "code": "async def rapi_free_url_un_shortener_url(self,*args,**kwargs):\n    '''Free URL Un-Shortener is a free service to Un-Shorten the URLs created by URL shortening services. \n    \n    \n\n    :param string url: Short url to un short defaults to https://bit.ly/19BiSHW\n    '''\n    return await self._request_rapid_api('rapi_free_url_un_shortener_url',kwargs)\n        "
    },
    "rapi_tvb_qr_code_get_qr_code": {
        "api_name": "get_qr_code",
        "category": "Tools",
        "tool_name": "tvb_qr_code",
        "code": "async def rapi_tvb_qr_code_get_qr_code(self,*args,**kwargs):\n    '''This API takes the URL and returns the image of the QR code.\n    \n    \n\n    :param string? url: \n    '''\n    return await self._request_rapid_api('rapi_tvb_qr_code_get_qr_code',kwargs)\n        "
    },
    "rapi_sql_code_compiler_sql_versions": {
        "api_name": "sql_versions",
        "category": "Tools",
        "tool_name": "sql_code_compiler",
        "code": "async def rapi_sql_code_compiler_sql_versions(self,*args,**kwargs):\n    '''SQL Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sql_code_compiler_sql_versions',kwargs)\n        "
    },
    "rapi_haskell_code_compiler_haskell_versions": {
        "api_name": "haskell_versions",
        "category": "Tools",
        "tool_name": "haskell_code_compiler",
        "code": "async def rapi_haskell_code_compiler_haskell_versions(self,*args,**kwargs):\n    '''Haskell Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_haskell_code_compiler_haskell_versions',kwargs)\n        "
    },
    "rapi_measurement_unit_converter_measurements": {
        "api_name": "measurements",
        "category": "Tools",
        "tool_name": "measurement_unit_converter",
        "code": "async def rapi_measurement_unit_converter_measurements(self,*args,**kwargs):\n    '''Say goodbye to the hassle of unit conversions with our Measurement Unit Converter API.\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_measurement_unit_converter_measurements',kwargs)\n        "
    },
    "rapi_measurement_unit_converter_measurements_detailed": {
        "api_name": "measurements_detailed",
        "category": "Tools",
        "tool_name": "measurement_unit_converter",
        "code": "async def rapi_measurement_unit_converter_measurements_detailed(self,*args,**kwargs):\n    '''Say goodbye to the hassle of unit conversions with our Measurement Unit Converter API.\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_measurement_unit_converter_measurements_detailed',kwargs)\n        "
    },
    "rapi_measurement_unit_converter_measure_units": {
        "api_name": "measure_units",
        "category": "Tools",
        "tool_name": "measurement_unit_converter",
        "code": "async def rapi_measurement_unit_converter_measure_units(self,*args,**kwargs):\n    '''Say goodbye to the hassle of unit conversions with our Measurement Unit Converter API.\n\n\n    \n    \n\n    :param string measure:  defaults to length\n    '''\n    return await self._request_rapid_api('rapi_measurement_unit_converter_measure_units',kwargs)\n        "
    },
    "rapi_proxy_proxy": {
        "api_name": "proxy",
        "category": "Tools",
        "tool_name": "proxy",
        "code": "async def rapi_proxy_proxy(self,*args,**kwargs):\n    '''Simple rotating proxy\n    \n    \n\n    :param string url: The url you want to visit defaults to http://api.ipify.org/\n    :param string? headers: The headers you want to set. Make sure they are in json format.\n    :param string? query: The query you want to set. Make sure they are in json format.\n    '''\n    return await self._request_rapid_api('rapi_proxy_proxy',kwargs)\n        "
    },
    "rapi_judge0_extra_ce_get_configuration": {
        "api_name": "get_configuration",
        "category": "Tools",
        "tool_name": "judge0_extra_ce",
        "code": "async def rapi_judge0_extra_ce_get_configuration(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_extra_ce_get_configuration',kwargs)\n        "
    },
    "rapi_judge0_extra_ce_get_languages": {
        "api_name": "get_languages",
        "category": "Tools",
        "tool_name": "judge0_extra_ce",
        "code": "async def rapi_judge0_extra_ce_get_languages(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_extra_ce_get_languages',kwargs)\n        "
    },
    "rapi_judge0_extra_ce_get_statuses": {
        "api_name": "get_statuses",
        "category": "Tools",
        "tool_name": "judge0_extra_ce",
        "code": "async def rapi_judge0_extra_ce_get_statuses(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_extra_ce_get_statuses',kwargs)\n        "
    },
    "rapi_simpleecho_echo": {
        "api_name": "echo",
        "category": "Tools",
        "tool_name": "simpleecho",
        "code": "async def rapi_simpleecho_echo(self,*args,**kwargs):\n    '''Return the request as the response.\n    \n    \n\n    :param string? query2:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_simpleecho_echo',kwargs)\n        "
    },
    "rapi_url_content_extractor_get_trending": {
        "api_name": "get_trending",
        "category": "Tools",
        "tool_name": "url_content_extractor",
        "code": "async def rapi_url_content_extractor_get_trending(self,*args,**kwargs):\n    '''Provide a URL and get the content in return\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_url_content_extractor_get_trending',kwargs)\n        "
    },
    "rapi_proxy_checker_retrieve_proxy_information": {
        "api_name": "retrieve_proxy_information",
        "category": "Tools",
        "tool_name": "proxy_checker",
        "code": "async def rapi_proxy_checker_retrieve_proxy_information(self,*args,**kwargs):\n    '''An easy tool to test proxy whether it's online, anonymous, is it HTTP, HTTPS or both, to get proxy performance timings.\n    \n    \n\n    :param string id: **User Request ID** - received from the response of sending a proxy for checking. defaults to 6416ab3d3c01efbe45e97675\n    '''\n    return await self._request_rapid_api('rapi_proxy_checker_retrieve_proxy_information',kwargs)\n        "
    },
    "rapi_world_clock_coordinated_universal_time": {
        "api_name": "coordinated_universal_time",
        "category": "Tools",
        "tool_name": "world_clock",
        "code": "async def rapi_world_clock_coordinated_universal_time(self,*args,**kwargs):\n    '''An API to get the current time. REST Services that will return current date/time in JSON for any registered time zone.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_clock_coordinated_universal_time',kwargs)\n        "
    },
    "rapi_world_clock_get_current_time_within_a_timezone": {
        "api_name": "get_current_time_within_a_timezone",
        "category": "Tools",
        "tool_name": "world_clock",
        "code": "async def rapi_world_clock_get_current_time_within_a_timezone(self,*args,**kwargs):\n    '''An API to get the current time. REST Services that will return current date/time in JSON for any registered time zone.\n    \n    \n\n    :param string time_zone: Timezone (see: https://www.timeanddate.com/time/zones/) defaults to est\n    '''\n    return await self._request_rapid_api('rapi_world_clock_get_current_time_within_a_timezone',kwargs)\n        "
    },
    "rapi_world_clock_jsonp": {
        "api_name": "jsonp",
        "category": "Tools",
        "tool_name": "world_clock",
        "code": "async def rapi_world_clock_jsonp(self,*args,**kwargs):\n    '''An API to get the current time. REST Services that will return current date/time in JSON for any registered time zone.\n    \n    \n\n    :param string time_zone: timezone (see:https://en.wikipedia.org/wiki/List_of_time_zone_abbreviations) defaults to cet\n    :param string callback:  defaults to callback\n    '''\n    return await self._request_rapid_api('rapi_world_clock_jsonp',kwargs)\n        "
    },
    "rapi_color_to_picture_api_color_to_picture": {
        "api_name": "color_to_picture",
        "category": "Tools",
        "tool_name": "color_to_picture_api",
        "code": "async def rapi_color_to_picture_api_color_to_picture(self,*args,**kwargs):\n    '''Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color\n    \n    \n\n    :param string? height:  defaults to 200\n    :param string? color:  defaults to ff0000\n    :param string? width:  defaults to 200\n    :param string? mode:  defaults to RGB\n    '''\n    return await self._request_rapid_api('rapi_color_to_picture_api_color_to_picture',kwargs)\n        "
    },
    "rapi_domain_name_search_whois": {
        "api_name": "whois",
        "category": "Tools",
        "tool_name": "domain_name_search",
        "code": "async def rapi_domain_name_search_whois(self,*args,**kwargs):\n    '''Search for domain names, including domain availability, validation, expiration, prices, WHOIS, quality aspects and more data available on https://domains.google.\n    \n    \n\n    :param string domain: Domain for which to perform WHOIS. defaults to rapidapi.com\n    '''\n    return await self._request_rapid_api('rapi_domain_name_search_whois',kwargs)\n        "
    },
    "rapi_domain_name_search_domain_availability": {
        "api_name": "domain_availability",
        "category": "Tools",
        "tool_name": "domain_name_search",
        "code": "async def rapi_domain_name_search_domain_availability(self,*args,**kwargs):\n    '''Search for domain names, including domain availability, validation, expiration, prices, WHOIS, quality aspects and more data available on https://domains.google.\n    \n    \n\n    :param string domain: Domain for which to get availability info. defaults to example-domain-123.com\n    :param string? currency: Set the currency for domain pricing. Specified as ISO 4217 currency code (e.g. GBP), For the full list of currency codes, see: [ISO 4217 currency codes](https://www.iban.com/currency-codes). defaults to USD\n    '''\n    return await self._request_rapid_api('rapi_domain_name_search_domain_availability',kwargs)\n        "
    },
    "rapi_ytstream_download_youtube_videos_download_stream": {
        "api_name": "download_stream",
        "category": "Tools",
        "tool_name": "ytstream_download_youtube_videos",
        "code": "async def rapi_ytstream_download_youtube_videos_download_stream(self,*args,**kwargs):\n    '''Download or stream YouTube Videos/MP4.\n    \n    \n\n    :param string id: Youtube Video Id. defaults to UxxajLWwzqY\n    :param string? cgeo: Country code in ISO 3166 format of the end user.\n    '''\n    return await self._request_rapid_api('rapi_ytstream_download_youtube_videos_download_stream',kwargs)\n        "
    },
    "rapi_youtube_mp3_download_get_mp3": {
        "api_name": "get_mp3",
        "category": "Tools",
        "tool_name": "youtube_mp3_download",
        "code": "async def rapi_youtube_mp3_download_get_mp3(self,*args,**kwargs):\n    '''Convert Youtube Videos to MP3. Forever Free Version.\n    \n    \n\n    :param string id: Youtube Video Id defaults to UxxajLWwzqY\n    :param string? return: Enables back button in the download page to enable the user to come back to the source site.\nValue must be `1`\n    '''\n    return await self._request_rapid_api('rapi_youtube_mp3_download_get_mp3',kwargs)\n        "
    },
    "rapi_text_to_speech_get_language": {
        "api_name": "get_language",
        "category": "Tools",
        "tool_name": "text_to_speech",
        "code": "async def rapi_text_to_speech_get_language(self,*args,**kwargs):\n    '''A text to speech endpoint to steam output\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_get_language',kwargs)\n        "
    },
    "rapi_text_to_speech_send_text_to_speech_stream": {
        "api_name": "send_text_to_speech_stream",
        "category": "Tools",
        "tool_name": "text_to_speech",
        "code": "async def rapi_text_to_speech_send_text_to_speech_stream(self,*args,**kwargs):\n    '''A text to speech endpoint to steam output\n    \n    \n\n    :param string text:  defaults to hello world\n    :param string? lang: default is en-us\nlist can be get by /speech/lang\n\ne.g. zh-tw defaults to en-us\n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_send_text_to_speech_stream',kwargs)\n        "
    },
    "rapi_cpp_17_code_compiler_c_17_versions": {
        "api_name": "c_17_versions",
        "category": "Tools",
        "tool_name": "cpp_17_code_compiler",
        "code": "async def rapi_cpp_17_code_compiler_c_17_versions(self,*args,**kwargs):\n    '''C++ 17 Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cpp_17_code_compiler_c_17_versions',kwargs)\n        "
    },
    "rapi_explorarc_s_password_generation_api_password_generation": {
        "api_name": "password_generation",
        "category": "Tools",
        "tool_name": "explorarc_s_password_generation_api",
        "code": "async def rapi_explorarc_s_password_generation_api_password_generation(self,*args,**kwargs):\n    '''The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords\n    \n    \n\n    :param integer? length:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_explorarc_s_password_generation_api_password_generation',kwargs)\n        "
    },
    "rapi_web_scrapper_go": {
        "api_name": "go",
        "category": "Tools",
        "tool_name": "web_scrapper",
        "code": "async def rapi_web_scrapper_go(self,*args,**kwargs):\n    '''HTML Web Scrapper & Parser. \nFetch HTML page & return exctracted data by selectors (if specified). \n\nDefinitions: \n   - url: https://wikipedia.org (required)\n   - s: .class1, class2, div, a, img, #id\n\n\n\n    \n    \n\n    :param string url:  defaults to https://wikipedia.org\n    :param string? s:  defaults to .jsl10n\n    '''\n    return await self._request_rapid_api('rapi_web_scrapper_go',kwargs)\n        "
    },
    "rapi_objective_c_code_compiler_objective_c_versions": {
        "api_name": "objective_c_versions",
        "category": "Tools",
        "tool_name": "objective_c_code_compiler",
        "code": "async def rapi_objective_c_code_compiler_objective_c_versions(self,*args,**kwargs):\n    '''Objective-C Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_objective_c_code_compiler_objective_c_versions',kwargs)\n        "
    },
    "rapi_seo_checker_summary": {
        "api_name": "summary",
        "category": "Tools",
        "tool_name": "seo_checker",
        "code": "async def rapi_seo_checker_summary(self,*args,**kwargs):\n    '''SEO Website Checker, Extraction and Analyze/Analytic Tools Report\nI'm on telegram chat me if there a problem/request\nhttps://t.me/iiyann25\n    \n    \n\n    :param string url:  defaults to https://google.com\n    '''\n    return await self._request_rapid_api('rapi_seo_checker_summary',kwargs)\n        "
    },
    "rapi_arabiccountrylist_countrylist": {
        "api_name": "countrylist",
        "category": "Tools",
        "tool_name": "arabiccountrylist",
        "code": "async def rapi_arabiccountrylist_countrylist(self,*args,**kwargs):\n    '''Country list in Arabic\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabiccountrylist_countrylist',kwargs)\n        "
    },
    "rapi_ephemeral_proxies_check_datacenter_proxies_service_status": {
        "api_name": "check_datacenter_proxies_service_status",
        "category": "Tools",
        "tool_name": "ephemeral_proxies",
        "code": "async def rapi_ephemeral_proxies_check_datacenter_proxies_service_status(self,*args,**kwargs):\n    '''An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.\n* Each request to this API service will provide you with a new proxy available for 30 mins.\n* Proxies are constantly monitored to ensure their health.\n* You can extend the allocation time of a datacenter proxy by making successive calls to the API, with ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ephemeral_proxies_check_datacenter_proxies_service_status',kwargs)\n        "
    },
    "rapi_ephemeral_proxies_obtain_a_new_datacenter_proxy": {
        "api_name": "obtain_a_new_datacenter_proxy",
        "category": "Tools",
        "tool_name": "ephemeral_proxies",
        "code": "async def rapi_ephemeral_proxies_obtain_a_new_datacenter_proxy(self,*args,**kwargs):\n    '''An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.\n* Each request to this API service will provide you with a new proxy available for 30 mins.\n* Proxies are constantly monitored to ensure their health.\n* You can extend the allocation time of a datacenter proxy by making successive calls to the API, with ...\n    \n    \n\n    :param string? whitelist_ip: The proxy that this endpoint returns will allow connections from the source ip that is making this API call.\nAdditionally, you can allow an extra ip to connect to the proxy by setting this parameter to the ip that you would like to whitelist.\nThe list of ips that the proxy has whitelisted is returned in the API response.\n\n    :param string? countries: List of countries, separate it by comma, that you would like the proxies to be located.\nExample: GB,US,PL,RU\n\n    '''\n    return await self._request_rapid_api('rapi_ephemeral_proxies_obtain_a_new_datacenter_proxy',kwargs)\n        "
    },
    "rapi_ephemeral_proxies_get_user_s_traffic_balance": {
        "api_name": "get_user_s_traffic_balance",
        "category": "Tools",
        "tool_name": "ephemeral_proxies",
        "code": "async def rapi_ephemeral_proxies_get_user_s_traffic_balance(self,*args,**kwargs):\n    '''An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.\n* Each request to this API service will provide you with a new proxy available for 30 mins.\n* Proxies are constantly monitored to ensure their health.\n* You can extend the allocation time of a datacenter proxy by making successive calls to the API, with ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ephemeral_proxies_get_user_s_traffic_balance',kwargs)\n        "
    },
    "rapi_ephemeral_proxies_obtain_a_new_residential_proxy": {
        "api_name": "obtain_a_new_residential_proxy",
        "category": "Tools",
        "tool_name": "ephemeral_proxies",
        "code": "async def rapi_ephemeral_proxies_obtain_a_new_residential_proxy(self,*args,**kwargs):\n    '''An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.\n* Each request to this API service will provide you with a new proxy available for 30 mins.\n* Proxies are constantly monitored to ensure their health.\n* You can extend the allocation time of a datacenter proxy by making successive calls to the API, with ...\n    \n    \n\n    :param string? countries: List of countries, separate it by comma, that you would like the proxies to be located.\nExample: GB,US,PL,RU\n\n    :param string? whitelist_ip: The proxy that this endpoint returns will allow connections from the source ip that is making this API call.\nAdditionally, you can allow an extra ip to connect to the proxy by setting this parameter to the ip that you would like to whitelist.\nThe list of ips that the proxy has whitelisted is returned in the API response.\n\n    '''\n    return await self._request_rapid_api('rapi_ephemeral_proxies_obtain_a_new_residential_proxy',kwargs)\n        "
    },
    "rapi_ephemeral_proxies_check_residential_proxies_service_status": {
        "api_name": "check_residential_proxies_service_status",
        "category": "Tools",
        "tool_name": "ephemeral_proxies",
        "code": "async def rapi_ephemeral_proxies_check_residential_proxies_service_status(self,*args,**kwargs):\n    '''An API service to obtain **datacenter and residential proxies.**\n\n###### Features:\n* This service contains pools of **stable and high-quality proxies** that automatically rotate to ensure that you get a new different proxy with each API call.\n* Each request to this API service will provide you with a new proxy available for 30 mins.\n* Proxies are constantly monitored to ensure their health.\n* You can extend the allocation time of a datacenter proxy by making successive calls to the API, with ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ephemeral_proxies_check_residential_proxies_service_status',kwargs)\n        "
    },
    "rapi_email_verifier_verify_email": {
        "api_name": "verify_email",
        "category": "Tools",
        "tool_name": "email_verifier",
        "code": "async def rapi_email_verifier_verify_email(self,*args,**kwargs):\n    '''A simple API to verify email addresses in making sure they are valid and real, for ensuring you are sending emails to actual people!\n    \n    \n\n    :param string email:  defaults to abc1@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_email_verifier_verify_email',kwargs)\n        "
    },
    "rapi_text_to_speech_v2_text_to_speech": {
        "api_name": "text_to_speech",
        "category": "Tools",
        "tool_name": "text_to_speech_v2",
        "code": "async def rapi_text_to_speech_v2_text_to_speech(self,*args,**kwargs):\n    '''Text to Speech Voice Reader\n    \n    \n\n    :param string lang: Speech Language defaults to en\n    :param string? speed: between `0.1` and `1.0` defaults to 0.5\n    :param string? text: Text defaults to How are you?\n    :param string? ssml: SSML\n\n*At least one of the `text` or `ssml` parameters is required.*\n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_v2_text_to_speech',kwargs)\n        "
    },
    "rapi_visual_basic_code_compiler_visual_basic_versions": {
        "api_name": "visual_basic_versions",
        "category": "Tools",
        "tool_name": "visual_basic_code_compiler",
        "code": "async def rapi_visual_basic_code_compiler_visual_basic_versions(self,*args,**kwargs):\n    '''Visual Basic Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_visual_basic_code_compiler_visual_basic_versions',kwargs)\n        "
    },
    "rapi_seo_keyword_research_global_result_single": {
        "api_name": "global_result_single",
        "category": "Tools",
        "tool_name": "seo_keyword_research",
        "code": "async def rapi_seo_keyword_research_global_result_single(self,*args,**kwargs):\n    '''Keyword Research helps to analyze keywords and related keywords competitions , search volume (google) and CPC. For private plans, custom plans, custom billing contact : info@getecz.com\n    \n    \n\n    :param string keyword:  defaults to email marketing\n    '''\n    return await self._request_rapid_api('rapi_seo_keyword_research_global_result_single',kwargs)\n        "
    },
    "rapi_bitly_shorten": {
        "api_name": "shorten",
        "category": "Tools",
        "tool_name": "bitly",
        "code": "async def rapi_bitly_shorten(self,*args,**kwargs):\n    '''Shortens urls\n    \n    \n\n    :param string longUrl: a long URL to be shortened (example: http://betaworks.com/). defaults to http://www.mashape.com\n    '''\n    return await self._request_rapid_api('rapi_bitly_shorten',kwargs)\n        "
    },
    "rapi_anchor_data_scrapper_get_podcast_episodes": {
        "api_name": "get_podcast_episodes",
        "category": "Tools",
        "tool_name": "anchor_data_scrapper",
        "code": "async def rapi_anchor_data_scrapper_get_podcast_episodes(self,*args,**kwargs):\n    '''Anchor Data Scrapper is the easiest way to get access to podcasts from a specific user in a JSON format.\n    \n    \n\n    :param string username: The username of the anchor podcase user for example:\nhttps://anchor.fm/**financialfreedomtribe** defaults to financialfreedomtribe\n    '''\n    return await self._request_rapid_api('rapi_anchor_data_scrapper_get_podcast_episodes',kwargs)\n        "
    },
    "rapi_teamriverbubbles_random_utilities_get_skin_from_uuid": {
        "api_name": "get_skin_from_uuid",
        "category": "Tools",
        "tool_name": "teamriverbubbles_random_utilities",
        "code": "async def rapi_teamriverbubbles_random_utilities_get_skin_from_uuid(self,*args,**kwargs):\n    '''random utilities you may use\n    \n    \n\n    :param string uuid: \n    '''\n    return await self._request_rapid_api('rapi_teamriverbubbles_random_utilities_get_skin_from_uuid',kwargs)\n        "
    },
    "rapi_keyword_tool_v2_langlist": {
        "api_name": "langlist",
        "category": "Tools",
        "tool_name": "keyword_tool_v2",
        "code": "async def rapi_keyword_tool_v2_langlist(self,*args,**kwargs):\n    '''Keyword Tool helps to analyze keywords and related keywords competitions, search volume, and CPC. Mostly useful for digital marketers and related platforms\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_keyword_tool_v2_langlist',kwargs)\n        "
    },
    "rapi_cpp_14_code_compiler_c_14_versions": {
        "api_name": "c_14_versions",
        "category": "Tools",
        "tool_name": "cpp_14_code_compiler",
        "code": "async def rapi_cpp_14_code_compiler_c_14_versions(self,*args,**kwargs):\n    '''C++ 14 Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cpp_14_code_compiler_c_14_versions',kwargs)\n        "
    },
    "rapi_avatar_io_modern_avatar_placeholder_api_generate_avatar": {
        "api_name": "generate_avatar",
        "category": "Tools",
        "tool_name": "avatar_io_modern_avatar_placeholder_api",
        "code": "async def rapi_avatar_io_modern_avatar_placeholder_api_generate_avatar(self,*args,**kwargs):\n    '''Generate clean and modern avatar placeholders for your application\n    \n    \n\n    :param string? randomizer: The default browser behavior is to cache responses that return from the same endpoint.\nIf your images are all returning the same, pass this param with ANY value to ensure you bypass this default behaviour and get random images for every request. defaults to anything\n    :param string? name: Specify the name for the avatar. Only the first character of this parameter will be shown in the avatar. defaults to John\n    :param string? bg-color: Specify a HEX CODE color for the background of the avatar. \nDo not include the # of the hex code as it will be ignored on api request. defaults to FF2029\n    :param string? text-color: Specify a HEX CODE color for the letter on the avatar. \nDo not include the # of the hex code as it will be ignored on api request. defaults to 000000\n    '''\n    return await self._request_rapid_api('rapi_avatar_io_modern_avatar_placeholder_api_generate_avatar',kwargs)\n        "
    },
    "rapi_youtube_mp3_get_mp3": {
        "api_name": "get_mp3",
        "category": "Tools",
        "tool_name": "youtube_mp3",
        "code": "async def rapi_youtube_mp3_get_mp3(self,*args,**kwargs):\n    '''Convert Youtube Videos to MP3\n    \n    \n\n    :param string id: Quota cost will apply according to the length of the mp3 file.\nQuota is calculated as follows:\nif length <= 30 then 1\nif 30 < length <= 60 then 2\nif 60 < length <= 90 then 3\nif 90 < length <= 120 then 4\nif 120 < length <= 150 then 5\nif 150 < length <= 180 then 6 defaults to UxxajLWwzqY\n    :param integer? cut: Cut the mp3 according to the provided sStart and sEnd parameters\nThe value must be provided as 1\nThe quota Cost is +1.\n    :param string? sStart: Starting point for cutting the mp3.\nFormat must be HH:MM:SS\n\n    :param string? sEnd: End point for cutting the mp3.\nFormat must be HH:MM:SS\n\n    '''\n    return await self._request_rapid_api('rapi_youtube_mp3_get_mp3',kwargs)\n        "
    },
    "rapi_unit_converter_transform_units_using_the_get_method": {
        "api_name": "transform_units_using_the_get_method",
        "category": "Tools",
        "tool_name": "unit_converter",
        "code": "async def rapi_unit_converter_transform_units_using_the_get_method(self,*args,**kwargs):\n    '''Unit Converter API allows developers to easily integrate unit conversion functionality into their applications. It supports a wide range of units across different categories\n    \n    \n\n    :param string? to:  defaults to Square mile\n    :param string? type:  defaults to area\n    :param string? from:  defaults to Square kilometer\n    :param integer? value:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_unit_converter_transform_units_using_the_get_method',kwargs)\n        "
    },
    "rapi_unit_converter_info": {
        "api_name": "info",
        "category": "Tools",
        "tool_name": "unit_converter",
        "code": "async def rapi_unit_converter_info(self,*args,**kwargs):\n    '''Unit Converter API allows developers to easily integrate unit conversion functionality into their applications. It supports a wide range of units across different categories\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unit_converter_info',kwargs)\n        "
    },
    "rapi_guid_generator_tool_multiple_guids": {
        "api_name": "multiple_guids",
        "category": "Tools",
        "tool_name": "guid_generator_tool",
        "code": "async def rapi_guid_generator_tool_multiple_guids(self,*args,**kwargs):\n    '''Efficient Guid generator, fast and flexible.\n    \n    \n\n    :param string number:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_guid_generator_tool_multiple_guids',kwargs)\n        "
    },
    "rapi_qr_code_generator_pro_generate_qr_code": {
        "api_name": "generate_qr_code",
        "category": "Tools",
        "tool_name": "qr_code_generator_pro",
        "code": "async def rapi_qr_code_generator_pro_generate_qr_code(self,*args,**kwargs):\n    '''Easily generate QR codes for urls, and receive a downloadable png image file\n    \n    \n\n    :param string? url:  defaults to www.example.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_generator_pro_generate_qr_code',kwargs)\n        "
    },
    "rapi_calendar_converter_convert_date": {
        "api_name": "convert_date",
        "category": "Tools",
        "tool_name": "calendar_converter",
        "code": "async def rapi_calendar_converter_convert_date(self,*args,**kwargs):\n    '''Converts dates between different civil, religious, and historical calendars\n    \n    \n\n    :param ENUM to: The calendar to convert the specified date.\n\nPossible values are:\n\n- Gregorian\n- Julian\n- FrenchRepublican\n- Maya\n- Islamic\n- Hebrew\n    :param string? date: A date inyyyy-mm-ddformat. defaults to 1986-09-03\n    :param ENUM? from: \n    '''\n    return await self._request_rapid_api('rapi_calendar_converter_convert_date',kwargs)\n        "
    },
    "rapi_qr_code_api_updated_qr_endpoint": {
        "api_name": "qr_endpoint",
        "category": "Tools",
        "tool_name": "qr_code_api_updated",
        "code": "async def rapi_qr_code_api_updated_qr_endpoint(self,*args,**kwargs):\n    '''QR Code API updated version for any website\nmore to come in such format\n    \n    \n\n    :param string? url:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_api_updated_qr_endpoint',kwargs)\n        "
    },
    "rapi_simple_qr_code_generator_get": {
        "api_name": "get",
        "category": "Tools",
        "tool_name": "simple_qr_code_generator",
        "code": "async def rapi_simple_qr_code_generator_get(self,*args,**kwargs):\n    '''Fast and simple QR Code Generator\n    \n    \n\n    :param string link:  defaults to https://rapidapi.com\n    '''\n    return await self._request_rapid_api('rapi_simple_qr_code_generator_get',kwargs)\n        "
    },
    "rapi_colorme_specificcolorset": {
        "api_name": "specificcolorset",
        "category": "Tools",
        "tool_name": "colorme",
        "code": "async def rapi_colorme_specificcolorset(self,*args,**kwargs):\n    '''Get some colors either randomly selected or based on your input base color\n    \n    \n\n    :param string colorname:  defaults to yellow\n    '''\n    return await self._request_rapid_api('rapi_colorme_specificcolorset',kwargs)\n        "
    },
    "rapi_colorme_randomcolorset": {
        "api_name": "randomcolorset",
        "category": "Tools",
        "tool_name": "colorme",
        "code": "async def rapi_colorme_randomcolorset(self,*args,**kwargs):\n    '''Get some colors either randomly selected or based on your input base color\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_colorme_randomcolorset',kwargs)\n        "
    },
    "rapi_all_purpose_complex_converter_get_languages": {
        "api_name": "get_languages",
        "category": "Tools",
        "tool_name": "all_purpose_complex_converter",
        "code": "async def rapi_all_purpose_complex_converter_get_languages(self,*args,**kwargs):\n    '''Convert numbers to words, text to speech, numbers to speech, speech to text and much more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_all_purpose_complex_converter_get_languages',kwargs)\n        "
    },
    "rapi_qr_code_generator_generate_advance_direct_image": {
        "api_name": "generate_advance_direct_image",
        "category": "Tools",
        "tool_name": "qr_code_generator",
        "code": "async def rapi_qr_code_generator_generate_advance_direct_image(self,*args,**kwargs):\n    '''QR code generator API. Dynamically generate QR codes and get an image in multiple formats.\n    \n    \n\n    :param string data:  defaults to 1234\n    :param string? foreground_color:  defaults to FF2400\n    :param string? background_color:  defaults to 00DBFF\n    :param integer? size:  defaults to 500\n    :param integer? margin:  defaults to 10\n    :param string? label:  defaults to My label\n    :param integer? label_size:  defaults to 20\n    :param string? label_alignment:  defaults to center\n    '''\n    return await self._request_rapid_api('rapi_qr_code_generator_generate_advance_direct_image',kwargs)\n        "
    },
    "rapi_qr_code_generator_generate_basic_direct_image": {
        "api_name": "generate_basic_direct_image",
        "category": "Tools",
        "tool_name": "qr_code_generator",
        "code": "async def rapi_qr_code_generator_generate_basic_direct_image(self,*args,**kwargs):\n    '''QR code generator API. Dynamically generate QR codes and get an image in multiple formats.\n    \n    \n\n    :param string data:  defaults to 1234\n    :param integer? size:  defaults to 500\n    '''\n    return await self._request_rapid_api('rapi_qr_code_generator_generate_basic_direct_image',kwargs)\n        "
    },
    "rapi_go_qr_code_link_to_qrcode_qr_code_endpoint": {
        "api_name": "qr_code_endpoint",
        "category": "Tools",
        "tool_name": "go_qr_code_link_to_qrcode",
        "code": "async def rapi_go_qr_code_link_to_qrcode_qr_code_endpoint(self,*args,**kwargs):\n    '''Quickly and easily generate QR code images with our API. Simply provide a link address and our API will return a downloadable PNG image of the QR code. Perfect for use in print materials, on business cards, or in advertising campaigns\n    \n    \n\n    :param string? url: \n    '''\n    return await self._request_rapid_api('rapi_go_qr_code_link_to_qrcode_qr_code_endpoint',kwargs)\n        "
    },
    "rapi_domain_checker_api_checker": {
        "api_name": "checker",
        "category": "Tools",
        "tool_name": "domain_checker_api",
        "code": "async def rapi_domain_checker_api_checker(self,*args,**kwargs):\n    '''The Domain Checker API allows users to retrieve detailed information about a specific domain name. With this API, developers, businesses, and individuals can access valuable data such as the domain's registrar information and registrant contact details.\n\nBy making use of the Domain Checker API, users can obtain the following information related to a domain:\n\nRegistrar Info: This includes the name of the domain registrar, the WHOIS server responsible for providing domain registration informati...\n    \n    \n\n    :param string url:  defaults to https://rapidapi.com/\n    '''\n    return await self._request_rapid_api('rapi_domain_checker_api_checker',kwargs)\n        "
    },
    "rapi_measurement_units_converter_measurements": {
        "api_name": "measurements",
        "category": "Tools",
        "tool_name": "measurement_units_converter",
        "code": "async def rapi_measurement_units_converter_measurements(self,*args,**kwargs):\n    '''Easily and quickly convert all types of measurement units using the API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_measurement_units_converter_measurements',kwargs)\n        "
    },
    "rapi_wayback_machine_availability": {
        "api_name": "availability",
        "category": "Tools",
        "tool_name": "wayback_machine",
        "code": "async def rapi_wayback_machine_availability(self,*args,**kwargs):\n    '''The Internet Archive Wayback Machine supports a number of different APIs to make it easier for developers to retrieve information about Wayback capture data.\n    \n    \n\n    :param string url:  defaults to http://mashape.com\n    :param string? timestamp: timestamp is the timestamp to look up in Wayback. If not specified, the most recenty available capture in Wayback is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss) defaults to 20090101\n    :param string? callback: callback is an optional callback which may be specified to produce a JSONP response.\n    '''\n    return await self._request_rapid_api('rapi_wayback_machine_availability',kwargs)\n        "
    },
    "rapi_uuid_generator_v2_generate_uuid": {
        "api_name": "generate_uuid",
        "category": "Tools",
        "tool_name": "uuid_generator_v2",
        "code": "async def rapi_uuid_generator_v2_generate_uuid(self,*args,**kwargs):\n    '''Why do it yourself?\n    \n    \n\n    :param string? quantity: Used to determine how many UUIDs you want in the response. Maximum of 50 uuids per request. defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_uuid_generator_v2_generate_uuid',kwargs)\n        "
    },
    "rapi_bar_qr_code_generator_download": {
        "api_name": "download",
        "category": "Tools",
        "tool_name": "bar_qr_code_generator",
        "code": "async def rapi_bar_qr_code_generator_download(self,*args,**kwargs):\n    '''Generate barcodes and QR codes.\n    \n    \n\n    :param string type: The type of barcode can be one of qr_code, code_128a, code_128b, code_128c, code_25, code_25_interleaved, code_25_iata, code_39, code_93, gs1_128, ean_13, bookland, ean_8, upc_supplemental, codabar defaults to qr_code\n    :param string data: The data to be encoded defaults to https://www.wynk182.com\n    :param integer? size:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_bar_qr_code_generator_download',kwargs)\n        "
    },
    "rapi_password_generator_api_password_of_length_50": {
        "api_name": "password_of_length_50",
        "category": "Tools",
        "tool_name": "password_generator_api",
        "code": "async def rapi_password_generator_api_password_of_length_50(self,*args,**kwargs):\n    '''This API generate cryptographically random strong password which are nearly impossible to break\n    \n    \n\n    :param string? length:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_password_generator_api_password_of_length_50',kwargs)\n        "
    },
    "rapi_jibber_jabber_sentence": {
        "api_name": "sentence",
        "category": "Tools",
        "tool_name": "jibber_jabber",
        "code": "async def rapi_jibber_jabber_sentence(self,*args,**kwargs):\n    '''Dummy Text Generator\n    \n    \n\n    :param integer? minimumWordLength: \n    :param integer? numberOfWords: \n    :param integer? maximumWordLength: \n    :param integer? wordLength: \n    :param integer? minimumNumberOfWords: \n    :param integer? maximumNumberOfWords: \n    '''\n    return await self._request_rapid_api('rapi_jibber_jabber_sentence',kwargs)\n        "
    },
    "rapi_jibber_jabber_paragraph": {
        "api_name": "paragraph",
        "category": "Tools",
        "tool_name": "jibber_jabber",
        "code": "async def rapi_jibber_jabber_paragraph(self,*args,**kwargs):\n    '''Dummy Text Generator\n    \n    \n\n    :param integer? minimumNumberOfWords: \n    :param integer? wordLength: \n    :param integer? maximumNumberOfWords: \n    :param integer? numberOfSentences: \n    :param integer? minimumNumberOfSentences: \n    :param integer? maximumWordLength: \n    :param integer? maximumNumberOfSentences: \n    :param integer? numberOfWords: \n    :param integer? minimumWordLength: \n    '''\n    return await self._request_rapid_api('rapi_jibber_jabber_paragraph',kwargs)\n        "
    },
    "rapi_jibber_jabber_sentences": {
        "api_name": "sentences",
        "category": "Tools",
        "tool_name": "jibber_jabber",
        "code": "async def rapi_jibber_jabber_sentences(self,*args,**kwargs):\n    '''Dummy Text Generator\n    \n    \n\n    :param integer? maximumNumberOfSentences: \n    :param integer? minimumWordLength: \n    :param integer? minimumNumberOfSentences: \n    :param integer? numberOfSentences: \n    :param integer? maximumNumberOfWords: \n    :param integer? minimumNumberOfWords: \n    :param integer? numberOfWords: \n    :param integer? wordLength: \n    :param integer? maximumWordLength: \n    '''\n    return await self._request_rapid_api('rapi_jibber_jabber_sentences',kwargs)\n        "
    },
    "rapi_qr_code_generator_with_multiple_datatypes_getqrcode": {
        "api_name": "getqrcode",
        "category": "Tools",
        "tool_name": "qr_code_generator_with_multiple_datatypes",
        "code": "async def rapi_qr_code_generator_with_multiple_datatypes_getqrcode(self,*args,**kwargs):\n    '''Our QR code generator API allows you to generate QR codes for various types of data, including text, URLs, phone numbers, SMS messages, and email addresses. The API returns a QR code image in JPG format.\n    \n    \n\n    :param string type: Select one of the QR code formats to generate. url,text,telno,mailto,smsto defaults to url\n    :param string value: Enter value as per your QR code type. Eg: url=https://www.google.com,text=Some text,telno=9142545474,smsto=8542487542 defaults to https://www.google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_generator_with_multiple_datatypes_getqrcode',kwargs)\n        "
    },
    "rapi_joe_rogan_quote_generator_generate_rogan_quote": {
        "api_name": "generate_rogan_quote",
        "category": "Tools",
        "tool_name": "joe_rogan_quote_generator",
        "code": "async def rapi_joe_rogan_quote_generator_generate_rogan_quote(self,*args,**kwargs):\n    '''Get quotes from the man himself\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_joe_rogan_quote_generator_generate_rogan_quote',kwargs)\n        "
    },
    "rapi_temporary_email_domains_list": {
        "api_name": "domains_list",
        "category": "Tools",
        "tool_name": "temporary_email",
        "code": "async def rapi_temporary_email_domains_list(self,*args,**kwargs):\n    '''Temporary Email is a revolutionary service that has made the lives of many people easier. With the increase in the use of email as a primary mode of communication, the problem of spam or unsolicited email has become more prevalent. This unwanted email can be frustrating and time-consuming to sift through, which is why Temporary Email services have gained popularity.\n\nThe fast and easy API for Temporary Email is one such service that enables you to receive email at a temporary address that sel...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_temporary_email_domains_list',kwargs)\n        "
    },
    "rapi_shakespeare_translator_shakespeare": {
        "api_name": "shakespeare",
        "category": "Tools",
        "tool_name": "shakespeare_translator",
        "code": "async def rapi_shakespeare_translator_shakespeare(self,*args,**kwargs):\n    '''Convert your modern day English phrases into Shakespeare style old English. Thou shalt try this API!\n    \n    \n\n    :param string text: Text to convert to Shakespeare style English. defaults to You asked Mr. Weasely to do magic!\n    '''\n    return await self._request_rapid_api('rapi_shakespeare_translator_shakespeare',kwargs)\n        "
    },
    "rapi_wikipedia_infobox_infobox": {
        "api_name": "infobox",
        "category": "Tools",
        "tool_name": "wikipedia_infobox",
        "code": "async def rapi_wikipedia_infobox_infobox(self,*args,**kwargs):\n    '''An Api to serve the infoboxes that accompanies so many wikipedia entries.\nUse it for learning, use it for funfacts, use it for gaining knowledge. \n\n    \n    \n\n    :param string wikiurl:  defaults to https://en.wikipedia.org/wiki/James_Bond\n    :param boolean? withname:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_wikipedia_infobox_infobox',kwargs)\n        "
    },
    "rapi_c_sharp_code_compiler_c_versions": {
        "api_name": "c_versions",
        "category": "Tools",
        "tool_name": "c_sharp_code_compiler",
        "code": "async def rapi_c_sharp_code_compiler_c_versions(self,*args,**kwargs):\n    '''C# Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_c_sharp_code_compiler_c_versions',kwargs)\n        "
    },
    "rapi_qr_code_generator_v5_qr_code": {
        "api_name": "qr_code",
        "category": "Tools",
        "tool_name": "qr_code_generator_v5",
        "code": "async def rapi_qr_code_generator_v5_qr_code(self,*args,**kwargs):\n    '''Conver string to qr\n    \n    \n\n    :param string url: \n    '''\n    return await self._request_rapid_api('rapi_qr_code_generator_v5_qr_code',kwargs)\n        "
    },
    "rapi_captcha_generate_captcha": {
        "api_name": "generate_captcha",
        "category": "Tools",
        "tool_name": "captcha",
        "code": "async def rapi_captcha_generate_captcha(self,*args,**kwargs):\n    '''Feeling nostalgic? Generate the same old alphanumeric captchas.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_captcha_generate_captcha',kwargs)\n        "
    },
    "rapi_text2image_text_to_image": {
        "api_name": "text_to_image",
        "category": "Tools",
        "tool_name": "text2image",
        "code": "async def rapi_text2image_text_to_image(self,*args,**kwargs):\n    '''Generate images using SOTA text 2 image model.\n    \n    \n\n    :param string text:  defaults to Daring treasure hunter, map and compass, standing in desolate desert, adventurous, detailed, high detail, portrait\n    :param string? style: preset style, should be in this list:\n'3d-model',\n        'analog-film',\n        'anime',\n        'cinematic',\n        'comic-book',\n        'digital-art',\n        'enhance',\n        'fantasy-art',\n        'isometric',\n        'line-art',\n        'low-poly',\n        'modeling-compound',\n        'neon-punk',\n        'origami',\n        'photographic',\n        'pixel-art',\n        'tile-texture', defaults to enhance\n    '''\n    return await self._request_rapid_api('rapi_text2image_text_to_image',kwargs)\n        "
    },
    "rapi_judge0_ce_about": {
        "api_name": "about",
        "category": "Tools",
        "tool_name": "judge0_ce",
        "code": "async def rapi_judge0_ce_about(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_ce_about',kwargs)\n        "
    },
    "rapi_judge0_ce_get_a_language": {
        "api_name": "get_a_language",
        "category": "Tools",
        "tool_name": "judge0_ce",
        "code": "async def rapi_judge0_ce_get_a_language(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    :param string id:  defaults to 52\n    '''\n    return await self._request_rapid_api('rapi_judge0_ce_get_a_language',kwargs)\n        "
    },
    "rapi_judge0_ce_get_configuration": {
        "api_name": "get_configuration",
        "category": "Tools",
        "tool_name": "judge0_ce",
        "code": "async def rapi_judge0_ce_get_configuration(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_ce_get_configuration',kwargs)\n        "
    },
    "rapi_judge0_ce_get_languages": {
        "api_name": "get_languages",
        "category": "Tools",
        "tool_name": "judge0_ce",
        "code": "async def rapi_judge0_ce_get_languages(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_ce_get_languages',kwargs)\n        "
    },
    "rapi_judge0_ce_get_statuses": {
        "api_name": "get_statuses",
        "category": "Tools",
        "tool_name": "judge0_ce",
        "code": "async def rapi_judge0_ce_get_statuses(self,*args,**kwargs):\n    '''The most advanced open-source online code execution system in the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_judge0_ce_get_statuses',kwargs)\n        "
    },
    "rapi_perl_code_compiler_perl_versions": {
        "api_name": "perl_versions",
        "category": "Tools",
        "tool_name": "perl_code_compiler",
        "code": "async def rapi_perl_code_compiler_perl_versions(self,*args,**kwargs):\n    '''Perl Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_perl_code_compiler_perl_versions',kwargs)\n        "
    },
    "rapi_whois_by_api_ninjas_v1_whois": {
        "api_name": "v1_whois",
        "category": "Tools",
        "tool_name": "whois_by_api_ninjas",
        "code": "async def rapi_whois_by_api_ninjas_v1_whois(self,*args,**kwargs):\n    '''Look up domain registry information using WHOIS protocol for any domain. See more info at https://api-ninjas.com/api/whois.\n    \n    \n\n    :param string domain: valid domain to check. defaults to example.com\n    '''\n    return await self._request_rapid_api('rapi_whois_by_api_ninjas_v1_whois',kwargs)\n        "
    },
    "rapi_free_qr_code_generator_generate_qr_code": {
        "api_name": "generate_qr_code",
        "category": "Tools",
        "tool_name": "free_qr_code_generator",
        "code": "async def rapi_free_qr_code_generator_generate_qr_code(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string data:  defaults to NigeriansOnly.com\n    '''\n    return await self._request_rapid_api('rapi_free_qr_code_generator_generate_qr_code',kwargs)\n        "
    },
    "rapi_qr_code_v8_qr_code": {
        "api_name": "qr_code",
        "category": "Tools",
        "tool_name": "qr_code_v8",
        "code": "async def rapi_qr_code_v8_qr_code(self,*args,**kwargs):\n    '''This API will get website link or string and convert it into QR Code image.\n    \n    \n\n    :param string url:  defaults to https://www.google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_v8_qr_code',kwargs)\n        "
    },
    "rapi_c_code_compiler_c_versions": {
        "api_name": "c_versions",
        "category": "Tools",
        "tool_name": "c_code_compiler",
        "code": "async def rapi_c_code_compiler_c_versions(self,*args,**kwargs):\n    '''C Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_c_code_compiler_c_versions',kwargs)\n        "
    },
    "rapi_text_sentiment_api_sentiment_analysis": {
        "api_name": "sentiment_analysis",
        "category": "Tools",
        "tool_name": "text_sentiment_api",
        "code": "async def rapi_text_sentiment_api_sentiment_analysis(self,*args,**kwargs):\n    '''An API that returns the sentiment and subjectivity of a given text in JSON\n    \n    \n\n    :param string? text:  defaults to Renewable energy in Australia is a growing industry which is good\n    '''\n    return await self._request_rapid_api('rapi_text_sentiment_api_sentiment_analysis',kwargs)\n        "
    },
    "rapi_bulk_whatsapp_validator_about_info_free": {
        "api_name": "about_info_free",
        "category": "Tools",
        "tool_name": "bulk_whatsapp_validator",
        "code": "async def rapi_bulk_whatsapp_validator_about_info_free(self,*args,**kwargs):\n    '''Checks if a number is registered on whatsapp. Adds context to whatsapp profiles.\n    \n    \n\n    :param integer phone: The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning. defaults to 34655719560\n    :param string token: To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`. defaults to ENTER_HERE_A_TEMP_TOKEN\n    '''\n    return await self._request_rapid_api('rapi_bulk_whatsapp_validator_about_info_free',kwargs)\n        "
    },
    "rapi_bulk_whatsapp_validator_validate_wa_number_free": {
        "api_name": "validate_wa_number_free",
        "category": "Tools",
        "tool_name": "bulk_whatsapp_validator",
        "code": "async def rapi_bulk_whatsapp_validator_validate_wa_number_free(self,*args,**kwargs):\n    '''Checks if a number is registered on whatsapp. Adds context to whatsapp profiles.\n    \n    \n\n    :param integer phone: The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning. defaults to 34605797764\n    :param string token: To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`. defaults to ENTER_HERE_A_TEMP_TOKEN\n    '''\n    return await self._request_rapid_api('rapi_bulk_whatsapp_validator_validate_wa_number_free',kwargs)\n        "
    },
    "rapi_cors_proxy_v2_index_get": {
        "api_name": "index_get",
        "category": "Tools",
        "tool_name": "cors_proxy_v2",
        "code": "async def rapi_cors_proxy_v2_index_get(self,*args,**kwargs):\n    '''\ud83d\ude80 Solve CORS errors effortlessly! CORS Proxy: Your ultimate tool for seamless cross-origin resource sharing in frontend development\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cors_proxy_v2_index_get',kwargs)\n        "
    },
    "rapi_qrickit_qr_code_qreator_generate_a_qr_code_image": {
        "api_name": "generate_a_qr_code_image",
        "category": "Tools",
        "tool_name": "qrickit_qr_code_qreator",
        "code": "async def rapi_qrickit_qr_code_qreator_generate_a_qr_code_image(self,*args,**kwargs):\n    '''Dynamically generate QR Codes  (URL, Calendar Events, Contact, Text, Email, etc,) for integration in your own website, applications, and other business or personal usage.\n    \n    \n\n    :param string d: Data for QR Code (e.g. URL, text, vCard data, iCal data, etc.) See documentation at https://qrickit.com/qrickit_apps/qrickit_api.php for instructions. defaults to YourData\n    :param string? logotext: Header Text: logotext=Any text about 15 to 35 characters maximum depending on the size of your QR Code. Color of header text is the same as QR Code color (fgdcolor). In cases where data is very large, text will not fit and should not be used. Text can be urlencoded to avoid problems with special characters. \n    :param string? t: Type of generated image. p = png (default). j = jpg. g = gif.\n    :param string? fgdcolor: QR Code Color: fgdcolor=The color of your QR Code expressed in HTML Hex# (i.e. FFFFFF for white, 000000 for black, etc.). If nothing is specified, the default is black (000000).\n    :param integer? qrsize: Size of image in pixels. Default = 150 (i.e. 150 pixel square) . Min = 80. Max = 1480.\n    :param string? lang: Set to \"jp\" if your optional footer text (addtext) uses Japanese characters. Otherwise leave blank.\n    :param string? e: Error Correction: e=The level of error correction capability. The choices are L (Low) 7%, M (Medium) 15%, Q (Quartile) 25%, and H (High) 30% represented as l, m, q, and h respectively. If nothing is specified, the default error correction level is M (Medium). The higher the error correction means more of the QR Code can still be read if it is damaged (or covered/hidden). However, the higher the error correction, the less data the QR Code can hold.  Usually you don't have to specify anything here unless you have a lot of data to fit in the QR Code. Then you can choose e=L (Low).\n    :param string? addtext: Footer Text: addtext=Any text about 15 to 60 characters maximum depending on the size of your QR Code. In cases where data is very large, text will not fit an d should not be used. Text can be urlencoded to avoid problems with special characters. If using Japanese characters please set \"lang\" parameter to \"jp\" (i.e. lang=jp). Otherwise leave \"lang\" blank.\n    :param string? txtcolor: Footer Text Color: txtcolor=The color of your optional footer text expressed in HTML Hex# (i.e. FFFFFF for white, 000000 for black, etc.). If nothing is specified, the default is black (000000). \n    :param string? bgdcolor: Background Color: bgdcolor=The color of the background expressed in HTML Hex# (i.e. FFFFFF for white, 000000 for black, etc.). If nothing is specified, the default is white (FFFFFF).\n    '''\n    return await self._request_rapid_api('rapi_qrickit_qr_code_qreator_generate_a_qr_code_image',kwargs)\n        "
    },
    "rapi_scanova_qr_code_sms_qr_code": {
        "api_name": "sms_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_sms_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string phone_no:  defaults to 9123456789\n    :param string message:  defaults to Welcome to QR Code World!\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? data_gradient_style:  defaults to None\n    :param string? size:  defaults to m\n    :param string? background_color:  defaults to #FFFFFF\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? data_pattern:  defaults to RECT\n    :param string? error_correction:  defaults to M\n    :param string? eye_color_inner:  defaults to #000000\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_sms_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_email_qr_code": {
        "api_name": "email_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_email_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string address:  defaults to marketing@scanova.io\n    :param string? background_color:  defaults to #FFFFFF\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? error_correction:  defaults to M\n    :param string? size:  defaults to m\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? data_gradient_style:  defaults to None\n    :param string? data_pattern:  defaults to RECT\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? eye_color_inner:  defaults to #000000\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_email_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_phone_call_qr_code": {
        "api_name": "phone_call_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_phone_call_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string number:  defaults to 9123456789\n    :param string? data_gradient_style:  defaults to None\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? error_correction:  defaults to M\n    :param string? eye_color_inner:  defaults to #000000\n    :param string? data_pattern:  defaults to RECT\n    :param string? background_color:  defaults to #FFFFFF\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? eye_color_outer:  defaults to #000000\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_phone_call_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_google_map_qr_code": {
        "api_name": "google_map_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_google_map_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string longitude:  defaults to 77.0364\n    :param string latitude:  defaults to 38.8951\n    :param string? eye_color_inner:  defaults to #000000\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? data_gradient_style:  defaults to None\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? size:  defaults to m\n    :param string? data_pattern:  defaults to RECT\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? error_correction:  defaults to M\n    :param string? background_color:  defaults to #FFFFFF\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_google_map_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_wifi_qr_code": {
        "api_name": "wifi_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_wifi_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string authentication:  defaults to unencrypted\n    :param string size:  defaults to m\n    :param string ssid:  defaults to Office-Office\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? error_correction:  defaults to M\n    :param string? eye_color_inner:  defaults to #000000\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? data_gradient_style:  defaults to None\n    :param string? background_color:  defaults to #FFFFFF\n    :param string? data_pattern:  defaults to RECT\n    :param string? data_gradient_start_color:  defaults to #000000\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_wifi_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_v_card_qr_code": {
        "api_name": "v_card_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_v_card_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string uname:  defaults to Tanisha\n    :param string? error_correction:  defaults to M\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? eye_color_inner:  defaults to #000000\n    :param string? data_gradient_style:  defaults to None\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? background_color:  defaults to #FFFFFF\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? size:  defaults to m\n    :param string? data_pattern:  defaults to RECT\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_v_card_qr_code',kwargs)\n        "
    },
    "rapi_scanova_qr_code_website_url_qr_code": {
        "api_name": "website_url_qr_code",
        "category": "Tools",
        "tool_name": "scanova_qr_code",
        "code": "async def rapi_scanova_qr_code_website_url_qr_code(self,*args,**kwargs):\n    '''Scanova QR Code API lets you generate custom-designed Branded QR Codes in bulk programmatically in your own mobile application or information system within few minutes.\n    \n    \n\n    :param string? error_correction:  defaults to H\n    :param string? eye_pattern:  defaults to RECT_RECT\n    :param string? data_gradient_style:  defaults to None\n    :param string? format:  defaults to png\n    :param string? size:  defaults to m\n    :param string? eye_color_outer:  defaults to #000000\n    :param string? data_gradient_end_color:  defaults to #000000\n    :param string? data_gradient_start_color:  defaults to #000000\n    :param string? eye_color_inner:  defaults to #000000\n    :param string? url:  defaults to https://scanova.io\n    :param string? data_pattern:  defaults to RECT\n    :param string? background_color:  defaults to #FFFFFF\n    '''\n    return await self._request_rapid_api('rapi_scanova_qr_code_website_url_qr_code',kwargs)\n        "
    },
    "rapi_spotify_downloader_track_list_album": {
        "api_name": "track_list_album",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_track_list_album(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 6lggWd5q9Rh66OkDE1eNDr\n    :param string? offset: \n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_track_list_album',kwargs)\n        "
    },
    "rapi_spotify_downloader_track_list_playlist": {
        "api_name": "track_list_playlist",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_track_list_playlist(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 37i9dQZF1DX0XUsuxWHRQd\n    :param string? offset: \n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_track_list_playlist',kwargs)\n        "
    },
    "rapi_spotify_downloader_metadata_album": {
        "api_name": "metadata_album",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_metadata_album(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 6lggWd5q9Rh66OkDE1eNDr\n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_metadata_album',kwargs)\n        "
    },
    "rapi_spotify_downloader_metadata_track": {
        "api_name": "metadata_track",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_metadata_track(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 22LAwLoDA5b4AaGSkg6bKW\n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_metadata_track',kwargs)\n        "
    },
    "rapi_spotify_downloader_download_song": {
        "api_name": "download_song",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_download_song(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 22LAwLoDA5b4AaGSkg6bKW\n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_download_song',kwargs)\n        "
    },
    "rapi_spotify_downloader_metadata_playlist": {
        "api_name": "metadata_playlist",
        "category": "Tools",
        "tool_name": "spotify_downloader",
        "code": "async def rapi_spotify_downloader_metadata_playlist(self,*args,**kwargs):\n    '''Download tracks, albums and playlists from Spotify! The best and most reliable Spotify Downloader API on RapidAPI!\n    \n    \n\n    :param string id:  defaults to 37i9dQZF1DX0XUsuxWHRQd\n    '''\n    return await self._request_rapid_api('rapi_spotify_downloader_metadata_playlist',kwargs)\n        "
    },
    "rapi_simple_cheap_qr_code_generator_qr_code_gen": {
        "api_name": "qr_code_gen",
        "category": "Tools",
        "tool_name": "simple_cheap_qr_code_generator",
        "code": "async def rapi_simple_cheap_qr_code_generator_qr_code_gen(self,*args,**kwargs):\n    '''Send a string, get a QR CODE - As simple as it gets\n    \n    \n\n    :param string url:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_simple_cheap_qr_code_generator_qr_code_gen',kwargs)\n        "
    },
    "rapi_qr_code_api_v6_qr_code_image_generator": {
        "api_name": "qr_code_image_generator",
        "category": "Tools",
        "tool_name": "qr_code_api_v6",
        "code": "async def rapi_qr_code_api_v6_qr_code_image_generator(self,*args,**kwargs):\n    '''This API is a QR code generation service built using Flask. It accepts a 'url' parameter in the GET request and returns a PNG image of the generated QR code. The QR code can be saved as an attachment with the filename 'qr_code.png'. The API runs on port 4000 and can be easily integrated into any application or website that needs to generate QR codes.\n    \n    \n\n    :param string? url:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_api_v6_qr_code_image_generator',kwargs)\n        "
    },
    "rapi_tiktok_no_watermark_video_no_watermark": {
        "api_name": "video_no_watermark",
        "category": "Tools",
        "tool_name": "tiktok_no_watermark",
        "code": "async def rapi_tiktok_no_watermark_video_no_watermark(self,*args,**kwargs):\n    '''get tiktok no watermark video\n    \n    \n\n    :param string video_url:  defaults to https://www.tiktok.com/@tiktok/video/7173042191730740523\n    '''\n    return await self._request_rapid_api('rapi_tiktok_no_watermark_video_no_watermark',kwargs)\n        "
    },
    "rapi_travelling_salesman_exampleproblem": {
        "api_name": "exampleproblem",
        "category": "Tools",
        "tool_name": "travelling_salesman",
        "code": "async def rapi_travelling_salesman_exampleproblem(self,*args,**kwargs):\n    '''Solve the travelling salesman problem for every 2D or 3D problem, and calculate the shortest distance between a list of points.\n    \n    \n\n    :param integer? locationCount:  defaults to 10\n    :param string? edgeType:  defaults to Euclidean2D\n    :param string? name:  defaults to ExampleProblem\n    '''\n    return await self._request_rapid_api('rapi_travelling_salesman_exampleproblem',kwargs)\n        "
    },
    "rapi_bash_code_compiler_bash_versions": {
        "api_name": "bash_versions",
        "category": "Tools",
        "tool_name": "bash_code_compiler",
        "code": "async def rapi_bash_code_compiler_bash_versions(self,*args,**kwargs):\n    '''Bash Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bash_code_compiler_bash_versions',kwargs)\n        "
    },
    "rapi_demo_project_v12_get_posts_copy": {
        "api_name": "get_posts_copy",
        "category": "Tools",
        "tool_name": "demo_project_v12",
        "code": "async def rapi_demo_project_v12_get_posts_copy(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v12_get_posts_copy',kwargs)\n        "
    },
    "rapi_demo_project_v12_get_product": {
        "api_name": "get_product",
        "category": "Tools",
        "tool_name": "demo_project_v12",
        "code": "async def rapi_demo_project_v12_get_product(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v12_get_product',kwargs)\n        "
    },
    "rapi_demo_project_v12_get_posts": {
        "api_name": "get_posts",
        "category": "Tools",
        "tool_name": "demo_project_v12",
        "code": "async def rapi_demo_project_v12_get_posts(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v12_get_posts',kwargs)\n        "
    },
    "rapi_demo_project_v12_get_products_in_category": {
        "api_name": "get_products_in_category",
        "category": "Tools",
        "tool_name": "demo_project_v12",
        "code": "async def rapi_demo_project_v12_get_products_in_category(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param string category: \n    :param integer limit: \n    :param integer skip: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v12_get_products_in_category',kwargs)\n        "
    },
    "rapi_commonportnumbers_commonports": {
        "api_name": "commonports",
        "category": "Tools",
        "tool_name": "commonportnumbers",
        "code": "async def rapi_commonportnumbers_commonports(self,*args,**kwargs):\n    '''Get registered service names and transport protocols port numbers.\n    \n    \n\n    :param string? port:  defaults to 53\n    :param string? protocol:  defaults to tcp\n    :param string? service: \n    '''\n    return await self._request_rapid_api('rapi_commonportnumbers_commonports',kwargs)\n        "
    },
    "rapi_php_code_compiler_php_versions": {
        "api_name": "php_versions",
        "category": "Tools",
        "tool_name": "php_code_compiler",
        "code": "async def rapi_php_code_compiler_php_versions(self,*args,**kwargs):\n    '''PHP Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_php_code_compiler_php_versions',kwargs)\n        "
    },
    "rapi_qr_generator_api_generate": {
        "api_name": "generate",
        "category": "Tools",
        "tool_name": "qr_generator_api",
        "code": "async def rapi_qr_generator_api_generate(self,*args,**kwargs):\n    '''Generate HTML image-tag with base64-image-string as QR code of input text.\n    \n    \n\n    :param string text: QR Code Text Content defaults to enter-your-text-here\n    :param string? backColor: (Optional) Background color in hexadecimal value (Default: White = #ffffff). Note: Should start with # prefix, and each basic-color (red, green, blue) should has two hex-digits. defaults to #ffffff\n    :param string? foreColor: (Optional) Foreground color in hexadecimal value (Default: Black = #000000). Note: Should start with # prefix, and each basic-color (red, green, blue) should has two hex-digits. defaults to #000000\n    :param integer? pixel: (Optional) QR Code pixel (Default: 10) defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_qr_generator_api_generate',kwargs)\n        "
    },
    "rapi_kolektifapi_haber": {
        "api_name": "haber",
        "category": "Tools",
        "tool_name": "kolektifapi",
        "code": "async def rapi_kolektifapi_haber(self,*args,**kwargs):\n    '''Python / Flask ile yaz\u0131lm\u0131\u015f REST API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kolektifapi_haber',kwargs)\n        "
    },
    "rapi_kolektifapi_deprem": {
        "api_name": "deprem",
        "category": "Tools",
        "tool_name": "kolektifapi",
        "code": "async def rapi_kolektifapi_deprem(self,*args,**kwargs):\n    '''Python / Flask ile yaz\u0131lm\u0131\u015f REST API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kolektifapi_deprem',kwargs)\n        "
    },
    "rapi_kolektifapi_akaryak_t": {
        "api_name": "akaryak_t",
        "category": "Tools",
        "tool_name": "kolektifapi",
        "code": "async def rapi_kolektifapi_akaryak_t(self,*args,**kwargs):\n    '''Python / Flask ile yaz\u0131lm\u0131\u015f REST API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kolektifapi_akaryak_t',kwargs)\n        "
    },
    "rapi_kolektifapi_d_viz": {
        "api_name": "d_viz",
        "category": "Tools",
        "tool_name": "kolektifapi",
        "code": "async def rapi_kolektifapi_d_viz(self,*args,**kwargs):\n    '''Python / Flask ile yaz\u0131lm\u0131\u015f REST API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kolektifapi_d_viz',kwargs)\n        "
    },
    "rapi_qr_code_wizard_generate_qr": {
        "api_name": "generate_qr",
        "category": "Tools",
        "tool_name": "qr_code_wizard",
        "code": "async def rapi_qr_code_wizard_generate_qr(self,*args,**kwargs):\n    '''Generate QR codes with ease via API\n    \n    \n\n    :param string url:  defaults to www.google.com\n    '''\n    return await self._request_rapid_api('rapi_qr_code_wizard_generate_qr',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_full_stack_jobs": {
        "api_name": "full_stack_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_full_stack_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_full_stack_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_data_engineer_jobs": {
        "api_name": "data_engineer_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_data_engineer_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_data_engineer_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_business_intelligence_jobs": {
        "api_name": "business_intelligence_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_business_intelligence_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_business_intelligence_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_laravel_jobs": {
        "api_name": "laravel_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_laravel_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_laravel_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_javascript_jobs": {
        "api_name": "javascript_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_javascript_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_javascript_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_java_jobs": {
        "api_name": "java_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_java_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_java_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_nodejs_jobs": {
        "api_name": "nodejs_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_nodejs_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_nodejs_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_data_analyst_jobs": {
        "api_name": "data_analyst_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_data_analyst_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_data_analyst_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_react_jobs": {
        "api_name": "react_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_react_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_react_jobs',kwargs)\n        "
    },
    "rapi_usa_jobs_for_it_angular_jobs": {
        "api_name": "angular_jobs",
        "category": "Tools",
        "tool_name": "usa_jobs_for_it",
        "code": "async def rapi_usa_jobs_for_it_angular_jobs(self,*args,**kwargs):\n    '''An USA Jobs for IT API from different sources\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_usa_jobs_for_it_angular_jobs',kwargs)\n        "
    },
    "rapi_pascal_code_compiler_pascal_versions": {
        "api_name": "pascal_versions",
        "category": "Tools",
        "tool_name": "pascal_code_compiler",
        "code": "async def rapi_pascal_code_compiler_pascal_versions(self,*args,**kwargs):\n    '''Pascal Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pascal_code_compiler_pascal_versions',kwargs)\n        "
    },
    "rapi_convexity_convert_hex": {
        "api_name": "convert_hex",
        "category": "Tools",
        "tool_name": "convexity",
        "code": "async def rapi_convexity_convert_hex(self,*args,**kwargs):\n    '''Convexity is an Color-convertor API that offers endpoints for converting between different color representations, including RGB, HSL, and CMYK\n    \n    \n\n    :param string hex:  defaults to ffffff\n    '''\n    return await self._request_rapid_api('rapi_convexity_convert_hex',kwargs)\n        "
    },
    "rapi_3d_services_thumbnail": {
        "api_name": "thumbnail",
        "category": "Tools",
        "tool_name": "3d_services",
        "code": "async def rapi_3d_services_thumbnail(self,*args,**kwargs):\n    '''Provide tool for generating thumbnail of 3d files using blender and tool for scripting Blender directly in the cloud.\n    \n    \n\n    :param string url: A string containing an url of a '.glb' file defaults to https://github.com/KhronosGroup/glTF-Sample-Models/raw/master/2.0/DamagedHelmet/glTF-Binary/DamagedHelmet.glb\n    '''\n    return await self._request_rapid_api('rapi_3d_services_thumbnail',kwargs)\n        "
    },
    "rapi_qr_scanner_api_scanimageurl": {
        "api_name": "scanimageurl",
        "category": "Tools",
        "tool_name": "qr_scanner_api",
        "code": "async def rapi_qr_scanner_api_scanimageurl(self,*args,**kwargs):\n    '''Scan QR & Barcode images from files or URLs and return the equivalent QR-Text or Barcode-Number plus code format.\n    \n    \n\n    :param string imageUrl: Image URL which you want to scan defaults to set-your-image-URL-here\n    '''\n    return await self._request_rapid_api('rapi_qr_scanner_api_scanimageurl',kwargs)\n        "
    },
    "rapi_qrcode_generator_base64_qrcode": {
        "api_name": "qrcode",
        "category": "Tools",
        "tool_name": "qrcode_generator_base64",
        "code": "async def rapi_qrcode_generator_base64_qrcode(self,*args,**kwargs):\n    '''Our QR code generator API allows you to generate QR codes for various types of data, including text, URLs, phone numbers, SMS messages, and email addresses. The API returns a base64-encoded image of the QR code, which can be easily decoded and displayed in any web or mobile application. With our API, you can quickly and easily integrate QR code generation into your application, allowing your users to create and scan QR codes on the go. Sign up for our API today and start generating high-quali...\n    \n    \n\n    :param string name:  defaults to name\n    '''\n    return await self._request_rapid_api('rapi_qrcode_generator_base64_qrcode',kwargs)\n        "
    },
    "rapi_scrapey_link_scraper_scrape_links": {
        "api_name": "scrape_links",
        "category": "Tools",
        "tool_name": "scrapey_link_scraper",
        "code": "async def rapi_scrapey_link_scraper_scrape_links(self,*args,**kwargs):\n    '''Extract all links found on a web page by simply providing a URL to this API. Super fast and easy to use\n    \n    \n\n    :param string url:  defaults to amazon.com\n    '''\n    return await self._request_rapid_api('rapi_scrapey_link_scraper_scrape_links',kwargs)\n        "
    },
    "rapi_cpp_code_compiler_c_versions": {
        "api_name": "c_versions",
        "category": "Tools",
        "tool_name": "cpp_code_compiler",
        "code": "async def rapi_cpp_code_compiler_c_versions(self,*args,**kwargs):\n    '''C++ Code Compiler API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cpp_code_compiler_c_versions',kwargs)\n        "
    },
    "rapi_ginger_get_language_code": {
        "api_name": "get_language_code",
        "category": "Text_Analysis",
        "tool_name": "ginger",
        "code": "async def rapi_ginger_get_language_code(self,*args,**kwargs):\n    '''Ginger goes beyond spelling and grammar. It takes into account full sentences to suggest context-based corrections. This drastically speeds up your writing - especially for long emails or documents!. This API can also translate to the extensive language list backed by Google Translator and Bing Translator which Uses AI and Deep Neural Networks to improve translations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ginger_get_language_code',kwargs)\n        "
    },
    "rapi_ginger_correction_in_sentence": {
        "api_name": "correction_in_sentence",
        "category": "Text_Analysis",
        "tool_name": "ginger",
        "code": "async def rapi_ginger_correction_in_sentence(self,*args,**kwargs):\n    '''Ginger goes beyond spelling and grammar. It takes into account full sentences to suggest context-based corrections. This drastically speeds up your writing - especially for long emails or documents!. This API can also translate to the extensive language list backed by Google Translator and Bing Translator which Uses AI and Deep Neural Networks to improve translations.\n    \n    \n\n    :param string text:  defaults to The repot also aded that the company may bring some edit options for photo captions as well in a future update of the application\n    '''\n    return await self._request_rapid_api('rapi_ginger_correction_in_sentence',kwargs)\n        "
    },
    "rapi_ginger_rephrase": {
        "api_name": "rephrase",
        "category": "Text_Analysis",
        "tool_name": "ginger",
        "code": "async def rapi_ginger_rephrase(self,*args,**kwargs):\n    '''Ginger goes beyond spelling and grammar. It takes into account full sentences to suggest context-based corrections. This drastically speeds up your writing - especially for long emails or documents!. This API can also translate to the extensive language list backed by Google Translator and Bing Translator which Uses AI and Deep Neural Networks to improve translations.\n    \n    \n\n    :param string text:  defaults to With Ginger, the AI-powered writing assistant, correct your texts, improve your style and boost your creativity.\n    '''\n    return await self._request_rapid_api('rapi_ginger_rephrase',kwargs)\n        "
    },
    "rapi_gcp_translate_languages": {
        "api_name": "languages",
        "category": "Text_Analysis",
        "tool_name": "gcp_translate",
        "code": "async def rapi_gcp_translate_languages(self,*args,**kwargs):\n    '''Dynamically translate between languages.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_gcp_translate_languages',kwargs)\n        "
    },
    "rapi_neuronet_nlp_main": {
        "api_name": "main",
        "category": "Text_Analysis",
        "tool_name": "neuronet_nlp",
        "code": "async def rapi_neuronet_nlp_main(self,*args,**kwargs):\n    '''Tools for Azerbaijan language for tokenization, sentence splitting, part-of-speech tagging and named entity recognition.\n    \n    \n\n    :param string text: \n    '''\n    return await self._request_rapid_api('rapi_neuronet_nlp_main',kwargs)\n        "
    },
    "rapi_profanity_filter_by_api_ninjas_v1_profanityfilter": {
        "api_name": "v1_profanityfilter",
        "category": "Text_Analysis",
        "tool_name": "profanity_filter_by_api_ninjas",
        "code": "async def rapi_profanity_filter_by_api_ninjas_v1_profanityfilter(self,*args,**kwargs):\n    '''Detect and censor bad words in text. See more info at https://api-ninjas.com/api/profanityfilter\n    \n    \n\n    :param string text: Input text. Maximum 1000 characters. defaults to damn it\n    '''\n    return await self._request_rapid_api('rapi_profanity_filter_by_api_ninjas_v1_profanityfilter',kwargs)\n        "
    },
    "rapi_walnut_entity_wrt_transformer": {
        "api_name": "wrt_transformer",
        "category": "Text_Analysis",
        "tool_name": "walnut_entity",
        "code": "async def rapi_walnut_entity_wrt_transformer(self,*args,**kwargs):\n    '''Extract structure from text data (who, what, where..) automatically using AI.\n    \n    \n\n    :param string payload:  defaults to I am Richard from New York and I work at Microsoft.\n    '''\n    return await self._request_rapid_api('rapi_walnut_entity_wrt_transformer',kwargs)\n        "
    },
    "rapi_speakeasy_get_synthesize": {
        "api_name": "get_synthesize",
        "category": "Text_Analysis",
        "tool_name": "speakeasy",
        "code": "async def rapi_speakeasy_get_synthesize(self,*args,**kwargs):\n    '''The SpeakEasy API allows you to synthesize speech from text using Google's Text-to-Speech API.\n    \n    \n\n    :param string text:  defaults to The quick brown fox jumps over the lazy dog\n    '''\n    return await self._request_rapid_api('rapi_speakeasy_get_synthesize',kwargs)\n        "
    },
    "rapi_google_translator_languages": {
        "api_name": "languages",
        "category": "Text_Analysis",
        "tool_name": "google_translator",
        "code": "async def rapi_google_translator_languages(self,*args,**kwargs):\n    '''Google Translate is a multilingual neural machine translation service developed by Google to translate text\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_google_translator_languages',kwargs)\n        "
    },
    "rapi_textapi_display_entities": {
        "api_name": "display_entities",
        "category": "Text_Analysis",
        "tool_name": "textapi",
        "code": "async def rapi_textapi_display_entities(self,*args,**kwargs):\n    '''A text extraction, manipulation, and analysis api. Putting the power of natural language processing (nlp) in every developers hands.\n    \n    \n\n    :param string text:  defaults to An October post from Dylan that may be saving you a Google search.\n    :param string? model: \n    :param string? spans: \n    '''\n    return await self._request_rapid_api('rapi_textapi_display_entities',kwargs)\n        "
    },
    "rapi_textapi_extract_entities": {
        "api_name": "extract_entities",
        "category": "Text_Analysis",
        "tool_name": "textapi",
        "code": "async def rapi_textapi_extract_entities(self,*args,**kwargs):\n    '''A text extraction, manipulation, and analysis api. Putting the power of natural language processing (nlp) in every developers hands.\n    \n    \n\n    :param string text:  defaults to U.S. stocks rallied Thursday, with the Dow Jones Industrial Average up 2.9% in a tempestuous first half of the year.\n    :param string? model: \n    '''\n    return await self._request_rapid_api('rapi_textapi_extract_entities',kwargs)\n        "
    },
    "rapi_linguin_ai_languages": {
        "api_name": "languages",
        "category": "Text_Analysis",
        "tool_name": "linguin_ai",
        "code": "async def rapi_linguin_ai_languages(self,*args,**kwargs):\n    '''Language And Profanity Detection as a Service\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_linguin_ai_languages',kwargs)\n        "
    },
    "rapi_profanity_filter_read_text": {
        "api_name": "read_text",
        "category": "Text_Analysis",
        "tool_name": "profanity_filter",
        "code": "async def rapi_profanity_filter_read_text(self,*args,**kwargs):\n    '''Filter inputted text content for profanity, offensive and obscenity word base on an internal profanity list. It can also recognize character alternates or special characters often used in place of standard alphabetic characters.\n    \n    \n\n    :param string check_word: Use this parameter to filter text for profanity / offensive word. MAX_LENGTH = `[ 2 .. 700 ] characters` defaults to This example text contains no profanity / offensive word.\n    :param string? add: You can use the optional `add` parameter with a comma separated list of words to be added to the selected `range` profanity list. Accepts `[ 2 .. 250 ] characters` in length).\nThe `add` parameter is case-insensitive, so the case of you entry is not important.\n    :param ENUM? range: You can use the optional `range` parameter to set the level of filtering range. Default: '`low`'\n`'low'` :  mild database\n`'mid'` : includes all database words in `'low'` database but does not include all `'high'` database of words\n`'high'`: strict large database words which also includes `'low'` and `'mid'` database\n    :param string? r: Censor replacement string - You can use the optional `r` parameter to get output of censor words in `word_filtered` response data. Must be a valid punctuation. MAX_LENGTH `<= 1 character` defaults to *\n    '''\n    return await self._request_rapid_api('rapi_profanity_filter_read_text',kwargs)\n        "
    },
    "rapi_paraphrasing_api_retrieve_response": {
        "api_name": "retrieve_response",
        "category": "Text_Analysis",
        "tool_name": "paraphrasing_api",
        "code": "async def rapi_paraphrasing_api_retrieve_response(self,*args,**kwargs):\n    '''The Paraphrasing API is a tool that enables users to generate unique content by rephrasing existing text while preserving its original meaning. Users can either input the text they want to reword or use the provided text to generate new ideas. \n    \n    \n\n    :param string job_id: The JOB ID generated on \\\"Paraphrase\\\" endpoint. defaults to 1157715\n    '''\n    return await self._request_rapid_api('rapi_paraphrasing_api_retrieve_response',kwargs)\n        "
    },
    "rapi_gruite_synonym": {
        "api_name": "synonym",
        "category": "Text_Analysis",
        "tool_name": "gruite",
        "code": "async def rapi_gruite_synonym(self,*args,**kwargs):\n    '''Get meanings and synonyms for words in vernacular language\n    \n    \n\n    :param string language: language of the word defaults to hindi\n    :param string word: word defaults to \u092c\u093e\u091c\u093e\u0930\n    '''\n    return await self._request_rapid_api('rapi_gruite_synonym',kwargs)\n        "
    },
    "rapi_gruite_meanings": {
        "api_name": "meanings",
        "category": "Text_Analysis",
        "tool_name": "gruite",
        "code": "async def rapi_gruite_meanings(self,*args,**kwargs):\n    '''Get meanings and synonyms for words in vernacular language\n    \n    \n\n    :param string language: language of the word defaults to hindi\n    :param string word: word defaults to \u092c\u093e\u091c\u093e\u0930\n    '''\n    return await self._request_rapid_api('rapi_gruite_meanings',kwargs)\n        "
    },
    "rapi_walnut_topic_wrt_transformer": {
        "api_name": "wrt_transformer",
        "category": "Text_Analysis",
        "tool_name": "walnut_topic",
        "code": "async def rapi_walnut_topic_wrt_transformer(self,*args,**kwargs):\n    '''AI powered topic extraction from texts.\n    \n    \n\n    :param string text:  defaults to My tablet is not working and I want a refund as soon as possible!\n    :param string topics:  defaults to furniture,eletronics,books,billing,promotion,urgent,design\n    '''\n    return await self._request_rapid_api('rapi_walnut_topic_wrt_transformer',kwargs)\n        "
    },
    "rapi_article_rewriter_pro_api_generate": {
        "api_name": "generate",
        "category": "Text_Analysis",
        "tool_name": "article_rewriter_pro_api",
        "code": "async def rapi_article_rewriter_pro_api_generate(self,*args,**kwargs):\n    '''Article Rewriter Pro helps you to rewrite articles within seconds. \nMulti-language supported : en,fr,ge,du,sp,tr.\n    \n    \n\n    :param string lang:  defaults to en\n    :param string article:  defaults to Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\n    '''\n    return await self._request_rapid_api('rapi_article_rewriter_pro_api_generate',kwargs)\n        "
    },
    "rapi_personality_quest_enneagram_personality_test_questionnaire": {
        "api_name": "enneagram_personality_test_questionnaire",
        "category": "Text_Analysis",
        "tool_name": "personality_quest",
        "code": "async def rapi_personality_quest_enneagram_personality_test_questionnaire(self,*args,**kwargs):\n    '''The \"Personality Quest\" API allows developers to integrate personality assessment and analysis functionalities into their applications. By leveraging this API, developers can provide users with valuable insights into their personalities, helping them gain self-awareness, make informed decisions, and enhance their personal growth and relationships. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_personality_quest_enneagram_personality_test_questionnaire',kwargs)\n        "
    },
    "rapi_personality_quest_big_five_personality_test": {
        "api_name": "big_five_personality_test",
        "category": "Text_Analysis",
        "tool_name": "personality_quest",
        "code": "async def rapi_personality_quest_big_five_personality_test(self,*args,**kwargs):\n    '''The \"Personality Quest\" API allows developers to integrate personality assessment and analysis functionalities into their applications. By leveraging this API, developers can provide users with valuable insights into their personalities, helping them gain self-awareness, make informed decisions, and enhance their personal growth and relationships. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_personality_quest_big_five_personality_test',kwargs)\n        "
    },
    "rapi_personality_quest_iq_personality_test_questionnaire": {
        "api_name": "iq_personality_test_questionnaire",
        "category": "Text_Analysis",
        "tool_name": "personality_quest",
        "code": "async def rapi_personality_quest_iq_personality_test_questionnaire(self,*args,**kwargs):\n    '''The \"Personality Quest\" API allows developers to integrate personality assessment and analysis functionalities into their applications. By leveraging this API, developers can provide users with valuable insights into their personalities, helping them gain self-awareness, make informed decisions, and enhance their personal growth and relationships. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_personality_quest_iq_personality_test_questionnaire',kwargs)\n        "
    },
    "rapi_google_translate_languages": {
        "api_name": "languages",
        "category": "Text_Analysis",
        "tool_name": "google_translate",
        "code": "async def rapi_google_translate_languages(self,*args,**kwargs):\n    '''Dynamically translate between languages.\n    \n    \n\n    :param string? target: The target language code for the results. If specified, then the language names are returned in the name field of the response, localized in the target language. If you do not supply a target language, then the name field is omitted from the response and only the language codes are returned.\n    :param string? model: The translation model of the supported languages. Can be either base to return languages supported by the Phrase-Based Machine Translation (PBMT) model, or nmt to return languages supported by the Neural Machine Translation (NMT) model. If omitted, then all supported languages are returned.\n    '''\n    return await self._request_rapid_api('rapi_google_translate_languages',kwargs)\n        "
    },
    "rapi_mad_libs_diceware_eff_diceware": {
        "api_name": "eff_diceware",
        "category": "Text_Analysis",
        "tool_name": "mad_libs_diceware",
        "code": "async def rapi_mad_libs_diceware_eff_diceware(self,*args,**kwargs):\n    '''Diceware generated passwords that you can easily remember\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mad_libs_diceware_eff_diceware',kwargs)\n        "
    },
    "rapi_best_paraphrasing_api_retrieve_response": {
        "api_name": "retrieve_response",
        "category": "Text_Analysis",
        "tool_name": "best_paraphrasing_api",
        "code": "async def rapi_best_paraphrasing_api_retrieve_response(self,*args,**kwargs):\n    '''Best Paraphrasing API allows developers to rephrase text with ease. It can be used to improve readability, and avoid plagiarism and can be integrated into various applications such as content management systems, SEO tools, and more. \n    \n    \n\n    :param string job_id: The JOB ID generated on \"Rewriter\" endpoint. defaults to 1124817\n    '''\n    return await self._request_rapid_api('rapi_best_paraphrasing_api_retrieve_response',kwargs)\n        "
    },
    "rapi_cyber_guardian_setup": {
        "api_name": "setup",
        "category": "Text_Analysis",
        "tool_name": "cyber_guardian",
        "code": "async def rapi_cyber_guardian_setup(self,*args,**kwargs):\n    '''A highly configurable and precise solution for augmenting your moderation needs, scalable and adaptable for various platforms. State-of-the-art detection of cyberbullying, verbal aggression and toxic messages powered by Samurai Labs\u2019 neuro-symbolic AI along with a suite of moderation tools that empowers you to maintain peace in your community. Protect your community and integrate the Cyber Guardian into your moderation suite with this easy to set up API. Use the \"setup\" endpoint to initialize...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cyber_guardian_setup',kwargs)\n        "
    },
    "rapi_terminology_extraction_get_php": {
        "api_name": "get_php",
        "category": "Text_Analysis",
        "tool_name": "terminology_extraction",
        "code": "async def rapi_terminology_extraction_get_php(self,*args,**kwargs):\n    '''This API allows you to extract  most relevant terms from a text. It is not, like many others, a basic TF-IDF analysis. It compare the text against a very large language model, it uses a probabilistic model to identify candidates, it supports  multi-words terms and not only single words. It uses part of speech tagging to clean up the results\". In short it is probably the most advanced term extraction out there.\n    \n    \n\n    :param string text: \n    :param string lang: Currently supported languages: en,fr,it\n    '''\n    return await self._request_rapid_api('rapi_terminology_extraction_get_php',kwargs)\n        "
    },
    "rapi_fast_reading_go": {
        "api_name": "go",
        "category": "Text_Analysis",
        "tool_name": "fast_reading",
        "code": "async def rapi_fast_reading_go(self,*args,**kwargs):\n    '''Fast Reading (Bionic Reading) - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.\n    \n    \n\n    :param string txt: Raw text to be converted defaults to Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.\n    :param integer? fix: Word fixation defaults to 5\n    :param string? lng: Language: EN, RU, ES defaults to en\n    :param string? model: Model For Text Processing: m1,m2,...m11 defaults to m1\n    '''\n    return await self._request_rapid_api('rapi_fast_reading_go',kwargs)\n        "
    },
    "rapi_sentiment_analysis_v12_text_analysis": {
        "api_name": "text_analysis",
        "category": "Text_Analysis",
        "tool_name": "sentiment_analysis_v12",
        "code": "async def rapi_sentiment_analysis_v12_text_analysis(self,*args,**kwargs):\n    '''Luminous Engineering Sentiment Analysis\n    \n    \n\n    :param string text:  defaults to Having a good day.\n    :param ENUM? output: \n    '''\n    return await self._request_rapid_api('rapi_sentiment_analysis_v12_text_analysis',kwargs)\n        "
    },
    "rapi_ai_tool_gpt_token_splitter_using_path_parameters": {
        "api_name": "using_path_parameters",
        "category": "Text_Analysis",
        "tool_name": "ai_tool_gpt_token_splitter",
        "code": "async def rapi_ai_tool_gpt_token_splitter_using_path_parameters(self,*args,**kwargs):\n    '''This REST API service provides a way to programmatically split GPT-3 text-prompts into user-defined token-sized slices.\n    \n    \n\n    :param string text: \n    :param integer? max_size:  defaults to 1024\n    :param string? delimiter: \n    :param boolean? include_variations:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_ai_tool_gpt_token_splitter_using_path_parameters',kwargs)\n        "
    },
    "rapi_multi_lingual_sentiment_analysis_sentiment_analysis": {
        "api_name": "sentiment_analysis",
        "category": "Text_Analysis",
        "tool_name": "multi_lingual_sentiment_analysis",
        "code": "async def rapi_multi_lingual_sentiment_analysis_sentiment_analysis(self,*args,**kwargs):\n    '''Multi-lingual Sentimel Analysis uses computational linguistics and text mining to automatically determine the sentiment or affective nature of the text being analyzed in multiple language support.\n\nThis API can detect the languange and reponse the accurate sentiment polarity of given text, but you can define {lang} parameter for better result and accurate.\n\nSupported languange (lang):\n    'af': 'afrikaans',\n    'sq': 'albanian',\n    'am': 'amharic',\n    'ar': 'arabic',\n    'hy': 'armenian',\n ...\n    \n    \n\n    :param string text:  defaults to numero uno\n    :param string? lang: \n    '''\n    return await self._request_rapid_api('rapi_multi_lingual_sentiment_analysis_sentiment_analysis',kwargs)\n        "
    },
    "rapi_quick_language_detector_detect_language": {
        "api_name": "detect_language",
        "category": "Text_Analysis",
        "tool_name": "quick_language_detector",
        "code": "async def rapi_quick_language_detector_detect_language(self,*args,**kwargs):\n    '''Feed this API a few sentences and have it determine what language it is with a confidence score.\n    \n    \n\n    :param string text:  defaults to Cela peut identifier 52 langues humaines \u00e0 partir d'\u00e9chantillons de texte et renvoyer des scores de confiance pour chaque\n    :param integer? detectedcount:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_quick_language_detector_detect_language',kwargs)\n        "
    },
    "rapi_offensive_user_comment_detection_detect_offensive_message": {
        "api_name": "detect_offensive_message",
        "category": "Text_Analysis",
        "tool_name": "offensive_user_comment_detection",
        "code": "async def rapi_offensive_user_comment_detection_detect_offensive_message(self,*args,**kwargs):\n    '''This API uses natural language processing and machine learning to detect and flag inappropriate or offensive comments in multiple languages, helping to create a safer online environment and assist moderators in taking appropriate action.\n    \n    \n\n    :param string q:  defaults to son of a ***\n    '''\n    return await self._request_rapid_api('rapi_offensive_user_comment_detection_detect_offensive_message',kwargs)\n        "
    },
    "rapi_sentiment_by_api_ninjas_v1_sentiment": {
        "api_name": "v1_sentiment",
        "category": "Text_Analysis",
        "tool_name": "sentiment_by_api_ninjas",
        "code": "async def rapi_sentiment_by_api_ninjas_v1_sentiment(self,*args,**kwargs):\n    '''State-of-the-art text sentiment analysis. See more info at https://api-ninjas.com/api/sentiment.\n    \n    \n\n    :param string text: query text for sentiment analysis. Maximum 2000 characters. defaults to It's a wonderful day!\n    '''\n    return await self._request_rapid_api('rapi_sentiment_by_api_ninjas_v1_sentiment',kwargs)\n        "
    },
    "rapi_ai_chatbot_chat": {
        "api_name": "chat",
        "category": "Text_Analysis",
        "tool_name": "ai_chatbot",
        "code": "async def rapi_ai_chatbot_chat(self,*args,**kwargs):\n    '''An AI Chatbot for your aplication.\n    \n    \n\n    :param string uid: User Identification for personalised response and response continuity. defaults to user1\n    :param string message: Message that the chatbot has to respond to. defaults to What's your name?\n    '''\n    return await self._request_rapid_api('rapi_ai_chatbot_chat',kwargs)\n        "
    },
    "rapi_facebook_ad_facebook_ad_copy": {
        "api_name": "facebook_ad_copy",
        "category": "Advertising",
        "tool_name": "facebook_ad",
        "code": "async def rapi_facebook_ad_facebook_ad_copy(self,*args,**kwargs):\n    '''Generate Facebook Ad using AI\n    \n    \n\n    :param string description:  defaults to Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services.\n    :param string name:  defaults to Apple\n    '''\n    return await self._request_rapid_api('rapi_facebook_ad_facebook_ad_copy',kwargs)\n        "
    },
    "rapi_thisisapublicapi_v2_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "thisisapublicapi_v2",
        "code": "async def rapi_thisisapublicapi_v2_getinventory(self,*args,**kwargs):\n    '''ThisisaPublicAPI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thisisapublicapi_v2_getinventory',kwargs)\n        "
    },
    "rapi_thisisapublicapi_v2_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "thisisapublicapi_v2",
        "code": "async def rapi_thisisapublicapi_v2_loginuser(self,*args,**kwargs):\n    '''ThisisaPublicAPI\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_thisisapublicapi_v2_loginuser',kwargs)\n        "
    },
    "rapi_versioning_free_v1": {
        "api_name": "v1",
        "category": "Advertising",
        "tool_name": "versioning_free",
        "code": "async def rapi_versioning_free_v1(self,*args,**kwargs):\n    '''versioning-free\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_versioning_free_v1',kwargs)\n        "
    },
    "rapi_multipleteamscallingtest_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "multipleteamscallingtest",
        "code": "async def rapi_multipleteamscallingtest_loginuser(self,*args,**kwargs):\n    '''MultipleTeamsCallingTest\n    \n    \n\n    :param string password: The password for login in clear text defaults to string\n    :param string username: The user name for login defaults to string\n    '''\n    return await self._request_rapid_api('rapi_multipleteamscallingtest_loginuser',kwargs)\n        "
    },
    "rapi_multipleteamscallingtest_getorderbyid": {
        "api_name": "getorderbyid",
        "category": "Advertising",
        "tool_name": "multipleteamscallingtest",
        "code": "async def rapi_multipleteamscallingtest_getorderbyid(self,*args,**kwargs):\n    '''MultipleTeamsCallingTest\n    \n    \n\n    :param integer orderId: ID of pet that needs to be fetched\n    '''\n    return await self._request_rapid_api('rapi_multipleteamscallingtest_getorderbyid',kwargs)\n        "
    },
    "rapi_multipleteamscallingtest_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "multipleteamscallingtest",
        "code": "async def rapi_multipleteamscallingtest_getinventory(self,*args,**kwargs):\n    '''MultipleTeamsCallingTest\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_multipleteamscallingtest_getinventory',kwargs)\n        "
    },
    "rapi_football_api_key_https_football_api_key_p_rapidapi_com": {
        "api_name": "https_football_api_key_p_rapidapi_com",
        "category": "Advertising",
        "tool_name": "football_api_key",
        "code": "async def rapi_football_api_key_https_football_api_key_p_rapidapi_com(self,*args,**kwargs):\n    '''Football API key\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_api_key_https_football_api_key_p_rapidapi_com',kwargs)\n        "
    },
    "rapi_people_lookup_lookup": {
        "api_name": "lookup",
        "category": "Advertising",
        "tool_name": "people_lookup",
        "code": "async def rapi_people_lookup_lookup(self,*args,**kwargs):\n    '''People Lookup API helps you search for and find phone, email, linkedin and more information for people in the USA\n    \n    \n\n    :param string name:  defaults to Warren Buffett\n    :param string? State:  defaults to NE\n    '''\n    return await self._request_rapid_api('rapi_people_lookup_lookup',kwargs)\n        "
    },
    "rapi_thisshouldbefree_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "thisshouldbefree",
        "code": "async def rapi_thisshouldbefree_getinventory(self,*args,**kwargs):\n    '''ThisshouldbeFREE\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_thisshouldbefree_getinventory',kwargs)\n        "
    },
    "rapi_thisshouldbefree_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "thisshouldbefree",
        "code": "async def rapi_thisshouldbefree_loginuser(self,*args,**kwargs):\n    '''ThisshouldbeFREE\n    \n    \n\n    :param string password: The password for login in clear text\n    :param string username: The user name for login\n    '''\n    return await self._request_rapid_api('rapi_thisshouldbefree_loginuser',kwargs)\n        "
    },
    "rapi_publicapitestinginbox_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "publicapitestinginbox",
        "code": "async def rapi_publicapitestinginbox_getinventory(self,*args,**kwargs):\n    '''PublicAPITestingInbox\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_publicapitestinginbox_getinventory',kwargs)\n        "
    },
    "rapi_publicapitestinginbox_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "publicapitestinginbox",
        "code": "async def rapi_publicapitestinginbox_loginuser(self,*args,**kwargs):\n    '''PublicAPITestingInbox\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_publicapitestinginbox_loginuser',kwargs)\n        "
    },
    "rapi_reqres_dont_change_users": {
        "api_name": "users",
        "category": "Advertising",
        "tool_name": "reqres_dont_change",
        "code": "async def rapi_reqres_dont_change_users(self,*args,**kwargs):\n    '''\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reqres_dont_change_users',kwargs)\n        "
    },
    "rapi_reqres_dont_change_user_by_id": {
        "api_name": "user_by_id",
        "category": "Advertising",
        "tool_name": "reqres_dont_change",
        "code": "async def rapi_reqres_dont_change_user_by_id(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string id:  defaults to 1\n    :param array? array[]:  defaults to [\"asd\", \"dsa\"]\n    :param array? array[]:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_reqres_dont_change_user_by_id',kwargs)\n        "
    },
    "rapi_httpbin_get_anything": {
        "api_name": "get_anything",
        "category": "Advertising",
        "tool_name": "httpbin",
        "code": "async def rapi_httpbin_get_anything(self,*args,**kwargs):\n    '''httpbin\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_httpbin_get_anything',kwargs)\n        "
    },
    "rapi_pe_demo_view_request_headers_and_body": {
        "api_name": "view_request_headers_and_body",
        "category": "Advertising",
        "tool_name": "pe_demo",
        "code": "async def rapi_pe_demo_view_request_headers_and_body(self,*args,**kwargs):\n    '''pe-demo\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pe_demo_view_request_headers_and_body',kwargs)\n        "
    },
    "rapi_pe_demo_view_xml_response": {
        "api_name": "view_xml_response",
        "category": "Advertising",
        "tool_name": "pe_demo",
        "code": "async def rapi_pe_demo_view_xml_response(self,*args,**kwargs):\n    '''pe-demo\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pe_demo_view_xml_response',kwargs)\n        "
    },
    "rapi_pe_demo_view_ip_address": {
        "api_name": "view_ip_address",
        "category": "Advertising",
        "tool_name": "pe_demo",
        "code": "async def rapi_pe_demo_view_ip_address(self,*args,**kwargs):\n    '''pe-demo\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pe_demo_view_ip_address',kwargs)\n        "
    },
    "rapi_hello_world_get_user": {
        "api_name": "get_user",
        "category": "Advertising",
        "tool_name": "hello_world",
        "code": "async def rapi_hello_world_get_user(self,*args,**kwargs):\n    '''Hello World\n    \n    \n\n    :param string id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_hello_world_get_user',kwargs)\n        "
    },
    "rapi_social_media_caption_social_media_caption": {
        "api_name": "social_media_caption",
        "category": "Advertising",
        "tool_name": "social_media_caption",
        "code": "async def rapi_social_media_caption_social_media_caption(self,*args,**kwargs):\n    '''Generate catchy captions for social media\n    \n    \n\n    :param string name:  defaults to Apple\n    :param string description:  defaults to Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services.\n    '''\n    return await self._request_rapid_api('rapi_social_media_caption_social_media_caption',kwargs)\n        "
    },
    "rapi_petstore_blitz_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "petstore_blitz",
        "code": "async def rapi_petstore_blitz_loginuser(self,*args,**kwargs):\n    '''asdgasdg\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_petstore_blitz_loginuser',kwargs)\n        "
    },
    "rapi_petstore_blitz_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "petstore_blitz",
        "code": "async def rapi_petstore_blitz_getinventory(self,*args,**kwargs):\n    '''asdgasdg\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_petstore_blitz_getinventory',kwargs)\n        "
    },
    "rapi_privatepublicapi_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "privatepublicapi",
        "code": "async def rapi_privatepublicapi_getinventory(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_privatepublicapi_getinventory',kwargs)\n        "
    },
    "rapi_privatepublicapi_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "privatepublicapi",
        "code": "async def rapi_privatepublicapi_loginuser(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n    \n    \n\n    :param string password: The password for login in clear text defaults to string\n    :param string username: The user name for login defaults to string\n    '''\n    return await self._request_rapid_api('rapi_privatepublicapi_loginuser',kwargs)\n        "
    },
    "rapi_recash_search": {
        "api_name": "search",
        "category": "Advertising",
        "tool_name": "recash",
        "code": "async def rapi_recash_search(self,*args,**kwargs):\n    '''This is an api created for collect data from amazon promo codes available it update fast so no worry about anything\n    \n    \n\n    :param string search:  defaults to apple\n    '''\n    return await self._request_rapid_api('rapi_recash_search',kwargs)\n        "
    },
    "rapi_recash_all_products": {
        "api_name": "all_products",
        "category": "Advertising",
        "tool_name": "recash",
        "code": "async def rapi_recash_all_products(self,*args,**kwargs):\n    '''This is an api created for collect data from amazon promo codes available it update fast so no worry about anything\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_recash_all_products',kwargs)\n        "
    },
    "rapi_coupons_all": {
        "api_name": "all",
        "category": "Advertising",
        "tool_name": "coupons",
        "code": "async def rapi_coupons_all(self,*args,**kwargs):\n    '''coupons\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_coupons_all',kwargs)\n        "
    },
    "rapi_coupons_getallcoupon": {
        "api_name": "getallcoupon",
        "category": "Advertising",
        "tool_name": "coupons",
        "code": "async def rapi_coupons_getallcoupon(self,*args,**kwargs):\n    '''coupons\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_coupons_getallcoupon',kwargs)\n        "
    },
    "rapi_route_precedence_test_1_prices_today": {
        "api_name": "prices_today",
        "category": "Advertising",
        "tool_name": "route_precedence_test_1",
        "code": "async def rapi_route_precedence_test_1_prices_today(self,*args,**kwargs):\n    '''...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_route_precedence_test_1_prices_today',kwargs)\n        "
    },
    "rapi_route_precedence_test_1_prices_date": {
        "api_name": "prices_date",
        "category": "Advertising",
        "tool_name": "route_precedence_test_1",
        "code": "async def rapi_route_precedence_test_1_prices_date(self,*args,**kwargs):\n    '''...\n    \n    \n\n    :param string date:  defaults to my_date\n    '''\n    return await self._request_rapid_api('rapi_route_precedence_test_1_prices_date',kwargs)\n        "
    },
    "rapi_asdfadsf_get_products": {
        "api_name": "get_products",
        "category": "Advertising",
        "tool_name": "asdfadsf",
        "code": "async def rapi_asdfadsf_get_products(self,*args,**kwargs):\n    '''asdfasdf\n    \n    \n\n    :param integer skip: \n    :param integer limit: \n    '''\n    return await self._request_rapid_api('rapi_asdfadsf_get_products',kwargs)\n        "
    },
    "rapi_asdfadsf_get_product": {
        "api_name": "get_product",
        "category": "Advertising",
        "tool_name": "asdfadsf",
        "code": "async def rapi_asdfadsf_get_product(self,*args,**kwargs):\n    '''asdfasdf\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_asdfadsf_get_product',kwargs)\n        "
    },
    "rapi_revdl_search": {
        "api_name": "search",
        "category": "Advertising",
        "tool_name": "revdl",
        "code": "async def rapi_revdl_search(self,*args,**kwargs):\n    '''Revdl\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_revdl_search',kwargs)\n        "
    },
    "rapi_petstoreratelimit_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "petstoreratelimit",
        "code": "async def rapi_petstoreratelimit_loginuser(self,*args,**kwargs):\n    '''PetstoreRateLimit\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_petstoreratelimit_loginuser',kwargs)\n        "
    },
    "rapi_petstoreratelimit_getpetbyid": {
        "api_name": "getpetbyid",
        "category": "Advertising",
        "tool_name": "petstoreratelimit",
        "code": "async def rapi_petstoreratelimit_getpetbyid(self,*args,**kwargs):\n    '''PetstoreRateLimit\n    \n    \n\n    :param integer petId: ID of pet to return\n    '''\n    return await self._request_rapid_api('rapi_petstoreratelimit_getpetbyid',kwargs)\n        "
    },
    "rapi_petstoreratelimit_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "petstoreratelimit",
        "code": "async def rapi_petstoreratelimit_getinventory(self,*args,**kwargs):\n    '''PetstoreRateLimit\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_petstoreratelimit_getinventory',kwargs)\n        "
    },
    "rapi_freeplanwithhardlimit_getinventory": {
        "api_name": "getinventory",
        "category": "Advertising",
        "tool_name": "freeplanwithhardlimit",
        "code": "async def rapi_freeplanwithhardlimit_getinventory(self,*args,**kwargs):\n    '''FreePlanwithHardLimit\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_freeplanwithhardlimit_getinventory',kwargs)\n        "
    },
    "rapi_freeplanwithhardlimit_loginuser": {
        "api_name": "loginuser",
        "category": "Advertising",
        "tool_name": "freeplanwithhardlimit",
        "code": "async def rapi_freeplanwithhardlimit_loginuser(self,*args,**kwargs):\n    '''FreePlanwithHardLimit\n    \n    \n\n    :param string password: The password for login in clear text\n    :param string username: The user name for login\n    '''\n    return await self._request_rapid_api('rapi_freeplanwithhardlimit_loginuser',kwargs)\n        "
    },
    "rapi_testing_random_number_fact": {
        "api_name": "random_number_fact",
        "category": "Advertising",
        "tool_name": "testing",
        "code": "async def rapi_testing_random_number_fact(self,*args,**kwargs):\n    '''testing\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_testing_random_number_fact',kwargs)\n        "
    },
    "rapi_youtuber_success_estimator_estimate": {
        "api_name": "estimate",
        "category": "Advertising",
        "tool_name": "youtuber_success_estimator",
        "code": "async def rapi_youtuber_success_estimator_estimate(self,*args,**kwargs):\n    '''Estimates how successful a hypothetical video from a given YouTube channel will be in the first 30 days of its lifecycle. Useful for influencer marketers to plan for successful campaigns and publishers to better rank their content\n    \n    \n\n    :param string channelType:  defaults to youtube\n    :param string? channelName: Lookup a channel projection by the given name of the channel. Either channelName or channelId is required defaults to chrispirillo\n    :param string? channelId: Lookup the channel projection by the unique id provided by the channel's host platform (for example: YouTube, TikTok, Twitch). Either channelId or channelName is required defaults to UChQl2YkLt3dj-KDyGUBzcHw\n    '''\n    return await self._request_rapid_api('rapi_youtuber_success_estimator_estimate',kwargs)\n        "
    },
    "rapi_hourly_weather_report_of_hong_kong_current_weather_report": {
        "api_name": "current_weather_report",
        "category": "Weather",
        "tool_name": "hourly_weather_report_of_hong_kong",
        "code": "async def rapi_hourly_weather_report_of_hong_kong_current_weather_report(self,*args,**kwargs):\n    '''Hourly Weather Report of Hong Kong with rainfall, UV index, humidity, and temperature.\n    \n    \n\n    :param string lang:  defaults to en\n    :param string dataType:  defaults to rhrread\n    '''\n    return await self._request_rapid_api('rapi_hourly_weather_report_of_hong_kong_current_weather_report',kwargs)\n        "
    },
    "rapi_testing_for_my_use_metrics": {
        "api_name": "metrics",
        "category": "Weather",
        "tool_name": "testing_for_my_use",
        "code": "async def rapi_testing_for_my_use_metrics(self,*args,**kwargs):\n    '''Testing for My Use\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_testing_for_my_use_metrics',kwargs)\n        "
    },
    "rapi_koppen_climate_classification_classification": {
        "api_name": "classification",
        "category": "Weather",
        "tool_name": "koppen_climate_classification",
        "code": "async def rapi_koppen_climate_classification_classification(self,*args,**kwargs):\n    '''Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.  Results in JSON format.\n    \n    \n\n    :param string lon:  defaults to -60.069\n    :param string lat:  defaults to -3.198\n    '''\n    return await self._request_rapid_api('rapi_koppen_climate_classification_classification',kwargs)\n        "
    },
    "rapi_world_weather_online_api_search_api": {
        "api_name": "search_api",
        "category": "Weather",
        "tool_name": "world_weather_online_api",
        "code": "async def rapi_world_weather_online_api_search_api(self,*args,**kwargs):\n    '''Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.\n    \n    \n\n    :param string q:  defaults to london\n    :param ENUM? format: \n    '''\n    return await self._request_rapid_api('rapi_world_weather_online_api_search_api',kwargs)\n        "
    },
    "rapi_world_weather_online_api_local_weather_api": {
        "api_name": "local_weather_api",
        "category": "Weather",
        "tool_name": "world_weather_online_api",
        "code": "async def rapi_world_weather_online_api_local_weather_api(self,*args,**kwargs):\n    '''Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.\n    \n    \n\n    :param string q:  defaults to 40.73,-73\n    :param ENUM? tp: \n    :param string? aqi:  defaults to yes\n    :param ENUM? format: \n    :param string? lang:  defaults to en\n    :param string? alerts:  defaults to no\n    :param integer? num_of_days:  defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_world_weather_online_api_local_weather_api',kwargs)\n        "
    },
    "rapi_world_weather_online_api_time_zone_api": {
        "api_name": "time_zone_api",
        "category": "Weather",
        "tool_name": "world_weather_online_api",
        "code": "async def rapi_world_weather_online_api_time_zone_api(self,*args,**kwargs):\n    '''Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.\n    \n    \n\n    :param string q:  defaults to 53,-0.13\n    :param ENUM? format: \n    '''\n    return await self._request_rapid_api('rapi_world_weather_online_api_time_zone_api',kwargs)\n        "
    },
    "rapi_world_weather_online_api_ski_weather_api": {
        "api_name": "ski_weather_api",
        "category": "Weather",
        "tool_name": "world_weather_online_api",
        "code": "async def rapi_world_weather_online_api_ski_weather_api(self,*args,**kwargs):\n    '''Free Weather API and Geo API for worldwide locations, hourly weather, 14-day weather, historical weather, and Marine and Ski weather API for developers and businesses in XML and JSON format.\n    \n    \n\n    :param string q:  defaults to 45.45,6.7\n    :param ENUM? tp: \n    :param string? lang:  defaults to en\n    :param ENUM? format: \n    :param integer? num_of_days:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_world_weather_online_api_ski_weather_api',kwargs)\n        "
    },
    "rapi_rapidweather_one_call_api": {
        "api_name": "one_call_api",
        "category": "Weather",
        "tool_name": "rapidweather",
        "code": "async def rapi_rapidweather_one_call_api(self,*args,**kwargs):\n    '''The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.\n    \n    \n\n    :param integer lon: Geographical coordinates (latitude, longitude) defaults to 94.04\n    :param integer lat: Geographical coordinates (latitude, longitude) defaults to 33.44\n    :param string? lang: \n    :param string? units: Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default\n    :param string? exclude: By using this parameter you can exclude some parts of the weather data from the API response. It should be a comma-delimited list (without spaces).\nAvailable values:\n\n- current\n- minutely\n- hourly\n- daily\n- alerts\n    '''\n    return await self._request_rapid_api('rapi_rapidweather_one_call_api',kwargs)\n        "
    },
    "rapi_rapidweather_by_city_id": {
        "api_name": "by_city_id",
        "category": "Weather",
        "tool_name": "rapidweather",
        "code": "async def rapi_rapidweather_by_city_id(self,*args,**kwargs):\n    '''The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.\n    \n    \n\n    :param integer id: City ID.  defaults to 524901\n    :param string? units: Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.\n    :param string? lang: You can use the **lang **parameter to get the output in your language\n    '''\n    return await self._request_rapid_api('rapi_rapidweather_by_city_id',kwargs)\n        "
    },
    "rapi_rapidweather_by_city_name": {
        "api_name": "by_city_name",
        "category": "Weather",
        "tool_name": "rapidweather",
        "code": "async def rapi_rapidweather_by_city_name(self,*args,**kwargs):\n    '''The proprietary convolutional neural network collects and processes wide range of data sources to cover any location and consider the local nuances of climate.\n\nWe collect and process weather data from different sources such as global and local weather models, satellites, radars and vast network of weather stations.\n\nFor each point on the globe, RapidWeather provides historical, current and forecasted weather data via light-speed APIs.\n    \n    \n\n    :param string q: City name, state code and country code divided by comma, Please, refer to [ISO 3166](https://www.iso.org/obp/ui/#search) for the state codes or country codes.\nYou can specify the parameter not only in English. In this case, the API response should be returned in the same language as the language of requested location name if the location is in our predefined list of more than 200,000 locations. defaults to London,UK\n    :param string? units: Units of measurement. **standard**, **metric **and **imperial **units are available. If you do not use the **units **parameter, **standard **units will be applied by default.\n    :param string? lang: You can use the **lang **parameter to get the output in your language\n    '''\n    return await self._request_rapid_api('rapi_rapidweather_by_city_name',kwargs)\n        "
    },
    "rapi_air_quality_by_api_ninjas_v1_airquality": {
        "api_name": "v1_airquality",
        "category": "Weather",
        "tool_name": "air_quality_by_api_ninjas",
        "code": "async def rapi_air_quality_by_api_ninjas_v1_airquality(self,*args,**kwargs):\n    '''Get current air quality data for any region. See more info at See more info at https://api-ninjas.com/api/airquality.\n    \n    \n\n    :param string? zip: \n    :param string? country: Country name.\n    :param string? city: City name. defaults to Seattle\n    :param integer? lon: Longitude of desired location. If used, the **lat** parameter must also be supplied.\n    :param string? state: US state (United States only).\n    :param integer? lat: Latitude of desired location. If used, the **lon** parameter must also be supplied.\n    '''\n    return await self._request_rapid_api('rapi_air_quality_by_api_ninjas_v1_airquality',kwargs)\n        "
    },
    "rapi_weather_v14_weather": {
        "api_name": "weather",
        "category": "Weather",
        "tool_name": "weather_v14",
        "code": "async def rapi_weather_v14_weather(self,*args,**kwargs):\n    '''weather forecast\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_weather_v14_weather',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_historical_weather": {
        "api_name": "historical_weather",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_historical_weather(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param DATE (YYYY-MM-DD) date: The UTC day of the data in the past in `YYYY-MM-DD` format. defaults to 2021-08-24\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n defaults to auto\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_historical_weather',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_weather_statistics": {
        "api_name": "weather_statistics",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_weather_statistics(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n defaults to auto\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_weather_statistics',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_hourly": {
        "api_name": "hourly",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_hourly(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    :param string? language: The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n defaults to auto\n    :param string? timezone: Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n defaults to auto\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_hourly',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_current": {
        "api_name": "current",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_current(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? language: The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`. defaults to auto\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    :param string? timezone: Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List). defaults to auto\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_current',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_daily": {
        "api_name": "daily",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_daily(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? language: The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n defaults to auto\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_daily',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_minutely": {
        "api_name": "minutely",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_minutely(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? timezone: Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n defaults to auto\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 37.81021\n    :param string? language: The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    :param string? units: Unit system to be used. The available values are:\n\n- `auto`: Select the system automatically, based on the forecast location.\n- `metric`: Metric (SI) units (`\u00b0C`, `mm/h`, `m/s`, `cm`, `km`, `hPa`).\n- `us`: Imperial units (`\u00b0F`, `in/h`, `mph`, `in`, `mi`, `Hg`).\n- `uk`: Same as `metric`, except that visibility is in `miles` and wind speeds are in `mph`.\n- `ca`: Same as `metric`, except that wind speeds are in `km/h` and pressure is in `kPa`.\n defaults to auto\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to -122.42282\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_minutely',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_alerts": {
        "api_name": "alerts",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_alerts(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string? place_id: Identifier of a place. To obtain the `place_id` for the location you want, please use `Location endpoints`. **Alternatively, you can specify the location by parameters `lat` and `lon`.**\n    :param string? lat: Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 45.74846\n    :param string? lon: Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4. **Alternatively, you can specify the location by parameter `place_id`.** defaults to 4.84671\n    :param string? language: The language of text summaries (variable names are never translated). Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    :param string? timezone: Timezone to be used for the date fields. If not specified, local timezone of the forecast location will be used. The format is according to the tzinfo database, so values like `Europe/Prague` or `UTC` can be used. Alternatively you may use the value `auto` in which case the local timezone of the location is used. The full list of valid timezone strings can be found [here](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).\n defaults to auto\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_alerts',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_find_places": {
        "api_name": "find_places",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_find_places(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string text: Place name to search for defaults to fishermans wharf\n    :param string? language: The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_find_places',kwargs)\n        "
    },
    "rapi_ai_weather_by_meteosource_find_places_prefix": {
        "api_name": "find_places_prefix",
        "category": "Weather",
        "tool_name": "ai_weather_by_meteosource",
        "code": "async def rapi_ai_weather_by_meteosource_find_places_prefix(self,*args,**kwargs):\n    '''Accurate hyper-local weather forecasts, powered by our cutting-edge machine learning (ML) models. Historical weather, current weather, weather statistics , and hour-by-hour forecast - all weather data updated in real-time!\n    \n    \n\n    :param string text: Place name prefix to search for defaults to fishermans wh\n    :param string? language: The language the place names. Available languages are:\n\n- `en`: English\n- `es`: Spanish\n- `fr`: French\n- `de`: German\n- `pl`: Polish\n- `cs`: Czech\n\n defaults to en\n    '''\n    return await self._request_rapid_api('rapi_ai_weather_by_meteosource_find_places_prefix',kwargs)\n        "
    },
    "rapi_weather_api_by_any_city_get_weather_updates": {
        "api_name": "get_weather_updates",
        "category": "Weather",
        "tool_name": "weather_api_by_any_city",
        "code": "async def rapi_weather_api_by_any_city_get_weather_updates(self,*args,**kwargs):\n    '''The API provides current weather information for a specific city worldwide. It allows users to retrieve up-to-date information on weather conditions, such as temperature, humidity, wind speed, and precipitation, for a specified location. \n    \n    \n\n    :param string city:  defaults to London\n    '''\n    return await self._request_rapid_api('rapi_weather_api_by_any_city_get_weather_updates',kwargs)\n        "
    },
    "rapi_wavebase_xyz_map_tiles_for_ocean_conditions": {
        "api_name": "xyz_map_tiles_for_ocean_conditions",
        "category": "Weather",
        "tool_name": "wavebase",
        "code": "async def rapi_wavebase_xyz_map_tiles_for_ocean_conditions(self,*args,**kwargs):\n    '''Wave, Weather and Tide Conditions for any spot on the Ocean Surface.\n\nXYZ Tiles for Global Wave Conditions\n\nhttps://wavebase.app\n    \n    \n\n    :param string variable:  defaults to VHM0\n    :param string datetime: \n    '''\n    return await self._request_rapid_api('rapi_wavebase_xyz_map_tiles_for_ocean_conditions',kwargs)\n        "
    },
    "rapi_wavebase_ocean_conditions_closest_to_latitude_longitude": {
        "api_name": "ocean_conditions_closest_to_latitude_longitude",
        "category": "Weather",
        "tool_name": "wavebase",
        "code": "async def rapi_wavebase_ocean_conditions_closest_to_latitude_longitude(self,*args,**kwargs):\n    '''Wave, Weather and Tide Conditions for any spot on the Ocean Surface.\n\nXYZ Tiles for Global Wave Conditions\n\nhttps://wavebase.app\n    \n    \n\n    :param integer latitude:  defaults to 52.8\n    :param integer longitude:  defaults to -4.07\n    '''\n    return await self._request_rapid_api('rapi_wavebase_ocean_conditions_closest_to_latitude_longitude',kwargs)\n        "
    },
    "rapi_weatherapi_com_time_zone_api": {
        "api_name": "time_zone_api",
        "category": "Weather",
        "tool_name": "weatherapi_com",
        "code": "async def rapi_weatherapi_com_time_zone_api(self,*args,**kwargs):\n    '''WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.\n    \n    \n\n    :param string q: Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\n    '''\n    return await self._request_rapid_api('rapi_weatherapi_com_time_zone_api',kwargs)\n        "
    },
    "rapi_weatherapi_com_sports_api": {
        "api_name": "sports_api",
        "category": "Weather",
        "tool_name": "weatherapi_com",
        "code": "async def rapi_weatherapi_com_sports_api(self,*args,**kwargs):\n    '''WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.\n    \n    \n\n    :param string q:  defaults to London\n    '''\n    return await self._request_rapid_api('rapi_weatherapi_com_sports_api',kwargs)\n        "
    },
    "rapi_weatherapi_com_astronomy_api": {
        "api_name": "astronomy_api",
        "category": "Weather",
        "tool_name": "weatherapi_com",
        "code": "async def rapi_weatherapi_com_astronomy_api(self,*args,**kwargs):\n    '''WeatherAPI.com is a powerful fully managed free weather and geolocation API provider that provides extensive APIs that range from the weather forecast, historical weather, future weather, weather alerts, air quality data, IP lookup, and astronomy through to sports, time zone, and geolocation.\n    \n    \n\n    :param string q: Query parameter based on which data is sent back. It could be following:\n\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\ncity name e.g.: q=Paris\nUS zip e.g.: q=10001\nUK postcode e.g: q=SW1\nCanada postal code e.g: q=G2J\nmetar:<metar code> e.g: q=metar:EGLL\niata:<3 digit airport code> e.g: q=iata:DXB\nauto:ip IP lookup e.g: q=auto:ip\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1 defaults to London\n    :param DATE (YYYY-MM-DD)? dt: Date\n    '''\n    return await self._request_rapid_api('rapi_weatherapi_com_astronomy_api',kwargs)\n        "
    },
    "rapi_air_quality_api_air_quality_measurements": {
        "api_name": "air_quality_measurements",
        "category": "Weather",
        "tool_name": "air_quality_api",
        "code": "async def rapi_air_quality_api_air_quality_measurements(self,*args,**kwargs):\n    '''Retrieve current, forecasted, and extensive measurement data for any city in the world!\n    \n    \n\n    :param string country:  defaults to netherlands\n    :param string city:  defaults to amsterdam\n    :param string? lon:  defaults to 4.897070\n    :param string? lat:  defaults to 52.377956\n    '''\n    return await self._request_rapid_api('rapi_air_quality_api_air_quality_measurements',kwargs)\n        "
    },
    "rapi_air_quality_api_air_quality_forecasts": {
        "api_name": "air_quality_forecasts",
        "category": "Weather",
        "tool_name": "air_quality_api",
        "code": "async def rapi_air_quality_api_air_quality_forecasts(self,*args,**kwargs):\n    '''Retrieve current, forecasted, and extensive measurement data for any city in the world!\n    \n    \n\n    :param string country:  defaults to netherlands\n    :param string city:  defaults to amsterdam\n    :param string? lat:  defaults to 52.377956\n    :param string? lon:  defaults to 4.897070\n    '''\n    return await self._request_rapid_api('rapi_air_quality_api_air_quality_forecasts',kwargs)\n        "
    },
    "rapi_air_quality_api_current_air_quality": {
        "api_name": "current_air_quality",
        "category": "Weather",
        "tool_name": "air_quality_api",
        "code": "async def rapi_air_quality_api_current_air_quality(self,*args,**kwargs):\n    '''Retrieve current, forecasted, and extensive measurement data for any city in the world!\n    \n    \n\n    :param string country:  defaults to netherlands\n    :param string city:  defaults to amsterdam\n    :param string? lat:  defaults to 52.377956\n    :param string? lon:  defaults to 4.897070\n    '''\n    return await self._request_rapid_api('rapi_air_quality_api_current_air_quality',kwargs)\n        "
    },
    "rapi_open_weather_map_current_weather_data": {
        "api_name": "current_weather_data",
        "category": "Weather",
        "tool_name": "open_weather_map",
        "code": "async def rapi_open_weather_map_current_weather_data(self,*args,**kwargs):\n    '''Open Weather Map\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_open_weather_map_current_weather_data',kwargs)\n        "
    },
    "rapi_the_weather_api_weather_report": {
        "api_name": "weather_report",
        "category": "Weather",
        "tool_name": "the_weather_api",
        "code": "async def rapi_the_weather_api_weather_report(self,*args,**kwargs):\n    '''Get the updated and hyper-accurate weather/aqi information of any city. \n    \n    \n\n    :param string cityName:  defaults to mumbai\n    '''\n    return await self._request_rapid_api('rapi_the_weather_api_weather_report',kwargs)\n        "
    },
    "rapi_monitoring_syatem_weather": {
        "api_name": "weather",
        "category": "Weather",
        "tool_name": "monitoring_syatem",
        "code": "async def rapi_monitoring_syatem_weather(self,*args,**kwargs):\n    '''Monitor The Weather Details\n    \n    \n\n    :param string? data: Weather Details Monitoring defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_monitoring_syatem_weather',kwargs)\n        "
    },
    "rapi_kayuloweather_availability": {
        "api_name": "availability",
        "category": "Weather",
        "tool_name": "kayuloweather",
        "code": "async def rapi_kayuloweather_availability(self,*args,**kwargs):\n    '''[DISCOUNT] Weather forecasts to the minute, weather alerts, historical data and astronomy data.\n    \n    \n\n    :param integer latitude: The latitude of the desired location. defaults to 40.7127281\n    :param integer longitude: The longitude of the desired location. defaults to -74.0060152\n    '''\n    return await self._request_rapid_api('rapi_kayuloweather_availability',kwargs)\n        "
    },
    "rapi_weather_by_api_ninjas_v1_weather": {
        "api_name": "v1_weather",
        "category": "Weather",
        "tool_name": "weather_by_api_ninjas",
        "code": "async def rapi_weather_by_api_ninjas_v1_weather(self,*args,**kwargs):\n    '''Get the latest weather data for any region in the world. See more info at https://api-ninjas.com/api/weather.\n    \n    \n\n    :param string? country: Country name.\n    :param string? lon: Longitude of desired location. If used, **lat** parameter must also be supplied.\n    :param integer? zip: 5-digit Zip code (United States only).\n    :param string? state: US state (United States only).\n    :param string? city: City name. defaults to Seattle\n    :param integer? lat: Latitude of desired location. If used, **lon** parameter must also be supplied.\n    '''\n    return await self._request_rapid_api('rapi_weather_by_api_ninjas_v1_weather',kwargs)\n        "
    },
    "rapi_noaa_tides_get_station_information": {
        "api_name": "get_station_information",
        "category": "Weather",
        "tool_name": "noaa_tides",
        "code": "async def rapi_noaa_tides_get_station_information(self,*args,**kwargs):\n    '''United States NOAA tide height and time predictions in JSON format.\n    \n    \n\n    :param string id:  defaults to 8570283\n    '''\n    return await self._request_rapid_api('rapi_noaa_tides_get_station_information',kwargs)\n        "
    },
    "rapi_noaa_tides_get_tides_for_a_station": {
        "api_name": "get_tides_for_a_station",
        "category": "Weather",
        "tool_name": "noaa_tides",
        "code": "async def rapi_noaa_tides_get_tides_for_a_station(self,*args,**kwargs):\n    '''United States NOAA tide height and time predictions in JSON format.\n    \n    \n\n    :param string id:  defaults to 9411340\n    :param string? date:  defaults to 20220625\n    '''\n    return await self._request_rapid_api('rapi_noaa_tides_get_tides_for_a_station',kwargs)\n        "
    },
    "rapi_noaa_tides_get_stations": {
        "api_name": "get_stations",
        "category": "Weather",
        "tool_name": "noaa_tides",
        "code": "async def rapi_noaa_tides_get_stations(self,*args,**kwargs):\n    '''United States NOAA tide height and time predictions in JSON format.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_noaa_tides_get_stations',kwargs)\n        "
    },
    "rapi_easy_weather_daily_forecast_5_days": {
        "api_name": "daily_forecast_5_days",
        "category": "Weather",
        "tool_name": "easy_weather",
        "code": "async def rapi_easy_weather_daily_forecast_5_days(self,*args,**kwargs):\n    '''Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.\n    \n    \n\n    :param string longitude:  defaults to 103.86\n    :param string latitude:  defaults to 1.28\n    '''\n    return await self._request_rapid_api('rapi_easy_weather_daily_forecast_5_days',kwargs)\n        "
    },
    "rapi_easy_weather_hourly_forecast_48_hours": {
        "api_name": "hourly_forecast_48_hours",
        "category": "Weather",
        "tool_name": "easy_weather",
        "code": "async def rapi_easy_weather_hourly_forecast_48_hours(self,*args,**kwargs):\n    '''Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.\n    \n    \n\n    :param string latitude:  defaults to -22.95\n    :param string longitude:  defaults to -43.21\n    '''\n    return await self._request_rapid_api('rapi_easy_weather_hourly_forecast_48_hours',kwargs)\n        "
    },
    "rapi_easy_weather_current_conditions_basic": {
        "api_name": "current_conditions_basic",
        "category": "Weather",
        "tool_name": "easy_weather",
        "code": "async def rapi_easy_weather_current_conditions_basic(self,*args,**kwargs):\n    '''Detailed current conditions, hourly forecasts, daily forecasts, and weather alerts by latitude and longitude in JSON format.\n    \n    \n\n    :param string longitude:  defaults to -80.13\n    :param string latitude:  defaults to 25.77\n    '''\n    return await self._request_rapid_api('rapi_easy_weather_current_conditions_basic',kwargs)\n        "
    },
    "rapi_indonesia_latest_weather_and_earthquake_latest_earthquake": {
        "api_name": "latest_earthquake",
        "category": "Weather",
        "tool_name": "indonesia_latest_weather_and_earthquake",
        "code": "async def rapi_indonesia_latest_weather_and_earthquake_latest_earthquake(self,*args,**kwargs):\n    '''This API provides Weather forecast data for districts and cities in Indonesia within 3 days and data on earthquake events that occur throughout Indonesia.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_indonesia_latest_weather_and_earthquake_latest_earthquake',kwargs)\n        "
    },
    "rapi_weather_forecast_14_days_get_forecastdata_by_lat_lon": {
        "api_name": "get_forecastdata_by_lat_lon",
        "category": "Weather",
        "tool_name": "weather_forecast_14_days",
        "code": "async def rapi_weather_forecast_14_days_get_forecastdata_by_lat_lon(self,*args,**kwargs):\n    '''weather forecast world wide  14 days 6hourly\n    \n    \n\n    :param integer LAT: Latitude defaults to 51.5\n    :param integer LON: Longitude defaults to -0.6\n    :param string? LANG: Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es] defaults to en\n    '''\n    return await self._request_rapid_api('rapi_weather_forecast_14_days_get_forecastdata_by_lat_lon',kwargs)\n        "
    },
    "rapi_weather_forecast_14_days_list_of_all_countries": {
        "api_name": "list_of_all_countries",
        "category": "Weather",
        "tool_name": "weather_forecast_14_days",
        "code": "async def rapi_weather_forecast_14_days_list_of_all_countries(self,*args,**kwargs):\n    '''weather forecast world wide  14 days 6hourly\n    \n    \n\n    :param string? LANG: Language [en,fr,de,nl,es,pt,pl,tr,gr,tr,cn]\n    '''\n    return await self._request_rapid_api('rapi_weather_forecast_14_days_list_of_all_countries',kwargs)\n        "
    },
    "rapi_weather_forecast_14_days_list_of_cities_in_one_country": {
        "api_name": "list_of_cities_in_one_country",
        "category": "Weather",
        "tool_name": "weather_forecast_14_days",
        "code": "async def rapi_weather_forecast_14_days_list_of_cities_in_one_country(self,*args,**kwargs):\n    '''weather forecast world wide  14 days 6hourly\n    \n    \n\n    :param string? LANG: Language [en,fr,pl,pt,es,it,gr,tr,ru,cn,cz] defaults to en\n    :param string? COUNTRY: Country defaults to UK\n    '''\n    return await self._request_rapid_api('rapi_weather_forecast_14_days_list_of_cities_in_one_country',kwargs)\n        "
    },
    "rapi_weather_forecast_14_days_search_location_by_name_or_zip_code": {
        "api_name": "search_location_by_name_or_zip_code",
        "category": "Weather",
        "tool_name": "weather_forecast_14_days",
        "code": "async def rapi_weather_forecast_14_days_search_location_by_name_or_zip_code(self,*args,**kwargs):\n    '''weather forecast world wide  14 days 6hourly\n    \n    \n\n    :param string? ZIPCODE: zip code of the city\n    :param string? LANG: language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn] defaults to en\n    :param string? city: name of a city defaults to New York\n    '''\n    return await self._request_rapid_api('rapi_weather_forecast_14_days_search_location_by_name_or_zip_code',kwargs)\n        "
    },
    "rapi_ski_resort_forecast_5_day_forecast": {
        "api_name": "5_day_forecast",
        "category": "Weather",
        "tool_name": "ski_resort_forecast",
        "code": "async def rapi_ski_resort_forecast_5_day_forecast(self,*args,**kwargs):\n    '''Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.\n    \n    \n\n    :param string resort:  defaults to Jackson Hole\n    :param string? units: Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time. defaults to i\n    :param string? el: Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time. defaults to top\n    '''\n    return await self._request_rapid_api('rapi_ski_resort_forecast_5_day_forecast',kwargs)\n        "
    },
    "rapi_ski_resort_forecast_hourly_forecast": {
        "api_name": "hourly_forecast",
        "category": "Weather",
        "tool_name": "ski_resort_forecast",
        "code": "async def rapi_ski_resort_forecast_hourly_forecast(self,*args,**kwargs):\n    '''Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.\n    \n    \n\n    :param string resort:  defaults to Jackson Hole\n    :param string? el: Specify a part of the mountain. Accepted values are 'top', 'mid', and 'bot'. Using this parameter improves response time. defaults to top\n    :param string? units: Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time. defaults to i\n    :param boolean? c: Limit result to current day only defaults to false\n    '''\n    return await self._request_rapid_api('rapi_ski_resort_forecast_hourly_forecast',kwargs)\n        "
    },
    "rapi_ski_resort_forecast_current_snow_conditions": {
        "api_name": "current_snow_conditions",
        "category": "Weather",
        "tool_name": "ski_resort_forecast",
        "code": "async def rapi_ski_resort_forecast_current_snow_conditions(self,*args,**kwargs):\n    '''Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.\n    \n    \n\n    :param string resort:  defaults to Jackson Hole\n    :param string? units: Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time. defaults to i\n    '''\n    return await self._request_rapid_api('rapi_ski_resort_forecast_current_snow_conditions',kwargs)\n        "
    },
    "rapi_weather_with_ai_get_weather": {
        "api_name": "get_weather",
        "category": "Weather",
        "tool_name": "weather_with_ai",
        "code": "async def rapi_weather_with_ai_get_weather(self,*args,**kwargs):\n    '''Global weather forecast powered by Artificial Intelligence.\n    \n    \n\n    :param string version:  defaults to v1\n    :param integer lng: Geographical coordinates of the location (longitude) defaults to -73.999257\n    :param integer lat: Geographical coordinates of the location (latitude) defaults to 40.723558\n    :param ENUM? unit: Unit of temperature in Fahrenheit or Celsius.\n(Kelvin is used by default if nothing selected)\n    '''\n    return await self._request_rapid_api('rapi_weather_with_ai_get_weather',kwargs)\n        "
    },
    "rapi_forecast_rapidapigetforecasthourlybycoordinates": {
        "api_name": "rapidapigetforecasthourlybycoordinates",
        "category": "Weather",
        "tool_name": "forecast",
        "code": "async def rapi_forecast_rapidapigetforecasthourlybycoordinates(self,*args,**kwargs):\n    '''Get 16 days weather forecast data - worldwide - geographical coordinates...\n    \n    \n\n    :param integer latitude: Latitude defaults to 46.95828\n    :param integer longitude: Longitude defaults to 10.87152\n    '''\n    return await self._request_rapid_api('rapi_forecast_rapidapigetforecasthourlybycoordinates',kwargs)\n        "
    },
    "rapi_forecast_rapidapigetforecastsummarybycoordinates": {
        "api_name": "rapidapigetforecastsummarybycoordinates",
        "category": "Weather",
        "tool_name": "forecast",
        "code": "async def rapi_forecast_rapidapigetforecastsummarybycoordinates(self,*args,**kwargs):\n    '''Get 16 days weather forecast data - worldwide - geographical coordinates...\n    \n    \n\n    :param integer longitude: Longitude defaults to 10.87152\n    :param integer latitude: Latitude defaults to 46.95828\n    '''\n    return await self._request_rapid_api('rapi_forecast_rapidapigetforecastsummarybycoordinates',kwargs)\n        "
    },
    "rapi_air_quality_air_quality_forecast": {
        "api_name": "air_quality_forecast",
        "category": "Weather",
        "tool_name": "air_quality",
        "code": "async def rapi_air_quality_air_quality_forecast(self,*args,**kwargs):\n    '''Retrieve current, forecasted, and historical air quality for any point in the world.\n    \n    \n\n    :param integer lat: Latitude defaults to 35.779\n    :param integer lon: Longitude defaults to -78.638\n    :param integer? hours: Limits response forecast hours (default 72).  defaults to 72\n    '''\n    return await self._request_rapid_api('rapi_air_quality_air_quality_forecast',kwargs)\n        "
    },
    "rapi_peak_conditions_search_mountain_peak_by_name": {
        "api_name": "search_mountain_peak_by_name",
        "category": "Weather",
        "tool_name": "peak_conditions",
        "code": "async def rapi_peak_conditions_search_mountain_peak_by_name(self,*args,**kwargs):\n    '''Local weather reports are not accurate enough for climbing mountains. Get weather forecasts for the summit of over 10,000 mountains around the world.\n    \n    \n\n    :param string query: The search query - enter the name of the mountain peak you wish to search for. spaces can be represented by the '+' character. defaults to mount washington\n    '''\n    return await self._request_rapid_api('rapi_peak_conditions_search_mountain_peak_by_name',kwargs)\n        "
    },
    "rapi_cloud_cast_get_hourly_forecast": {
        "api_name": "get_hourly_forecast",
        "category": "Weather",
        "tool_name": "cloud_cast",
        "code": "async def rapi_cloud_cast_get_hourly_forecast(self,*args,**kwargs):\n    '''Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.\n    \n    \n\n    :param string city: \n    '''\n    return await self._request_rapid_api('rapi_cloud_cast_get_hourly_forecast',kwargs)\n        "
    },
    "rapi_cloud_cast_get_the_forecast": {
        "api_name": "get_the_forecast",
        "category": "Weather",
        "tool_name": "cloud_cast",
        "code": "async def rapi_cloud_cast_get_the_forecast(self,*args,**kwargs):\n    '''Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.\n    \n    \n\n    :param string city: \n    '''\n    return await self._request_rapid_api('rapi_cloud_cast_get_the_forecast',kwargs)\n        "
    },
    "rapi_cloud_cast_get_current_weather": {
        "api_name": "get_current_weather",
        "category": "Weather",
        "tool_name": "cloud_cast",
        "code": "async def rapi_cloud_cast_get_current_weather(self,*args,**kwargs):\n    '''Cloudcast is a simple and efficient API built with Node.js and Express, designed to provide real-time weather information for any city in the world. It is able to fetch and deliver current weather conditions including temperature, humidity, wind speed, and other vital meteorological data.\n    \n    \n\n    :param string city: \n    '''\n    return await self._request_rapid_api('rapi_cloud_cast_get_current_weather',kwargs)\n        "
    },
    "rapi_national_weather_service_alerts_active_area_area": {
        "api_name": "alerts_active_area_area",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_alerts_active_area_area(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string area: area: a valid area, see list in counts endpoint\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_alerts_active_area_area',kwargs)\n        "
    },
    "rapi_national_weather_service_points_point_forecast": {
        "api_name": "points_point_forecast",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_points_point_forecast(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string point: point: EPSG:4326 latitude, EPSG:4326 longitude\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_points_point_forecast',kwargs)\n        "
    },
    "rapi_national_weather_service_products_locations_locationid_types": {
        "api_name": "products_locations_locationid_types",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_products_locations_locationid_types(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string locationId: officeId: a weather office id (https://en.wikipedia.org/wiki/List_of_National_Weather_Service_Weather_Forecast_Offices)\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_products_locations_locationid_types',kwargs)\n        "
    },
    "rapi_national_weather_service_stations": {
        "api_name": "stations",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_stations(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param integer? limit: Limit the Results\n    :param string? states: Filter by States (by abbreviation)\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_stations',kwargs)\n        "
    },
    "rapi_national_weather_service_alerts_parameters": {
        "api_name": "alerts_parameters",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_alerts_parameters(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string? start: start, Start time (ISO8601DateTime)\n    :param string? end: end, End time (ISO8601DateTime)\n    :param string? status: status, Event status (alert, update, cancel)\n    :param string? zone_type: zone_type, Zone type (land or marine)\n    :param string? active: active, Active alerts (1 or 0)\n    :param string? type: type, Event type (list forthcoming)\n    :param string? point: point, Point (latitude,longitude)\n    :param string? state: State/marine code (list forthcoming)\n    :param string? zone: zone, Zone Id (forecast or county, list forthcoming)\n    :param string? urgency: urgency, Urgency (expected, immediate)\n    :param string? region: region, Region code (list forthcoming)\n    :param string? certainty: certainty, Certainty (likely, observed)\n    :param string? severity: severity, Severity (minor, moderate, severe)\n    :param string? limit:  limit, Limit (an integer)\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_alerts_parameters',kwargs)\n        "
    },
    "rapi_national_weather_service_alerts_active_region_region": {
        "api_name": "alerts_active_region_region",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_alerts_active_region_region(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string region: area: a valid region, see list in counts endpoint\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_alerts_active_region_region',kwargs)\n        "
    },
    "rapi_national_weather_service_points_point": {
        "api_name": "points_point",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_points_point(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string point: point: EPSG:4326 latitude, EPSG:4326 longitude\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_points_point',kwargs)\n        "
    },
    "rapi_national_weather_service_products_types_typeid_locations": {
        "api_name": "products_types_typeid_locations",
        "category": "Weather",
        "tool_name": "national_weather_service",
        "code": "async def rapi_national_weather_service_products_types_typeid_locations(self,*args,**kwargs):\n    '''National Weather Service API (api.weather.gov) NOAA (National Oceanic and Atmospheric Administration) provides national weather data as well as past data.\n    \n    \n\n    :param string typeId: typeId: an id of a valid product type (list forthcoming)\n    '''\n    return await self._request_rapid_api('rapi_national_weather_service_products_types_typeid_locations',kwargs)\n        "
    },
    "rapi_sri_lanka_news_api_get_news_from_one_news_source": {
        "api_name": "get_news_from_one_news_source",
        "category": "News_Media",
        "tool_name": "sri_lanka_news_api",
        "code": "async def rapi_sri_lanka_news_api_get_news_from_one_news_source(self,*args,**kwargs):\n    '''A simple API that allows you to obtain the most recent news from Sri Lankan media sites in Sinhala.\u00a0\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string source:  defaults to Ada.lk\n    '''\n    return await self._request_rapid_api('rapi_sri_lanka_news_api_get_news_from_one_news_source',kwargs)\n        "
    },
    "rapi_sri_lanka_news_api_get_all_latest_news": {
        "api_name": "get_all_latest_news",
        "category": "News_Media",
        "tool_name": "sri_lanka_news_api",
        "code": "async def rapi_sri_lanka_news_api_get_all_latest_news(self,*args,**kwargs):\n    '''A simple API that allows you to obtain the most recent news from Sri Lankan media sites in Sinhala.\u00a0\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sri_lanka_news_api_get_all_latest_news',kwargs)\n        "
    },
    "rapi_cote_ivoire_news_get_news": {
        "api_name": "get_news",
        "category": "News_Media",
        "tool_name": "cote_ivoire_news",
        "code": "async def rapi_cote_ivoire_news_get_news(self,*args,**kwargs):\n    '''Toute l'actualit\u00e9 instantan\u00e9e politique, \u00e9conomique, sportive, culturelle, soci\u00e9tale de la C\u00f4te d'Ivoire, issues plusieurs sources. Ivory Coast news.\n    \n    \n\n    :param string? page: \n    :param string? rank: \n    :param string? search: \n    '''\n    return await self._request_rapid_api('rapi_cote_ivoire_news_get_news',kwargs)\n        "
    },
    "rapi_cote_ivoire_news_home": {
        "api_name": "home",
        "category": "News_Media",
        "tool_name": "cote_ivoire_news",
        "code": "async def rapi_cote_ivoire_news_home(self,*args,**kwargs):\n    '''Toute l'actualit\u00e9 instantan\u00e9e politique, \u00e9conomique, sportive, culturelle, soci\u00e9tale de la C\u00f4te d'Ivoire, issues plusieurs sources. Ivory Coast news.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cote_ivoire_news_home',kwargs)\n        "
    },
    "rapi_live_climate_change_v2_get_individual_news_from_source_news": {
        "api_name": "get_individual_news_from_source_news",
        "category": "News_Media",
        "tool_name": "live_climate_change_v2",
        "code": "async def rapi_live_climate_change_v2_get_individual_news_from_source_news(self,*args,**kwargs):\n    '''An API showing all the latest Climate Change news around the world\n    \n    \n\n    :param string newspaperId:  defaults to guardian\n    '''\n    return await self._request_rapid_api('rapi_live_climate_change_v2_get_individual_news_from_source_news',kwargs)\n        "
    },
    "rapi_moka_news_sources_list_new": {
        "api_name": "sources_list_new",
        "category": "News_Media",
        "tool_name": "moka_news",
        "code": "async def rapi_moka_news_sources_list_new(self,*args,**kwargs):\n    '''A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moka_news_sources_list_new',kwargs)\n        "
    },
    "rapi_moka_news_recent_100": {
        "api_name": "recent_100",
        "category": "News_Media",
        "tool_name": "moka_news",
        "code": "async def rapi_moka_news_recent_100(self,*args,**kwargs):\n    '''A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moka_news_recent_100',kwargs)\n        "
    },
    "rapi_moka_news_by_category": {
        "api_name": "by_category",
        "category": "News_Media",
        "tool_name": "moka_news",
        "code": "async def rapi_moka_news_by_category(self,*args,**kwargs):\n    '''A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  \n    \n    \n\n    :param string cat:  defaults to Sport\n    '''\n    return await self._request_rapid_api('rapi_moka_news_by_category',kwargs)\n        "
    },
    "rapi_moka_news_categories": {
        "api_name": "categories",
        "category": "News_Media",
        "tool_name": "moka_news",
        "code": "async def rapi_moka_news_categories(self,*args,**kwargs):\n    '''A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moka_news_categories',kwargs)\n        "
    },
    "rapi_moka_news_recent_50": {
        "api_name": "recent_50",
        "category": "News_Media",
        "tool_name": "moka_news",
        "code": "async def rapi_moka_news_recent_50(self,*args,**kwargs):\n    '''A scrapper / scraper API to get latest news every minute from more than 30 sources all over the world as a start ( sources will be increased with time to be hundreds of different sources of live news )  \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_moka_news_recent_50',kwargs)\n        "
    },
    "rapi_klimawandel_live_hole_alle_news_beitr_ge_zu_klimawandel": {
        "api_name": "hole_alle_news_beitr_ge_zu_klimawandel",
        "category": "News_Media",
        "tool_name": "klimawandel_live",
        "code": "async def rapi_klimawandel_live_hole_alle_news_beitr_ge_zu_klimawandel(self,*args,**kwargs):\n    '''Diese API zeigt die aktuellsten Klimawandel-News von diversen Schweizer Medien.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_klimawandel_live_hole_alle_news_beitr_ge_zu_klimawandel',kwargs)\n        "
    },
    "rapi_news_v3_articles": {
        "api_name": "articles",
        "category": "News_Media",
        "tool_name": "news_v3",
        "code": "async def rapi_news_v3_articles(self,*args,**kwargs):\n    '''News Scrapper\n    \n    \n\n    :param string newspaper_id:  defaults to nytimes\n    '''\n    return await self._request_rapid_api('rapi_news_v3_articles',kwargs)\n        "
    },
    "rapi_news_v3_all_articles": {
        "api_name": "all_articles",
        "category": "News_Media",
        "tool_name": "news_v3",
        "code": "async def rapi_news_v3_all_articles(self,*args,**kwargs):\n    '''News Scrapper\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_v3_all_articles',kwargs)\n        "
    },
    "rapi_news_v3_newspapers": {
        "api_name": "newspapers",
        "category": "News_Media",
        "tool_name": "news_v3",
        "code": "async def rapi_news_v3_newspapers(self,*args,**kwargs):\n    '''News Scrapper\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_v3_newspapers',kwargs)\n        "
    },
    "rapi_malaysia_kini_get_latest_article_list": {
        "api_name": "get_latest_article_list",
        "category": "News_Media",
        "tool_name": "malaysia_kini",
        "code": "async def rapi_malaysia_kini_get_latest_article_list(self,*args,**kwargs):\n    '''Live News by Malaysia Kini\n    \n    \n\n    :param ENUM language: English (en), Malay (my), Chinese (zh)\n    '''\n    return await self._request_rapid_api('rapi_malaysia_kini_get_latest_article_list',kwargs)\n        "
    },
    "rapi_malaysia_kini_get_article_by_sid": {
        "api_name": "get_article_by_sid",
        "category": "News_Media",
        "tool_name": "malaysia_kini",
        "code": "async def rapi_malaysia_kini_get_article_by_sid(self,*args,**kwargs):\n    '''Live News by Malaysia Kini\n    \n    \n\n    :param integer sid: Article id number return by **Get Latest Article List** method (stated as **sid**) defaults to 565154\n    '''\n    return await self._request_rapid_api('rapi_malaysia_kini_get_article_by_sid',kwargs)\n        "
    },
    "rapi_imdb_title_get_most_popular_tv_shows": {
        "api_name": "title_get_most_popular_tv_shows",
        "category": "News_Media",
        "tool_name": "imdb",
        "code": "async def rapi_imdb_title_get_most_popular_tv_shows(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string? purchaseCountry: Accept one of following US|GB|DE|IN|IT|FR|JP|CA|ES defaults to US\n    :param string? homeCountry: Accept one of following US|GB|DE|IN|IT|FR|JP|CA|ES defaults to US\n    :param string? currentCountry: Accept one of following AR|AU|CA|CL|ES|DE|IT|MX|NZ|PT|ES|GB|US defaults to US\n    '''\n    return await self._request_rapid_api('rapi_imdb_title_get_most_popular_tv_shows',kwargs)\n        "
    },
    "rapi_imdb_title_get_most_popular_movies": {
        "api_name": "title_get_most_popular_movies",
        "category": "News_Media",
        "tool_name": "imdb",
        "code": "async def rapi_imdb_title_get_most_popular_movies(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string? homeCountry: Accept one of following US|GB|DE|IN|IT|FR|JP|CA|ES defaults to US\n    :param string? purchaseCountry: Accept one of following US|GB|DE|IN|IT|FR|JP|CA|ES defaults to US\n    :param string? currentCountry: Accept one of following AR|AU|CA|CL|ES|DE|IT|MX|NZ|PT|ES|GB|US defaults to US\n    '''\n    return await self._request_rapid_api('rapi_imdb_title_get_most_popular_movies',kwargs)\n        "
    },
    "rapi_imdb_title_get_overview_details": {
        "api_name": "title_get_overview_details",
        "category": "News_Media",
        "tool_name": "imdb",
        "code": "async def rapi_imdb_title_get_overview_details(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string tconst: You need to extract the value started with \\\"tt\\\" of id field returned from .../title/auto-complete or .../title/find endpoint. Ex : tt0944947 defaults to tt0944947\n    :param string? currentCountry: Accept one of following AR|AU|CA|CL|ES|DE|IT|MX|NZ|PT|ES|GB|US defaults to US\n    '''\n    return await self._request_rapid_api('rapi_imdb_title_get_overview_details',kwargs)\n        "
    },
    "rapi_imdb_actors_get_all_videos": {
        "api_name": "actors_get_all_videos",
        "category": "News_Media",
        "tool_name": "imdb",
        "code": "async def rapi_imdb_actors_get_all_videos(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string nconst: You need to extract the value started with \\\"nm\\\" returned in .../actors/list-born-today or .../actors/list-most-popular-celebs endpoint. Ex : nm0001667 defaults to nm0001667\n    :param string? region: Accept one of following AR|AU|CA|CL|ES|DE|IT|MX|NZ|PT|ES|GB|US defaults to US\n    '''\n    return await self._request_rapid_api('rapi_imdb_actors_get_all_videos',kwargs)\n        "
    },
    "rapi_imdb_actors_get_all_filmography": {
        "api_name": "actors_get_all_filmography",
        "category": "News_Media",
        "tool_name": "imdb",
        "code": "async def rapi_imdb_actors_get_all_filmography(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string nconst: You need to extract the value started with \\\"nm\\\" returned in .../actors/list-born-today or .../actors/list-most-popular-celebs endpoint. Ex : nm0001667 defaults to nm0001667\n    '''\n    return await self._request_rapid_api('rapi_imdb_actors_get_all_filmography',kwargs)\n        "
    },
    "rapi_latest_ipl_news_get_individual_news_source_news": {
        "api_name": "get_individual_news_source_news",
        "category": "News_Media",
        "tool_name": "latest_ipl_news",
        "code": "async def rapi_latest_ipl_news_get_individual_news_source_news(self,*args,**kwargs):\n    '''An API showing all the latest IPL News around the world.\n    \n    \n\n    :param string newspaperId:  defaults to theguardian\n    '''\n    return await self._request_rapid_api('rapi_latest_ipl_news_get_individual_news_source_news',kwargs)\n        "
    },
    "rapi_latest_ipl_news_get_all_ipl_news": {
        "api_name": "get_all_ipl_news",
        "category": "News_Media",
        "tool_name": "latest_ipl_news",
        "code": "async def rapi_latest_ipl_news_get_all_ipl_news(self,*args,**kwargs):\n    '''An API showing all the latest IPL News around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_latest_ipl_news_get_all_ipl_news',kwargs)\n        "
    },
    "rapi_webit_news_search_trending": {
        "api_name": "trending",
        "category": "News_Media",
        "tool_name": "webit_news_search",
        "code": "async def rapi_webit_news_search_trending(self,*args,**kwargs):\n    '''40+ Languages News Search, Trending articles feed.\n    \n    \n\n    :param integer? offset: Offset to start getting results from.\n\nFor example, if you search 10 articles at a time (number=10), then you should set offset=0 for page 1, offset=10 for page 2, offset=20 for page 3 and so on.\n    :param string? language: Supported languages (ISO 639-1 codes):\nSupported languages (ISO 639-1 codes):\n- Stable: 'en', 'bg', 'de', 'es', 'fr', 'fi', 'it', 'ja', 'nl', 'pl', 'pt', 'ro', 'ru', 'zh';\n- Beta: 'ar', 'ca', 'ko', 'nb', 'sv', 'tr', 'uk';\n- Alpha: 'be', 'ca', 'da', 'el', 'et', 'fa', 'ga', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'lv', 'no', 'om', 'sk', 'sr', 'tt', 'vi'. defaults to en\n    :param ENUM? category: [COMING SOON (APRIL 2021) - It is currently ignored] Category to restrict articles by.\n    :param string? from_sources: [PREMIUM - PRO+ plans only] Comma separated list of sources hosts to pick news from. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc. This will exclude any other source.\n    :param integer? number: Number of articles to retrieve with a single request.\n\nMaximum allowed results number per request:\n- 10 results for Free/Basic plan;\n- 50 results for Pro plan;\n- 50 results for Ultra plan;\n- 100 results for Mega plan.\n\nFor requesting any customized quota, please contact our support team.\n    :param boolean? has_image: Set this to \\\"True\\\" in order to get only articles having an image associated to. Default is \\\"False\\\".\n    :param string? exclude_sources: [PREMIUM - PRO+ plans only] Comma separated list of sources hosts to exclude from the results. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc.\n    '''\n    return await self._request_rapid_api('rapi_webit_news_search_trending',kwargs)\n        "
    },
    "rapi_webit_news_search_search": {
        "api_name": "search",
        "category": "News_Media",
        "tool_name": "webit_news_search",
        "code": "async def rapi_webit_news_search_search(self,*args,**kwargs):\n    '''40+ Languages News Search, Trending articles feed.\n    \n    \n\n    :param string q: String including the search terms to seek articles for defaults to covid\n    :param string? language: Language to search articles for.\n\nSupported languages (ISO 639-1 codes):\n- Stable: 'en', 'bg', 'de', 'es', 'fr', 'fi', 'it', 'ja', 'nl', 'pl', 'pt', 'ro', 'ru', 'zh';\n- Beta: 'ar', 'ca', 'ko', 'nb', 'sv', 'tr', 'uk';\n- Alpha: 'be', 'ca', 'da', 'el', 'et', 'fa', 'ga', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'lv', 'no', 'om', 'sk', 'sr', 'tt', 'vi'. defaults to en\n    :param string? exclude_sources: [PREMIUM - PRO+ plans only] Comma separated list of sources hosts to exclude from the results. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc.\n    :param ENUM? category: [COMING SOON (APRIL 2021) - It is currently ignored] Category to restrict articles by.\n    :param string? from_sources: [PREMIUM - PRO+ plans only] Comma separated list of sources hosts to pick news from. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc. This will exclude any other source.\n    :param integer? offset: Offset to start getting results from.\n\nFor example, if you search 10 articles at a time (number=10), then you should set offset=0 for page 1, offset=10 for page 2, offset=20 for page 3 and so on. defaults to 0\n    :param boolean? has_image: Set this to \\\"True\\\" in order to get only articles having an image associated to. Default is \\\"False\\\".\n    :param integer? number: Number of articles to retrieve with a single request.\n\nMaximum allowed results number per request:\n- 10 results for Free/Basic plan;\n- 50 results for Pro plan;\n- 50 results for Ultra plan;\n- 100 results for Mega plan.\n\nFor requesting any customized quota, please contact our support team. defaults to 8\n    '''\n    return await self._request_rapid_api('rapi_webit_news_search_search',kwargs)\n        "
    },
    "rapi_ai_news_v2_get_all_ai_news": {
        "api_name": "get_all_ai_news",
        "category": "News_Media",
        "tool_name": "ai_news_v2",
        "code": "async def rapi_ai_news_v2_get_all_ai_news(self,*args,**kwargs):\n    '''This handy tool allows you to access the latest news about artificial intelligence from around the world, all in one place. Whether you're a business interested in keeping up with the latest trends, or just curious about what's going on, the AI news API is perfect for you.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ai_news_v2_get_all_ai_news',kwargs)\n        "
    },
    "rapi_crypto_news_live_v2_get_individual_news_sources": {
        "api_name": "get_individual_news_sources",
        "category": "News_Media",
        "tool_name": "crypto_news_live_v2",
        "code": "async def rapi_crypto_news_live_v2_get_individual_news_sources(self,*args,**kwargs):\n    '''A Crypto News API pulling data from around the world about the latest news in crypto\n    \n    \n\n    :param string newspaperId:  defaults to CryptoNews\n    '''\n    return await self._request_rapid_api('rapi_crypto_news_live_v2_get_individual_news_sources',kwargs)\n        "
    },
    "rapi_news_api_v2_top_headlines": {
        "api_name": "top_headlines",
        "category": "News_Media",
        "tool_name": "news_api_v2",
        "code": "async def rapi_news_api_v2_top_headlines(self,*args,**kwargs):\n    '''Google News and Bing News Alternative. The Best API to Search News from the 2500+ Publishers Around The World. \n    \n    \n\n    :param string? language: en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te defaults to en\n    :param string? category: Possible options: business, science, sports, entertainment, health, technology\n\nDefault value: all categories defaults to sports\n    :param string? country: MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA defaults to us\n    :param ENUM? sortBy: Default value: published_date\n    :param integer? pageSize:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_news_api_v2_top_headlines',kwargs)\n        "
    },
    "rapi_news_api_v2_search": {
        "api_name": "search",
        "category": "News_Media",
        "tool_name": "news_api_v2",
        "code": "async def rapi_news_api_v2_search(self,*args,**kwargs):\n    '''Google News and Bing News Alternative. The Best API to Search News from the 2500+ Publishers Around The World. \n    \n    \n\n    :param string q:  defaults to computer\n    :param DATE (YYYY-MM-DD)? to: The datetime string must match ISO 8601 format\n    :param integer? pageSize:  defaults to 10\n    :param DATE (YYYY-MM-DD)? from: The datetime string must match ISO 8601 format\n    :param string? country: MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA defaults to us\n    :param string? language: en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te defaults to en\n    :param ENUM? sortBy: Default value: random\n    :param string? publisher: A Comma-separated string of publisher's.\n\nMaximum 5 publishers. defaults to cnn.com,bbc.com\n    '''\n    return await self._request_rapid_api('rapi_news_api_v2_search',kwargs)\n        "
    },
    "rapi_climate_news_api_v2_get_all_climate_change_related_news": {
        "api_name": "get_all_climate_change_related_news",
        "category": "News_Media",
        "tool_name": "climate_news_api_v2",
        "code": "async def rapi_climate_news_api_v2_get_all_climate_change_related_news(self,*args,**kwargs):\n    '''An API showing all the Climate change related news around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_climate_news_api_v2_get_all_climate_change_related_news',kwargs)\n        "
    },
    "rapi_climate_news_api_v2_get_individual_news_source_news": {
        "api_name": "get_individual_news_source_news",
        "category": "News_Media",
        "tool_name": "climate_news_api_v2",
        "code": "async def rapi_climate_news_api_v2_get_individual_news_source_news(self,*args,**kwargs):\n    '''An API showing all the Climate change related news around the world.\n    \n    \n\n    :param string newspaperId:  defaults to thetimes\n    '''\n    return await self._request_rapid_api('rapi_climate_news_api_v2_get_individual_news_source_news',kwargs)\n        "
    },
    "rapi_india_today_unofficial_tag_search": {
        "api_name": "tag_search",
        "category": "News_Media",
        "tool_name": "india_today_unofficial",
        "code": "async def rapi_india_today_unofficial_tag_search(self,*args,**kwargs):\n    '''The India Today Unofficial API is a third-party web service that provides access to news content from the India Today platform. It allows developers to retrieve articles, videos, images, and other information related to various topics. Please note that it is not an official API provided by India Today.\n    \n    \n\n    :param string tag:  defaults to India\n    '''\n    return await self._request_rapid_api('rapi_india_today_unofficial_tag_search',kwargs)\n        "
    },
    "rapi_india_today_unofficial_get_news": {
        "api_name": "get_news",
        "category": "News_Media",
        "tool_name": "india_today_unofficial",
        "code": "async def rapi_india_today_unofficial_get_news(self,*args,**kwargs):\n    '''The India Today Unofficial API is a third-party web service that provides access to news content from the India Today platform. It allows developers to retrieve articles, videos, images, and other information related to various topics. Please note that it is not an official API provided by India Today.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_today_unofficial_get_news',kwargs)\n        "
    },
    "rapi_greek_news_in_english_get_all_sources": {
        "api_name": "get_all_sources",
        "category": "News_Media",
        "tool_name": "greek_news_in_english",
        "code": "async def rapi_greek_news_in_english_get_all_sources(self,*args,**kwargs):\n    '''An API showing all the latest Greek news  in English\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_greek_news_in_english_get_all_sources',kwargs)\n        "
    },
    "rapi_greek_news_in_english_get_articles_from_a_single_source": {
        "api_name": "get_articles_from_a_single_source",
        "category": "News_Media",
        "tool_name": "greek_news_in_english",
        "code": "async def rapi_greek_news_in_english_get_articles_from_a_single_source(self,*args,**kwargs):\n    '''An API showing all the latest Greek news  in English\n    \n    \n\n    :param string siteId:  defaults to ktg\n    '''\n    return await self._request_rapid_api('rapi_greek_news_in_english_get_articles_from_a_single_source',kwargs)\n        "
    },
    "rapi_greek_news_in_english_get_all_news": {
        "api_name": "get_all_news",
        "category": "News_Media",
        "tool_name": "greek_news_in_english",
        "code": "async def rapi_greek_news_in_english_get_all_news(self,*args,**kwargs):\n    '''An API showing all the latest Greek news  in English\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_greek_news_in_english_get_all_news',kwargs)\n        "
    },
    "rapi_a_i_smartable_getcompanies": {
        "api_name": "getcompanies",
        "category": "News_Media",
        "tool_name": "a_i_smartable",
        "code": "async def rapi_a_i_smartable_getcompanies(self,*args,**kwargs):\n    '''The A.I. Smartable API offers the artificial intelligence news, learning resources, companies, influencers, events and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_a_i_smartable_getcompanies',kwargs)\n        "
    },
    "rapi_a_i_smartable_getpeople": {
        "api_name": "getpeople",
        "category": "News_Media",
        "tool_name": "a_i_smartable",
        "code": "async def rapi_a_i_smartable_getpeople(self,*args,**kwargs):\n    '''The A.I. Smartable API offers the artificial intelligence news, learning resources, companies, influencers, events and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_a_i_smartable_getpeople',kwargs)\n        "
    },
    "rapi_a_i_smartable_getprojects": {
        "api_name": "getprojects",
        "category": "News_Media",
        "tool_name": "a_i_smartable",
        "code": "async def rapi_a_i_smartable_getprojects(self,*args,**kwargs):\n    '''The A.I. Smartable API offers the artificial intelligence news, learning resources, companies, influencers, events and other information.\n    \n    \n\n    :param integer page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_a_i_smartable_getprojects',kwargs)\n        "
    },
    "rapi_a_i_smartable_gettopics": {
        "api_name": "gettopics",
        "category": "News_Media",
        "tool_name": "a_i_smartable",
        "code": "async def rapi_a_i_smartable_gettopics(self,*args,**kwargs):\n    '''The A.I. Smartable API offers the artificial intelligence news, learning resources, companies, influencers, events and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_a_i_smartable_gettopics',kwargs)\n        "
    },
    "rapi_a_i_smartable_getnewsletters": {
        "api_name": "getnewsletters",
        "category": "News_Media",
        "tool_name": "a_i_smartable",
        "code": "async def rapi_a_i_smartable_getnewsletters(self,*args,**kwargs):\n    '''The A.I. Smartable API offers the artificial intelligence news, learning resources, companies, influencers, events and other information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_a_i_smartable_getnewsletters',kwargs)\n        "
    },
    "rapi_narco_in_mexico_get_all_narco_news": {
        "api_name": "get_all_narco_news",
        "category": "News_Media",
        "tool_name": "narco_in_mexico",
        "code": "async def rapi_narco_in_mexico_get_all_narco_news(self,*args,**kwargs):\n    '''Narco in Mexico News\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_narco_in_mexico_get_all_narco_news',kwargs)\n        "
    },
    "rapi_climate_change_live_v27_get_all_climate_change_news": {
        "api_name": "get_all_climate_change_news",
        "category": "News_Media",
        "tool_name": "climate_change_live_v27",
        "code": "async def rapi_climate_change_live_v27_get_all_climate_change_news(self,*args,**kwargs):\n    '''An API showing all the latest climate change news around the world\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_climate_change_live_v27_get_all_climate_change_news',kwargs)\n        "
    },
    "rapi_us_presidential_election_osay": {
        "api_name": "osay",
        "category": "News_Media",
        "tool_name": "us_presidential_election",
        "code": "async def rapi_us_presidential_election_osay(self,*args,**kwargs):\n    '''API for US Presidential Election results, by state (from 1976-) and county (eventually, from 2000-)\n    \n    \n\n    :param string state: US State name. No spaces. defaults to illinois\n    '''\n    return await self._request_rapid_api('rapi_us_presidential_election_osay',kwargs)\n        "
    },
    "rapi_live_tv_api_get_the_channels_description_and_status": {
        "api_name": "get_the_channels_description_and_status",
        "category": "News_Media",
        "tool_name": "live_tv_api",
        "code": "async def rapi_live_tv_api_get_the_channels_description_and_status(self,*args,**kwargs):\n    '''An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_live_tv_api_get_the_channels_description_and_status',kwargs)\n        "
    },
    "rapi_live_tv_api_get_the_channels_social_accounts_and_contacts": {
        "api_name": "get_the_channels_social_accounts_and_contacts",
        "category": "News_Media",
        "tool_name": "live_tv_api",
        "code": "async def rapi_live_tv_api_get_the_channels_social_accounts_and_contacts(self,*args,**kwargs):\n    '''An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_live_tv_api_get_the_channels_social_accounts_and_contacts',kwargs)\n        "
    },
    "rapi_live_tv_api_get_the_channel_stream_url": {
        "api_name": "get_the_channel_stream_url",
        "category": "News_Media",
        "tool_name": "live_tv_api",
        "code": "async def rapi_live_tv_api_get_the_channel_stream_url(self,*args,**kwargs):\n    '''An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_live_tv_api_get_the_channel_stream_url',kwargs)\n        "
    },
    "rapi_ai_news_global_available_regions": {
        "api_name": "available_regions",
        "category": "News_Media",
        "tool_name": "ai_news_global",
        "code": "async def rapi_ai_news_global_available_regions(self,*args,**kwargs):\n    '''Global News produced by AI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ai_news_global_available_regions',kwargs)\n        "
    },
    "rapi_goverlytics_politicians": {
        "api_name": "politicians",
        "category": "News_Media",
        "tool_name": "goverlytics",
        "code": "async def rapi_goverlytics_politicians(self,*args,**kwargs):\n    '''The Goverlytics API.\n    \n    \n\n    :param integer? offset: \n    :param integer? limit: \n    :param boolean? active: \n    :param ENUM? province: \n    :param ENUM? municipality: \n    :param ENUM? level_of_government: \n    '''\n    return await self._request_rapid_api('rapi_goverlytics_politicians',kwargs)\n        "
    },
    "rapi_goverlytics_politician_goverlytics_id": {
        "api_name": "politician_goverlytics_id",
        "category": "News_Media",
        "tool_name": "goverlytics",
        "code": "async def rapi_goverlytics_politician_goverlytics_id(self,*args,**kwargs):\n    '''The Goverlytics API.\n    \n    \n\n    :param string goverlytics_id:  defaults to 437c7e15-c66a-4b46-af9b-07e9b1317190\n    '''\n    return await self._request_rapid_api('rapi_goverlytics_politician_goverlytics_id',kwargs)\n        "
    },
    "rapi_movies_details_find_by_title": {
        "api_name": "find_by_title",
        "category": "News_Media",
        "tool_name": "movies_details",
        "code": "async def rapi_movies_details_find_by_title(self,*args,**kwargs):\n    '''we will provide movies details\n    \n    \n\n    :param string q:  defaults to game of thr\n    '''\n    return await self._request_rapid_api('rapi_movies_details_find_by_title',kwargs)\n        "
    },
    "rapi_green_gold_all_articles": {
        "api_name": "all_articles",
        "category": "News_Media",
        "tool_name": "green_gold",
        "code": "async def rapi_green_gold_all_articles(self,*args,**kwargs):\n    '''An API aggregating news articles related to green technology, stocks, start-ups, and trends.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_green_gold_all_articles',kwargs)\n        "
    },
    "rapi_ar_vr_news_getnews": {
        "api_name": "getnews",
        "category": "News_Media",
        "tool_name": "ar_vr_news",
        "code": "async def rapi_ar_vr_news_getnews(self,*args,**kwargs):\n    '''Get the latest news on Augmented Reality and Virtual Reality.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ar_vr_news_getnews',kwargs)\n        "
    },
    "rapi_arabic_news_api_cnn_arabic": {
        "api_name": "cnn_arabic",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_cnn_arabic(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_cnn_arabic',kwargs)\n        "
    },
    "rapi_arabic_news_api_hibapress": {
        "api_name": "hibapress",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_hibapress(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_hibapress',kwargs)\n        "
    },
    "rapi_arabic_news_api_youm7": {
        "api_name": "youm7",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_youm7(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_youm7',kwargs)\n        "
    },
    "rapi_arabic_news_api_france24_arabic": {
        "api_name": "france24_arabic",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_france24_arabic(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_france24_arabic',kwargs)\n        "
    },
    "rapi_arabic_news_api_alarabiya": {
        "api_name": "alarabiya",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_alarabiya(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_alarabiya',kwargs)\n        "
    },
    "rapi_arabic_news_api_bbc_arabic": {
        "api_name": "bbc_arabic",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_bbc_arabic(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_bbc_arabic',kwargs)\n        "
    },
    "rapi_arabic_news_api_rt_arabic": {
        "api_name": "rt_arabic",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_rt_arabic(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_rt_arabic',kwargs)\n        "
    },
    "rapi_arabic_news_api_aljazeera": {
        "api_name": "aljazeera",
        "category": "News_Media",
        "tool_name": "arabic_news_api",
        "code": "async def rapi_arabic_news_api_aljazeera(self,*args,**kwargs):\n    '''this API gets you headlins and links to the latest news from the most famous arabic news websites such as Aljazeera, BBC Arabic, CNN Arabic, Alarabiya. and more.\n\u0647\u0630\u0627 \u0627\u0644\u0627\u064a \u0628\u064a \u0622\u064a \u064a\u0633\u062a\u0631\u062c\u0639 \u0622\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0623\u0628\u0631\u0632 \u0627\u0644\u0645\u0648\u0627\u0642\u0639 \u0627\u0644\u0625\u062e\u0628\u0627\u0631\u064a\u0629 \u0627\u0644\u0639\u0631\u0628\u064a\u0629\u060c \u064a\u062a\u0645 \u062a\u062d\u062f\u064a\u062b \u0627\u0644\u0628\u064a\u0627\u0646\u0627\u062a \u0648\u0627\u0636\u0627\u0641\u0629 \u0645\u0635\u0627\u062f\u0631 \u0628\u0634\u0643\u0644 \u0645\u0633\u062a\u0645\u0631\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_arabic_news_api_aljazeera',kwargs)\n        "
    },
    "rapi_news_network_get_news": {
        "api_name": "get_news",
        "category": "News_Media",
        "tool_name": "news_network",
        "code": "async def rapi_news_network_get_news(self,*args,**kwargs):\n    '''Global network of news.\n    \n    \n\n    :param ENUM category: \n    :param ENUM region: ae: United Arab Emirates\nar: Argentina\nat: Austria\nau: Australia\nbe: Belgium\nbg: Bulgaria\nbr: Brazil\nca: Canada\nch: Switzerland\ncn: China \nco: Colombia\ncu: Cuba\ncz:\tCzech Republic\nde: Germany\neg: Egypt\nfr: France\ngb: United Kingdom\ngr: Greece\nhk: Hong Kong\nhu: Hungray\nid: Indonesia\nie: Ireland\nil: Israel\nin: India\nit: Italy\njp: Japan\nkr: South Korea\nlt: Lithuania\nlv: Latvia\nma: Morocco\nmx: Mexico\nmy: Malaysia\nng: Nigeria\nnl: Netherlands\nno: Norway\nnz: New Zealand\nph: Philippines\npl: Poland\npt: Portugal\nro: Romania\nrs: Serbia\nru: Russia\nsa: Saudi Arabia\nse: Sweden\nsg: Singapore\nsi: Slovenia\nsk: Slovakia\nth: Thailand\ntr: Turkey\ntw: Taiwan\nua: Ukraine\nus: United States\nve: Venuzuela\nza: South Africa\n    '''\n    return await self._request_rapid_api('rapi_news_network_get_news',kwargs)\n        "
    },
    "rapi_news_network_search_news": {
        "api_name": "search_news",
        "category": "News_Media",
        "tool_name": "news_network",
        "code": "async def rapi_news_network_search_news(self,*args,**kwargs):\n    '''Global network of news.\n    \n    \n\n    :param string keyword:  defaults to Joe Biden\n    :param ENUM language: \nar: arabic\nde: german\nen: english\nes: Spanish\nfr: French\nhe: hebrew\nit: italian\nnl: dutch\nno: norwegian\npt: portuguese\nru: russian\nse: swedish\nzh: chinese\n    '''\n    return await self._request_rapid_api('rapi_news_network_search_news',kwargs)\n        "
    },
    "rapi_news_network_available_region_list": {
        "api_name": "available_region_list",
        "category": "News_Media",
        "tool_name": "news_network",
        "code": "async def rapi_news_network_available_region_list(self,*args,**kwargs):\n    '''Global network of news.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_news_network_available_region_list',kwargs)\n        "
    },
    "rapi_climate_change_api_v5_get_specific_climate_change_news": {
        "api_name": "get_specific_climate_change_news",
        "category": "News_Media",
        "tool_name": "climate_change_api_v5",
        "code": "async def rapi_climate_change_api_v5_get_specific_climate_change_news(self,*args,**kwargs):\n    '''An API showing all the latest climate change news around the world\n    \n    \n\n    :param string newspaperId:  defaults to guardian\n    '''\n    return await self._request_rapid_api('rapi_climate_change_api_v5_get_specific_climate_change_news',kwargs)\n        "
    },
    "rapi_instant_cameroon_news_retrieve_data": {
        "api_name": "retrieve_data",
        "category": "News_Media",
        "tool_name": "instant_cameroon_news",
        "code": "async def rapi_instant_cameroon_news_retrieve_data(self,*args,**kwargs):\n    '''Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.\n    \n    \n\n    :param string? rank: \n    :param string? page: \n    :param string? search: \n    '''\n    return await self._request_rapid_api('rapi_instant_cameroon_news_retrieve_data',kwargs)\n        "
    },
    "rapi_instant_cameroon_news_home_page": {
        "api_name": "home_page",
        "category": "News_Media",
        "tool_name": "instant_cameroon_news",
        "code": "async def rapi_instant_cameroon_news_home_page(self,*args,**kwargs):\n    '''Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_instant_cameroon_news_home_page',kwargs)\n        "
    },
    "rapi_pollution_news_api_get_news_from_a_specific_source": {
        "api_name": "get_news_from_a_specific_source",
        "category": "News_Media",
        "tool_name": "pollution_news_api",
        "code": "async def rapi_pollution_news_api_get_news_from_a_specific_source(self,*args,**kwargs):\n    '''An API service returning news articles about pollution in african countries.\nTry using another project of mine to summarize the articles - \nhttps://soft-summarizer.vercel.app/ \n    \n    \n\n    :param string newspaperID:  defaults to sei\n    '''\n    return await self._request_rapid_api('rapi_pollution_news_api_get_news_from_a_specific_source',kwargs)\n        "
    },
    "rapi_pollution_news_api_get_all_news_on_pollution": {
        "api_name": "get_all_news_on_pollution",
        "category": "News_Media",
        "tool_name": "pollution_news_api",
        "code": "async def rapi_pollution_news_api_get_all_news_on_pollution(self,*args,**kwargs):\n    '''An API service returning news articles about pollution in african countries.\nTry using another project of mine to summarize the articles - \nhttps://soft-summarizer.vercel.app/ \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pollution_news_api_get_all_news_on_pollution',kwargs)\n        "
    },
    "rapi_political_bias_database_introduction_page": {
        "api_name": "introduction_page",
        "category": "News_Media",
        "tool_name": "political_bias_database",
        "code": "async def rapi_political_bias_database_introduction_page(self,*args,**kwargs):\n    '''A database containing data allsides.com and mediabiasfactcheck.com.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_political_bias_database_introduction_page',kwargs)\n        "
    },
    "rapi_political_bias_database_fetch_all_allsides_com_data": {
        "api_name": "fetch_all_allsides_com_data",
        "category": "News_Media",
        "tool_name": "political_bias_database",
        "code": "async def rapi_political_bias_database_fetch_all_allsides_com_data(self,*args,**kwargs):\n    '''A database containing data allsides.com and mediabiasfactcheck.com.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_political_bias_database_fetch_all_allsides_com_data',kwargs)\n        "
    },
    "rapi_climate_news_feed_article_page": {
        "api_name": "article_page",
        "category": "News_Media",
        "tool_name": "climate_news_feed",
        "code": "async def rapi_climate_news_feed_article_page(self,*args,**kwargs):\n    '''Climate Change news from the most trusted sources. Nasa, UN, and more. Flexible, reliable, and fast with low latency. Includes thumbnails, filtering, and pagination\n    \n    \n\n    :param integer id:  defaults to 1\n    :param integer? limit:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_climate_news_feed_article_page',kwargs)\n        "
    },
    "rapi_climate_news_feed_get_articles": {
        "api_name": "get_articles",
        "category": "News_Media",
        "tool_name": "climate_news_feed",
        "code": "async def rapi_climate_news_feed_get_articles(self,*args,**kwargs):\n    '''Climate Change news from the most trusted sources. Nasa, UN, and more. Flexible, reliable, and fast with low latency. Includes thumbnails, filtering, and pagination\n    \n    \n\n    :param integer? limit:  defaults to 50\n    :param string? exclude:  defaults to The Guardian\n    :param string? source:  defaults to Nasa Climate\n    '''\n    return await self._request_rapid_api('rapi_climate_news_feed_get_articles',kwargs)\n        "
    },
    "rapi_climate_change_api_v3_get_all_climate_change_news": {
        "api_name": "get_all_climate_change_news",
        "category": "News_Media",
        "tool_name": "climate_change_api_v3",
        "code": "async def rapi_climate_change_api_v3_get_all_climate_change_news(self,*args,**kwargs):\n    '''An API showing all the latest climate change news around the world.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_climate_change_api_v3_get_all_climate_change_news',kwargs)\n        "
    },
    "rapi_pac_api_get_trump_articles_from_specific_newspaper": {
        "api_name": "get_trump_articles_from_specific_newspaper",
        "category": "News_Media",
        "tool_name": "pac_api",
        "code": "async def rapi_pac_api_get_trump_articles_from_specific_newspaper(self,*args,**kwargs):\n    '''An API for collecting political articles for Biden and Trump\n    \n    \n\n    :param string newspaper:  defaults to boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\n    '''\n    return await self._request_rapid_api('rapi_pac_api_get_trump_articles_from_specific_newspaper',kwargs)\n        "
    },
    "rapi_pac_api_get_biden_articles_from_specific_newspaper": {
        "api_name": "get_biden_articles_from_specific_newspaper",
        "category": "News_Media",
        "tool_name": "pac_api",
        "code": "async def rapi_pac_api_get_biden_articles_from_specific_newspaper(self,*args,**kwargs):\n    '''An API for collecting political articles for Biden and Trump\n    \n    \n\n    :param string newspaper:  defaults to boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\n    '''\n    return await self._request_rapid_api('rapi_pac_api_get_biden_articles_from_specific_newspaper',kwargs)\n        "
    },
    "rapi_pac_api_get_all_trump_articles": {
        "api_name": "get_all_trump_articles",
        "category": "News_Media",
        "tool_name": "pac_api",
        "code": "async def rapi_pac_api_get_all_trump_articles(self,*args,**kwargs):\n    '''An API for collecting political articles for Biden and Trump\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pac_api_get_all_trump_articles',kwargs)\n        "
    },
    "rapi_pac_api_get_all_biden_articles": {
        "api_name": "get_all_biden_articles",
        "category": "News_Media",
        "tool_name": "pac_api",
        "code": "async def rapi_pac_api_get_all_biden_articles(self,*args,**kwargs):\n    '''An API for collecting political articles for Biden and Trump\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pac_api_get_all_biden_articles',kwargs)\n        "
    },
    "rapi_anime_news_net_get_details_of_a_news_item": {
        "api_name": "get_details_of_a_news_item",
        "category": "News_Media",
        "tool_name": "anime_news_net",
        "code": "async def rapi_anime_news_net_get_details_of_a_news_item(self,*args,**kwargs):\n    '''This anime news API allows users to get details about the latest anime news, including the news headline, category, publication date and a brief introduction. It also provides an image relevant to the news item and the full content of the news item. Users can use this API to stay updated on the latest anime news easily and quickly\n    \n    \n\n    :param string id:  defaults to .196030\n    :param string title:  defaults to mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\n    :param string date:  defaults to 2023-03-17\n    '''\n    return await self._request_rapid_api('rapi_anime_news_net_get_details_of_a_news_item',kwargs)\n        "
    },
    "rapi_anime_news_net_get_anime_news_list": {
        "api_name": "get_anime_news_list",
        "category": "News_Media",
        "tool_name": "anime_news_net",
        "code": "async def rapi_anime_news_net_get_anime_news_list(self,*args,**kwargs):\n    '''This anime news API allows users to get details about the latest anime news, including the news headline, category, publication date and a brief introduction. It also provides an image relevant to the news item and the full content of the news item. Users can use this API to stay updated on the latest anime news easily and quickly\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_anime_news_net_get_anime_news_list',kwargs)\n        "
    },
    "rapi_climate_change_news_v5_all_climate_change_news": {
        "api_name": "all_climate_change_news",
        "category": "News_Media",
        "tool_name": "climate_change_news_v5",
        "code": "async def rapi_climate_change_news_v5_all_climate_change_news(self,*args,**kwargs):\n    '''An API showing latest Climate Change News around the world\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_climate_change_news_v5_all_climate_change_news',kwargs)\n        "
    },
    "rapi_flixster_news_list": {
        "api_name": "news_list",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_news_list(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flixster_news_list',kwargs)\n        "
    },
    "rapi_flixster_actors_detail": {
        "api_name": "actors_detail",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_actors_detail(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param integer id: The value of people -> id field returned in .../search endpoint defaults to 62982\n    '''\n    return await self._request_rapid_api('rapi_flixster_actors_detail',kwargs)\n        "
    },
    "rapi_flixster_theaters_detail": {
        "api_name": "theaters_detail",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_theaters_detail(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param string id: The value of id field returned in .../theaters/list or .../search endpoint defaults to Oy0fdRfgBTrMTwl\n    '''\n    return await self._request_rapid_api('rapi_flixster_theaters_detail',kwargs)\n        "
    },
    "rapi_flixster_theaters_list": {
        "api_name": "theaters_list",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_theaters_list(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param integer? longitude: The GEO longitude\n    :param string? zipCode: The postal code defaults to 90002\n    :param integer? latitude: The GEO latitude\n    :param integer? radius: The radius defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_flixster_theaters_list',kwargs)\n        "
    },
    "rapi_flixster_movies_get_upcoming": {
        "api_name": "movies_get_upcoming",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_movies_get_upcoming(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param integer? limit: The number of itemed returned, maximum is 100 defaults to 100\n    :param string? countryId: One of the following : afg|alb|dza|asm|and|ago|aia|ata|atg|arg|arm|abw|aus|aut|aze|bhs|bhr|bgd|brb|blr|bel|blz|ben|bmu|btn|bol|bes|bih|bwa|bvt|bra|iot|brn|bgr|bfa|bdi|cpv|khm|cmr|can|cym|caf|tcd|chl|chn|cxr|cck|col|com|cod|cog|cok|cri|hrv|cub|cuw|cyp|cze|civ|dnk|dji|dma|dom|ecu|egy|slv|gnq|eri|est|swz|eth|flk|fro|fji|fin|fra|guf|pyf|atf|gab|gmb|geo|deu|gha|gib|grc|grl|grd|glp|gum|gtm|ggy|gin|gnb|guy|hti|hmd|vat|hnd|hkg|hun|isl|ind|idn|irn|irq|irl|imn|isr|ita|jam|jpn|jey|jor|kaz|ken|kir|prk|kor|kwt|kgz|lao|lva|lbn|lso|lbr|lby|lie|ltu|lux|mac|mdg|mwi|mys|mdv|mli|mlt|mhl|mtq|mrt|mus|myt|mex|fsm|mda|mco|mng|mne|msr|mar|moz|mmr|nam|nru|npl|nld|ncl|nzl|nic|ner|nga|niu|nfk|mnp|nor|omn|pak|plw|pse|pan|png|pry|per|phl|pcn|pol|prt|pri|qat|mkd|rou|rus|rwa|reu|blm|shn|kna|lca|maf|spm|vct|wsm|smr|stp|sau|sen|srb|syc|sle|sgp|sxm|svk|svn|slb|som|zaf|sgs|ssd|esp|lka|sdn|sur|sjm|swe|che|syr|twn|tjk|tza|tha|tls|tgo|tkl|ton|tto|tun|tur|tkm|tca|tuv|uga|ukr|are|gbr|umi|usa|ury|uzb|vut|ven|vnm|vgb|vir|wlf|esh|yem|zmb|zwe|ala defaults to usa\n    '''\n    return await self._request_rapid_api('rapi_flixster_movies_get_upcoming',kwargs)\n        "
    },
    "rapi_flixster_search": {
        "api_name": "search",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_search(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param string query:  defaults to spiderman\n    :param integer? longitude: The GEO longitude\n    :param integer? latitude: The GEO latitude\n    :param integer? radius: The radius defaults to 50\n    :param string? zipCode: The postal code defaults to 90002\n    '''\n    return await self._request_rapid_api('rapi_flixster_search',kwargs)\n        "
    },
    "rapi_flixster_movies_get_dvds": {
        "api_name": "movies_get_dvds",
        "category": "News_Media",
        "tool_name": "flixster",
        "code": "async def rapi_flixster_movies_get_dvds(self,*args,**kwargs):\n    '''This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com\n    \n    \n\n    :param string? typeMovie: One of the following : NEW&#95;RELEASE|COMING&#95;SOON defaults to NEW_RELEASE\n    '''\n    return await self._request_rapid_api('rapi_flixster_movies_get_dvds',kwargs)\n        "
    },
    "rapi_east_china_news_filter_japan_news_by_newspaper_company": {
        "api_name": "filter_japan_news_by_newspaper_company",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_filter_japan_news_by_newspaper_company(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    :param string newspaperId: \n    '''\n    return await self._request_rapid_api('rapi_east_china_news_filter_japan_news_by_newspaper_company',kwargs)\n        "
    },
    "rapi_east_china_news_filter_korea_news_by_newspaper_company": {
        "api_name": "filter_korea_news_by_newspaper_company",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_filter_korea_news_by_newspaper_company(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    :param string newspaperId: \n    '''\n    return await self._request_rapid_api('rapi_east_china_news_filter_korea_news_by_newspaper_company',kwargs)\n        "
    },
    "rapi_east_china_news_filter_for_conflict": {
        "api_name": "filter_for_conflict",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_filter_for_conflict(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_east_china_news_filter_for_conflict',kwargs)\n        "
    },
    "rapi_east_china_news_filter_korean_news": {
        "api_name": "filter_korean_news",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_filter_korean_news(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_east_china_news_filter_korean_news',kwargs)\n        "
    },
    "rapi_east_china_news_japan_filter_for_news": {
        "api_name": "japan_filter_for_news",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_japan_filter_for_news(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_east_china_news_japan_filter_for_news',kwargs)\n        "
    },
    "rapi_east_china_news_newspaper_company_filter_for_news": {
        "api_name": "newspaper_company_filter_for_news",
        "category": "News_Media",
        "tool_name": "east_china_news",
        "code": "async def rapi_east_china_news_newspaper_company_filter_for_news(self,*args,**kwargs):\n    '''Api that filters through notable news networks for China, Japan, and Korea news\n    \n    \n\n    :param string newspaperId:  defaults to guardian\n    '''\n    return await self._request_rapid_api('rapi_east_china_news_newspaper_company_filter_for_news',kwargs)\n        "
    },
    "rapi_medium_stories_topic": {
        "api_name": "stories_topic",
        "category": "News_Media",
        "tool_name": "medium",
        "code": "async def rapi_medium_stories_topic(self,*args,**kwargs):\n    '''Unofficial API to search and find the latest stories written on medium.com\n    \n    \n\n    :param string topic: Topic slug\n    :param integer? limit: Number of results to return defaults to 10\n    :param integer? page: Page offset\n    :param string? filter: Page offset defaults to latest\n    '''\n    return await self._request_rapid_api('rapi_medium_stories_topic',kwargs)\n        "
    },
    "rapi_medium_search_stories": {
        "api_name": "search_stories",
        "category": "News_Media",
        "tool_name": "medium",
        "code": "async def rapi_medium_search_stories(self,*args,**kwargs):\n    '''Unofficial API to search and find the latest stories written on medium.com\n    \n    \n\n    :param string q: query to search by\n    :param integer? page: Page offset\n    :param integer? limit: Number of results to return defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_medium_search_stories',kwargs)\n        "
    },
    "rapi_dev_to_api_get_the_top_articles_of_all_time": {
        "api_name": "get_the_top_articles_of_all_time",
        "category": "News_Media",
        "tool_name": "dev_to_api",
        "code": "async def rapi_dev_to_api_get_the_top_articles_of_all_time(self,*args,**kwargs):\n    '''API that fetches the latest blogs from dev.to website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dev_to_api_get_the_top_articles_of_all_time',kwargs)\n        "
    },
    "rapi_dev_to_api_get_all_the_year_s_top_articles": {
        "api_name": "get_all_the_year_s_top_articles",
        "category": "News_Media",
        "tool_name": "dev_to_api",
        "code": "async def rapi_dev_to_api_get_all_the_year_s_top_articles(self,*args,**kwargs):\n    '''API that fetches the latest blogs from dev.to website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dev_to_api_get_all_the_year_s_top_articles',kwargs)\n        "
    },
    "rapi_dev_to_api_get_the_month_s_top_articles": {
        "api_name": "get_the_month_s_top_articles",
        "category": "News_Media",
        "tool_name": "dev_to_api",
        "code": "async def rapi_dev_to_api_get_the_month_s_top_articles(self,*args,**kwargs):\n    '''API that fetches the latest blogs from dev.to website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dev_to_api_get_the_month_s_top_articles',kwargs)\n        "
    },
    "rapi_dev_to_api_get_all_the_top_articles_of_the_week_by_default": {
        "api_name": "get_all_the_top_articles_of_the_week_by_default",
        "category": "News_Media",
        "tool_name": "dev_to_api",
        "code": "async def rapi_dev_to_api_get_all_the_top_articles_of_the_week_by_default(self,*args,**kwargs):\n    '''API that fetches the latest blogs from dev.to website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dev_to_api_get_all_the_top_articles_of_the_week_by_default',kwargs)\n        "
    },
    "rapi_online_movie_database_actors_get_all_images": {
        "api_name": "actors_get_all_images",
        "category": "News_Media",
        "tool_name": "online_movie_database",
        "code": "async def rapi_online_movie_database_actors_get_all_images(self,*args,**kwargs):\n    '''This API helps to query for all information about films, actors, characters,etc... to create a movie/series/streaming content site/application\n    \n    \n\n    :param string nconst: You need to extract the value started with \"nm\" returned in \u2026/actors/list-born-today or \u2026/actors/list-most-popular-celebs endpoint. Ex : nm0001667 defaults to nm0001667\n    '''\n    return await self._request_rapid_api('rapi_online_movie_database_actors_get_all_images',kwargs)\n        "
    },
    "rapi_german_police_and_crime_news_live_get_individual_source_news": {
        "api_name": "get_individual_source_news",
        "category": "News_Media",
        "tool_name": "german_police_and_crime_news_live",
        "code": "async def rapi_german_police_and_crime_news_live_get_individual_source_news(self,*args,**kwargs):\n    '''An API showing all the latest Police, Crime, Accident etc. News in Germany\n    \n    \n\n    :param string newspaperId:  defaults to tag24\n    '''\n    return await self._request_rapid_api('rapi_german_police_and_crime_news_live_get_individual_source_news',kwargs)\n        "
    },
    "rapi_german_police_and_crime_news_live_get_all_police_news": {
        "api_name": "get_all_police_news",
        "category": "News_Media",
        "tool_name": "german_police_and_crime_news_live",
        "code": "async def rapi_german_police_and_crime_news_live_get_all_police_news(self,*args,**kwargs):\n    '''An API showing all the latest Police, Crime, Accident etc. News in Germany\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_german_police_and_crime_news_live_get_all_police_news',kwargs)\n        "
    },
    "rapi_global_recession_live_get_all_global_recession_news": {
        "api_name": "get_all_global_recession_news",
        "category": "News_Media",
        "tool_name": "global_recession_live",
        "code": "async def rapi_global_recession_live_get_all_global_recession_news(self,*args,**kwargs):\n    '''An API showing all the latest recession news around the world, collected from The New York Times, The Guardian, World Economic Forum, The Economist, AP News, Reuters, and Politico.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_global_recession_live_get_all_global_recession_news',kwargs)\n        "
    },
    "rapi_covid_news_v2_news_from_all_sources": {
        "api_name": "news_from_all_sources",
        "category": "News_Media",
        "tool_name": "covid_news_v2",
        "code": "async def rapi_covid_news_v2_news_from_all_sources(self,*args,**kwargs):\n    '''News about Covid 19 from different sources including WHO, guardian, CNN, etc\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_covid_news_v2_news_from_all_sources',kwargs)\n        "
    },
    "rapi_crypto_news_v2_get_individual_news_source": {
        "api_name": "get_individual_news_source",
        "category": "News_Media",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_get_individual_news_source(self,*args,**kwargs):\n    '''Shows recent news articles in the cryptocurrency market. Find article by keyword search to find related news or return general information about crypto market. \n    \n    \n\n    :param string newspaperId:  defaults to cryptonews\n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_get_individual_news_source',kwargs)\n        "
    },
    "rapi_crypto_news_v2_specific_article_keyword_search": {
        "api_name": "specific_article_keyword_search",
        "category": "News_Media",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_specific_article_keyword_search(self,*args,**kwargs):\n    '''Shows recent news articles in the cryptocurrency market. Find article by keyword search to find related news or return general information about crypto market. \n    \n    \n\n    :param string newspaperId:  defaults to cryptonews\n    :param string? searchId:  defaults to bitcoin\n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_specific_article_keyword_search',kwargs)\n        "
    },
    "rapi_crypto_news_v2_get_all_crypto_news": {
        "api_name": "get_all_crypto_news",
        "category": "News_Media",
        "tool_name": "crypto_news_v2",
        "code": "async def rapi_crypto_news_v2_get_all_crypto_news(self,*args,**kwargs):\n    '''Shows recent news articles in the cryptocurrency market. Find article by keyword search to find related news or return general information about crypto market. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crypto_news_v2_get_all_crypto_news',kwargs)\n        "
    },
    "rapi_newsdata_sources": {
        "api_name": "sources",
        "category": "News_Media",
        "tool_name": "newsdata",
        "code": "async def rapi_newsdata_sources(self,*args,**kwargs):\n    '''Best News API To Search And Collect Worldwide News\n    \n    \n\n    :param string? country: Find sources that display news in a specific country. Possible Options: us gb in jp ae sa au ca sg\n    :param string? language: Find sources that display news in a specific language. Possible Options: en ar jp in es fr\n    :param string? category: Find sources that display news of this category. Possible Options: top business science technology sports health entertainment\n    '''\n    return await self._request_rapid_api('rapi_newsdata_sources',kwargs)\n        "
    },
    "rapi_newsdata_news": {
        "api_name": "news",
        "category": "News_Media",
        "tool_name": "newsdata",
        "code": "async def rapi_newsdata_news(self,*args,**kwargs):\n    '''Best News API To Search And Collect Worldwide News\n    \n    \n\n    :param string? language: A comma separated string of languages (maximum 5) to restrict the search to. Possible Options: en ar jp in es fr\n    :param string? country: A comma separated string of 2-letter ISO 3166-1 countries (maximum 5) to restrict the search to. Possible Options: us gb in jp ae sa au ca\n    :param integer? page: Use this to page through the results if the total results found is greater than the page size.\n\n\n    :param string? category: A comma separated string of categories (maximum 5) to restrict the search to. Possible Options: top business science technology sports health entertainment\n    :param string? qintitle: Keywords or phrases to search for in the news title only.\n\nPlease note: This parameter can't be used with q parameter in the same query.\n    :param string? q: Keywords or phrases to search for in the news title and content. \nPlease note: You can't use AND and OR in the same query.\n    :param string? domain: A comma separated string of domains (maximum 5) to restrict the search to. Use the /domains endpoint to find top sources id.\n    '''\n    return await self._request_rapid_api('rapi_newsdata_news',kwargs)\n        "
    },
    "rapi_papercliff_combinations": {
        "api_name": "combinations",
        "category": "News_Media",
        "tool_name": "papercliff",
        "code": "async def rapi_papercliff_combinations(self,*args,**kwargs):\n    '''Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords\n    \n    \n\n    :param string? to: Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.\n    :param string? terms: Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.\n    :param integer? offset: Omits a number of combinations\n    :param string? from: Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.\n    '''\n    return await self._request_rapid_api('rapi_papercliff_combinations',kwargs)\n        "
    },
    "rapi_papercliff_timeline": {
        "api_name": "timeline",
        "category": "News_Media",
        "tool_name": "papercliff",
        "code": "async def rapi_papercliff_timeline(self,*args,**kwargs):\n    '''Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords\n    \n    \n\n    :param string? from: Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.\n    :param string? terms: Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.\n    :param integer? offset: Omits a number of articles\n    :param string? to: Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.\n    '''\n    return await self._request_rapid_api('rapi_papercliff_timeline',kwargs)\n        "
    },
    "rapi_papercliff_overview": {
        "api_name": "overview",
        "category": "News_Media",
        "tool_name": "papercliff",
        "code": "async def rapi_papercliff_overview(self,*args,**kwargs):\n    '''Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords\n    \n    \n\n    :param string? from: Narrows down the results to articles published after the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.\n    :param string? to: Narrows down the results to articles published before the provided date-time. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.\n    :param string? terms: Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.\n    '''\n    return await self._request_rapid_api('rapi_papercliff_overview',kwargs)\n        "
    },
    "rapi_papercliff_history": {
        "api_name": "history",
        "category": "News_Media",
        "tool_name": "papercliff",
        "code": "async def rapi_papercliff_history(self,*args,**kwargs):\n    '''Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords\n    \n    \n\n    :param string? terms: Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.\n    '''\n    return await self._request_rapid_api('rapi_papercliff_history',kwargs)\n        "
    },
    "rapi_papercliff_keywords": {
        "api_name": "keywords",
        "category": "News_Media",
        "tool_name": "papercliff",
        "code": "async def rapi_papercliff_keywords(self,*args,**kwargs):\n    '''Papercliff looks at the world's largest news agencies, reads articles, identifies and shares keywords\n    \n    \n\n    :param string? terms: Narrows down the results to articles that contain all the provided keywords. The terms should consist of one to three words separated by a dash.  Example value: `election-campaign`.\n    :param integer? offset: Omits a number of keywords\n    :param string? from: Narrows down the results to articles published after the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T13:45`. Date-times older than a week do not affect the result.\n    :param string? to: Narrows down the results to articles published before the provided date-time in UTC. The format should be `yyyy-MM-dd'T'HH:mm`. Example value: `2022-09-18T15:30`. Date-times of the future do not affect the result.\n    '''\n    return await self._request_rapid_api('rapi_papercliff_keywords',kwargs)\n        "
    },
    "rapi_google_news_supported_languages_and_regions": {
        "api_name": "supported_languages_and_regions",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_supported_languages_and_regions(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_google_news_supported_languages_and_regions',kwargs)\n        "
    },
    "rapi_google_news_suggest": {
        "api_name": "suggest",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_suggest(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string keyword:  The mandatory parameter  to specify the search term defaults to facebook\n    :param string? lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_suggest',kwargs)\n        "
    },
    "rapi_google_news_search": {
        "api_name": "search",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_search(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string keyword:  The mandatory parameter  to specify the search term defaults to facebook\n    :param string? lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_search',kwargs)\n        "
    },
    "rapi_google_news_world": {
        "api_name": "world",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_world(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string? lr:  defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_world',kwargs)\n        "
    },
    "rapi_google_news_sport": {
        "api_name": "sport",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_sport(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_sport',kwargs)\n        "
    },
    "rapi_google_news_health": {
        "api_name": "health",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_health(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_health',kwargs)\n        "
    },
    "rapi_google_news_entertainment": {
        "api_name": "entertainment",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_entertainment(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_entertainment',kwargs)\n        "
    },
    "rapi_google_news_latest": {
        "api_name": "latest",
        "category": "News_Media",
        "tool_name": "google_news",
        "code": "async def rapi_google_news_latest(self,*args,**kwargs):\n    '''Provide real-time news and articles sourced from Google News.\n    \n    \n\n    :param string lr: language region, ex: en-US defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_google_news_latest',kwargs)\n        "
    },
    "rapi_newscatcher_v1_aggregation": {
        "api_name": "v1_aggregation",
        "category": "News_Media",
        "tool_name": "newscatcher",
        "code": "async def rapi_newscatcher_v1_aggregation(self,*args,**kwargs):\n    '''API to find news articles by any topic, country, language, website, or keyword\n    \n    \n\n    :param string q: String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding).  defaults to Apple\n    :param string? country: The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes\n    :param string? topic: The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example, `topic=sport`\n    :param string? sources: One or more news resources to filter your search. It should be the normal form of the URL, for example, **[nytimes.com](http://nytimes.com/)**, **[theguardian.com](http://theguardian.com/)**\n> Comma separated string, for example `sources=nytimes.com,cnn.com,wsj.com`\n    :param string? agg_by: - `day` \u2014 default option. Aggregate results by day. No more than 100 days \n- `hour` \u2014 Aggregate results by hour. No more than 100 hours defaults to day\n    :param integer? to_rank: Upper boundary of the rank of news website to filter by\n    :param string? media: Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article defaults to True\n    :param string? lang: Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant\n    :param string? not_sources: One or more sources to be excluded from the search. \n> Comma separated string, for example, `not_sources=nytimes.com,cnn.com,wsj.com`\n    :param string? to: Until which point in time to search for. The default timezone is UTC\n    :param string? ranked_only: Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`\n    :param string? from: From which point in time to start the search. No specific format is required. E.g. (`2020/05/01`, `2020-05-01` ,`2020-05-01 12:54:14`, `2020-05-01 4:15am`, `yesterday 2:02 am`, `2020/05/01 12:55 EST`) Default timezone is UTC. **\nThe default is set to one week ago at midnight UTC.** \n    :param string? search_in: By default, we search what you specified in `q` in both `title` and `summary` of the article. However, you can limit this to either `title` or `summary`\n    :param integer? from_rank: Lowest boundary of the rank of news website to filter by. **Important**: lower rank means that a source is more popular\n    '''\n    return await self._request_rapid_api('rapi_newscatcher_v1_aggregation',kwargs)\n        "
    },
    "rapi_newscatcher_v1_latest_headlines": {
        "api_name": "v1_latest_headlines",
        "category": "News_Media",
        "tool_name": "newscatcher",
        "code": "async def rapi_newscatcher_v1_latest_headlines(self,*args,**kwargs):\n    '''API to find news articles by any topic, country, language, website, or keyword\n    \n    \n\n    :param string? lang: Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \n Specifying the language will make your search more relevant defaults to en\n    :param string? topic: The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example `topic=sport`\n    :param string? country: The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes\n    :param string? media: Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article defaults to True\n    '''\n    return await self._request_rapid_api('rapi_newscatcher_v1_latest_headlines',kwargs)\n        "
    },
    "rapi_newscatcher_v1_search_free": {
        "api_name": "v1_search_free",
        "category": "News_Media",
        "tool_name": "newscatcher",
        "code": "async def rapi_newscatcher_v1_search_free(self,*args,**kwargs):\n    '''API to find news articles by any topic, country, language, website, or keyword\n    \n    \n\n    :param string q: String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding) defaults to Elon Musk\n    :param string? media: Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article defaults to True\n    :param string? page: The number of the page. Use it to scroll through the results. Defaults to 1\n    :param string? ranked_only: Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`\n    :param string? page_size: How many articles to return per page. Defaults to 50, max is 100\n    :param string? lang: Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant defaults to en\n    '''\n    return await self._request_rapid_api('rapi_newscatcher_v1_search_free',kwargs)\n        "
    },
    "rapi_newscatcher_v1_search": {
        "api_name": "v1_search",
        "category": "News_Media",
        "tool_name": "newscatcher",
        "code": "async def rapi_newscatcher_v1_search(self,*args,**kwargs):\n    '''API to find news articles by any topic, country, language, website, or keyword\n    \n    \n\n    :param string q: String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding) defaults to Elon Musk\n    :param string? not_sources: One or more sources to be excluded from the search. \n> Comma separated string, for example `not_sources=nytimes.com,cnn.com,wsj.com`\n    :param string? lang: Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant defaults to en\n    :param string? search_in: By default, we search what you specified in `q` in both `title` and `summary` of the article. However, you can limit this to either `title` or `summary`\n    :param string? sort_by: - `relevancy` \u2014 the most relevant results first, \n- `date` \u2014 the most recently published results first, \n- `rank` \u2014 the results from the highest-ranked sources first defaults to relevancy\n    :param string? sources: One or more news resources to filter your search. It should be the normal form of the URL, for example, **[nytimes.com](http://nytimes.com/)**, **[theguardian.com](http://theguardian.com/)**\n> Comma separated string, for example `sources=nytimes.com,cnn.com,wsj.com`\n    :param string? to: Until which point in time to search for. The default timezone is UTC\n    :param string? country: The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes\n    :param string? media: Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article defaults to True\n    :param string? topic: The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n`news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example `topic=sport`\n    :param integer? from_rank: Lowest boundary of the rank of news website to filter by. **Important**: lower rank means that a source is more popular\n    :param integer? to_rank: Upper boundary of the rank of news website to filter by\n    :param integer? page_size: How many articles to return per page. Defaults to 50, max is 100. Not included in Basic plan. \n    :param integer? page: The number of the page. Use it to scroll through the results. Defaults to 1 defaults to 1\n    :param string? ranked_only: Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`\n    :param string? from: From which point in time to start the search. No specific format is required. \nE.g. (`2020/05/01`, `2020-05-01` ,`2020-05-01 12:54:14`, `2020-05-01 4:15am`, `yesterday 2:02 am`, `2020/05/01 12:55 EST`) .\nThe default timezone is UTC. **Defaults to one week ago at midnight UTC.**\n    '''\n    return await self._request_rapid_api('rapi_newscatcher_v1_search',kwargs)\n        "
    },
    "rapi_newscatcher_v1_sources": {
        "api_name": "v1_sources",
        "category": "News_Media",
        "tool_name": "newscatcher",
        "code": "async def rapi_newscatcher_v1_sources(self,*args,**kwargs):\n    '''API to find news articles by any topic, country, language, website, or keyword\n    \n    \n\n    :param string? lang: Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \n Specifying the language will make your search more relevant defaults to en\n    :param string? topic: The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example, `topic=sport`\n    :param string? country: The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes\n    '''\n    return await self._request_rapid_api('rapi_newscatcher_v1_sources',kwargs)\n        "
    },
    "rapi_biztoc_news_hot": {
        "api_name": "news_hot",
        "category": "News_Media",
        "tool_name": "biztoc",
        "code": "async def rapi_biztoc_news_hot(self,*args,**kwargs):\n    '''Official BizToc.com API \u2014 The Web's most comprehensive hub for business & finance news.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_biztoc_news_hot',kwargs)\n        "
    },
    "rapi_all_crypto_news_feed_get_blogs_feed": {
        "api_name": "get_blogs_feed",
        "category": "News_Media",
        "tool_name": "all_crypto_news_feed",
        "code": "async def rapi_all_crypto_news_feed_get_blogs_feed(self,*args,**kwargs):\n    '''All news about crypto. Tweets, listing news, .gov announcements, blogs etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_all_crypto_news_feed_get_blogs_feed',kwargs)\n        "
    },
    "rapi_all_crypto_news_feed_get_twitter_feed": {
        "api_name": "get_twitter_feed",
        "category": "News_Media",
        "tool_name": "all_crypto_news_feed",
        "code": "async def rapi_all_crypto_news_feed_get_twitter_feed(self,*args,**kwargs):\n    '''All news about crypto. Tweets, listing news, .gov announcements, blogs etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_all_crypto_news_feed_get_twitter_feed',kwargs)\n        "
    },
    "rapi_all_crypto_news_feed_get_all_feed": {
        "api_name": "get_all_feed",
        "category": "News_Media",
        "tool_name": "all_crypto_news_feed",
        "code": "async def rapi_all_crypto_news_feed_get_all_feed(self,*args,**kwargs):\n    '''All news about crypto. Tweets, listing news, .gov announcements, blogs etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_all_crypto_news_feed_get_all_feed',kwargs)\n        "
    },
    "rapi_reuters_business_and_financial_news_get_all_categories": {
        "api_name": "get_all_categories",
        "category": "News_Media",
        "tool_name": "reuters_business_and_financial_news",
        "code": "async def rapi_reuters_business_and_financial_news_get_all_categories(self,*args,**kwargs):\n    '''Our Financial News API is a comprehensive and accurate data source of financial news from Reuters. This API allows users to retrieve the latest financial news articles and updates from Reuters, covering topics such as stocks, bonds, commodities, currencies, and more. The API is designed to provide real-time financial news updates, and allows users to filter news based on keywords, location, and date range. This data can be easily integrated into a wide range of use cases, such as financial an...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reuters_business_and_financial_news_get_all_categories',kwargs)\n        "
    },
    "rapi_reuters_business_and_financial_news_get_all_subcategories": {
        "api_name": "get_all_subcategories",
        "category": "News_Media",
        "tool_name": "reuters_business_and_financial_news",
        "code": "async def rapi_reuters_business_and_financial_news_get_all_subcategories(self,*args,**kwargs):\n    '''Our Financial News API is a comprehensive and accurate data source of financial news from Reuters. This API allows users to retrieve the latest financial news articles and updates from Reuters, covering topics such as stocks, bonds, commodities, currencies, and more. The API is designed to provide real-time financial news updates, and allows users to filter news based on keywords, location, and date range. This data can be easily integrated into a wide range of use cases, such as financial an...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reuters_business_and_financial_news_get_all_subcategories',kwargs)\n        "
    },
    "rapi_reuters_business_and_financial_news_get_articles_by_date": {
        "api_name": "get_articles_by_date",
        "category": "News_Media",
        "tool_name": "reuters_business_and_financial_news",
        "code": "async def rapi_reuters_business_and_financial_news_get_articles_by_date(self,*args,**kwargs):\n    '''Our Financial News API is a comprehensive and accurate data source of financial news from Reuters. This API allows users to retrieve the latest financial news articles and updates from Reuters, covering topics such as stocks, bonds, commodities, currencies, and more. The API is designed to provide real-time financial news updates, and allows users to filter news based on keywords, location, and date range. This data can be easily integrated into a wide range of use cases, such as financial an...\n    \n    \n\n    :param string date:  defaults to 01-04-2021\n    '''\n    return await self._request_rapid_api('rapi_reuters_business_and_financial_news_get_articles_by_date',kwargs)\n        "
    },
    "rapi_book_cover_api_getbookcoverurl": {
        "api_name": "getbookcoverurl",
        "category": "News_Media",
        "tool_name": "book_cover_api",
        "code": "async def rapi_book_cover_api_getbookcoverurl(self,*args,**kwargs):\n    '''Simple api to get book cover by isbn code.\n    \n    \n\n    :param string languageCode:  defaults to en\n    :param string isbn:  defaults to 9781526606198\n    '''\n    return await self._request_rapid_api('rapi_book_cover_api_getbookcoverurl',kwargs)\n        "
    },
    "rapi_book_cover_api_getbookcoverimage": {
        "api_name": "getbookcoverimage",
        "category": "News_Media",
        "tool_name": "book_cover_api",
        "code": "async def rapi_book_cover_api_getbookcoverimage(self,*args,**kwargs):\n    '''Simple api to get book cover by isbn code.\n    \n    \n\n    :param string isbn:  defaults to 9781526606198\n    :param string languageCode:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_book_cover_api_getbookcoverimage',kwargs)\n        "
    },
    "rapi_kubric_the_comprehensive_movie_news_api_sources": {
        "api_name": "sources",
        "category": "News_Media",
        "tool_name": "kubric_the_comprehensive_movie_news_api",
        "code": "async def rapi_kubric_the_comprehensive_movie_news_api_sources(self,*args,**kwargs):\n    '''Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kubric_the_comprehensive_movie_news_api_sources',kwargs)\n        "
    },
    "rapi_kubric_the_comprehensive_movie_news_api_basic_search": {
        "api_name": "basic_search",
        "category": "News_Media",
        "tool_name": "kubric_the_comprehensive_movie_news_api",
        "code": "async def rapi_kubric_the_comprehensive_movie_news_api_basic_search(self,*args,**kwargs):\n    '''Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.\n    \n    \n\n    :param string q:  defaults to superman\n    :param integer? limit:  defaults to 10\n    :param integer? offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_kubric_the_comprehensive_movie_news_api_basic_search',kwargs)\n        "
    },
    "rapi_pulsar_get_all_images_of_an_collection": {
        "api_name": "get_all_images_of_an_collection",
        "category": "Business_Software",
        "tool_name": "pulsar",
        "code": "async def rapi_pulsar_get_all_images_of_an_collection(self,*args,**kwargs):\n    '''Teste Pulsar\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_pulsar_get_all_images_of_an_collection',kwargs)\n        "
    },
    "rapi_pulsar_get_all_collections_by_user": {
        "api_name": "get_all_collections_by_user",
        "category": "Business_Software",
        "tool_name": "pulsar",
        "code": "async def rapi_pulsar_get_all_collections_by_user(self,*args,**kwargs):\n    '''Teste Pulsar\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pulsar_get_all_collections_by_user',kwargs)\n        "
    },
    "rapi_opa_test_user_summary": {
        "api_name": "user_summary",
        "category": "Business_Software",
        "tool_name": "opa_test",
        "code": "async def rapi_opa_test_user_summary(self,*args,**kwargs):\n    '''Test API for OPA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_opa_test_user_summary',kwargs)\n        "
    },
    "rapi_git_pager_list_folder_contents": {
        "api_name": "list_folder_contents",
        "category": "Business_Software",
        "tool_name": "git_pager",
        "code": "async def rapi_git_pager_list_folder_contents(self,*args,**kwargs):\n    '''Easility perform CRUD (Create, Read, Update and Delete) operations on any Github repo!\n    \n    \n\n    :param string? repo:  defaults to gina305/switch-code\n    :param string? path:  defaults to /\n    :param string? key:  defaults to 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\n    '''\n    return await self._request_rapid_api('rapi_git_pager_list_folder_contents',kwargs)\n        "
    },
    "rapi_codester_api_items": {
        "api_name": "items",
        "category": "Business_Software",
        "tool_name": "codester_api",
        "code": "async def rapi_codester_api_items(self,*args,**kwargs):\n    '''With this API, you can get information about items such as prices, get a specific seller's items and so on\n    \n    \n\n    :param string id:  defaults to 40946\n    '''\n    return await self._request_rapid_api('rapi_codester_api_items',kwargs)\n        "
    },
    "rapi_print_your_own_labels_and_stickers_label_template_brands": {
        "api_name": "label_template_brands",
        "category": "Business_Software",
        "tool_name": "print_your_own_labels_and_stickers",
        "code": "async def rapi_print_your_own_labels_and_stickers_label_template_brands(self,*args,**kwargs):\n    '''Help your customers print their own labels and stickers, from your own website and under your own branding.\n    \n    \n\n    :param string format: Its value can be either \n**Letter**\nor \n**A4** \nThey represent the two world standard printer paper sizes, respectively 8.5 inch by 11 inch and 210 mm by 297 mm. defaults to a4\n    '''\n    return await self._request_rapid_api('rapi_print_your_own_labels_and_stickers_label_template_brands',kwargs)\n        "
    },
    "rapi_saas_softwares_and_features_api_software_assets": {
        "api_name": "software_assets",
        "category": "Business_Software",
        "tool_name": "saas_softwares_and_features_api",
        "code": "async def rapi_saas_softwares_and_features_api_software_assets(self,*args,**kwargs):\n    '''This API allows you to query SaaS software, products and tools and their meta data such as description, logo, video url, and the features they offer. You can use the name of the feature(s) to query. For example you can answer questions like, \"Get all Email Markeitng software\".\n    \n    \n\n    :param string q:  defaults to email-marketing, landing-pages\n    '''\n    return await self._request_rapid_api('rapi_saas_softwares_and_features_api_software_assets',kwargs)\n        "
    },
    "rapi_top_brand_names_valuation_api_get_brands": {
        "api_name": "get_brands",
        "category": "Business_Software",
        "tool_name": "top_brand_names_valuation_api",
        "code": "async def rapi_top_brand_names_valuation_api_get_brands(self,*args,**kwargs):\n    '''With data from over 100 companies, you can find company data and valuation in seconds. Whether it's just company data or an evaluation of the company's performance, this is the ultimate resource for rich information.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_brand_names_valuation_api_get_brands',kwargs)\n        "
    },
    "rapi_aug13_777": {
        "api_name": "777",
        "category": "Business_Software",
        "tool_name": "aug13",
        "code": "async def rapi_aug13_777(self,*args,**kwargs):\n    '''fdf\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_aug13_777',kwargs)\n        "
    },
    "rapi_market_intelligence_by_automata_search": {
        "api_name": "search",
        "category": "Business_Software",
        "tool_name": "market_intelligence_by_automata",
        "code": "async def rapi_market_intelligence_by_automata_search(self,*args,**kwargs):\n    '''The Market Intelligence API by Automata provides two endpoints. The Company Lookalikes endpoint enables users to input a company website and receive a list of similar companies based on text analysis and company firmographics. The Company Search endpoint enables users to find the most relevant companies according to a list of input search terms.\n    \n    \n\n    :param string terms: We provide information about related companies based on the search terms you provide. Separate search terms with commas. Ex. https://api.byautomata.io/search?link=cloud+computing,enterprise,security\n    :param string? page: Page number of search results. Ex. https://api.byautomata.io/search?page=0&link=cloud+computing,enterprise,security defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_market_intelligence_by_automata_search',kwargs)\n        "
    },
    "rapi_market_intelligence_by_automata_similar": {
        "api_name": "similar",
        "category": "Business_Software",
        "tool_name": "market_intelligence_by_automata",
        "code": "async def rapi_market_intelligence_by_automata_similar(self,*args,**kwargs):\n    '''The Market Intelligence API by Automata provides two endpoints. The Company Lookalikes endpoint enables users to input a company website and receive a list of similar companies based on text analysis and company firmographics. The Company Search endpoint enables users to find the most relevant companies according to a list of input search terms.\n    \n    \n\n    :param string link: We will provide information about related companies based on the site you provide. If a LinkedIn page is sent, we will try to identify the company related to the page. Ex. https://api.byautomata.io/similar?link=ibm.com\n    :param string? page: Page number of search results. Ex. https://api.byautomata.io/similar?link=ibm.com&page=1 defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_market_intelligence_by_automata_similar',kwargs)\n        "
    },
    "rapi_mybooky_demo_getreservationforuser": {
        "api_name": "getreservationforuser",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_getreservationforuser(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param integer? reservationId: \n    :param string? userName: \n    :param integer? userId: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_getreservationforuser',kwargs)\n        "
    },
    "rapi_mybooky_demo_getslots": {
        "api_name": "getslots",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_getslots(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param integer? slotId: \n    :param string? from: \n    :param string? to: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_getslots',kwargs)\n        "
    },
    "rapi_mybooky_demo_getusersforslot": {
        "api_name": "getusersforslot",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_getusersforslot(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_getusersforslot',kwargs)\n        "
    },
    "rapi_mybooky_demo_getusers": {
        "api_name": "getusers",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_getusers(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param string? roleType:  defaults to USER\n    :param string? userName: \n    :param integer? userId: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_getusers',kwargs)\n        "
    },
    "rapi_mybooky_demo_resetpassword": {
        "api_name": "resetpassword",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_resetpassword(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param string user email address: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_resetpassword',kwargs)\n        "
    },
    "rapi_mybooky_demo_getusersreservation": {
        "api_name": "getusersreservation",
        "category": "Business_Software",
        "tool_name": "mybooky_demo",
        "code": "async def rapi_mybooky_demo_getusersreservation(self,*args,**kwargs):\n    '''Demo version of lightweight booking API \n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_mybooky_demo_getusersreservation',kwargs)\n        "
    },
    "rapi_ironwifi_manual_token_list": {
        "api_name": "manual_token_list",
        "category": "Business_Software",
        "tool_name": "ironwifi",
        "code": "async def rapi_ironwifi_manual_token_list(self,*args,**kwargs):\n    '''IronWifi offers a powerful Application Program Interface (API) that can be used to integrate IronWifi RADIUS authentication services with user and guest management systems.\r\n\r\nThe API framework allows your platform to interact with the network access control platform provided by IronWifi.\r\n\r\nWith the IronWifi API, user management systems can dynamically update the RADIUS server to instantly create or delete users in the IronWifi database, and you can set or modify access rights.\r\n\r\nWhen a user attempts to access the network, IronWifi uses the updated credentials as the basis for permitting activities on the network.\r\n\r\nWhen a user attempts to access a WiFi network, the Access Point can send a RADIUS request to IronWifi RADIUS. IronWifi authenticates the user based on the updated credentials.\r\n\r\nTo receive technical assistance with your IronWifi API project, or to discuss any advanced requirements that you may have, please contact us at support@ironwifi.com, or call +1 (800) 963-6221.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ironwifi_manual_token_list',kwargs)\n        "
    },
    "rapi_ironwifi_read_user": {
        "api_name": "read_user",
        "category": "Business_Software",
        "tool_name": "ironwifi",
        "code": "async def rapi_ironwifi_read_user(self,*args,**kwargs):\n    '''IronWifi offers a powerful Application Program Interface (API) that can be used to integrate IronWifi RADIUS authentication services with user and guest management systems.\r\n\r\nThe API framework allows your platform to interact with the network access control platform provided by IronWifi.\r\n\r\nWith the IronWifi API, user management systems can dynamically update the RADIUS server to instantly create or delete users in the IronWifi database, and you can set or modify access rights.\r\n\r\nWhen a user attempts to access the network, IronWifi uses the updated credentials as the basis for permitting activities on the network.\r\n\r\nWhen a user attempts to access a WiFi network, the Access Point can send a RADIUS request to IronWifi RADIUS. IronWifi authenticates the user based on the updated credentials.\r\n\r\nTo receive technical assistance with your IronWifi API project, or to discuss any advanced requirements that you may have, please contact us at support@ironwifi.com, or call +1 (800) 963-6221.\n    \n    \n\n    :param string user_id: \n    '''\n    return await self._request_rapid_api('rapi_ironwifi_read_user',kwargs)\n        "
    },
    "rapi_ptl_create_client": {
        "api_name": "create_client",
        "category": "Business_Software",
        "tool_name": "ptl",
        "code": "async def rapi_ptl_create_client(self,*args,**kwargs):\n    '''receive user\n    \n    \n\n    :param string client_email:  defaults to jh@rtt.vv\n    :param string client_lastname:  defaults to fgfgdf\n    :param string client_firstname:  defaults to fggfdgfd\n    :param string client_pass:  defaults to fdfd\n    :param string client_login:  defaults to dfdf\n    '''\n    return await self._request_rapid_api('rapi_ptl_create_client',kwargs)\n        "
    },
    "rapi_yardillo_read_case_type": {
        "api_name": "read_case_type",
        "category": "Business_Software",
        "tool_name": "yardillo",
        "code": "async def rapi_yardillo_read_case_type(self,*args,**kwargs):\n    '''No code API orchestration workflow\n    \n    \n\n    :param string filter:  defaults to all\n    '''\n    return await self._request_rapid_api('rapi_yardillo_read_case_type',kwargs)\n        "
    },
    "rapi_yardillo_read_case_type_by_name": {
        "api_name": "read_case_type_by_name",
        "category": "Business_Software",
        "tool_name": "yardillo",
        "code": "async def rapi_yardillo_read_case_type_by_name(self,*args,**kwargs):\n    '''No code API orchestration workflow\n    \n    \n\n    :param string name: \n    '''\n    return await self._request_rapid_api('rapi_yardillo_read_case_type_by_name',kwargs)\n        "
    },
    "rapi_yardillo_read_case_type_by_id": {
        "api_name": "read_case_type_by_id",
        "category": "Business_Software",
        "tool_name": "yardillo",
        "code": "async def rapi_yardillo_read_case_type_by_id(self,*args,**kwargs):\n    '''No code API orchestration workflow\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_yardillo_read_case_type_by_id',kwargs)\n        "
    },
    "rapi_yardillo_read_vault_by_name": {
        "api_name": "read_vault_by_name",
        "category": "Business_Software",
        "tool_name": "yardillo",
        "code": "async def rapi_yardillo_read_vault_by_name(self,*args,**kwargs):\n    '''No code API orchestration workflow\n    \n    \n\n    :param string name:  defaults to Vault_ESBHI\n    '''\n    return await self._request_rapid_api('rapi_yardillo_read_vault_by_name',kwargs)\n        "
    },
    "rapi_yardillo_get_all_tenants": {
        "api_name": "get_all_tenants",
        "category": "Business_Software",
        "tool_name": "yardillo",
        "code": "async def rapi_yardillo_get_all_tenants(self,*args,**kwargs):\n    '''No code API orchestration workflow\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yardillo_get_all_tenants',kwargs)\n        "
    },
    "rapi_roac_api_auditores_roac_roac_sociedad": {
        "api_name": "api_auditores_roac_roac_sociedad",
        "category": "Business_Software",
        "tool_name": "roac",
        "code": "async def rapi_roac_api_auditores_roac_roac_sociedad(self,*args,**kwargs):\n    '''API ROAC\n    \n    \n\n    :param string roac: \n    '''\n    return await self._request_rapid_api('rapi_roac_api_auditores_roac_roac_sociedad',kwargs)\n        "
    },
    "rapi_address_to_image_getimage": {
        "api_name": "getimage",
        "category": "Business_Software",
        "tool_name": "address_to_image",
        "code": "async def rapi_address_to_image_getimage(self,*args,**kwargs):\n    '''Shows an image of an address, using Google Street View.\n    \n    \n\n    :param string? output:  defaults to image\n    :param string? type: Image type, either **png **or **jpeg** defaults to jpeg\n    :param integer? marker: Whether or not to display a marker on the image at the desired address, 0 or 1 defaults to 0\n    :param integer? zoom: The level of image zoom. Default is 1, range is 0-5 defaults to 1\n    :param string? address: Address or location. defaults to Times Square\n    :param integer? width: Image width - maximum 1024px defaults to 1024\n    :param integer? height: Image height- maximum 1024px defaults to 1024\n    '''\n    return await self._request_rapid_api('rapi_address_to_image_getimage',kwargs)\n        "
    },
    "rapi_slot_and_betting_games_slot_and_betting_games": {
        "api_name": "slot_and_betting_games",
        "category": "Business_Software",
        "tool_name": "slot_and_betting_games",
        "code": "async def rapi_slot_and_betting_games_slot_and_betting_games(self,*args,**kwargs):\n    '''API games for your online casino. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_slot_and_betting_games_slot_and_betting_games',kwargs)\n        "
    },
    "rapi_onboarding_project_get_product": {
        "api_name": "get_product",
        "category": "Business_Software",
        "tool_name": "onboarding_project",
        "code": "async def rapi_onboarding_project_get_product(self,*args,**kwargs):\n    '''Microsoft Compatibility Telemetry\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_get_product',kwargs)\n        "
    },
    "rapi_onboarding_project_get_products": {
        "api_name": "get_products",
        "category": "Business_Software",
        "tool_name": "onboarding_project",
        "code": "async def rapi_onboarding_project_get_products(self,*args,**kwargs):\n    '''Microsoft Compatibility Telemetry\n    \n    \n\n    :param integer skip: \n    :param integer limit: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_get_products',kwargs)\n        "
    },
    "rapi_onboarding_project_get_products_in_category": {
        "api_name": "get_products_in_category",
        "category": "Business_Software",
        "tool_name": "onboarding_project",
        "code": "async def rapi_onboarding_project_get_products_in_category(self,*args,**kwargs):\n    '''Microsoft Compatibility Telemetry\n    \n    \n\n    :param integer limit: \n    :param integer skip: \n    :param string category: \n    '''\n    return await self._request_rapid_api('rapi_onboarding_project_get_products_in_category',kwargs)\n        "
    },
    "rapi_cloudlayer_io_convert_url_to_image": {
        "api_name": "convert_url_to_image",
        "category": "Business_Software",
        "tool_name": "cloudlayer_io",
        "code": "async def rapi_cloudlayer_io_convert_url_to_image(self,*args,**kwargs):\n    '''Generate PDFs, Images, and more from HTML and URLs\n    \n    \n\n    :param string url:  defaults to https://google.com\n    :param integer? timeout: milliseconds (default 30000)\n    '''\n    return await self._request_rapid_api('rapi_cloudlayer_io_convert_url_to_image',kwargs)\n        "
    },
    "rapi_my_api_12345_getorderbyid": {
        "api_name": "getorderbyid",
        "category": "Business_Software",
        "tool_name": "my_api_12345",
        "code": "async def rapi_my_api_12345_getorderbyid(self,*args,**kwargs):\n    '''YUI\n    \n    \n\n    :param integer orderId: ID of pet that needs to be fetched\n    '''\n    return await self._request_rapid_api('rapi_my_api_12345_getorderbyid',kwargs)\n        "
    },
    "rapi_my_api_12345_getinventory": {
        "api_name": "getinventory",
        "category": "Business_Software",
        "tool_name": "my_api_12345",
        "code": "async def rapi_my_api_12345_getinventory(self,*args,**kwargs):\n    '''YUI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_my_api_12345_getinventory',kwargs)\n        "
    },
    "rapi_my_api_12345_loginuser": {
        "api_name": "loginuser",
        "category": "Business_Software",
        "tool_name": "my_api_12345",
        "code": "async def rapi_my_api_12345_loginuser(self,*args,**kwargs):\n    '''YUI\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_my_api_12345_loginuser',kwargs)\n        "
    },
    "rapi_logo_logo_api": {
        "api_name": "logo_api",
        "category": "Business_Software",
        "tool_name": "logo",
        "code": "async def rapi_logo_logo_api(self,*args,**kwargs):\n    '''Find the Logo of each company in real-time.  Using our logo finder service is entirely free with attribution. However, we require a link back to companyurlfinder.com on any page the service is used.   Just use the following format to embed logos in your systems:  <img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />\n    \n    \n\n    :param string domain:  defaults to amazon.com\n    '''\n    return await self._request_rapid_api('rapi_logo_logo_api',kwargs)\n        "
    },
    "rapi_public_holiday_public_holidays": {
        "api_name": "public_holidays",
        "category": "Events",
        "tool_name": "public_holiday",
        "code": "async def rapi_public_holiday_public_holidays(self,*args,**kwargs):\n    '''An API for Public Holidays & Bank Holidays\n    \n    \n\n    :param string CountryCode: CountryCode defaults to US\n    :param string Year: Year defaults to 2019\n    '''\n    return await self._request_rapid_api('rapi_public_holiday_public_holidays',kwargs)\n        "
    },
    "rapi_enoch_calendar_get_calendar_components": {
        "api_name": "get_calendar_components",
        "category": "Events",
        "tool_name": "enoch_calendar",
        "code": "async def rapi_enoch_calendar_get_calendar_components(self,*args,**kwargs):\n    '''Access the Biblical Holydays and Sabbaths using the Enoch Calendar\n    \n    \n\n    :param integer month:  defaults to 7\n    :param integer year:  defaults to 2021\n    '''\n    return await self._request_rapid_api('rapi_enoch_calendar_get_calendar_components',kwargs)\n        "
    },
    "rapi_enoch_calendar_get_calendar_components_for_today": {
        "api_name": "get_calendar_components_for_today",
        "category": "Events",
        "tool_name": "enoch_calendar",
        "code": "async def rapi_enoch_calendar_get_calendar_components_for_today(self,*args,**kwargs):\n    '''Access the Biblical Holydays and Sabbaths using the Enoch Calendar\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_enoch_calendar_get_calendar_components_for_today',kwargs)\n        "
    },
    "rapi_enoch_calendar_get_hebrew_month_and_date": {
        "api_name": "get_hebrew_month_and_date",
        "category": "Events",
        "tool_name": "enoch_calendar",
        "code": "async def rapi_enoch_calendar_get_hebrew_month_and_date(self,*args,**kwargs):\n    '''Access the Biblical Holydays and Sabbaths using the Enoch Calendar\n    \n    \n\n    :param DATE (YYYY-MM-DD) datestring:  defaults to 2021-03-30\n    '''\n    return await self._request_rapid_api('rapi_enoch_calendar_get_hebrew_month_and_date',kwargs)\n        "
    },
    "rapi_enoch_calendar_get_hebrew_date": {
        "api_name": "get_hebrew_date",
        "category": "Events",
        "tool_name": "enoch_calendar",
        "code": "async def rapi_enoch_calendar_get_hebrew_date(self,*args,**kwargs):\n    '''Access the Biblical Holydays and Sabbaths using the Enoch Calendar\n    \n    \n\n    :param DATE (YYYY-MM-DD) datestring:  defaults to 2021-03-17\n    '''\n    return await self._request_rapid_api('rapi_enoch_calendar_get_hebrew_date',kwargs)\n        "
    },
    "rapi_crypto_events_calendar_events": {
        "api_name": "events",
        "category": "Events",
        "tool_name": "crypto_events_calendar",
        "code": "async def rapi_crypto_events_calendar_events(self,*args,**kwargs):\n    '''Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\n\n    \n    \n\n    :param string pageSize: Max pageSize = 10 defaults to 10\n    :param string page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_crypto_events_calendar_events',kwargs)\n        "
    },
    "rapi_art_openings_italy_get_all_genres": {
        "api_name": "get_all_genres",
        "category": "Events",
        "tool_name": "art_openings_italy",
        "code": "async def rapi_art_openings_italy_get_all_genres(self,*args,**kwargs):\n    '''Introducing the ultimate art event API for Italy - your one-stop destination for discovering and experiencing the best art events happening across the country. With our API, you have access to a comprehensive list of cities where art events take place, as well as a list of ongoing events happening in each city.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_art_openings_italy_get_all_genres',kwargs)\n        "
    },
    "rapi_art_openings_italy_get_all_locations": {
        "api_name": "get_all_locations",
        "category": "Events",
        "tool_name": "art_openings_italy",
        "code": "async def rapi_art_openings_italy_get_all_locations(self,*args,**kwargs):\n    '''Introducing the ultimate art event API for Italy - your one-stop destination for discovering and experiencing the best art events happening across the country. With our API, you have access to a comprehensive list of cities where art events take place, as well as a list of ongoing events happening in each city.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_art_openings_italy_get_all_locations',kwargs)\n        "
    },
    "rapi_art_openings_italy_get_all_cities": {
        "api_name": "get_all_cities",
        "category": "Events",
        "tool_name": "art_openings_italy",
        "code": "async def rapi_art_openings_italy_get_all_cities(self,*args,**kwargs):\n    '''Introducing the ultimate art event API for Italy - your one-stop destination for discovering and experiencing the best art events happening across the country. With our API, you have access to a comprehensive list of cities where art events take place, as well as a list of ongoing events happening in each city.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_art_openings_italy_get_all_cities',kwargs)\n        "
    },
    "rapi_holidays_by_api_ninjas_v1_holidays": {
        "api_name": "v1_holidays",
        "category": "Events",
        "tool_name": "holidays_by_api_ninjas",
        "code": "async def rapi_holidays_by_api_ninjas_v1_holidays(self,*args,**kwargs):\n    '''Get past, present and future holiday data for any country. See more info at https://api-ninjas.com/api/holidays.\n    \n    \n\n    :param integer year: Calendar year between 2010 and 2030 (inclusive). Note: not all countries are guaranteed contain data going back to 2010. defaults to 2021\n    :param string country: Country name or ISO 3166-2 country code (preferred). defaults to us\n    :param string? type: Holiday type filter. Possible values are:\n\n- public_holiday\n- observance\n- national_holiday\n- season\n- state_holiday\n- optional_holiday\n- clock_change_daylight_saving_time\n- local_holiday\n- united_nations_observance\n- observance_christian\n- bank_holiday\n- common_local_holiday\n- national_holiday_christian\n- christian\n- observance_hebrew\n- jewish_holiday\n- muslim\n- hindu_holiday\n- restricted_holiday\n- official_holiday\n- national_holiday_orthodox\n- local_observance\n-  defaults to federal_holiday\n    '''\n    return await self._request_rapid_api('rapi_holidays_by_api_ninjas_v1_holidays',kwargs)\n        "
    },
    "rapi_contests_contests": {
        "api_name": "contests",
        "category": "Events",
        "tool_name": "contests",
        "code": "async def rapi_contests_contests(self,*args,**kwargs):\n    '''Get the list of active contests.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_contests_contests',kwargs)\n        "
    },
    "rapi_contests_health": {
        "api_name": "health",
        "category": "Events",
        "tool_name": "contests",
        "code": "async def rapi_contests_health(self,*args,**kwargs):\n    '''Get the list of active contests.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_contests_health',kwargs)\n        "
    },
    "rapi_historical_events_by_api_ninjas_v1_historicalevents": {
        "api_name": "v1_historicalevents",
        "category": "Events",
        "tool_name": "historical_events_by_api_ninjas",
        "code": "async def rapi_historical_events_by_api_ninjas_v1_historicalevents(self,*args,**kwargs):\n    '''Search through the most famous events in history. See more info at https://api-ninjas.com/api/historicalevents.\n    \n    \n\n    :param string? text: query text to search events by. Use keywords or short phrases for best match results. defaults to roman empire\n    :param integer? month: integer month (e.g. 3 for March).\n    :param integer? day: calendar day of the month.\n    :param integer? year: 4-digit year (e.g. 1776). For BC/BCE years, use a negative integer (e.g. -351 for 351 BC).\n    :param integer? offset: number of results to offset (for pagination).\n    '''\n    return await self._request_rapid_api('rapi_historical_events_by_api_ninjas_v1_historicalevents',kwargs)\n        "
    },
    "rapi_feriados_brasileiros_feriados_dos_estados": {
        "api_name": "feriados_dos_estados",
        "category": "Events",
        "tool_name": "feriados_brasileiros",
        "code": "async def rapi_feriados_brasileiros_feriados_dos_estados(self,*args,**kwargs):\n    '''API para obter feriados nacionais para uma cidade/estado espec\u00edfica durante um determinado ano.\n    \n    \n\n    :param string estado:  defaults to MG\n    :param string ano:  defaults to 2023\n    '''\n    return await self._request_rapid_api('rapi_feriados_brasileiros_feriados_dos_estados',kwargs)\n        "
    },
    "rapi_today_in_history_get_event": {
        "api_name": "get_event",
        "category": "Events",
        "tool_name": "today_in_history",
        "code": "async def rapi_today_in_history_get_event(self,*args,**kwargs):\n    '''Retrieves data about an important day in history.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_today_in_history_get_event',kwargs)\n        "
    },
    "rapi_tweetfeed_v1": {
        "api_name": "v1",
        "category": "Cybersecurity",
        "tool_name": "tweetfeed",
        "code": "async def rapi_tweetfeed_v1(self,*args,**kwargs):\n    '''Free feed with IOCs -  malicious URLs, domains, IPs, and hashes. [Website: https://tweetfeed.live]\n    \n    \n\n    :param string time: Select 1 of these timeframes:\n\n**today** - Today starting 00:00 UTC)\n**week** - Last 7 days\n**month** - Last 30 days\n**year** - Last 365 days defaults to today\n    :param string? filter1: Can be an specific user, type or tag:\n\nType \u2192 **url** / **domain** / **ip** / **sha256** / **md5**\nTag \u2192 **phishing** / **ransomware** / **CobaltStrike** ...\nUser \u2192 **@malwrhunterteam** / **@1ZRR4H** / **@MBThreatIntel** / ... (don't forget the @) defaults to phishing\n    :param string? filter2: Can be an specific user, type or tag:\n\nType \u2192 **url** / **domain** / **ip** / **sha256** / **md5**\nTag \u2192 **phishing** / **ransomware** / **CobaltStrike** ...\nUser \u2192 **@malwrhunterteam** / **@1ZRR4H** / **@MBThreatIntel** / ... (don't forget the @) defaults to url\n    '''\n    return await self._request_rapid_api('rapi_tweetfeed_v1',kwargs)\n        "
    },
    "rapi_weblasso_get_callback_url_status": {
        "api_name": "get_callback_url_status",
        "category": "Cybersecurity",
        "tool_name": "weblasso",
        "code": "async def rapi_weblasso_get_callback_url_status(self,*args,**kwargs):\n    '''Scan the web for a diverse range of data including subdomains, IP Addresses, web technologies and emails!\n    \n    \n\n    :param string callback_url:  defaults to https://my-callback-url.com\n    '''\n    return await self._request_rapid_api('rapi_weblasso_get_callback_url_status',kwargs)\n        "
    },
    "rapi_chess_puzzles_v2_advanced": {
        "api_name": "advanced",
        "category": "Gaming",
        "tool_name": "chess_puzzles_v2",
        "code": "async def rapi_chess_puzzles_v2_advanced(self,*args,**kwargs):\n    '''Quickly access 1.000.000+ chess puzzles!\n    \n    \n\n    :param integer? number_of_puzzles: Number of puzzles you will get defaults to 1\n    :param string? themes: Themes of the puzzles defaults to kingsideAttack,middlegame\n    :param string? theme_search_type: AND: if puzzles need to have all themes;  OR: if puzzles can have either theme defaults to AND\n    :param integer? number_of_moves: Total number of moves of the puzzles defaults to 4\n    :param string? opening_variation: Puzzle's opening variation defaults to Kings_Gambit_Accepted_Abbazia_Defense\n    :param string? rating: Rating of the puzzles defaults to 1200\n    :param string? opening_family: Puzzle's opening family defaults to Kings_Gambit_Accepted\n    :param integer? max_deviation: Maximum possible rating deviation\n    '''\n    return await self._request_rapid_api('rapi_chess_puzzles_v2_advanced',kwargs)\n        "
    },
    "rapi_chess_puzzles_v2_range": {
        "api_name": "range",
        "category": "Gaming",
        "tool_name": "chess_puzzles_v2",
        "code": "async def rapi_chess_puzzles_v2_range(self,*args,**kwargs):\n    '''Quickly access 1.000.000+ chess puzzles!\n    \n    \n\n    :param integer? number_of_puzzles: Number of puzzles you will get defaults to 1\n    :param integer? max_deviation: Maximum possible rating deviation defaults to 100\n    :param integer? min: Minimum rating the puzzle can have  defaults to 1200\n    :param integer? max: Maximum rating the puzzle can have  defaults to 1600\n    '''\n    return await self._request_rapid_api('rapi_chess_puzzles_v2_range',kwargs)\n        "
    },
    "rapi_chess_puzzles_v2_random": {
        "api_name": "random",
        "category": "Gaming",
        "tool_name": "chess_puzzles_v2",
        "code": "async def rapi_chess_puzzles_v2_random(self,*args,**kwargs):\n    '''Quickly access 1.000.000+ chess puzzles!\n    \n    \n\n    :param integer? number_of_puzzles: Number of puzzles you will get defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_chess_puzzles_v2_random',kwargs)\n        "
    },
    "rapi_csgo_matches_and_tournaments_played": {
        "api_name": "played",
        "category": "Gaming",
        "tool_name": "csgo_matches_and_tournaments",
        "code": "async def rapi_csgo_matches_and_tournaments_played(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? limit:  defaults to 10\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_csgo_matches_and_tournaments_played',kwargs)\n        "
    },
    "rapi_steam_store_api_free_to_play": {
        "api_name": "free_to_play",
        "category": "Gaming",
        "tool_name": "steam_store_api",
        "code": "async def rapi_steam_store_api_free_to_play(self,*args,**kwargs):\n    '''\ud83d\udc8eUncover gaming trends with our Steam API. Download prices, DLCs, discounts, reviews. Fuel your project, outperform rivals!\n    \n    \n\n    :param integer page: Page numbering starts from 0, so the first page is 0. defaults to 0\n    :param string countryCode: To get available country codes, just call the **Country code list** endpoint from **General** section. defaults to US\n    :param string language: To get available languages, just call the **Language list** endpoint from **General** section. defaults to english\n    '''\n    return await self._request_rapid_api('rapi_steam_store_api_free_to_play',kwargs)\n        "
    },
    "rapi_osrs_live_prices_historical_prices": {
        "api_name": "historical_prices",
        "category": "Gaming",
        "tool_name": "osrs_live_prices",
        "code": "async def rapi_osrs_live_prices_historical_prices(self,*args,**kwargs):\n    '''Grand exchange data for old school runescape items. \n    \n    \n\n    :param string timestep:  defaults to 5m\n    :param integer itemID:  defaults to 565\n    '''\n    return await self._request_rapid_api('rapi_osrs_live_prices_historical_prices',kwargs)\n        "
    },
    "rapi_osrs_live_prices_latest_price": {
        "api_name": "latest_price",
        "category": "Gaming",
        "tool_name": "osrs_live_prices",
        "code": "async def rapi_osrs_live_prices_latest_price(self,*args,**kwargs):\n    '''Grand exchange data for old school runescape items. \n    \n    \n\n    :param string timestep:  defaults to 5m\n    :param integer itemID:  defaults to 314\n    '''\n    return await self._request_rapid_api('rapi_osrs_live_prices_latest_price',kwargs)\n        "
    },
    "rapi_dota2_heroes_heroes_data": {
        "api_name": "heroes_data",
        "category": "Gaming",
        "tool_name": "dota2_heroes",
        "code": "async def rapi_dota2_heroes_heroes_data(self,*args,**kwargs):\n    '''This api can give you all dota2 heroes list ands bios images videos role talents and abilities with 20 language.\n    \n    \n\n    :param ENUM language: \n    :param string id:  defaults to 37\n    '''\n    return await self._request_rapid_api('rapi_dota2_heroes_heroes_data',kwargs)\n        "
    },
    "rapi_league_of_legends_galore_get_random_champion": {
        "api_name": "get_random_champion",
        "category": "Gaming",
        "tool_name": "league_of_legends_galore",
        "code": "async def rapi_league_of_legends_galore_get_random_champion(self,*args,**kwargs):\n    '''Get Details aboat players, champions, and more!\n\nCheck the About page for details on every API!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_galore_get_random_champion',kwargs)\n        "
    },
    "rapi_league_of_legends_galore_get_all_league_ranks": {
        "api_name": "get_all_league_ranks",
        "category": "Gaming",
        "tool_name": "league_of_legends_galore",
        "code": "async def rapi_league_of_legends_galore_get_all_league_ranks(self,*args,**kwargs):\n    '''Get Details aboat players, champions, and more!\n\nCheck the About page for details on every API!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_galore_get_all_league_ranks',kwargs)\n        "
    },
    "rapi_league_of_legends_galore_search_for_a_champion": {
        "api_name": "search_for_a_champion",
        "category": "Gaming",
        "tool_name": "league_of_legends_galore",
        "code": "async def rapi_league_of_legends_galore_search_for_a_champion(self,*args,**kwargs):\n    '''Get Details aboat players, champions, and more!\n\nCheck the About page for details on every API!\n    \n    \n\n    :param string? releaseDate: \n    :param string? name:  defaults to zed\n    :param string? resource: \n    :param string? rp: \n    :param string? blueEssence: \n    :param string? attribute: \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_galore_search_for_a_champion',kwargs)\n        "
    },
    "rapi_league_of_legends_galore_get_random_item": {
        "api_name": "get_random_item",
        "category": "Gaming",
        "tool_name": "league_of_legends_galore",
        "code": "async def rapi_league_of_legends_galore_get_random_item(self,*args,**kwargs):\n    '''Get Details aboat players, champions, and more!\n\nCheck the About page for details on every API!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_galore_get_random_item',kwargs)\n        "
    },
    "rapi_league_of_legends_galore_search_for_a_item": {
        "api_name": "search_for_a_item",
        "category": "Gaming",
        "tool_name": "league_of_legends_galore",
        "code": "async def rapi_league_of_legends_galore_search_for_a_item(self,*args,**kwargs):\n    '''Get Details aboat players, champions, and more!\n\nCheck the About page for details on every API!\n    \n    \n\n    :param string? champSynergy: \n    :param string? itemSynergy: \n    :param string? price: \n    :param string? name:  defaults to sword\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_galore_search_for_a_item',kwargs)\n        "
    },
    "rapi_epic_free_games_get_epic_free_games": {
        "api_name": "get_epic_free_games",
        "category": "Gaming",
        "tool_name": "epic_free_games",
        "code": "async def rapi_epic_free_games_get_epic_free_games(self,*args,**kwargs):\n    '''Epic Games Store - Free Games with details.\n\nGame Name,\nGame Description,\nGame Image Wide - Tall,\nGame Publisher,\nGame Discount Price,\nGame Original Price,\nGame Price Currency Code,\nGame Epic URL\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_epic_free_games_get_epic_free_games',kwargs)\n        "
    },
    "rapi_epic_free_games_get_epic_free_games_coming_soon": {
        "api_name": "get_epic_free_games_coming_soon",
        "category": "Gaming",
        "tool_name": "epic_free_games",
        "code": "async def rapi_epic_free_games_get_epic_free_games_coming_soon(self,*args,**kwargs):\n    '''Epic Games Store - Free Games with details.\n\nGame Name,\nGame Description,\nGame Image Wide - Tall,\nGame Publisher,\nGame Discount Price,\nGame Original Price,\nGame Price Currency Code,\nGame Epic URL\n\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_epic_free_games_get_epic_free_games_coming_soon',kwargs)\n        "
    },
    "rapi_minecraft_servers_list_get_all_servers": {
        "api_name": "get_all_servers",
        "category": "Gaming",
        "tool_name": "minecraft_servers_list",
        "code": "async def rapi_minecraft_servers_list_get_all_servers(self,*args,**kwargs):\n    '''More than 1700 Minecraft Servers List with live status\n    \n    \n\n    :param string limit:  defaults to 2000\n    '''\n    return await self._request_rapid_api('rapi_minecraft_servers_list_get_all_servers',kwargs)\n        "
    },
    "rapi_trackmania_team_players": {
        "api_name": "team_players",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_team_players(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_trackmania_team_players',kwargs)\n        "
    },
    "rapi_trackmania_totd_tracks_by_date": {
        "api_name": "totd_tracks_by_date",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_totd_tracks_by_date(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    :param integer month: month of the date. defaults to 6\n    :param integer year: year of the date. defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_trackmania_totd_tracks_by_date',kwargs)\n        "
    },
    "rapi_trackmania_totd_tracks_by_page": {
        "api_name": "totd_tracks_by_page",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_totd_tracks_by_page(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    :param integer? page: The result page, each containing 50 results. Default page is `0`. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_trackmania_totd_tracks_by_page',kwargs)\n        "
    },
    "rapi_trackmania_royal_matches": {
        "api_name": "royal_matches",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_royal_matches(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    :param integer? page: The result page, each containing 50 results. Default page is `0`. defaults to 0\n    :param integer? limit: The result limit that gets returned. Default limit is `50`. defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_trackmania_royal_matches',kwargs)\n        "
    },
    "rapi_trackmania_matchmaking_matches": {
        "api_name": "matchmaking_matches",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_matchmaking_matches(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    :param integer? limit: The result limit that gets returned. Default limit is `50`. defaults to 50\n    :param integer? page: The result page, each containing 50 results. Default page is `0`. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_trackmania_matchmaking_matches',kwargs)\n        "
    },
    "rapi_trackmania_top_players_by_royal": {
        "api_name": "top_players_by_royal",
        "category": "Gaming",
        "tool_name": "trackmania",
        "code": "async def rapi_trackmania_top_players_by_royal(self,*args,**kwargs):\n    '''Get Stats, Matches and Leaderboards from Trackmania (Unofficial).\n    \n    \n\n    :param integer? page: The result page, each containing 50 results. Default page is `0`. defaults to 0\n    :param integer? limit: The result limit that gets returned. Default limit is `50`. defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_trackmania_top_players_by_royal',kwargs)\n        "
    },
    "rapi_estrelabet_aviator_api_estrelabet_aviator_latest": {
        "api_name": "estrelabet_aviator_latest",
        "category": "Gaming",
        "tool_name": "estrelabet_aviator_api",
        "code": "async def rapi_estrelabet_aviator_api_estrelabet_aviator_latest(self,*args,**kwargs):\n    '''This endpoint allows you to retrieve the latest results of the Aviator game on the Estrelabet ( \nestrelabet.com )platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avi...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_estrelabet_aviator_api_estrelabet_aviator_latest',kwargs)\n        "
    },
    "rapi_steam_community_user_aliases": {
        "api_name": "user_aliases",
        "category": "Gaming",
        "tool_name": "steam_community",
        "code": "async def rapi_steam_community_user_aliases(self,*args,**kwargs):\n    '''Interface with elements on the SteamCommunity.\n    \n    \n\n    :param string id:  defaults to sindex\n    '''\n    return await self._request_rapid_api('rapi_steam_community_user_aliases',kwargs)\n        "
    },
    "rapi_steam_community_group_profile": {
        "api_name": "group_profile",
        "category": "Gaming",
        "tool_name": "steam_community",
        "code": "async def rapi_steam_community_group_profile(self,*args,**kwargs):\n    '''Interface with elements on the SteamCommunity.\n    \n    \n\n    :param string id:  defaults to l4d\n    '''\n    return await self._request_rapid_api('rapi_steam_community_group_profile',kwargs)\n        "
    },
    "rapi_steam_community_user_groups_list": {
        "api_name": "user_groups_list",
        "category": "Gaming",
        "tool_name": "steam_community",
        "code": "async def rapi_steam_community_user_groups_list(self,*args,**kwargs):\n    '''Interface with elements on the SteamCommunity.\n    \n    \n\n    :param string id:  defaults to sindex\n    '''\n    return await self._request_rapid_api('rapi_steam_community_user_groups_list',kwargs)\n        "
    },
    "rapi_steam_community_user_profile": {
        "api_name": "user_profile",
        "category": "Gaming",
        "tool_name": "steam_community",
        "code": "async def rapi_steam_community_user_profile(self,*args,**kwargs):\n    '''Interface with elements on the SteamCommunity.\n    \n    \n\n    :param string id:  defaults to sindex\n    '''\n    return await self._request_rapid_api('rapi_steam_community_user_profile',kwargs)\n        "
    },
    "rapi_word_tree_csw21": {
        "api_name": "csw21",
        "category": "Gaming",
        "tool_name": "word_tree",
        "code": "async def rapi_word_tree_csw21(self,*args,**kwargs):\n    '''Given a set of letters, generate all the words that can be produced by adding at least one additional letter, arranged hierarchically.\n    \n    \n\n    :param string input: A series of at least 4 letters (a-z, case-insensitive). No other characters should be included or no meaningful results will be returned. defaults to ANAGRAMS\n    '''\n    return await self._request_rapid_api('rapi_word_tree_csw21',kwargs)\n        "
    },
    "rapi_word_tree_nwl20": {
        "api_name": "nwl20",
        "category": "Gaming",
        "tool_name": "word_tree",
        "code": "async def rapi_word_tree_nwl20(self,*args,**kwargs):\n    '''Given a set of letters, generate all the words that can be produced by adding at least one additional letter, arranged hierarchically.\n    \n    \n\n    :param string input:  defaults to ANAGRAMS\n    '''\n    return await self._request_rapid_api('rapi_word_tree_nwl20',kwargs)\n        "
    },
    "rapi_bet7k_aviator_api_bet7k_aviator_latest": {
        "api_name": "bet7k_aviator_latest",
        "category": "Gaming",
        "tool_name": "bet7k_aviator_api",
        "code": "async def rapi_bet7k_aviator_api_bet7k_aviator_latest(self,*args,**kwargs):\n    '''This endpoint allows you to retrieve the latest results of the Aviator game on the BET7K ( bet7k.com ) platform. \nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest. \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Aviator game on B...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bet7k_aviator_api_bet7k_aviator_latest',kwargs)\n        "
    },
    "rapi_league_of_legends_champion_informaion_get_champions": {
        "api_name": "get_champions",
        "category": "Gaming",
        "tool_name": "league_of_legends_champion_informaion",
        "code": "async def rapi_league_of_legends_champion_informaion_get_champions(self,*args,**kwargs):\n    '''API that will return a Champion object containing a list of Abilities including the champions passive ability. \n    \n    \n\n    :param string? champions:  defaults to cait\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_champion_informaion_get_champions',kwargs)\n        "
    },
    "rapi_word_ladder_builder_build_word_ladders": {
        "api_name": "build_word_ladders",
        "category": "Gaming",
        "tool_name": "word_ladder_builder",
        "code": "async def rapi_word_ladder_builder_build_word_ladders(self,*args,**kwargs):\n    '''This word ladder builder API to find the shortest routes between words. Available on several datasets, this API version builds ladders for Collins Scabble Words dictionary of 2019 edition, for word lengths between 2 and 9 characters which cover more than 5 billion combinations.\n\nWord Ladders are also called doublets, word-links, change-the-word puzzles, paragrams, laddergrams and word golf. It is used for brain teaser and puzzle games globally including Wordle, Jotto and their variations. \n    \n    \n\n    :param string EndWord: \n    :param string StartWord: \n    :param string? Dictionary: \n    '''\n    return await self._request_rapid_api('rapi_word_ladder_builder_build_word_ladders',kwargs)\n        "
    },
    "rapi_dice_roll_simulator_regular_dice_rolls": {
        "api_name": "regular_dice_rolls",
        "category": "Gaming",
        "tool_name": "dice_roll_simulator",
        "code": "async def rapi_dice_roll_simulator_regular_dice_rolls(self,*args,**kwargs):\n    '''Roll as many dice of any size as many times you want with the ultimate dice rolling API.\n    \n    \n\n    :param integer? rolls:  defaults to 2\n    :param integer? dice:  defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_dice_roll_simulator_regular_dice_rolls',kwargs)\n        "
    },
    "rapi_dice_roll_simulator_custom_dice_rolls": {
        "api_name": "custom_dice_rolls",
        "category": "Gaming",
        "tool_name": "dice_roll_simulator",
        "code": "async def rapi_dice_roll_simulator_custom_dice_rolls(self,*args,**kwargs):\n    '''Roll as many dice of any size as many times you want with the ultimate dice rolling API.\n    \n    \n\n    :param integer? dice:  defaults to 3\n    :param integer? sides:  defaults to 8\n    :param string? rolls:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_dice_roll_simulator_custom_dice_rolls',kwargs)\n        "
    },
    "rapi_twitch_channel_clips_get_clips": {
        "api_name": "get_clips",
        "category": "Gaming",
        "tool_name": "twitch_channel_clips",
        "code": "async def rapi_twitch_channel_clips_get_clips(self,*args,**kwargs):\n    '''An API to get info about the latest 50 clips from a channel, including direct download links\n    \n    \n\n    :param string name:  defaults to jakubloveshorror\n    '''\n    return await self._request_rapid_api('rapi_twitch_channel_clips_get_clips',kwargs)\n        "
    },
    "rapi_unigamer_api_getgamesbyid": {
        "api_name": "getgamesbyid",
        "category": "Gaming",
        "tool_name": "unigamer_api",
        "code": "async def rapi_unigamer_api_getgamesbyid(self,*args,**kwargs):\n    '''We provide a REST API endpoint which can be used for free for up to 1000 requests per month\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unigamer_api_getgamesbyid',kwargs)\n        "
    },
    "rapi_unigamer_api_getallgames": {
        "api_name": "getallgames",
        "category": "Gaming",
        "tool_name": "unigamer_api",
        "code": "async def rapi_unigamer_api_getallgames(self,*args,**kwargs):\n    '''We provide a REST API endpoint which can be used for free for up to 1000 requests per month\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unigamer_api_getallgames',kwargs)\n        "
    },
    "rapi_unigamer_api_getgamesbycategory": {
        "api_name": "getgamesbycategory",
        "category": "Gaming",
        "tool_name": "unigamer_api",
        "code": "async def rapi_unigamer_api_getgamesbycategory(self,*args,**kwargs):\n    '''We provide a REST API endpoint which can be used for free for up to 1000 requests per month\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_unigamer_api_getgamesbycategory',kwargs)\n        "
    },
    "rapi_aposta_ganha_aviator_api_apostaganha_aviator_latest": {
        "api_name": "apostaganha_aviator_latest",
        "category": "Gaming",
        "tool_name": "aposta_ganha_aviator_api",
        "code": "async def rapi_aposta_ganha_aviator_api_apostaganha_aviator_latest(self,*args,**kwargs):\n    '''This endpoint allows you to retrieve the latest results of the Aviator game on the Aposta Ganha ( apostaganha.bet )  platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_aposta_ganha_aviator_api_apostaganha_aviator_latest',kwargs)\n        "
    },
    "rapi_steam_market_and_store_retrieve_buy_sell_informations_by_id": {
        "api_name": "retrieve_buy_sell_informations_by_id",
        "category": "Gaming",
        "tool_name": "steam_market_and_store",
        "code": "async def rapi_steam_market_and_store_retrieve_buy_sell_informations_by_id(self,*args,**kwargs):\n    '''Welcome to the Steam Market API, your gateway to a treasure trove of information about the vibrant world of gaming on Steam! \ud83d\ude04\ud83c\udfae Our API provides a seamless experience for developers and gamers alike, offering a range of powerful endpoints to retrieve all the juicy details about the Steam market and store.  Need up-to-date pricing information for a specific game or item? Look no further! \ud83d\udcc8\ud83d\udcb0 Our endpoints deliver real-time market data, including current prices, historical trends, and volume sta...\n    \n    \n\n    :param string ID: Retrieve this ID from the Get Items IDs by query endpoint defaults to 730---Dreams %26 Nightmares Case\n    '''\n    return await self._request_rapid_api('rapi_steam_market_and_store_retrieve_buy_sell_informations_by_id',kwargs)\n        "
    },
    "rapi_steam_market_and_store_get_price_history_by_id": {
        "api_name": "get_price_history_by_id",
        "category": "Gaming",
        "tool_name": "steam_market_and_store",
        "code": "async def rapi_steam_market_and_store_get_price_history_by_id(self,*args,**kwargs):\n    '''Welcome to the Steam Market API, your gateway to a treasure trove of information about the vibrant world of gaming on Steam! \ud83d\ude04\ud83c\udfae Our API provides a seamless experience for developers and gamers alike, offering a range of powerful endpoints to retrieve all the juicy details about the Steam market and store.  Need up-to-date pricing information for a specific game or item? Look no further! \ud83d\udcc8\ud83d\udcb0 Our endpoints deliver real-time market data, including current prices, historical trends, and volume sta...\n    \n    \n\n    :param string ID: Retrieve this ID from the Get Items IDs by query endpoint defaults to 730---Dreams %26 Nightmares Case\n    '''\n    return await self._request_rapid_api('rapi_steam_market_and_store_get_price_history_by_id',kwargs)\n        "
    },
    "rapi_steam_market_and_store_get_items_ids_by_query": {
        "api_name": "get_items_ids_by_query",
        "category": "Gaming",
        "tool_name": "steam_market_and_store",
        "code": "async def rapi_steam_market_and_store_get_items_ids_by_query(self,*args,**kwargs):\n    '''Welcome to the Steam Market API, your gateway to a treasure trove of information about the vibrant world of gaming on Steam! \ud83d\ude04\ud83c\udfae Our API provides a seamless experience for developers and gamers alike, offering a range of powerful endpoints to retrieve all the juicy details about the Steam market and store.  Need up-to-date pricing information for a specific game or item? Look no further! \ud83d\udcc8\ud83d\udcb0 Our endpoints deliver real-time market data, including current prices, historical trends, and volume sta...\n    \n    \n\n    :param string query: Text Query defaults to case\n    '''\n    return await self._request_rapid_api('rapi_steam_market_and_store_get_items_ids_by_query',kwargs)\n        "
    },
    "rapi_vai_de_bob_aviator_api_vaidebob_aviator_latest": {
        "api_name": "vaidebob_aviator_latest",
        "category": "Gaming",
        "tool_name": "vai_de_bob_aviator_api",
        "code": "async def rapi_vai_de_bob_aviator_api_vaidebob_aviator_latest(self,*args,**kwargs):\n    '''This endpoint allows you to retrieve the latest results of the Aviator game on the Vai de Bob ( vaidebob.com )  platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avia...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_vai_de_bob_aviator_api_vaidebob_aviator_latest',kwargs)\n        "
    },
    "rapi_wordle_answers_solutions_all_solutions": {
        "api_name": "all_solutions",
        "category": "Gaming",
        "tool_name": "wordle_answers_solutions",
        "code": "async def rapi_wordle_answers_solutions_all_solutions(self,*args,**kwargs):\n    '''Wordle Answers is an api where you can get all the answers of the popular word game Wordle.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wordle_answers_solutions_all_solutions',kwargs)\n        "
    },
    "rapi_league_of_legends_stats_get_a_specific_champion_s_base_stats": {
        "api_name": "get_a_specific_champion_s_base_stats",
        "category": "Gaming",
        "tool_name": "league_of_legends_stats",
        "code": "async def rapi_league_of_legends_stats_get_a_specific_champion_s_base_stats(self,*args,**kwargs):\n    '''An API showing all the champions in League of Legends and their base stats.\n    \n    \n\n    :param string name:  defaults to ekko\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_stats_get_a_specific_champion_s_base_stats',kwargs)\n        "
    },
    "rapi_league_of_legends_stats_get_all_champion_base_stats": {
        "api_name": "get_all_champion_base_stats",
        "category": "Gaming",
        "tool_name": "league_of_legends_stats",
        "code": "async def rapi_league_of_legends_stats_get_all_champion_base_stats(self,*args,**kwargs):\n    '''An API showing all the champions in League of Legends and their base stats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_stats_get_all_champion_base_stats',kwargs)\n        "
    },
    "rapi_league_of_legends_stats_get_list_of_all_champion_names": {
        "api_name": "get_list_of_all_champion_names",
        "category": "Gaming",
        "tool_name": "league_of_legends_stats",
        "code": "async def rapi_league_of_legends_stats_get_list_of_all_champion_names(self,*args,**kwargs):\n    '''An API showing all the champions in League of Legends and their base stats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_stats_get_list_of_all_champion_names',kwargs)\n        "
    },
    "rapi_epic_games_store_free_games_free_games": {
        "api_name": "free_games",
        "category": "Gaming",
        "tool_name": "epic_games_store_free_games",
        "code": "async def rapi_epic_games_store_free_games_free_games(self,*args,**kwargs):\n    '''Unofficial API for scraping Free Games Offers from the Epic Games Store\n    \n    \n\n    :param string? country: Country Code for local offers. E.g, ES, DE, US. Defaults to US defaults to US\n    '''\n    return await self._request_rapid_api('rapi_epic_games_store_free_games_free_games',kwargs)\n        "
    },
    "rapi_gotw_commanderskills": {
        "api_name": "commanderskills",
        "category": "Gaming",
        "tool_name": "gotw",
        "code": "async def rapi_gotw_commanderskills(self,*args,**kwargs):\n    '''GoTW commander skills\n    \n    \n\n    :param string? skill: \n    '''\n    return await self._request_rapid_api('rapi_gotw_commanderskills',kwargs)\n        "
    },
    "rapi_rpg_items_get_items_by_query": {
        "api_name": "get_items_by_query",
        "category": "Gaming",
        "tool_name": "rpg_items",
        "code": "async def rapi_rpg_items_get_items_by_query(self,*args,**kwargs):\n    '''An api of generated RPG items\n    \n    \n\n    :param string? rank:  defaults to 1\n    :param string? slot:  defaults to chest\n    :param string? rarity:  defaults to common\n    :param string? name:  defaults to Linen Cloth Robe\n    :param string? type:  defaults to armor\n    '''\n    return await self._request_rapid_api('rapi_rpg_items_get_items_by_query',kwargs)\n        "
    },
    "rapi_rpg_items_get_all_items": {
        "api_name": "get_all_items",
        "category": "Gaming",
        "tool_name": "rpg_items",
        "code": "async def rapi_rpg_items_get_all_items(self,*args,**kwargs):\n    '''An api of generated RPG items\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rpg_items_get_all_items',kwargs)\n        "
    },
    "rapi_call_of_duty_warzone_stats_warzone_rollosis_psn": {
        "api_name": "warzone_rollosis_psn",
        "category": "Gaming",
        "tool_name": "call_of_duty_warzone_stats",
        "code": "async def rapi_call_of_duty_warzone_stats_warzone_rollosis_psn(self,*args,**kwargs):\n    '''Get Warzone gaming data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_call_of_duty_warzone_stats_warzone_rollosis_psn',kwargs)\n        "
    },
    "rapi_mmo_games_latest_mmo_news": {
        "api_name": "latest_mmo_news",
        "category": "Gaming",
        "tool_name": "mmo_games",
        "code": "async def rapi_mmo_games_latest_mmo_news(self,*args,**kwargs):\n    '''MMO Games API - By MMOBomb! Access programmatically the best Multiplayer Online Games,  News and Giveaways!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mmo_games_latest_mmo_news',kwargs)\n        "
    },
    "rapi_mmo_games_live_mmo_giveaways": {
        "api_name": "live_mmo_giveaways",
        "category": "Gaming",
        "tool_name": "mmo_games",
        "code": "async def rapi_mmo_games_live_mmo_giveaways(self,*args,**kwargs):\n    '''MMO Games API - By MMOBomb! Access programmatically the best Multiplayer Online Games,  News and Giveaways!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mmo_games_live_mmo_giveaways',kwargs)\n        "
    },
    "rapi_mmo_games_games_by_platform_category_sorted": {
        "api_name": "games_by_platform_category_sorted",
        "category": "Gaming",
        "tool_name": "mmo_games",
        "code": "async def rapi_mmo_games_games_by_platform_category_sorted(self,*args,**kwargs):\n    '''MMO Games API - By MMOBomb! Access programmatically the best Multiplayer Online Games,  News and Giveaways!\n    \n    \n\n    :param string? sort-by:  defaults to release-date\n    :param string? platform:  defaults to browser\n    :param string? category:  defaults to mmorpg\n    '''\n    return await self._request_rapid_api('rapi_mmo_games_games_by_platform_category_sorted',kwargs)\n        "
    },
    "rapi_mmo_games_games_by_platform": {
        "api_name": "games_by_platform",
        "category": "Gaming",
        "tool_name": "mmo_games",
        "code": "async def rapi_mmo_games_games_by_platform(self,*args,**kwargs):\n    '''MMO Games API - By MMOBomb! Access programmatically the best Multiplayer Online Games,  News and Giveaways!\n    \n    \n\n    :param string platform:  defaults to browser\n    '''\n    return await self._request_rapid_api('rapi_mmo_games_games_by_platform',kwargs)\n        "
    },
    "rapi_cod_api_2_0_skill_rating_mw_2_ranked": {
        "api_name": "skill_rating_mw_2_ranked",
        "category": "Gaming",
        "tool_name": "cod_api_2_0",
        "code": "async def rapi_cod_api_2_0_skill_rating_mw_2_ranked(self,*args,**kwargs):\n    '''Provides an easy access to the COD api leaderboard endpoints.\n    \n    \n\n    :param string? limit: Provide a number from 1 to 250 defaults to 250\n    '''\n    return await self._request_rapid_api('rapi_cod_api_2_0_skill_rating_mw_2_ranked',kwargs)\n        "
    },
    "rapi_pokemon_tcg_card_prices_get_many_cards": {
        "api_name": "get_many_cards",
        "category": "Gaming",
        "tool_name": "pokemon_tcg_card_prices",
        "code": "async def rapi_pokemon_tcg_card_prices_get_many_cards(self,*args,**kwargs):\n    '''Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.\n    \n    \n\n    :param string? set:  defaults to vivid-voltage\n    :param string? setId:  defaults to 33ee55f4-30d0-4900-850f-36a351fb9719\n    :param string? setNumber: \n    :param string? cardNumber: \n    :param string? name: \n    :param string? limit: Max 200, defaults to 50\n    :param string? series:  defaults to sword-and-shield\n    :param string? fromId: A paging parameter. The ID from which the query will continue.\nCalls for many results include a fromId field that can be used as a query param in the next call to get the next page of results\n    :param string? variant: DEFAULT / REVERSE_HOLO\n    '''\n    return await self._request_rapid_api('rapi_pokemon_tcg_card_prices_get_many_cards',kwargs)\n        "
    },
    "rapi_pokemon_tcg_card_prices_get_one_card_by_id": {
        "api_name": "get_one_card_by_id",
        "category": "Gaming",
        "tool_name": "pokemon_tcg_card_prices",
        "code": "async def rapi_pokemon_tcg_card_prices_get_one_card_by_id(self,*args,**kwargs):\n    '''Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.\n    \n    \n\n    :param string cardId:  defaults to c4cbb4b6-ceba-4b14-8e28-ad2b590ccd59\n    '''\n    return await self._request_rapid_api('rapi_pokemon_tcg_card_prices_get_one_card_by_id',kwargs)\n        "
    },
    "rapi_pokemon_tcg_card_prices_get_one_set_by_id": {
        "api_name": "get_one_set_by_id",
        "category": "Gaming",
        "tool_name": "pokemon_tcg_card_prices",
        "code": "async def rapi_pokemon_tcg_card_prices_get_one_set_by_id(self,*args,**kwargs):\n    '''Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.\n    \n    \n\n    :param string setId:  defaults to 33ee55f4-30d0-4900-850f-36a351fb9719\n    '''\n    return await self._request_rapid_api('rapi_pokemon_tcg_card_prices_get_one_set_by_id',kwargs)\n        "
    },
    "rapi_pokemon_tcg_card_prices_get_many_sets": {
        "api_name": "get_many_sets",
        "category": "Gaming",
        "tool_name": "pokemon_tcg_card_prices",
        "code": "async def rapi_pokemon_tcg_card_prices_get_many_sets(self,*args,**kwargs):\n    '''Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.\n    \n    \n\n    :param string? series:  defaults to sword-and-shield\n    :param integer? limit:  defaults to 20\n    :param string? fromId: \n    :param string? set:  defaults to vivid-voltage\n    '''\n    return await self._request_rapid_api('rapi_pokemon_tcg_card_prices_get_many_sets',kwargs)\n        "
    },
    "rapi_marvel_vs_capcom_2_show_moves": {
        "api_name": "show_moves",
        "category": "Gaming",
        "tool_name": "marvel_vs_capcom_2",
        "code": "async def rapi_marvel_vs_capcom_2_show_moves(self,*args,**kwargs):\n    '''Get data about  characters from Marvel Vs Capcom 2 game.\n    \n    \n\n    :param string name:  defaults to Akuma\n    '''\n    return await self._request_rapid_api('rapi_marvel_vs_capcom_2_show_moves',kwargs)\n        "
    },
    "rapi_marvel_vs_capcom_2_show_character": {
        "api_name": "show_character",
        "category": "Gaming",
        "tool_name": "marvel_vs_capcom_2",
        "code": "async def rapi_marvel_vs_capcom_2_show_character(self,*args,**kwargs):\n    '''Get data about  characters from Marvel Vs Capcom 2 game.\n    \n    \n\n    :param string name:  defaults to Cabel\n    '''\n    return await self._request_rapid_api('rapi_marvel_vs_capcom_2_show_character',kwargs)\n        "
    },
    "rapi_cheapshark_game_deals_stores_info": {
        "api_name": "stores_info",
        "category": "Gaming",
        "tool_name": "cheapshark_game_deals",
        "code": "async def rapi_cheapshark_game_deals_stores_info(self,*args,**kwargs):\n    '''CheapShark is a price comparison website for digital PC Games. We keep track of prices across multiple stores including Steam, GreenManGaming, Fanatical, and many others.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cheapshark_game_deals_stores_info',kwargs)\n        "
    },
    "rapi_cheapshark_game_deals_list_of_games": {
        "api_name": "list_of_games",
        "category": "Gaming",
        "tool_name": "cheapshark_game_deals",
        "code": "async def rapi_cheapshark_game_deals_list_of_games(self,*args,**kwargs):\n    '''CheapShark is a price comparison website for digital PC Games. We keep track of prices across multiple stores including Steam, GreenManGaming, Fanatical, and many others.\n    \n    \n\n    :param string? title: Search for a game by title defaults to batman\n    :param integer? exact: Default `0`\n\nFlag to allow only exact string match for `title` parameter defaults to 0\n    :param integer? limit: Default `60`\n\nThe maximum number of games to return, up to `60` defaults to 60\n    :param integer? steamAppID: Search for a game by Steam\u2019s AppID - e.g. http://store.steampowered.com/app/35140/\n    '''\n    return await self._request_rapid_api('rapi_cheapshark_game_deals_list_of_games',kwargs)\n        "
    },
    "rapi_cheapshark_game_deals_list_of_deals": {
        "api_name": "list_of_deals",
        "category": "Gaming",
        "tool_name": "cheapshark_game_deals",
        "code": "async def rapi_cheapshark_game_deals_list_of_deals(self,*args,**kwargs):\n    '''CheapShark is a price comparison website for digital PC Games. We keep track of prices across multiple stores including Steam, GreenManGaming, Fanatical, and many others.\n    \n    \n\n    :param integer? lowerPrice: Default `0`\n\nOnly returns deals with a price *greater than* this value defaults to 0\n    :param integer? steamRating: Minimum Steam reviews rating for a game defaults to 0\n    :param string? title: Looks for the string contained anywhere in the game name defaults to batman\n    :param array? steamAppID: Look for deals on specific games, comma separated list of Steam App ID\n    :param boolean? desc: Default `0`\n\nDetermines sort direction defaults to 0\n    :param string? output: Option to output deals in `RSS` format (overrides page number/size to `0`/`100`) defaults to json\n    :param boolean? steamworks: Default `0`\n\nFlag to include only deals that redeem on Steam (best guess, depends on store support) defaults to 0\n    :param string? sortBy: Criteria to sort the list by, possible values -\n\n- Deal Rating\n- Title\n- Savings\n- Price\n- Metacritic\n- Reviews\n- Release\n- Store\n- recent defaults to Deal Rating\n    :param boolean? AAA: Default `0`\n\nFlag to include only deals with retail price > `$29` defaults to 0\n    :param integer? pageSize: The size of pages returned, default and maximum value is `60` defaults to 60\n    :param boolean? exact: Default `0`\n\nFlag to allow only exact string match for `title` parameter defaults to 0\n    :param integer? upperPrice: Only returns deals with a price* less than or equal to` this value (`50` acts the same as no limit) defaults to 50\n    :param integer? pageNumber: The requested page number, 0 indexed, default of `0` defaults to 0\n    :param boolean? onSale: Default `0`\n\nFlag to include only games that are currently on sale defaults to 0\n    :param integer? metacritic: Minimum Metacritic rating for a game defaults to 0\n    :param array? storeID: Comma separated list of store ID's to filter on, omit for deals from any store defaults to 1,2,3\n    '''\n    return await self._request_rapid_api('rapi_cheapshark_game_deals_list_of_deals',kwargs)\n        "
    },
    "rapi_lost_ark_get_stats": {
        "api_name": "get_stats",
        "category": "Gaming",
        "tool_name": "lost_ark",
        "code": "async def rapi_lost_ark_get_stats(self,*args,**kwargs):\n    '''An API to get information for the game Lost Ark\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_get_stats',kwargs)\n        "
    },
    "rapi_lost_ark_get_a_specific_item": {
        "api_name": "get_a_specific_item",
        "category": "Gaming",
        "tool_name": "lost_ark",
        "code": "async def rapi_lost_ark_get_a_specific_item(self,*args,**kwargs):\n    '''An API to get information for the game Lost Ark\n    \n    \n\n    :param string name:  defaults to Hollowfruit\n    '''\n    return await self._request_rapid_api('rapi_lost_ark_get_a_specific_item',kwargs)\n        "
    },
    "rapi_lost_ark_get_engravings": {
        "api_name": "get_engravings",
        "category": "Gaming",
        "tool_name": "lost_ark",
        "code": "async def rapi_lost_ark_get_engravings(self,*args,**kwargs):\n    '''An API to get information for the game Lost Ark\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_get_engravings',kwargs)\n        "
    },
    "rapi_lost_ark_get_classes": {
        "api_name": "get_classes",
        "category": "Gaming",
        "tool_name": "lost_ark",
        "code": "async def rapi_lost_ark_get_classes(self,*args,**kwargs):\n    '''An API to get information for the game Lost Ark\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_get_classes',kwargs)\n        "
    },
    "rapi_trivia_by_api_ninjas_v1_trivia": {
        "api_name": "v1_trivia",
        "category": "Gaming",
        "tool_name": "trivia_by_api_ninjas",
        "code": "async def rapi_trivia_by_api_ninjas_v1_trivia(self,*args,**kwargs):\n    '''Access endless trivia question and answers. See more info at https://api-ninjas.com/api/trivia.\n    \n    \n\n    :param integer? limit: How many results to return. Must be between **1** and **30**. Default is **1**.\n    :param string? category: Category of trivia. Possible values are: \n\n**artliterature\nlanguage\nsciencenature\ngeneral\nfooddrink\npeopleplaces\ngeography\nhistoryholidays\nentertainment\ntoysgames\nmusic\nmathematics\nreligionmythology\nsportsleisure**\n    '''\n    return await self._request_rapid_api('rapi_trivia_by_api_ninjas_v1_trivia',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_sailors": {
        "api_name": "get_sailors",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_sailors(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_sailors',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_cards_collection": {
        "api_name": "get_cards_collection",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_cards_collection(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_cards_collection',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_weapon_recipes": {
        "api_name": "get_weapon_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_weapon_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_weapon_recipes',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_food_recipes": {
        "api_name": "get_food_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_food_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_food_recipes',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_stronghold_item_recipes": {
        "api_name": "get_stronghold_item_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_stronghold_item_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_stronghold_item_recipes',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_chest_item_recipes": {
        "api_name": "get_chest_item_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_chest_item_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_chest_item_recipes',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_classes_list": {
        "api_name": "get_classes_list",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_classes_list(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_classes_list',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_life_skill_tool_recipes": {
        "api_name": "get_life_skill_tool_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_life_skill_tool_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_life_skill_tool_recipes',kwargs)\n        "
    },
    "rapi_lost_ark_simple_get_battle_item_recipes": {
        "api_name": "get_battle_item_recipes",
        "category": "Gaming",
        "tool_name": "lost_ark_simple",
        "code": "async def rapi_lost_ark_simple_get_battle_item_recipes(self,*args,**kwargs):\n    '''Lost Ark API Documentation\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lost_ark_simple_get_battle_item_recipes',kwargs)\n        "
    },
    "rapi_mcapi_blocks": {
        "api_name": "blocks",
        "category": "Gaming",
        "tool_name": "mcapi",
        "code": "async def rapi_mcapi_blocks(self,*args,**kwargs):\n    '''Retrieve information about Minecraft's blocks, items, recipes and advancements.\n    \n    \n\n    :param string? block_id:  defaults to minecraft:stone\n    '''\n    return await self._request_rapid_api('rapi_mcapi_blocks',kwargs)\n        "
    },
    "rapi_cs_skin_api_random_skin_from_weapon": {
        "api_name": "random_skin_from_weapon",
        "category": "Gaming",
        "tool_name": "cs_skin_api",
        "code": "async def rapi_cs_skin_api_random_skin_from_weapon(self,*args,**kwargs):\n    '''retrieve image, price, weapon, class for every released Skin in CS:GO or CS2\n    \n    \n\n    :param string weapon_name:  defaults to AWP\n    '''\n    return await self._request_rapid_api('rapi_cs_skin_api_random_skin_from_weapon',kwargs)\n        "
    },
    "rapi_cs_skin_api_random_skin_from_class": {
        "api_name": "random_skin_from_class",
        "category": "Gaming",
        "tool_name": "cs_skin_api",
        "code": "async def rapi_cs_skin_api_random_skin_from_class(self,*args,**kwargs):\n    '''retrieve image, price, weapon, class for every released Skin in CS:GO or CS2\n    \n    \n\n    :param string class_name:  defaults to Knife\n    '''\n    return await self._request_rapid_api('rapi_cs_skin_api_random_skin_from_class',kwargs)\n        "
    },
    "rapi_cs_skin_api_random_skin": {
        "api_name": "random_skin",
        "category": "Gaming",
        "tool_name": "cs_skin_api",
        "code": "async def rapi_cs_skin_api_random_skin(self,*args,**kwargs):\n    '''retrieve image, price, weapon, class for every released Skin in CS:GO or CS2\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cs_skin_api_random_skin',kwargs)\n        "
    },
    "rapi_minecraft_uuid_converter_name_to_uuid": {
        "api_name": "name_to_uuid",
        "category": "Gaming",
        "tool_name": "minecraft_uuid_converter",
        "code": "async def rapi_minecraft_uuid_converter_name_to_uuid(self,*args,**kwargs):\n    '''Converts your Mojang Minecraft username into a UUID.\n    \n    \n\n    :param string name:  defaults to Kara_Danvers\n    '''\n    return await self._request_rapid_api('rapi_minecraft_uuid_converter_name_to_uuid',kwargs)\n        "
    },
    "rapi_fodase_get_users": {
        "api_name": "get_users",
        "category": "Gaming",
        "tool_name": "fodase",
        "code": "async def rapi_fodase_get_users(self,*args,**kwargs):\n    '''Fodase fodase\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fodase_get_users',kwargs)\n        "
    },
    "rapi_valorant_esports_v2_get_all_players": {
        "api_name": "get_all_players",
        "category": "Gaming",
        "tool_name": "valorant_esports_v2",
        "code": "async def rapi_valorant_esports_v2_get_all_players(self,*args,**kwargs):\n    '''The Valorant Esports is a user-friendly tool that allows you to extract data from the website vlr.gg. \n    \n    \n\n    :param string? minrounds: \n    :param string? timespan: \n    :param string? map: \n    :param string? event: \n    :param string? agent: \n    :param string? minrating: \n    :param string? region: \n    :param string? country: \n    :param string? event_series: \n    :param string? limit: \n    :param string? page: \n    '''\n    return await self._request_rapid_api('rapi_valorant_esports_v2_get_all_players',kwargs)\n        "
    },
    "rapi_id_game_checker_get_username_higgs_domino": {
        "api_name": "get_username_higgs_domino",
        "category": "Gaming",
        "tool_name": "id_game_checker",
        "code": "async def rapi_id_game_checker_get_username_higgs_domino(self,*args,**kwargs):\n    '''Validate or GET username with ID. Available for Free Fire true ID, Mobile Legends true ID, PUBG Mobile true ID, Higgs Domino true ID, AoV true ID etc.\n    \n    \n\n    :param integer id:  defaults to 55666\n    '''\n    return await self._request_rapid_api('rapi_id_game_checker_get_username_higgs_domino',kwargs)\n        "
    },
    "rapi_id_game_checker_get_username_mobile_legends": {
        "api_name": "get_username_mobile_legends",
        "category": "Gaming",
        "tool_name": "id_game_checker",
        "code": "async def rapi_id_game_checker_get_username_mobile_legends(self,*args,**kwargs):\n    '''Validate or GET username with ID. Available for Free Fire true ID, Mobile Legends true ID, PUBG Mobile true ID, Higgs Domino true ID, AoV true ID etc.\n    \n    \n\n    :param integer id:  defaults to 1393323764\n    :param integer server:  defaults to 15748\n    '''\n    return await self._request_rapid_api('rapi_id_game_checker_get_username_mobile_legends',kwargs)\n        "
    },
    "rapi_play_to_earn_blockchain_games_summary": {
        "api_name": "summary",
        "category": "Gaming",
        "tool_name": "play_to_earn_blockchain_games",
        "code": "async def rapi_play_to_earn_blockchain_games_summary(self,*args,**kwargs):\n    '''Get hot play to earn blockchain games! Filter by popular blockchains\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_play_to_earn_blockchain_games_summary',kwargs)\n        "
    },
    "rapi_tibia_items_get_imbuements_for_precision_distance_skillboost": {
        "api_name": "get_imbuements_for_precision_distance_skillboost",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_imbuements_for_precision_distance_skillboost(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Adra\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_imbuements_for_precision_distance_skillboost',kwargs)\n        "
    },
    "rapi_tibia_items_get_imbuements_for_snake_skin_earth_protection": {
        "api_name": "get_imbuements_for_snake_skin_earth_protection",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_imbuements_for_snake_skin_earth_protection(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Bona\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_imbuements_for_snake_skin_earth_protection',kwargs)\n        "
    },
    "rapi_tibia_items_get_imbuements_for_strike_critical_damage": {
        "api_name": "get_imbuements_for_strike_critical_damage",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_imbuements_for_strike_critical_damage(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Libertabra\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_imbuements_for_strike_critical_damage',kwargs)\n        "
    },
    "rapi_tibia_items_get_imbuements_for_vampirism_life_steal": {
        "api_name": "get_imbuements_for_vampirism_life_steal",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_imbuements_for_vampirism_life_steal(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Adra\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_imbuements_for_vampirism_life_steal',kwargs)\n        "
    },
    "rapi_tibia_items_get_all_imbuements_items": {
        "api_name": "get_all_imbuements_items",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_all_imbuements_items(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Bona\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_all_imbuements_items',kwargs)\n        "
    },
    "rapi_tibia_items_get_single_item": {
        "api_name": "get_single_item",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_single_item(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Bona\n    :param string NameItem:  defaults to Sliver\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_single_item',kwargs)\n        "
    },
    "rapi_tibia_items_get_all_valuable_items": {
        "api_name": "get_all_valuable_items",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_all_valuable_items(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Antica\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_all_valuable_items',kwargs)\n        "
    },
    "rapi_tibia_items_get_imbuements_for_lich_shroud_death_protection": {
        "api_name": "get_imbuements_for_lich_shroud_death_protection",
        "category": "Gaming",
        "tool_name": "tibia_items",
        "code": "async def rapi_tibia_items_get_imbuements_for_lich_shroud_death_protection(self,*args,**kwargs):\n    '''this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P\n    \n    \n\n    :param string World:  defaults to Adra\n    '''\n    return await self._request_rapid_api('rapi_tibia_items_get_imbuements_for_lich_shroud_death_protection',kwargs)\n        "
    },
    "rapi_rocket_league_population": {
        "api_name": "population",
        "category": "Gaming",
        "tool_name": "rocket_league",
        "code": "async def rapi_rocket_league_population(self,*args,**kwargs):\n    '''Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rocket_league_population',kwargs)\n        "
    },
    "rapi_evosis_s_game_database_getstorestatuslist": {
        "api_name": "getstorestatuslist",
        "category": "Gaming",
        "tool_name": "evosis_s_game_database",
        "code": "async def rapi_evosis_s_game_database_getstorestatuslist(self,*args,**kwargs):\n    '''You can access technical and store information of more than 9100+ games. \nPlaystation (PS1:130,PS2:359,PS3:666,PS4:2399,PS5:527)\nPC (windows:6310, MacOS:2161, Linux:1370)\nXbox (Original:252,Xbox360:681,XOne:2080,XSeries521)\nNintendo Games (GameCube:130,Wii:161,WiiU:107,Switch:1908)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_evosis_s_game_database_getstorestatuslist',kwargs)\n        "
    },
    "rapi_evosis_s_game_database_getgamelist": {
        "api_name": "getgamelist",
        "category": "Gaming",
        "tool_name": "evosis_s_game_database",
        "code": "async def rapi_evosis_s_game_database_getgamelist(self,*args,**kwargs):\n    '''You can access technical and store information of more than 9100+ games. \nPlaystation (PS1:130,PS2:359,PS3:666,PS4:2399,PS5:527)\nPC (windows:6310, MacOS:2161, Linux:1370)\nXbox (Original:252,Xbox360:681,XOne:2080,XSeries521)\nNintendo Games (GameCube:130,Wii:161,WiiU:107,Switch:1908)\n    \n    \n\n    :param integer page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_evosis_s_game_database_getgamelist',kwargs)\n        "
    },
    "rapi_gamerpower_filter_group_giveaways": {
        "api_name": "filter_group_giveaways",
        "category": "Gaming",
        "tool_name": "gamerpower",
        "code": "async def rapi_gamerpower_filter_group_giveaways(self,*args,**kwargs):\n    '''Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com! Access programmatically the best giveaways in gaming!\n    \n    \n\n    :param string platform:  defaults to epic-games-store.steam.android\n    :param string? type:  defaults to game.loot\n    '''\n    return await self._request_rapid_api('rapi_gamerpower_filter_group_giveaways',kwargs)\n        "
    },
    "rapi_gamerpower_specific_giveaway_details": {
        "api_name": "specific_giveaway_details",
        "category": "Gaming",
        "tool_name": "gamerpower",
        "code": "async def rapi_gamerpower_specific_giveaway_details(self,*args,**kwargs):\n    '''Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com! Access programmatically the best giveaways in gaming!\n    \n    \n\n    :param string id:  defaults to 525\n    '''\n    return await self._request_rapid_api('rapi_gamerpower_specific_giveaway_details',kwargs)\n        "
    },
    "rapi_gamerpower_live_giveaways_by_platform": {
        "api_name": "live_giveaways_by_platform",
        "category": "Gaming",
        "tool_name": "gamerpower",
        "code": "async def rapi_gamerpower_live_giveaways_by_platform(self,*args,**kwargs):\n    '''Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com! Access programmatically the best giveaways in gaming!\n    \n    \n\n    :param string platform:  defaults to pc\n    '''\n    return await self._request_rapid_api('rapi_gamerpower_live_giveaways_by_platform',kwargs)\n        "
    },
    "rapi_gamerpower_sort_live_giveaways": {
        "api_name": "sort_live_giveaways",
        "category": "Gaming",
        "tool_name": "gamerpower",
        "code": "async def rapi_gamerpower_sort_live_giveaways(self,*args,**kwargs):\n    '''Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com! Access programmatically the best giveaways in gaming!\n    \n    \n\n    :param string? sort-by:  defaults to value\n    '''\n    return await self._request_rapid_api('rapi_gamerpower_sort_live_giveaways',kwargs)\n        "
    },
    "rapi_gamerpower_live_giveaways_by_platform_type_sorted": {
        "api_name": "live_giveaways_by_platform_type_sorted",
        "category": "Gaming",
        "tool_name": "gamerpower",
        "code": "async def rapi_gamerpower_live_giveaways_by_platform_type_sorted(self,*args,**kwargs):\n    '''Find all free games, loot and giveaways with this giveaway tracker API powered by GamerPower.com! Access programmatically the best giveaways in gaming!\n    \n    \n\n    :param string? platform:  defaults to steam\n    :param string? sort-by:  defaults to popularity\n    :param string? type:  defaults to loot\n    '''\n    return await self._request_rapid_api('rapi_gamerpower_live_giveaways_by_platform_type_sorted',kwargs)\n        "
    },
    "rapi_hleby6ek_rating": {
        "api_name": "rating",
        "category": "Gaming",
        "tool_name": "hleby6ek",
        "code": "async def rapi_hleby6ek_rating(self,*args,**kwargs):\n    '''Spring Rest API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hleby6ek_rating',kwargs)\n        "
    },
    "rapi_card_draw_simulator_cards": {
        "api_name": "cards",
        "category": "Gaming",
        "tool_name": "card_draw_simulator",
        "code": "async def rapi_card_draw_simulator_cards(self,*args,**kwargs):\n    '''Draw cards from a regular 52 playing cards deck with a variety of options.\n    \n    \n\n    :param string? value:  defaults to all\n    :param string? suit:  defaults to \u2660\n    :param string? back:  defaults to false\n    :param string? pulls:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_card_draw_simulator_cards',kwargs)\n        "
    },
    "rapi_esportapi_categoryschedules": {
        "api_name": "categoryschedules",
        "category": "Gaming",
        "tool_name": "esportapi",
        "code": "async def rapi_esportapi_categoryschedules(self,*args,**kwargs):\n    '''ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer month: The month you want to retrieve the schedules defaults to 12\n    :param integer id: The category id you want to retrieve the schedules defaults to 1572\n    :param integer day: The day you want to retrieve the schedules defaults to 19\n    :param integer year: The year you want to retrieve the schedules defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_esportapi_categoryschedules',kwargs)\n        "
    },
    "rapi_esportapi_categorytournaments": {
        "api_name": "categorytournaments",
        "category": "Gaming",
        "tool_name": "esportapi",
        "code": "async def rapi_esportapi_categorytournaments(self,*args,**kwargs):\n    '''ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer id: The category ID for which you want to retrieve all leagues. defaults to 1572\n    '''\n    return await self._request_rapid_api('rapi_esportapi_categorytournaments',kwargs)\n        "
    },
    "rapi_esportapi_leaguetotalstandings": {
        "api_name": "leaguetotalstandings",
        "category": "Gaming",
        "tool_name": "esportapi",
        "code": "async def rapi_esportapi_leaguetotalstandings(self,*args,**kwargs):\n    '''ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer seasonId: The season ID for which you want to retrieve the league's total standings. defaults to 47832\n    :param integer tournamentId: The unique tournament ID for which you want to retrieve the league's total standings. defaults to 16026\n    '''\n    return await self._request_rapid_api('rapi_esportapi_leaguetotalstandings',kwargs)\n        "
    },
    "rapi_esportapi_headtoheadmatches": {
        "api_name": "headtoheadmatches",
        "category": "Gaming",
        "tool_name": "esportapi",
        "code": "async def rapi_esportapi_headtoheadmatches(self,*args,**kwargs):\n    '''ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param string customId: The custom ID of the event for which you want to get the head-to-head matches. defaults to jTVcsXcZc\n    '''\n    return await self._request_rapid_api('rapi_esportapi_headtoheadmatches',kwargs)\n        "
    },
    "rapi_esportapi_leaguetotalteamevents": {
        "api_name": "leaguetotalteamevents",
        "category": "Gaming",
        "tool_name": "esportapi",
        "code": "async def rapi_esportapi_leaguetotalteamevents(self,*args,**kwargs):\n    '''ESportApi offers eSports results for League of Legends, Dota 2, Counter-Strike providing also eSports standings and tournament live scores.\nFor increased rates and more sports, please look at: https://rapidapi.com/fluis.lacasse/api/allsportsapi2/\n    \n    \n\n    :param integer seasonId: The season ID for which you want to retrieve the league's total team events. defaults to 49721\n    :param integer tournamentId: The unique tournament ID for which you want to retrieve the league's total team events. defaults to 16254\n    '''\n    return await self._request_rapid_api('rapi_esportapi_leaguetotalteamevents',kwargs)\n        "
    },
    "rapi_league_of_legends_esports_get_vods": {
        "api_name": "get_vods",
        "category": "Gaming",
        "tool_name": "league_of_legends_esports",
        "code": "async def rapi_league_of_legends_esports_get_vods(self,*args,**kwargs):\n    '''This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.\n    \n    \n\n    :param string? tournamentId:  defaults to 107458367237283414\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_esports_get_vods',kwargs)\n        "
    },
    "rapi_league_of_legends_esports_get_schedule": {
        "api_name": "get_schedule",
        "category": "Gaming",
        "tool_name": "league_of_legends_esports",
        "code": "async def rapi_league_of_legends_esports_get_schedule(self,*args,**kwargs):\n    '''This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.\n    \n    \n\n    :param string? leagueId:  defaults to 98767991299243165%2C99332500638116286%2C98767991302996019\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_esports_get_schedule',kwargs)\n        "
    },
    "rapi_league_of_legends_esports_get_teams_and_players": {
        "api_name": "get_teams_and_players",
        "category": "Gaming",
        "tool_name": "league_of_legends_esports",
        "code": "async def rapi_league_of_legends_esports_get_teams_and_players(self,*args,**kwargs):\n    '''This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.\n    \n    \n\n    :param string? name: \n    :param string? id:  defaults to lng-esports\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_esports_get_teams_and_players',kwargs)\n        "
    },
    "rapi_league_of_legends_esports_get_event_detail": {
        "api_name": "get_event_detail",
        "category": "Gaming",
        "tool_name": "league_of_legends_esports",
        "code": "async def rapi_league_of_legends_esports_get_event_detail(self,*args,**kwargs):\n    '''This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.\n    \n    \n\n    :param string matchId:  defaults to 107458367241084543\n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_esports_get_event_detail',kwargs)\n        "
    },
    "rapi_league_of_legends_esports_get_leagues": {
        "api_name": "get_leagues",
        "category": "Gaming",
        "tool_name": "league_of_legends_esports",
        "code": "async def rapi_league_of_legends_esports_get_leagues(self,*args,**kwargs):\n    '''This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_league_of_legends_esports_get_leagues',kwargs)\n        "
    },
    "rapi_diceforge_roll": {
        "api_name": "roll",
        "category": "Gaming",
        "tool_name": "diceforge",
        "code": "async def rapi_diceforge_roll(self,*args,**kwargs):\n    '''DiceForge is a powerful and versatile dice rolling API designed for tabletop RPG enthusiasts and game developers alike. With an intuitive interface and support for a wide range of dice configurations, DiceForge makes it easy to generate random outcomes for any scenario. Whether you're rolling character stats, simulating combat encounters, or resolving skill checks, DiceForge delivers reliable and customizable results to enhance your gaming experience. Level up your next adventure with DiceFor...\n    \n    \n\n    :param integer sides:  defaults to 6\n    :param integer? count:  defaults to 1\n    :param boolean? advantage:  defaults to true\n    :param integer? modifier:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_diceforge_roll',kwargs)\n        "
    },
    "rapi_bd_bd_upazila": {
        "api_name": "bd_upazila",
        "category": "Location",
        "tool_name": "bd",
        "code": "async def rapi_bd_bd_upazila(self,*args,**kwargs):\n    '''BD LOCATIONS NAME API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bd_bd_upazila',kwargs)\n        "
    },
    "rapi_bd_bd_district": {
        "api_name": "bd_district",
        "category": "Location",
        "tool_name": "bd",
        "code": "async def rapi_bd_bd_district(self,*args,**kwargs):\n    '''BD LOCATIONS NAME API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bd_bd_district',kwargs)\n        "
    },
    "rapi_bd_bd_division": {
        "api_name": "bd_division",
        "category": "Location",
        "tool_name": "bd",
        "code": "async def rapi_bd_bd_division(self,*args,**kwargs):\n    '''BD LOCATIONS NAME API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bd_bd_division',kwargs)\n        "
    },
    "rapi_wgd_places_get_country": {
        "api_name": "get_country",
        "category": "Location",
        "tool_name": "wgd_places",
        "code": "async def rapi_wgd_places_get_country(self,*args,**kwargs):\n    '''This API uses our custom built database to be able to get Country and City information, it has all the information you could ever need. Search Cities and towns within a country.\nGet country and city data. Within country data you have: Capital city, Latitude, Longitude, Continent, Sub region, Population, Calling code, Flag, ISO2, ISO3, Borders, Native name, Basic information, States, Timezones, Currency and Languages. Within the City call you have: Country, City and State.\n    \n    \n\n    :param string? continent:  defaults to Europe\n    :param string? countryName: \n    '''\n    return await self._request_rapid_api('rapi_wgd_places_get_country',kwargs)\n        "
    },
    "rapi_wgd_places_get_city": {
        "api_name": "get_city",
        "category": "Location",
        "tool_name": "wgd_places",
        "code": "async def rapi_wgd_places_get_city(self,*args,**kwargs):\n    '''This API uses our custom built database to be able to get Country and City information, it has all the information you could ever need. Search Cities and towns within a country.\nGet country and city data. Within country data you have: Capital city, Latitude, Longitude, Continent, Sub region, Population, Calling code, Flag, ISO2, ISO3, Borders, Native name, Basic information, States, Timezones, Currency and Languages. Within the City call you have: Country, City and State.\n    \n    \n\n    :param string country_id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_wgd_places_get_city',kwargs)\n        "
    },
    "rapi_url_lookup_by_api_ninjas_v1_urllookup": {
        "api_name": "v1_urllookup",
        "category": "Location",
        "tool_name": "url_lookup_by_api_ninjas",
        "code": "async def rapi_url_lookup_by_api_ninjas_v1_urllookup(self,*args,**kwargs):\n    '''Lookup location information for any URL domain. See more info at https://api-ninjas.com/api/urllookup.\n    \n    \n\n    :param string url:  valid URL to check. It supports schemes (e.g. http://example.com) as well as schemeless (e.g. example.com) formats. defaults to https://example.com\n    '''\n    return await self._request_rapid_api('rapi_url_lookup_by_api_ninjas_v1_urllookup',kwargs)\n        "
    },
    "rapi_reverse_geocoding_v3_reverse_geocoding": {
        "api_name": "reverse_geocoding",
        "category": "Location",
        "tool_name": "reverse_geocoding_v3",
        "code": "async def rapi_reverse_geocoding_v3_reverse_geocoding(self,*args,**kwargs):\n    '''Translate locations on the map into human-readable addresses.\n    \n    \n\n    :param string query:  defaults to 40.7624284 -73.973794\n    '''\n    return await self._request_rapid_api('rapi_reverse_geocoding_v3_reverse_geocoding',kwargs)\n        "
    },
    "rapi_elevation_from_latitude_and_longitude_get_elevation": {
        "api_name": "get_elevation",
        "category": "Location",
        "tool_name": "elevation_from_latitude_and_longitude",
        "code": "async def rapi_elevation_from_latitude_and_longitude_get_elevation(self,*args,**kwargs):\n    '''Find the elevation at a specified location.\n    \n    \n\n    :param integer lat:  defaults to 57.081937\n    :param integer lng:  defaults to -2.246567\n    '''\n    return await self._request_rapid_api('rapi_elevation_from_latitude_and_longitude_get_elevation',kwargs)\n        "
    },
    "rapi_ip_geolocation_metadata_ip_locator": {
        "api_name": "ip_locator",
        "category": "Location",
        "tool_name": "ip_geolocation_metadata",
        "code": "async def rapi_ip_geolocation_metadata_ip_locator(self,*args,**kwargs):\n    '''Get all metadata from an IP address\n    \n    \n\n    :param string ip_address:  defaults to 92.223.89.73\n    :param string format: Specify the desired format as part of the request uri and the response will be formatted accordingly. defaults to json\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocation_metadata_ip_locator',kwargs)\n        "
    },
    "rapi_partenaires_mobilis_partenaire_par_id": {
        "api_name": "partenaire_par_id",
        "category": "Location",
        "tool_name": "partenaires_mobilis",
        "code": "async def rapi_partenaires_mobilis_partenaire_par_id(self,*args,**kwargs):\n    '''Conna\u00eetre et localiser les partenaires Mobilis de l'OPT-NC\n    \n    \n\n    :param string id: id du partenaire fourni par API. defaults to 14\n    '''\n    return await self._request_rapid_api('rapi_partenaires_mobilis_partenaire_par_id',kwargs)\n        "
    },
    "rapi_partenaires_mobilis_get_all_partenaires": {
        "api_name": "get_all_partenaires",
        "category": "Location",
        "tool_name": "partenaires_mobilis",
        "code": "async def rapi_partenaires_mobilis_get_all_partenaires(self,*args,**kwargs):\n    '''Conna\u00eetre et localiser les partenaires Mobilis de l'OPT-NC\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_partenaires_mobilis_get_all_partenaires',kwargs)\n        "
    },
    "rapi_partenaires_mobilis_g_olocaliser_les_partenaires": {
        "api_name": "g_olocaliser_les_partenaires",
        "category": "Location",
        "tool_name": "partenaires_mobilis",
        "code": "async def rapi_partenaires_mobilis_g_olocaliser_les_partenaires(self,*args,**kwargs):\n    '''Conna\u00eetre et localiser les partenaires Mobilis de l'OPT-NC\n    \n    \n\n    :param string? nearByDistance:  defaults to 2000\n    :param string? nearByLon:  defaults to 166.448744\n    :param string? nearByLat:  defaults to -22.302828\n    '''\n    return await self._request_rapid_api('rapi_partenaires_mobilis_g_olocaliser_les_partenaires',kwargs)\n        "
    },
    "rapi_codigos_postales_mx_obtener_cp": {
        "api_name": "obtener_cp",
        "category": "Location",
        "tool_name": "codigos_postales_mx",
        "code": "async def rapi_codigos_postales_mx_obtener_cp(self,*args,**kwargs):\n    '''Informacion de la locazion con el codigo postal\n    \n    \n\n    :param integer cp:  defaults to 64720\n    '''\n    return await self._request_rapid_api('rapi_codigos_postales_mx_obtener_cp',kwargs)\n        "
    },
    "rapi_itcooking_eu_ip_geolocation_geoip_v1_lite_getipinfolite": {
        "api_name": "geoip_v1_lite_getipinfolite",
        "category": "Location",
        "tool_name": "itcooking_eu_ip_geolocation",
        "code": "async def rapi_itcooking_eu_ip_geolocation_geoip_v1_lite_getipinfolite(self,*args,**kwargs):\n    '''IP Geolocation REST API by Itcooking.eu. Fast and easy way to get (lookup) geolocation data to IPv4 and IPv6 address.\n    \n    \n\n    :param string ip:  defaults to 52.30.208.221\n    '''\n    return await self._request_rapid_api('rapi_itcooking_eu_ip_geolocation_geoip_v1_lite_getipinfolite',kwargs)\n        "
    },
    "rapi_dubai_makani_getmakaniinfofromcoordination": {
        "api_name": "getmakaniinfofromcoordination",
        "category": "Location",
        "tool_name": "dubai_makani",
        "code": "async def rapi_dubai_makani_getmakaniinfofromcoordination(self,*args,**kwargs):\n    '''An official geographic addressing system in the emirates.\n    \n    \n\n    :param integer latitude:  defaults to 25.264637\n    :param integer longitude:  defaults to 55.312168\n    '''\n    return await self._request_rapid_api('rapi_dubai_makani_getmakaniinfofromcoordination',kwargs)\n        "
    },
    "rapi_dubai_makani_isvalidmakani": {
        "api_name": "isvalidmakani",
        "category": "Location",
        "tool_name": "dubai_makani",
        "code": "async def rapi_dubai_makani_isvalidmakani(self,*args,**kwargs):\n    '''An official geographic addressing system in the emirates.\n    \n    \n\n    :param string makaniNo:  defaults to 1148071518\n    '''\n    return await self._request_rapid_api('rapi_dubai_makani_isvalidmakani',kwargs)\n        "
    },
    "rapi_dubai_makani_getqrcodeformakanino": {
        "api_name": "getqrcodeformakanino",
        "category": "Location",
        "tool_name": "dubai_makani",
        "code": "async def rapi_dubai_makani_getqrcodeformakanino(self,*args,**kwargs):\n    '''An official geographic addressing system in the emirates.\n    \n    \n\n    :param string makaniNo:  defaults to 11480 71518\n    '''\n    return await self._request_rapid_api('rapi_dubai_makani_getqrcodeformakanino',kwargs)\n        "
    },
    "rapi_geowide_distance": {
        "api_name": "distance",
        "category": "Location",
        "tool_name": "geowide",
        "code": "async def rapi_geowide_distance(self,*args,**kwargs):\n    '''GeoWide API efficiently calculates distances between geographic points, enabling accurate measurements for various applications. With minimal latency, it returns the distance in kilometers, miles, or other units, empowering developers to incorporate precise geographic calculations into their projects effortlessly.\n    \n    \n\n    :param integer start_longitude:  defaults to 12.482778\n    :param integer start_latitude:  defaults to 41.893333\n    :param integer end_latitude:  defaults to 40.416944\n    :param integer end_longitude:  defaults to -3.703333\n    '''\n    return await self._request_rapid_api('rapi_geowide_distance',kwargs)\n        "
    },
    "rapi_spott_search_places": {
        "api_name": "search_places",
        "category": "Location",
        "tool_name": "spott",
        "code": "async def rapi_spott_search_places(self,*args,**kwargs):\n    '''Search cities, countries and administrative divisions by name, autocompletion or IP.\n    \n    \n\n    :param string? type: Filters places by \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY. defaults to CITY\n    :param ENUM? language: Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \"localizedName\" property will be null.\n    :param integer? skip: Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0. defaults to 0\n    :param string? country: Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX). defaults to US,CA\n    :param integer? limit: Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100. defaults to 10\n    :param string? adminDivision1: Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).\n    :param string? adminDivision2: Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.\n    :param integer? accuracyRadiusKm: Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.\n    :param integer? latitude: Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.\n    :param string? q: Query string to find places with a similar name. defaults to New York\n    :param integer? longitude: Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.\n    '''\n    return await self._request_rapid_api('rapi_spott_search_places',kwargs)\n        "
    },
    "rapi_spott_get_place_by_geoname_id": {
        "api_name": "get_place_by_geoname_id",
        "category": "Location",
        "tool_name": "spott",
        "code": "async def rapi_spott_get_place_by_geoname_id(self,*args,**kwargs):\n    '''Search cities, countries and administrative divisions by name, autocompletion or IP.\n    \n    \n\n    :param integer geonameId: Unique identificator given by Geonames defaults to 5391959\n    :param ENUM? language: Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.\n    '''\n    return await self._request_rapid_api('rapi_spott_get_place_by_geoname_id',kwargs)\n        "
    },
    "rapi_city_by_api_ninjas_v1_city": {
        "api_name": "v1_city",
        "category": "Location",
        "tool_name": "city_by_api_ninjas",
        "code": "async def rapi_city_by_api_ninjas_v1_city(self,*args,**kwargs):\n    '''Get useful statistics on tens of thousands of cities around the world. See more info at https://api-ninjas.com/api/city.\n    \n    \n\n    :param integer? max_lat: Maximum latitude coordinate.\n    :param integer? min_population: Minimum city population.\n    :param integer? min_lon: Minimum longitude coordinate.\n    :param string? country: Country filter. Must be an ISO-3166 alpha-2 code (e.g. **US**). defaults to US\n    :param integer? max_population: Maximum city population.\n    :param integer? min_lat: Minimum latitude coordinate.\n    :param string? name: Name of city. defaults to New York\n    :param integer? max_lon: Maximum longitude coordinate.\n    :param integer? limit: How many results to return. Must be between **1** and **30**. Default is **1**. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_city_by_api_ninjas_v1_city',kwargs)\n        "
    },
    "rapi_uk_postcode_api_postcodes_postcode": {
        "api_name": "postcodes_postcode",
        "category": "Location",
        "tool_name": "uk_postcode_api",
        "code": "async def rapi_uk_postcode_api_postcodes_postcode(self,*args,**kwargs):\n    '''Auto populate your app & service with accurate and comprehensive PAF & Geocoding data from the Royal Mail\n    \n    \n\n    :param string postcode: Pass a PostCode value for looking up addresses defaults to PL11DN\n    '''\n    return await self._request_rapid_api('rapi_uk_postcode_api_postcodes_postcode',kwargs)\n        "
    },
    "rapi_ip_geolocation_api_ip_geolocation": {
        "api_name": "ip_geolocation",
        "category": "Location",
        "tool_name": "ip_geolocation_api",
        "code": "async def rapi_ip_geolocation_api_ip_geolocation(self,*args,**kwargs):\n    '''Get the location of any IP with a world-class API serving city, region, country and lat/long data.\n    \n    \n\n    :param string ip_address:  defaults to 187.66.247.186\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocation_api_ip_geolocation',kwargs)\n        "
    },
    "rapi_uk_postcode_to_latitude_and_longitude_search_single_postcode": {
        "api_name": "search_single_postcode",
        "category": "Location",
        "tool_name": "uk_postcode_to_latitude_and_longitude",
        "code": "async def rapi_uk_postcode_to_latitude_and_longitude_search_single_postcode(self,*args,**kwargs):\n    '''Convert a UK Postcode To Latitude and Longitude\n    \n    \n\n    :param string postcode:  defaults to SE1 7EH\n    '''\n    return await self._request_rapid_api('rapi_uk_postcode_to_latitude_and_longitude_search_single_postcode',kwargs)\n        "
    },
    "rapi_world_time_timezone_for_location": {
        "api_name": "timezone_for_location",
        "category": "Location",
        "tool_name": "world_time",
        "code": "async def rapi_world_time_timezone_for_location(self,*args,**kwargs):\n    '''WorldTimeAPI is a simple web service which returns the local-time for a given timezone as either JSON or plain-text. Some additional information is provided, such as whether that timezone is currently in Daylight Savings Time, when DST starts and ends, the UTC offset, etc.\n    \n    \n\n    :param string location: Location, example:\"London\" or \"London.txt\" defaults to London\n    :param string area: Area, example:\"Europe\" defaults to Europe\n    '''\n    return await self._request_rapid_api('rapi_world_time_timezone_for_location',kwargs)\n        "
    },
    "rapi_world_time_current_time_by_specific_ip": {
        "api_name": "current_time_by_specific_ip",
        "category": "Location",
        "tool_name": "world_time",
        "code": "async def rapi_world_time_current_time_by_specific_ip(self,*args,**kwargs):\n    '''WorldTimeAPI is a simple web service which returns the local-time for a given timezone as either JSON or plain-text. Some additional information is provided, such as whether that timezone is currently in Daylight Savings Time, when DST starts and ends, the UTC offset, etc.\n    \n    \n\n    :param string ipv4: Specific IP address defaults to 34.228.28.69\n    '''\n    return await self._request_rapid_api('rapi_world_time_current_time_by_specific_ip',kwargs)\n        "
    },
    "rapi_world_time_current_time_by_ip": {
        "api_name": "current_time_by_ip",
        "category": "Location",
        "tool_name": "world_time",
        "code": "async def rapi_world_time_current_time_by_ip(self,*args,**kwargs):\n    '''WorldTimeAPI is a simple web service which returns the local-time for a given timezone as either JSON or plain-text. Some additional information is provided, such as whether that timezone is currently in Daylight Savings Time, when DST starts and ends, the UTC offset, etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_time_current_time_by_ip',kwargs)\n        "
    },
    "rapi_world_time_timezones": {
        "api_name": "timezones",
        "category": "Location",
        "tool_name": "world_time",
        "code": "async def rapi_world_time_timezones(self,*args,**kwargs):\n    '''WorldTimeAPI is a simple web service which returns the local-time for a given timezone as either JSON or plain-text. Some additional information is provided, such as whether that timezone is currently in Daylight Savings Time, when DST starts and ends, the UTC offset, etc.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_time_timezones',kwargs)\n        "
    },
    "rapi_india_pincode_api_findpincodebysubdistrict": {
        "api_name": "findpincodebysubdistrict",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findpincodebysubdistrict(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findpincodebysubdistrict',kwargs)\n        "
    },
    "rapi_india_pincode_api_findbypincode": {
        "api_name": "findbypincode",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findbypincode(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    :param integer pincode:  defaults to 518345\n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findbypincode',kwargs)\n        "
    },
    "rapi_india_pincode_api_findsubdistrict": {
        "api_name": "findsubdistrict",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findsubdistrict(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findsubdistrict',kwargs)\n        "
    },
    "rapi_india_pincode_api_findallstates": {
        "api_name": "findallstates",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findallstates(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findallstates',kwargs)\n        "
    },
    "rapi_india_pincode_api_findstate": {
        "api_name": "findstate",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findstate(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findstate',kwargs)\n        "
    },
    "rapi_india_pincode_api_finddistrict": {
        "api_name": "finddistrict",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_finddistrict(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_finddistrict',kwargs)\n        "
    },
    "rapi_india_pincode_api_findpincodebydistrict": {
        "api_name": "findpincodebydistrict",
        "category": "Location",
        "tool_name": "india_pincode_api",
        "code": "async def rapi_india_pincode_api_findpincodebydistrict(self,*args,**kwargs):\n    '''Allows developers to get accurate and comprehensive India PinCode & Places data from India Post Office\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_india_pincode_api_findpincodebydistrict',kwargs)\n        "
    },
    "rapi_ip_lookup_iplookup": {
        "api_name": "iplookup",
        "category": "Location",
        "tool_name": "ip_lookup",
        "code": "async def rapi_ip_lookup_iplookup(self,*args,**kwargs):\n    '''IP Lookup\n    \n    \n\n    :param string ip:  defaults to 161.97.149.190\n    '''\n    return await self._request_rapid_api('rapi_ip_lookup_iplookup',kwargs)\n        "
    },
    "rapi_nearby_places_nearby_arcgis": {
        "api_name": "nearby_arcgis",
        "category": "Location",
        "tool_name": "nearby_places",
        "code": "async def rapi_nearby_places_nearby_arcgis(self,*args,**kwargs):\n    '''Get nearby establishments.\n    \n    \n\n    :param integer lng: Longitude defaults to -123.0413988\n    :param integer lat: Latitude defaults to 49.2803703\n    :param integer? radius: **Meters**\nDefault: 200\nMaximum: 50000 defaults to 500\n    :param string? type: Default: 'coffee shop' defaults to coffee shop\n    '''\n    return await self._request_rapid_api('rapi_nearby_places_nearby_arcgis',kwargs)\n        "
    },
    "rapi_nearby_places_nearby_google": {
        "api_name": "nearby_google",
        "category": "Location",
        "tool_name": "nearby_places",
        "code": "async def rapi_nearby_places_nearby_google(self,*args,**kwargs):\n    '''Get nearby establishments.\n    \n    \n\n    :param integer lat: Latitude defaults to 49.283030\n    :param integer lng: Longitude defaults to -123.118990\n    :param string? type: Default is **cafe**. defaults to cafe\n    :param integer? radius: **Meters**\nDefault: 200\nMax: 50000 defaults to 200\n    '''\n    return await self._request_rapid_api('rapi_nearby_places_nearby_google',kwargs)\n        "
    },
    "rapi_nearby_places_types_google": {
        "api_name": "types_google",
        "category": "Location",
        "tool_name": "nearby_places",
        "code": "async def rapi_nearby_places_types_google(self,*args,**kwargs):\n    '''Get nearby establishments.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nearby_places_types_google',kwargs)\n        "
    },
    "rapi_nearby_places_random_google": {
        "api_name": "random_google",
        "category": "Location",
        "tool_name": "nearby_places",
        "code": "async def rapi_nearby_places_random_google(self,*args,**kwargs):\n    '''Get nearby establishments.\n    \n    \n\n    :param integer lat: Latitude defaults to 49.2803703\n    :param integer lng: Longitude defaults to -123.0413988\n    :param string? type: Default: 'cafe' defaults to cafe\n    :param integer? radius: **Meters**\nDefault: 200\nMax: 50000\n defaults to 500\n    '''\n    return await self._request_rapid_api('rapi_nearby_places_random_google',kwargs)\n        "
    },
    "rapi_nearby_places_types_arcgis": {
        "api_name": "types_arcgis",
        "category": "Location",
        "tool_name": "nearby_places",
        "code": "async def rapi_nearby_places_types_arcgis(self,*args,**kwargs):\n    '''Get nearby establishments.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nearby_places_types_arcgis',kwargs)\n        "
    },
    "rapi_countries_get_time_zone": {
        "api_name": "get_time_zone",
        "category": "Location",
        "tool_name": "countries",
        "code": "async def rapi_countries_get_time_zone(self,*args,**kwargs):\n    '''Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!\n    \n    \n\n    :param string country_code:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_countries_get_time_zone',kwargs)\n        "
    },
    "rapi_countries_get_language": {
        "api_name": "get_language",
        "category": "Location",
        "tool_name": "countries",
        "code": "async def rapi_countries_get_language(self,*args,**kwargs):\n    '''Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!\n    \n    \n\n    :param string country_code:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_countries_get_language',kwargs)\n        "
    },
    "rapi_countries_get_geo": {
        "api_name": "get_geo",
        "category": "Location",
        "tool_name": "countries",
        "code": "async def rapi_countries_get_geo(self,*args,**kwargs):\n    '''Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!\n    \n    \n\n    :param string country_code:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_countries_get_geo',kwargs)\n        "
    },
    "rapi_countries_get_currency": {
        "api_name": "get_currency",
        "category": "Location",
        "tool_name": "countries",
        "code": "async def rapi_countries_get_currency(self,*args,**kwargs):\n    '''Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!\n    \n    \n\n    :param string country_code:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_countries_get_currency',kwargs)\n        "
    },
    "rapi_countries_get_capital": {
        "api_name": "get_capital",
        "category": "Location",
        "tool_name": "countries",
        "code": "async def rapi_countries_get_capital(self,*args,**kwargs):\n    '''Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!\n    \n    \n\n    :param string country_code:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_countries_get_capital',kwargs)\n        "
    },
    "rapi_ip_to_location_ip_to_location": {
        "api_name": "ip_to_location",
        "category": "Location",
        "tool_name": "ip_to_location",
        "code": "async def rapi_ip_to_location_ip_to_location(self,*args,**kwargs):\n    '''100% free to use. Get location details from IP address, endpoint returns coordinates [latitude, longitude], ip, isp, host[ ip_address, prefix len, status, country, region, city, location,area code, country code\n    \n    \n\n    :param string? ip:  defaults to 179.27.93.248\n    '''\n    return await self._request_rapid_api('rapi_ip_to_location_ip_to_location',kwargs)\n        "
    },
    "rapi_cameroon_measure_distance_reverse": {
        "api_name": "measure_distance_reverse",
        "category": "Location",
        "tool_name": "cameroon",
        "code": "async def rapi_cameroon_measure_distance_reverse(self,*args,**kwargs):\n    '''The Cameroon API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Cameroon.\n    \n    \n\n    :param string stop_address: The destination address for which the distance needs to be calculated defaults to Bonamoussadi, Douala\n    :param string start_address: The starting address for which the distance needs to be calculated. defaults to Molyko, Buea\n    :param string? unit: Unit of distance measurement, valid options are **km** (default), **mi**, **ft**, and **yd**.\n defaults to km\n    '''\n    return await self._request_rapid_api('rapi_cameroon_measure_distance_reverse',kwargs)\n        "
    },
    "rapi_cameroon_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "cameroon",
        "code": "async def rapi_cameroon_reverse_geocode(self,*args,**kwargs):\n    '''The Cameroon API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Cameroon.\n    \n    \n\n    :param string lat: The latitude of the location. defaults to 4.1591154\n    :param string lon: The longitude of the location. defaults to 9.2805172\n    '''\n    return await self._request_rapid_api('rapi_cameroon_reverse_geocode',kwargs)\n        "
    },
    "rapi_cameroon_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "cameroon",
        "code": "async def rapi_cameroon_directions_between_2_locations(self,*args,**kwargs):\n    '''The Cameroon API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Cameroon.\n    \n    \n\n    :param integer end_lat: Latitude of the ending point (required) defaults to 3.87598\n    :param integer end_lon: Longitude of the ending point (required) defaults to 11.51148\n    :param integer start_lat: Latitude of the starting point (required) defaults to 4.03966\n    :param integer start_lon: Longitude of the starting point (required) defaults to 9.69295\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_cameroon_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_bng2latlong_convert": {
        "api_name": "convert",
        "category": "Location",
        "tool_name": "bng2latlong",
        "code": "async def rapi_bng2latlong_convert(self,*args,**kwargs):\n    '''Convert an OSGB36 easting and northing (British National Grid) to WGS84 latitude and longitude.\n    \n    \n\n    :param integer northing: The northing defaults to 179645\n    :param integer easting: The easting defaults to 529090\n    '''\n    return await self._request_rapid_api('rapi_bng2latlong_convert',kwargs)\n        "
    },
    "rapi_usa_zip_codes_inside_radius_search_by_centre_zip_and_radius": {
        "api_name": "search_by_centre_zip_and_radius",
        "category": "Location",
        "tool_name": "usa_zip_codes_inside_radius",
        "code": "async def rapi_usa_zip_codes_inside_radius_search_by_centre_zip_and_radius(self,*args,**kwargs):\n    '''Returns a list of all US ZIP codes that fall within a defined radius\n    \n    \n\n    :param string zip:  defaults to 90210\n    :param integer radius:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_usa_zip_codes_inside_radius_search_by_centre_zip_and_radius',kwargs)\n        "
    },
    "rapi_timezone_by_coordinates_timezone": {
        "api_name": "timezone",
        "category": "Location",
        "tool_name": "timezone_by_coordinates",
        "code": "async def rapi_timezone_by_coordinates_timezone(self,*args,**kwargs):\n    '''Get the Timezone, DST offset, and UTC offset of a location.\n    \n    \n\n    :param integer lng: Longitude defaults to -123.045868\n    :param integer timestamp: The desired time as **seconds **since midnight, January 1, 1970 UTC. defaults to 1646179205\n    :param integer lat: Latitude defaults to 49.282409\n    '''\n    return await self._request_rapid_api('rapi_timezone_by_coordinates_timezone',kwargs)\n        "
    },
    "rapi_find_by_postcode_find_by_postcode": {
        "api_name": "find_by_postcode",
        "category": "Location",
        "tool_name": "find_by_postcode",
        "code": "async def rapi_find_by_postcode_find_by_postcode(self,*args,**kwargs):\n    '''\u201cFind By PostCode\u201d API get addresses for the given UK PostCode. This API provides a JSON interface to search UK addresses for a postcode.his API uses the latest PAF and Multiple Residence data from Royal Mail.\n    \n    \n\n    :param string postcode:  defaults to PL11DN\n    '''\n    return await self._request_rapid_api('rapi_find_by_postcode_find_by_postcode',kwargs)\n        "
    },
    "rapi_nigeria_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "nigeria_api",
        "code": "async def rapi_nigeria_api_directions_between_2_locations(self,*args,**kwargs):\n    '''Welcome to the Nigeria API! This API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Nigeria.\n    \n    \n\n    :param integer end_lat: Latitude of the ending point (required) defaults to 11.846\n    :param integer start_lat: Latitude of the starting point (required) defaults to 10.516\n    :param integer start_lon: Longitude of the starting point (required) defaults to 7.433\n    :param integer end_lon: Longitude of the ending point (required) defaults to 13.160\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_nigeria_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_nigeria_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "nigeria_api",
        "code": "async def rapi_nigeria_api_reverse_geocode(self,*args,**kwargs):\n    '''Welcome to the Nigeria API! This API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Nigeria.\n    \n    \n\n    :param string lat: The latitude of the location. defaults to 6.4549718\n    :param string lon: The longitude of the location. defaults to 3.4365418\n    '''\n    return await self._request_rapid_api('rapi_nigeria_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_ip_lookup_by_api_ninjas_v1_iplookup": {
        "api_name": "v1_iplookup",
        "category": "Location",
        "tool_name": "ip_lookup_by_api_ninjas",
        "code": "async def rapi_ip_lookup_by_api_ninjas_v1_iplookup(self,*args,**kwargs):\n    '''Look up location information for any valid IP address. See more info at https://api-ninjas.com/api/iplookup.\n    \n    \n\n    :param string address: IP Address to query. Must be in the format A.B.C.D. For example: 73.9.149.180 defaults to 24.48.0.3\n    '''\n    return await self._request_rapid_api('rapi_ip_lookup_by_api_ninjas_v1_iplookup',kwargs)\n        "
    },
    "rapi_geography_v2_get_city_by_id": {
        "api_name": "get_city_by_id",
        "category": "Location",
        "tool_name": "geography_v2",
        "code": "async def rapi_geography_v2_get_city_by_id(self,*args,**kwargs):\n    '''API that includes all the continents, countries and cities of the world. \n    \n    \n\n    :param string id:  defaults to 1796236\n    '''\n    return await self._request_rapid_api('rapi_geography_v2_get_city_by_id',kwargs)\n        "
    },
    "rapi_geography_v2_countries": {
        "api_name": "countries",
        "category": "Location",
        "tool_name": "geography_v2",
        "code": "async def rapi_geography_v2_countries(self,*args,**kwargs):\n    '''API that includes all the continents, countries and cities of the world. \n    \n    \n\n    :param integer? page:  defaults to 1\n    :param integer? pageSize:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_geography_v2_countries',kwargs)\n        "
    },
    "rapi_geography_v2_continents": {
        "api_name": "continents",
        "category": "Location",
        "tool_name": "geography_v2",
        "code": "async def rapi_geography_v2_continents(self,*args,**kwargs):\n    '''API that includes all the continents, countries and cities of the world. \n    \n    \n\n    :param string? name:  defaults to North America\n    :param integer? pageSize:  defaults to 10\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_geography_v2_continents',kwargs)\n        "
    },
    "rapi_egypt_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "egypt_api",
        "code": "async def rapi_egypt_api_reverse_geocode(self,*args,**kwargs):\n    '''The Egypt Lookup API users to retrieve in realtime the latitude, longitude, and address of a location in Egypt. The API utilizes the OpenStreetMap and Project-OSRM to retrieve up-to-date location data.\n    \n    \n\n    :param string lon: The longitude of the location. defaults to 31.230981\n    :param string lat: The latitude of the location. defaults to 30.0240626\n    '''\n    return await self._request_rapid_api('rapi_egypt_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_world_time_by_api_ninjas_v1_worldtime": {
        "api_name": "v1_worldtime",
        "category": "Location",
        "tool_name": "world_time_by_api_ninjas",
        "code": "async def rapi_world_time_by_api_ninjas_v1_worldtime(self,*args,**kwargs):\n    '''Get the current time for any location in the world. See more info at https://api-ninjas.com/api/worldtime\n    \n    \n\n    :param string? timezone: Timezone of desired location (e.g. Europe/London).\n    :param string? lon: Longitude of desired location.\n    :param string? lat: Latitude of desired location.\n    :param string? state: US state name or 2-letter abbreviation (for United States cities only).\n    :param string? country: Country name or 2-letter country code.\n    :param string? city: City name. defaults to London\n    '''\n    return await self._request_rapid_api('rapi_world_time_by_api_ninjas_v1_worldtime',kwargs)\n        "
    },
    "rapi_us_zip_code_information_get_zip_info": {
        "api_name": "get_zip_info",
        "category": "Location",
        "tool_name": "us_zip_code_information",
        "code": "async def rapi_us_zip_code_information_get_zip_info(self,*args,**kwargs):\n    '''The fastest API to access ZIP Code Information like City, State, County, AreaCode, Latitude, Longitude etc for a given zip code\n    \n    \n\n    :param string zipcode:  defaults to 30043\n    '''\n    return await self._request_rapid_api('rapi_us_zip_code_information_get_zip_info',kwargs)\n        "
    },
    "rapi_bdapi_district_detail_and_coordinates_of_specific_division": {
        "api_name": "district_detail_and_coordinates_of_specific_division",
        "category": "Location",
        "tool_name": "bdapi",
        "code": "async def rapi_bdapi_district_detail_and_coordinates_of_specific_division(self,*args,**kwargs):\n    '''BD API is a RestAPI service. Divisions, Districts, Upazilla, Coordinates, etc of Bangladesh are available in Bangla and English within endpoints. Main Documentation website: https://bdapis.com/\n    \n    \n\n    :param string division_name: \n    '''\n    return await self._request_rapid_api('rapi_bdapi_district_detail_and_coordinates_of_specific_division',kwargs)\n        "
    },
    "rapi_services_timezone": {
        "api_name": "timezone",
        "category": "Location",
        "tool_name": "services",
        "code": "async def rapi_services_timezone(self,*args,**kwargs):\n    '''Timezone by sity\n    \n    \n\n    :param string city: \n    '''\n    return await self._request_rapid_api('rapi_services_timezone',kwargs)\n        "
    },
    "rapi_tanzania_api_geocode": {
        "api_name": "geocode",
        "category": "Location",
        "tool_name": "tanzania_api",
        "code": "async def rapi_tanzania_api_geocode(self,*args,**kwargs):\n    '''The Tanzania API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Tanzania.\n    \n    \n\n    :param string address: Name of address defaults to Arusha\n    '''\n    return await self._request_rapid_api('rapi_tanzania_api_geocode',kwargs)\n        "
    },
    "rapi_tanzania_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "tanzania_api",
        "code": "async def rapi_tanzania_api_directions_between_2_locations(self,*args,**kwargs):\n    '''The Tanzania API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Tanzania.\n    \n    \n\n    :param integer start_lat: Latitude of the starting point (required) defaults to -3.3696827\n    :param integer end_lon: Longitude of the ending point (required) defaults to 39.2694784\n    :param integer start_lon: Longitude of the starting point (required) defaults to 36.6880794\n    :param integer end_lat: Latitude of the ending point (required) defaults to -6.7785166\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_tanzania_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_ip_geo_location_and_ip_reputation_ip": {
        "api_name": "ip",
        "category": "Location",
        "tool_name": "ip_geo_location_and_ip_reputation",
        "code": "async def rapi_ip_geo_location_and_ip_reputation_ip(self,*args,**kwargs):\n    '''This API will provide geo location data such as: country, Region, City, Latitude, Longitude, Time Zone, Zip Code, Flag and much more...Also provides: IP Blacklist, Currencies, Languages, TLD, Host,  and more...\n    \n    \n\n    :param string? ip:  defaults to 8.8.8.8\n    '''\n    return await self._request_rapid_api('rapi_ip_geo_location_and_ip_reputation_ip',kwargs)\n        "
    },
    "rapi_ip_geo_location_and_ip_reputation_format": {
        "api_name": "format",
        "category": "Location",
        "tool_name": "ip_geo_location_and_ip_reputation",
        "code": "async def rapi_ip_geo_location_and_ip_reputation_format(self,*args,**kwargs):\n    '''This API will provide geo location data such as: country, Region, City, Latitude, Longitude, Time Zone, Zip Code, Flag and much more...Also provides: IP Blacklist, Currencies, Languages, TLD, Host,  and more...\n    \n    \n\n    :param string? format:  defaults to json\n    '''\n    return await self._request_rapid_api('rapi_ip_geo_location_and_ip_reputation_format',kwargs)\n        "
    },
    "rapi_58_provinces_of_algeria_wilaya_informations": {
        "api_name": "wilaya_informations",
        "category": "Location",
        "tool_name": "58_provinces_of_algeria",
        "code": "async def rapi_58_provinces_of_algeria_wilaya_informations(self,*args,**kwargs):\n    '''All provinces of algeria\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_58_provinces_of_algeria_wilaya_informations',kwargs)\n        "
    },
    "rapi_58_provinces_of_algeria_provinces_and_municipalities": {
        "api_name": "provinces_and_municipalities",
        "category": "Location",
        "tool_name": "58_provinces_of_algeria",
        "code": "async def rapi_58_provinces_of_algeria_provinces_and_municipalities(self,*args,**kwargs):\n    '''All provinces of algeria\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_58_provinces_of_algeria_provinces_and_municipalities',kwargs)\n        "
    },
    "rapi_wyre_data_get_ratings_by_restaurant": {
        "api_name": "get_ratings_by_restaurant",
        "category": "Location",
        "tool_name": "wyre_data",
        "code": "async def rapi_wyre_data_get_ratings_by_restaurant(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string restaurant:  defaults to Shovels Inn\n    '''\n    return await self._request_rapid_api('rapi_wyre_data_get_ratings_by_restaurant',kwargs)\n        "
    },
    "rapi_wyre_data_get_all_data_on_an_establishment_by_restaurant": {
        "api_name": "get_all_data_on_an_establishment_by_restaurant",
        "category": "Location",
        "tool_name": "wyre_data",
        "code": "async def rapi_wyre_data_get_all_data_on_an_establishment_by_restaurant(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string restaurant:  defaults to Shovels Inn\n    '''\n    return await self._request_rapid_api('rapi_wyre_data_get_all_data_on_an_establishment_by_restaurant',kwargs)\n        "
    },
    "rapi_wyre_data_search_restaurants_by_town": {
        "api_name": "search_restaurants_by_town",
        "category": "Location",
        "tool_name": "wyre_data",
        "code": "async def rapi_wyre_data_search_restaurants_by_town(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string town:  defaults to hambleton\n    '''\n    return await self._request_rapid_api('rapi_wyre_data_search_restaurants_by_town',kwargs)\n        "
    },
    "rapi_wyre_data_search_restaurants_by_local_authority": {
        "api_name": "search_restaurants_by_local_authority",
        "category": "Location",
        "tool_name": "wyre_data",
        "code": "async def rapi_wyre_data_search_restaurants_by_local_authority(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string localauthority:  defaults to wyre\n    '''\n    return await self._request_rapid_api('rapi_wyre_data_search_restaurants_by_local_authority',kwargs)\n        "
    },
    "rapi_ip_geo_location_ip": {
        "api_name": "location_ip",
        "category": "Location",
        "tool_name": "ip_geo",
        "code": "async def rapi_ip_geo_location_ip(self,*args,**kwargs):\n    '''API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.\n    \n    \n\n    :param string ip:  defaults to 77.129.21.184\n    '''\n    return await self._request_rapid_api('rapi_ip_geo_location_ip',kwargs)\n        "
    },
    "rapi_woosmap_getzone": {
        "api_name": "getzone",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_getzone(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string zone_id: ID of the zone to get defaults to ZoneA\n    '''\n    return await self._request_rapid_api('rapi_woosmap_getzone',kwargs)\n        "
    },
    "rapi_woosmap_getstore": {
        "api_name": "getstore",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_getstore(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string storeId: ID of the asset to get defaults to STORE_ID_123456\n    '''\n    return await self._request_rapid_api('rapi_woosmap_getstore',kwargs)\n        "
    },
    "rapi_woosmap_localitiesautocomplete": {
        "api_name": "localitiesautocomplete",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_localitiesautocomplete(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string input: The text string on which to search, for example: \"london\" or \"123 Cross Road\". The Woosmap Localities API will return predictions matches based on this string and order the results based on their perceived relevance.\n defaults to London\n    :param string? language: The language code, using ISO 3166-1 Alpha-2 country codes, indicating in which language the results should be returned, if possible. If language is not supplied, the Localities service will use english as default language. No language necessary for `postal_code` request.\n defaults to en\n    :param string? extended: If set, this parameter allows a refined search over locality names that bears the same postal code. By triggering this parameter, integrators will benefit from a search spectrum on the `locality` type that ***includes postal codes***. To avoid confusion, it is recommended not to activate this parameter along with the `postal_code` type which could lead to duplicate locations. Also, the default description returned by the API changes to `name (postal code), admin_1, admin_0`. It is only available for France and Italy.\n defaults to postal_code\n    :param string? data: Two values for this parameter: `standard` or `advanced`. By default, if the parameter is not defined, value is set as `standard`. The `advanced` value opens suggestions to worldwide postal codes in addition to postal codes for Western Europe. ***A dedicated option subject to specific billing on your license is needed to use this parameter. Please contact us if you are interested in using this parameter and you do not have subscribed the proper option yet.***\n defaults to advanced\n    :param string? types: The types of suggestion to return.\n\n  * `locality`: includes locality names (from city to village) and suburbs\n  * `postal_code`: publicly-used postal codes around the world\n  * `address`: addresses (only available for UK and France)\n  * `admin_level`: most commonly used administrative areas\n  * `country`: countries as whole point of interest\n  * `airport`: includes all medium sized to international sized airports\n  * `train_station`: includes all train stations\n  * `metro_station`: includes all metro stations\n  * `shopping`: includes shopping malls (or \"shopping centers\") - *may include private retail brands*\n  * `museum`: includes museums\n  * `tourist_attraction`: includes tourist attractions like the Eiffel tower\n  * `amusement_park`: includes amusement parks like Disneyland Paris\n  * `art_gallery`: includes art galleries\n  * `zoo`: includes zoos\n\n> The information returned on an `address` suggestion contain only a \"single-line\" description. A request to the [Details endpoint](/products/localities/details/) of the API must be performed to retrieve the location (geographic coordinates) and the address components (street address, zipcode, city..).\nNot specifying any type will only query `locality` and `postal_code`. Multiple types can be passed using the pipe character (`|`) as a separator. For example: `types=locality|airport|admin_level`.\n defaults to postal_code\n    :param string? components: A grouping of places to which you would like to restrict your results. Currently, you can use `components` to filter over countries. Countries must be passed as a two character, ISO 3166-1 Alpha-2 compatible country code. For example: `components=country:fr` would restrict your results to places within France and `components=country:fr-fr` returns locations only in Metropolitan France. Multiple countries must be passed as multiple country:XX filters, with the pipe character (`|`) as a separator. For example: `components=country:gb|country:fr|country:be|country:sp|country:it` would restrict your results to city names or postal codes within the United Kingdom, France, Belgium, Spain and Italy.\n defaults to country:fr|country:es\n    '''\n    return await self._request_rapid_api('rapi_woosmap_localitiesautocomplete',kwargs)\n        "
    },
    "rapi_woosmap_localitiesdetails": {
        "api_name": "localitiesdetails",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_localitiesdetails(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string public_id: A textual identifier that uniquely identifies a locality, returned from a [Localities Autocomplete](https://developers.woosmap.com/products/localities/autocomplete/).\n defaults to MkvnYy6K6oVGqeqfWJGO/6eCgqo=\n    :param string? fields: Used to limit the returning fields (by default, all fields are return). Available fields are (geometry) (fields should be separated by a ,). By using this parameter you will limit content of responses to the geometry part. No address component will be returned.\n defaults to geometry\n    '''\n    return await self._request_rapid_api('rapi_woosmap_localitiesdetails',kwargs)\n        "
    },
    "rapi_woosmap_getstoresfromgeolocationposition": {
        "api_name": "getstoresfromgeolocationposition",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_getstoresfromgeolocationposition(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string? ip_address: The ip_address you want to geolocate. For **server call with private_key** only. Without this parameter, the API will geolocate the IP Address attached to the raw TCP request.\n defaults to 75.134.29.90\n    :param string? query: Search query combining one or more search clauses. Each search clause is made up of three parts structured as `field` `:` `operator` `value`. , e.g. `name:=\"My cool store\"`\n### Vocabulary\n\n  - **Field**: attribute of the Store that is searched, e.g. the attribute `name` of the store.\n\n  - **Operator**: test that is performed on the data to provide a match, e.g. `=`.\n  Each field has a default operator. If none operator follow the `:`, the default one is used.\n\n  - **Value**: the content of the attribute that is tested, e.g. the name of the store `\"My cool store\"`.\n\nCombine clauses with the conjunctions `AND` or `OR`, and negate the query with `NOT`.\n### Fields\n\n  - `type`: An element is contained within `type` collection. e.g. `type:\"myType\"`\n\n  - `tag`: An element is contained within `tag` collection. e.g. `tag:\"myTag\"`\n\n  - `city`: text matching: the value match the `city` field. e.g. `city:=\"Paris\"`\n\n  - `country`: text matching: the value match the `countryCode` field. e.g. `country:=\"FR\"`\n\n  - `name`: text matching: the value match the `name` field. e.g. `name:=\"myName\"`\n\n  - `idstore`: text matching: the value match the `idstore` field.  e.g. `idstore:=\"myIdStore\"`\n\n  - `user`: concerns all fields inside `user_properties`. text matching or numerical comparison.  e.g. `user.myAttribute:=\"myValue\"`\n\n  - `localized`: used for [localizedNames](https://developers.woosmap.com/products/data-api/data-structure/#localizednames) to search in native language. text matching in collection: the value match one of the the `localizedNames`. e.g. `localized:=\"centro\"`\n\n> **userProperties** field has no restriction regarding the data you can put in it (Arrays, Object, Boolean, String, Numeric...) but you can only query for **text matching or numerical comparison**.\n### Operators\n\n  - `:` : Default and mandatory operator. For `type` and `tag` fields, define that an element is contained within a collection.\n\n  - `=` : The content of a string or a number is equal to the other.\n\n  - `>` : A number is greater than another.\n\n  - `<` : A number is smaller than another.\n\n  - `>=` : A number is greater than or equal to another.\n\n  - `<=` : A number is smaller than or equal to another.\n\n  - `AND` : Return assets that match both clauses.\n\n  - `OR` : Return assets that match either clauses.\n\n  - `NOT` : Negates a search clause.\n\nFor compound clauses, you can use parentheses to group clauses together. For example: ```(type:\"type1\" OR type:\"type2\") AND tag:\"hockey\"```\nYou can use `NOT` operator to negates a search clause. For example: ```not type:\"type1\"```\n defaults to name:'My cool store'|type:'click_and_collect'\n    :param integer? limit: To limit number of assets retrieved from an IP location.\n defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_woosmap_getstoresfromgeolocationposition',kwargs)\n        "
    },
    "rapi_woosmap_getgeolocationposition": {
        "api_name": "getgeolocationposition",
        "category": "Location",
        "tool_name": "woosmap",
        "code": "async def rapi_woosmap_getgeolocationposition(self,*args,**kwargs):\n    '''Location-based Search Platform\n    \n    \n\n    :param string? ip_address: The ip_address you want to geolocate. For **server call with private_key** only. Without this parameter, the API will geolocate the IP Address attached to the raw TCP request.\n defaults to 75.134.29.90\n    :param string? query: Search query combining one or more search clauses. Each search clause is made up of three parts structured as `field` `:` `operator` `value`. , e.g. `name:=\"My cool store\"`\n### Vocabulary\n\n  - **Field**: attribute of the Store that is searched, e.g. the attribute `name` of the store.\n\n  - **Operator**: test that is performed on the data to provide a match, e.g. `=`.\n  Each field has a default operator. If none operator follow the `:`, the default one is used.\n\n  - **Value**: the content of the attribute that is tested, e.g. the name of the store `\"My cool store\"`.\n\nCombine clauses with the conjunctions `AND` or `OR`, and negate the query with `NOT`.\n### Fields\n\n  - `type`: An element is contained within `type` collection. e.g. `type:\"myType\"`\n\n  - `tag`: An element is contained within `tag` collection. e.g. `tag:\"myTag\"`\n\n  - `city`: text matching: the value match the `city` field. e.g. `city:=\"Paris\"`\n\n  - `country`: text matching: the value match the `countryCode` field. e.g. `country:=\"FR\"`\n\n  - `name`: text matching: the value match the `name` field. e.g. `name:=\"myName\"`\n\n  - `idstore`: text matching: the value match the `idstore` field.  e.g. `idstore:=\"myIdStore\"`\n\n  - `user`: concerns all fields inside `user_properties`. text matching or numerical comparison.  e.g. `user.myAttribute:=\"myValue\"`\n\n  - `localized`: used for [localizedNames](https://developers.woosmap.com/products/data-api/data-structure/#localizednames) to search in native language. text matching in collection: the value match one of the the `localizedNames`. e.g. `localized:=\"centro\"`\n\n> **userProperties** field has no restriction regarding the data you can put in it (Arrays, Object, Boolean, String, Numeric...) but you can only query for **text matching or numerical comparison**.\n### Operators\n\n  - `:` : Default and mandatory operator. For `type` and `tag` fields, define that an element is contained within a collection.\n\n  - `=` : The content of a string or a number is equal to the other.\n\n  - `>` : A number is greater than another.\n\n  - `<` : A number is smaller than another.\n\n  - `>=` : A number is greater than or equal to another.\n\n  - `<=` : A number is smaller than or equal to another.\n\n  - `AND` : Return assets that match both clauses.\n\n  - `OR` : Return assets that match either clauses.\n\n  - `NOT` : Negates a search clause.\n\nFor compound clauses, you can use parentheses to group clauses together. For example: ```(type:\"type1\" OR type:\"type2\") AND tag:\"hockey\"```\nYou can use `NOT` operator to negates a search clause. For example: ```not type:\"type1\"```\n defaults to name:'My cool store'|type:'click_and_collect'\n    '''\n    return await self._request_rapid_api('rapi_woosmap_getgeolocationposition',kwargs)\n        "
    },
    "rapi_pt_postcodes_get_addresses_by_postcode": {
        "api_name": "get_addresses_by_postcode",
        "category": "Location",
        "tool_name": "pt_postcodes",
        "code": "async def rapi_pt_postcodes_get_addresses_by_postcode(self,*args,**kwargs):\n    '''Portuguese postcode lookup\n    \n    \n\n    :param string cp4:  defaults to 3750\n    :param string cp3:  defaults to 016\n    '''\n    return await self._request_rapid_api('rapi_pt_postcodes_get_addresses_by_postcode',kwargs)\n        "
    },
    "rapi_senegal_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "senegal_api",
        "code": "async def rapi_senegal_api_directions_between_2_locations(self,*args,**kwargs):\n    '''The Senegal Lookup API allows you to look up the latitude, longitude, and address of a location in Senegal.\n    \n    \n\n    :param integer start_lon: Longitude of the starting point (required) defaults to -16.0755888102153\n    :param integer end_lon: Longitude of the ending point (required) defaults to -17.447938\n    :param integer end_lat: Latitude of the ending point (required) defaults to 14.693425\n    :param integer start_lat: Latitude of the starting point (required) defaults to 14.14129815\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_senegal_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_senegal_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "senegal_api",
        "code": "async def rapi_senegal_api_reverse_geocode(self,*args,**kwargs):\n    '''The Senegal Lookup API allows you to look up the latitude, longitude, and address of a location in Senegal.\n    \n    \n\n    :param string lon: The longitude of the location. defaults to -17.447938\n    :param string lat: The latitude of the location. defaults to 14.693425\n    '''\n    return await self._request_rapid_api('rapi_senegal_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_senegal_api_facilities_lookup": {
        "api_name": "facilities_lookup",
        "category": "Location",
        "tool_name": "senegal_api",
        "code": "async def rapi_senegal_api_facilities_lookup(self,*args,**kwargs):\n    '''The Senegal Lookup API allows you to look up the latitude, longitude, and address of a location in Senegal.\n    \n    \n\n    :param string region: The region where the facility is located defaults to Dakar\n    :param string type: The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity) defaults to hospital\n    :param string? city: The city where the facility is located defaults to Touba\n    :param string? limit: The number of facilities to query. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_senegal_api_facilities_lookup',kwargs)\n        "
    },
    "rapi_ghana_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "ghana_api",
        "code": "async def rapi_ghana_api_directions_between_2_locations(self,*args,**kwargs):\n    '''Welcome to the Ghanaian Location Lookup API! This API allows you to retrieve the latitude, longitude, and name of any location in Ghana.\n    \n    \n\n    :param integer end_lon: Longitude of the ending point (required) defaults to -0.1870\n    :param integer end_lat: Latitude of the ending point (required) defaults to 5.6037\n    :param integer start_lon: Longitude of the starting point (required) defaults to -1.6233086\n    :param integer start_lat: Latitude of the starting point (required) defaults to 6.6985605\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_ghana_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_ghana_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "ghana_api",
        "code": "async def rapi_ghana_api_reverse_geocode(self,*args,**kwargs):\n    '''Welcome to the Ghanaian Location Lookup API! This API allows you to retrieve the latitude, longitude, and name of any location in Ghana.\n    \n    \n\n    :param string lon: The longitude of the location. defaults to -0.1870\n    :param string lat: The latitude of the location. defaults to 5.6037\n    '''\n    return await self._request_rapid_api('rapi_ghana_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_get_ip_address_and_basic_info_ip_address": {
        "api_name": "ip_address",
        "category": "Location",
        "tool_name": "get_ip_address_and_basic_info",
        "code": "async def rapi_get_ip_address_and_basic_info_ip_address(self,*args,**kwargs):\n    '''best practice is using js for web apps.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_get_ip_address_and_basic_info_ip_address',kwargs)\n        "
    },
    "rapi_canada_postal_codes_get_all_postal_code": {
        "api_name": "get_all_postal_code",
        "category": "Location",
        "tool_name": "canada_postal_codes",
        "code": "async def rapi_canada_postal_codes_get_all_postal_code(self,*args,**kwargs):\n    '''A list of postal codes in Canada\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_canada_postal_codes_get_all_postal_code',kwargs)\n        "
    },
    "rapi_geocoding_places_get_geocoding_with_images": {
        "api_name": "get_geocoding_with_images",
        "category": "Location",
        "tool_name": "geocoding_places",
        "code": "async def rapi_geocoding_places_get_geocoding_with_images(self,*args,**kwargs):\n    '''Geocoding places Info with images & videos.\n    \n    \n\n    :param integer lat: Latitude in decimal degrees (wgs84) defaults to 37.422213\n    :param integer lng: Longitude in decimal degrees (wgs84) defaults to -122.084058\n    :param string version:  defaults to v1\n    :param string? lang: Prefered language of content. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_geocoding_places_get_geocoding_with_images',kwargs)\n        "
    },
    "rapi_geocoding_places_get_geocoding": {
        "api_name": "get_geocoding",
        "category": "Location",
        "tool_name": "geocoding_places",
        "code": "async def rapi_geocoding_places_get_geocoding(self,*args,**kwargs):\n    '''Geocoding places Info with images & videos.\n    \n    \n\n    :param string version:  defaults to v1\n    :param integer lat: Latitude in decimal degrees (wgs84) defaults to 37.422213\n    :param integer lng: Longitude in decimal degrees (wgs84) defaults to -122.084058\n    :param string? lang: Prefered language of content. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_geocoding_places_get_geocoding',kwargs)\n        "
    },
    "rapi_geocoding_places_get_geocoding_with_videos": {
        "api_name": "get_geocoding_with_videos",
        "category": "Location",
        "tool_name": "geocoding_places",
        "code": "async def rapi_geocoding_places_get_geocoding_with_videos(self,*args,**kwargs):\n    '''Geocoding places Info with images & videos.\n    \n    \n\n    :param integer lat: Latitude in decimal degrees (wgs84) defaults to 37.422213\n    :param integer lng: Longitude in decimal degrees (wgs84) defaults to -122.084058\n    :param string version:  defaults to v1\n    :param string? lang: Prefered language of content. defaults to en\n    '''\n    return await self._request_rapid_api('rapi_geocoding_places_get_geocoding_with_videos',kwargs)\n        "
    },
    "rapi_rest_country_api_allcountries": {
        "api_name": "allcountries",
        "category": "Location",
        "tool_name": "rest_country_api",
        "code": "async def rapi_rest_country_api_allcountries(self,*args,**kwargs):\n    '''This project is a resource for accessing information about countries around the world through a REST API (Application Programming Interface). It is inspired by the website restcountries.com and is freely available for anyone to use. The project is open source, meaning that the source code is publicly available and can be modified by anyone. It allows users to retrieve data about each country, including details about its geography, population, and more, through simple API calls. Whether you're...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rest_country_api_allcountries',kwargs)\n        "
    },
    "rapi_find_by_udprn_find_by_udprn": {
        "api_name": "find_by_udprn",
        "category": "Location",
        "tool_name": "find_by_udprn",
        "code": "async def rapi_find_by_udprn_find_by_udprn(self,*args,**kwargs):\n    '''\u201cFind By UDPRN\u201d API gets address for the specified UDPRN.\n\nUDPRN stands for \u2018Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database.\n    \n    \n\n    :param string udprn:  defaults to 18911184\n    '''\n    return await self._request_rapid_api('rapi_find_by_udprn_find_by_udprn',kwargs)\n        "
    },
    "rapi_timezone_by_location_timezone": {
        "api_name": "timezone",
        "category": "Location",
        "tool_name": "timezone_by_location",
        "code": "async def rapi_timezone_by_location_timezone(self,*args,**kwargs):\n    '''Convert any GPS Lat/Lon location into its timezone\n    \n    \n\n    :param integer lat: Latitude defaults to 51\n    :param integer lon: Longitude defaults to 5\n    :param integer? c: Return compact JSON defaults to 1\n    :param integer? s: Return simple answer (ignores points with multiple timezones) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_timezone_by_location_timezone',kwargs)\n        "
    },
    "rapi_ip_geolocalization_api_ip_address_lookup": {
        "api_name": "ip_address_lookup",
        "category": "Location",
        "tool_name": "ip_geolocalization_api",
        "code": "async def rapi_ip_geolocalization_api_ip_address_lookup(self,*args,**kwargs):\n    '''IP Geolocalization API is a powerful tool for determining the location of an IP address. It offers accurate and up-to-date information, including the country, region, city, and latitude/longitude coordinates of the IP. It is perfect for businesses, researchers, and developers looking to understand the location of their website visitors or users.\n    \n    \n\n    :param string ip: IP to look up defaults to 98.207.254.136\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocalization_api_ip_address_lookup',kwargs)\n        "
    },
    "rapi_world_country_get_regions": {
        "api_name": "get_regions",
        "category": "Location",
        "tool_name": "world_country",
        "code": "async def rapi_world_country_get_regions(self,*args,**kwargs):\n    '''More than 200+ countries, 5K states and 150K cities with various information.\n    \n    \n\n    :param string? keyword: search Region by keyword defaults to asia\n    :param integer? perpage:  defaults to 50\n    :param string? id: id of Region\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_world_country_get_regions',kwargs)\n        "
    },
    "rapi_world_country_get_time_zones": {
        "api_name": "get_time_zones",
        "category": "Location",
        "tool_name": "world_country",
        "code": "async def rapi_world_country_get_time_zones(self,*args,**kwargs):\n    '''More than 200+ countries, 5K states and 150K cities with various information.\n    \n    \n\n    :param string? id: id of Time Zone\n    :param string? keyword: search Time Zone by keyword defaults to asia\n    :param integer? page:  defaults to 1\n    :param integer? perpage:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_world_country_get_time_zones',kwargs)\n        "
    },
    "rapi_world_country_get_cities": {
        "api_name": "get_cities",
        "category": "Location",
        "tool_name": "world_country",
        "code": "async def rapi_world_country_get_cities(self,*args,**kwargs):\n    '''More than 200+ countries, 5K states and 150K cities with various information.\n    \n    \n\n    :param string? keyword: search City by keyword defaults to asia\n    :param string? id: id of City\n    :param integer? page:  defaults to 1\n    :param integer? perpage:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_world_country_get_cities',kwargs)\n        "
    },
    "rapi_world_country_get_countries": {
        "api_name": "get_countries",
        "category": "Location",
        "tool_name": "world_country",
        "code": "async def rapi_world_country_get_countries(self,*args,**kwargs):\n    '''More than 200+ countries, 5K states and 150K cities with various information.\n    \n    \n\n    :param string? keyword: search Country by keyword defaults to ind\n    :param string? subregion_id: Find Countries by subregion id\n    :param string? state_id: Find Countries by state id\n    :param string? timezone_id: Find Countries by timezone id\n    :param string? region_id: Find Countries by region id\n    :param integer? perpage:  defaults to 50\n    :param string? id: id of Country\n    :param integer? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_world_country_get_countries',kwargs)\n        "
    },
    "rapi_timezonedb_find_local_time_zone_by_coordinate_or_name_main": {
        "api_name": "main",
        "category": "Location",
        "tool_name": "timezonedb_find_local_time_zone_by_coordinate_or_name",
        "code": "async def rapi_timezonedb_find_local_time_zone_by_coordinate_or_name_main(self,*args,**kwargs):\n    '''TimeZoneDB finds you the local time zone of a place by latitude & longitude, or by the time zone name such as \"Europe/London\". You get local time in Unix timestamp, with GMT offset, daylight saving, and country code.\n    \n    \n\n    :param string? zone: Time zone name . You can refer the name from http://timezonedb.com/time-zones. Required if lat & lng fields are not provided. defaults to America/Los_Angeles\n    :param integer? lat: Latitude of a city. This field is required when \"zone\" is not specified. defaults to 34.048108\n    :param integer? lng: Longitude of a city. This field is required when \"zone\" is not specified. defaults to -118.244705\n    :param integer? time: Unix timestamp to be converted into local time. For more information of Unix time, please refer to http://en.wikipedia.org/wiki/Unix_time defaults to 1358474681\n    :param string? format: The forat of the returned result. Default is XML formatted. defaults to xml\n    :param string? callback: Use for JavaScript JSON callback.\n    '''\n    return await self._request_rapid_api('rapi_timezonedb_find_local_time_zone_by_coordinate_or_name_main',kwargs)\n        "
    },
    "rapi_district_capitals_in_ghana_get_district_capital_by_name": {
        "api_name": "get_district_capital_by_name",
        "category": "Location",
        "tool_name": "district_capitals_in_ghana",
        "code": "async def rapi_district_capitals_in_ghana_get_district_capital_by_name(self,*args,**kwargs):\n    '''This API contains all district capitals in Ghana.\n    \n    \n\n    :param string name:  defaults to accra\n    '''\n    return await self._request_rapid_api('rapi_district_capitals_in_ghana_get_district_capital_by_name',kwargs)\n        "
    },
    "rapi_district_capitals_in_ghana_get_district_capital_by_id": {
        "api_name": "get_district_capital_by_id",
        "category": "Location",
        "tool_name": "district_capitals_in_ghana",
        "code": "async def rapi_district_capitals_in_ghana_get_district_capital_by_id(self,*args,**kwargs):\n    '''This API contains all district capitals in Ghana.\n    \n    \n\n    :param integer id:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_district_capitals_in_ghana_get_district_capital_by_id',kwargs)\n        "
    },
    "rapi_district_capitals_in_ghana_get_all_district_capital": {
        "api_name": "get_all_district_capital",
        "category": "Location",
        "tool_name": "district_capitals_in_ghana",
        "code": "async def rapi_district_capitals_in_ghana_get_all_district_capital(self,*args,**kwargs):\n    '''This API contains all district capitals in Ghana.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_district_capitals_in_ghana_get_all_district_capital',kwargs)\n        "
    },
    "rapi_find_by_address_find_by_address": {
        "api_name": "find_by_address",
        "category": "Location",
        "tool_name": "find_by_address",
        "code": "async def rapi_find_by_address_find_by_address(self,*args,**kwargs):\n    '''\u201cFind By Address\u201d API gets addresses for given search term. This API provides a JSON interface to search UK addresses. This API gives access to Royal Mail PAF data and Geocoding. his API uses the latest PAF and Multiple Residence data from Royal Mail.\n    \n    \n\n    :param string? query:  defaults to Farringdon Road\n    '''\n    return await self._request_rapid_api('rapi_find_by_address_find_by_address',kwargs)\n        "
    },
    "rapi_geosource_api_emoji_flag_by_country": {
        "api_name": "emoji_flag_by_country",
        "category": "Location",
        "tool_name": "geosource_api",
        "code": "async def rapi_geosource_api_emoji_flag_by_country(self,*args,**kwargs):\n    '''Introducing GeoSource API - the comprehensive API service that provides a wealth of geo-information on countries, states, cities, zip codes, currencies, flags, and much more. With GeoSource API, developers can easily access accurate and up-to-date geo-information to enhance their applications and services.\n\n    \n    \n\n    :param string? country:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_geosource_api_emoji_flag_by_country',kwargs)\n        "
    },
    "rapi_geosource_api_zipcode_by_city": {
        "api_name": "zipcode_by_city",
        "category": "Location",
        "tool_name": "geosource_api",
        "code": "async def rapi_geosource_api_zipcode_by_city(self,*args,**kwargs):\n    '''Introducing GeoSource API - the comprehensive API service that provides a wealth of geo-information on countries, states, cities, zip codes, currencies, flags, and much more. With GeoSource API, developers can easily access accurate and up-to-date geo-information to enhance their applications and services.\n\n    \n    \n\n    :param string city:  defaults to Brussels\n    '''\n    return await self._request_rapid_api('rapi_geosource_api_zipcode_by_city',kwargs)\n        "
    },
    "rapi_geosource_api_cities_by_state": {
        "api_name": "cities_by_state",
        "category": "Location",
        "tool_name": "geosource_api",
        "code": "async def rapi_geosource_api_cities_by_state(self,*args,**kwargs):\n    '''Introducing GeoSource API - the comprehensive API service that provides a wealth of geo-information on countries, states, cities, zip codes, currencies, flags, and much more. With GeoSource API, developers can easily access accurate and up-to-date geo-information to enhance their applications and services.\n\n    \n    \n\n    :param string state:  defaults to Alabama\n    '''\n    return await self._request_rapid_api('rapi_geosource_api_cities_by_state',kwargs)\n        "
    },
    "rapi_geosource_api_countrieslist": {
        "api_name": "countrieslist",
        "category": "Location",
        "tool_name": "geosource_api",
        "code": "async def rapi_geosource_api_countrieslist(self,*args,**kwargs):\n    '''Introducing GeoSource API - the comprehensive API service that provides a wealth of geo-information on countries, states, cities, zip codes, currencies, flags, and much more. With GeoSource API, developers can easily access accurate and up-to-date geo-information to enhance their applications and services.\n\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_geosource_api_countrieslist',kwargs)\n        "
    },
    "rapi_bps_bp_par_localite": {
        "api_name": "bp_par_localite",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_bp_par_localite(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    :param string? localite: \n    '''\n    return await self._request_rapid_api('rapi_bps_bp_par_localite',kwargs)\n        "
    },
    "rapi_bps_commune_par_nom": {
        "api_name": "commune_par_nom",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_commune_par_nom(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    :param string? nom:  defaults to poum\n    '''\n    return await self._request_rapid_api('rapi_bps_commune_par_nom',kwargs)\n        "
    },
    "rapi_bps_code_postal_par_code": {
        "api_name": "code_postal_par_code",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_code_postal_par_code(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    :param string code:  defaults to 98827\n    '''\n    return await self._request_rapid_api('rapi_bps_code_postal_par_code',kwargs)\n        "
    },
    "rapi_bps_all": {
        "api_name": "all",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_all(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bps_all',kwargs)\n        "
    },
    "rapi_bps_all_bps": {
        "api_name": "all_bps",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_all_bps(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    :param string? localite:  defaults to poum\n    '''\n    return await self._request_rapid_api('rapi_bps_all_bps',kwargs)\n        "
    },
    "rapi_bps_communes_par_code_commune": {
        "api_name": "communes_par_code_commune",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_communes_par_code_commune(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    :param string code_com:  defaults to 98810\n    '''\n    return await self._request_rapid_api('rapi_bps_communes_par_code_commune',kwargs)\n        "
    },
    "rapi_bps_all_communes": {
        "api_name": "all_communes",
        "category": "Location",
        "tool_name": "bps",
        "code": "async def rapi_bps_all_communes(self,*args,**kwargs):\n    '''Les bo\u00eetes postales (BPs), codes postaux, localit\u00e9s,communes, codes cedex de Nouvelle-Cal\u00e9donie.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bps_all_communes',kwargs)\n        "
    },
    "rapi_ip_geolocation_lookup_ip_geolocation_lookup": {
        "api_name": "ip_geolocation_lookup",
        "category": "Location",
        "tool_name": "ip_geolocation_lookup",
        "code": "async def rapi_ip_geolocation_lookup_ip_geolocation_lookup(self,*args,**kwargs):\n    '''API returns location data such as country, region, city, zip and more\n    \n    \n\n    :param string ip: IPv4 address defaults to 193.114.112.1\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocation_lookup_ip_geolocation_lookup',kwargs)\n        "
    },
    "rapi_country_information_and_conversion_api_bycountryname": {
        "api_name": "bycountryname",
        "category": "Location",
        "tool_name": "country_information_and_conversion_api",
        "code": "async def rapi_country_information_and_conversion_api_bycountryname(self,*args,**kwargs):\n    '''The Country Information and Conversion API provides developers with a wide range of country-related data and conversion capabilities. \n\nHere are the details of what the API offers:  \n\nCountry Name: The full name of the country. \nCountry Code: The unique country code that identifies the country.\nCapital: The capital city of the country. \nPopulation: The population count of the country.\nLanguage(s): The official language(s) spoken in the country.\nCurrency: The currency used in the country.\nTime...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_country_information_and_conversion_api_bycountryname',kwargs)\n        "
    },
    "rapi_country_information_and_conversion_api_bycountrycode": {
        "api_name": "bycountrycode",
        "category": "Location",
        "tool_name": "country_information_and_conversion_api",
        "code": "async def rapi_country_information_and_conversion_api_bycountrycode(self,*args,**kwargs):\n    '''The Country Information and Conversion API provides developers with a wide range of country-related data and conversion capabilities. \n\nHere are the details of what the API offers:  \n\nCountry Name: The full name of the country. \nCountry Code: The unique country code that identifies the country.\nCapital: The capital city of the country. \nPopulation: The population count of the country.\nLanguage(s): The official language(s) spoken in the country.\nCurrency: The currency used in the country.\nTime...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_country_information_and_conversion_api_bycountrycode',kwargs)\n        "
    },
    "rapi_income_by_zipcode_income_by_zipcode": {
        "api_name": "income_by_zipcode",
        "category": "Location",
        "tool_name": "income_by_zipcode",
        "code": "async def rapi_income_by_zipcode_income_by_zipcode(self,*args,**kwargs):\n    '''Income by zipcode is a simple API for getting income by zipcode data in the United States.\n    \n    \n\n    :param string zip:  defaults to 2818\n    '''\n    return await self._request_rapid_api('rapi_income_by_zipcode_income_by_zipcode',kwargs)\n        "
    },
    "rapi_tunisia_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "tunisia_api",
        "code": "async def rapi_tunisia_api_directions_between_2_locations(self,*args,**kwargs):\n    '''The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.\n    \n    \n\n    :param integer start_lon: Longitude of the starting point (required) defaults to 10.7603483\n    :param integer end_lon: Longitude of the ending point (required) defaults to 10.103167361330975\n    :param integer start_lat: Latitude of the starting point (required) defaults to 34.797783\n    :param integer end_lat: Latitude of the ending point (required) defaults to 36.81395975\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_tunisia_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_tunisia_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "tunisia_api",
        "code": "async def rapi_tunisia_api_reverse_geocode(self,*args,**kwargs):\n    '''The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.\n    \n    \n\n    :param string lon: The longitude of the location. defaults to 10.335847425638779\n    :param string lat: The latitude of the location. defaults to 34.723238699999996\n    '''\n    return await self._request_rapid_api('rapi_tunisia_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_tunisia_api_facilities_lookup": {
        "api_name": "facilities_lookup",
        "category": "Location",
        "tool_name": "tunisia_api",
        "code": "async def rapi_tunisia_api_facilities_lookup(self,*args,**kwargs):\n    '''The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.\n    \n    \n\n    :param string city: The city where the facility is located defaults to Tunis\n    :param string province: The region where the facility is located defaults to Manouba\n    :param string type: The type of amenity facility to search for (default: **hospital**)\nOptions:\n**aerodrome, bar, cafe, fast_food, pub, restaurant, college, driving_school, school, university, bank, atm, pharmacy,** etc..        \n\n[More options->](https://wiki.openstreetmap.org/wiki/Map_features#Amenity) defaults to hospital\n    :param string? limit: The number of facilities to query. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_tunisia_api_facilities_lookup',kwargs)\n        "
    },
    "rapi_location_v2_search_result": {
        "api_name": "search_result",
        "category": "Location",
        "tool_name": "location_v2",
        "code": "async def rapi_location_v2_search_result(self,*args,**kwargs):\n    '''We are providing a location search result according to your search query\n    \n    \n\n    :param string q:  defaults to pizza\n    :param string? latitude:  defaults to 24.562394\n    :param string? longitude:  defaults to 73.7124675\n    '''\n    return await self._request_rapid_api('rapi_location_v2_search_result',kwargs)\n        "
    },
    "rapi_referential_timezones": {
        "api_name": "timezones",
        "category": "Location",
        "tool_name": "referential",
        "code": "async def rapi_referential_timezones(self,*args,**kwargs):\n    '''The fastest API to access countries, states, cities, continents, dial and zip codes in up to 20 languages. A collection of data APIs to support forms, signups, search and lookup. Our endpoints are optimized for speed and size. Our data is regularly maintained and comes from International Standardization bodies, the United Nations, government surveys and GIS datasets. We do not scrape WikiPedia etc\n    \n    \n\n    :param string? offset: Filter on non daylights savings offset in hours\n    :param string? name: Filter as \"contains\" on timezone name in chosen lang\n    :param string? code: Filter on 3 letter non daylight savings timezone code (not unique)\n    :param string? timezone: Filter on timezone name in english\n    :param string? daylights_offset: Filter on daylights savings offset in hours\n    :param string? lang: Language selection ISO 639-2 letter code. Overrides Accept-Language header. Defaults to browser value. Default: en defaults to de\n    :param string? daylights_code: Filter on daylights savings letter code (not unique)\n    :param string? fields: Select fields to return in result [code,timezone,daylights_code,daylights_offset,daylights,hours_offset,offset] defaults to offset,daylights_offset,daylights,daylights_code,timezone\n    :param string? daylights: Filter on daylights savings/non daylight savings timezones (true,false)\n    '''\n    return await self._request_rapid_api('rapi_referential_timezones',kwargs)\n        "
    },
    "rapi_mapreflex_countiessearchinboundingbox": {
        "api_name": "countiessearchinboundingbox",
        "category": "Location",
        "tool_name": "mapreflex",
        "code": "async def rapi_mapreflex_countiessearchinboundingbox(self,*args,**kwargs):\n    '''US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.\n    \n    \n\n    :param GEOPOINT (latitude, longitude) northEast: Coordinates of north-east corner of bounding box. Test example: 40.81,-73.41\n    :param GEOPOINT (latitude, longitude) southWest: Coordinates of south-west corner of bounding box. Test example: 40.62,-74.73\n    :param boolean? intersect: Include areas that intersect with bounding box defaults to True\n    '''\n    return await self._request_rapid_api('rapi_mapreflex_countiessearchinboundingbox',kwargs)\n        "
    },
    "rapi_mapreflex_countiessearchinradius": {
        "api_name": "countiessearchinradius",
        "category": "Location",
        "tool_name": "mapreflex",
        "code": "async def rapi_mapreflex_countiessearchinradius(self,*args,**kwargs):\n    '''US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.\n    \n    \n\n    :param integer radius: Radius size in miles. Min value is 1, max value is 50 miles.\n    :param integer longitude: Longitude of radius center. Test example: -74.72\n    :param integer latitude: Latitude of radius center. Test example: 40.61\n    '''\n    return await self._request_rapid_api('rapi_mapreflex_countiessearchinradius',kwargs)\n        "
    },
    "rapi_mapreflex_zipcodesbyids": {
        "api_name": "zipcodesbyids",
        "category": "Location",
        "tool_name": "mapreflex",
        "code": "async def rapi_mapreflex_zipcodesbyids(self,*args,**kwargs):\n    '''US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.\n    \n    \n\n    :param string ids: Array of comma separated zipCodes/ids. Max size is 200. Test example: 10021,10022,10023\n    :param string? properties: Customize feature properties to include. In case of ZIP Code - set of [\\\"zip\\\", \\\"centroid\\\", \\\"aland\\\", \\\"awater\\\"]. Default value includes all properties: zip,centroid,aland,awater .  defaults to zip,centroid,aland,awater\n    '''\n    return await self._request_rapid_api('rapi_mapreflex_zipcodesbyids',kwargs)\n        "
    },
    "rapi_mapreflex_placeslistbystate": {
        "api_name": "placeslistbystate",
        "category": "Location",
        "tool_name": "mapreflex",
        "code": "async def rapi_mapreflex_placeslistbystate(self,*args,**kwargs):\n    '''US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.\n    \n    \n\n    :param string state: State name abbreviation. Test example: NY\n    '''\n    return await self._request_rapid_api('rapi_mapreflex_placeslistbystate',kwargs)\n        "
    },
    "rapi_mapreflex_statessearchinboundingbox": {
        "api_name": "statessearchinboundingbox",
        "category": "Location",
        "tool_name": "mapreflex",
        "code": "async def rapi_mapreflex_statessearchinboundingbox(self,*args,**kwargs):\n    '''US Zip Codes, Cities, States and Counties boundaries API, which provides info in common GeoJson format for instant integration with existing maps like Google, etc., or with your custom application.\n    \n    \n\n    :param GEOPOINT (latitude, longitude) northEast: Coordinates of north-east corner of bounding box. Test example: 40.81,-73.41\n    :param GEOPOINT (latitude, longitude) southWest: Coordinates of south-west corner of bounding box. Test example: 40.62,-74.73\n    :param boolean? intersect: Include areas that intersect with bounding box defaults to True\n    '''\n    return await self._request_rapid_api('rapi_mapreflex_statessearchinboundingbox',kwargs)\n        "
    },
    "rapi_ip_to_location_apiip_get_ip_data": {
        "api_name": "get_ip_data",
        "category": "Location",
        "tool_name": "ip_to_location_apiip",
        "code": "async def rapi_ip_to_location_apiip_get_ip_data(self,*args,**kwargs):\n    '''Apiip.net is an API service allowing customers to automate IP address validation and geolocation lookup in websites, applications, and back-office systems.\n    \n    \n\n    :param string? callback: Specify a JSONP callback function name according to the [JSONP Callbacks](https://apiip.net/documentation) section. defaults to FUNCTION_NAME\n    :param string? ip: An IPv4 or IPv6 address of your choice. or a comma-separated list of IPv4 or IPv6 addresses of your choice. (Limit: 50 values) defaults to 67.250.186.196\n    :param string? language: Set to a 2-letter language code according to the [Specify Response Language](https://apiip.net/documentation) section. defaults to es\n    :param string? fields: Specify API response field(s) according to the [Specify Response Fields](https://apiip.net/documentation) section. defaults to city,capital\n    :param string? output: Set to json or xml to choose between output formats. defaults to xml\n    '''\n    return await self._request_rapid_api('rapi_ip_to_location_apiip_get_ip_data',kwargs)\n        "
    },
    "rapi_distance_calculator_v3_calc": {
        "api_name": "calc",
        "category": "Location",
        "tool_name": "distance_calculator_v3",
        "code": "async def rapi_distance_calculator_v3_calc(self,*args,**kwargs):\n    '''Calculates the distance between two coordinates\n    \n    \n\n    :param integer startLongitude:  defaults to -48.880964\n    :param integer startLatitude:  defaults to -26.311960\n    :param integer endLongitude:  defaults to -48.881103\n    :param integer endLatitude:  defaults to -26.313662\n    '''\n    return await self._request_rapid_api('rapi_distance_calculator_v3_calc',kwargs)\n        "
    },
    "rapi_pharmacies_de_garde_nc_all": {
        "api_name": "all",
        "category": "Location",
        "tool_name": "pharmacies_de_garde_nc",
        "code": "async def rapi_pharmacies_de_garde_nc_all(self,*args,**kwargs):\n    '''API permettant d'obtenir les informations sur les pharmacies de garde en Nouvelle-Cal\u00e9donie\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pharmacies_de_garde_nc_all',kwargs)\n        "
    },
    "rapi_country_by_api_ninjas_v1_country": {
        "api_name": "v1_country",
        "category": "Location",
        "tool_name": "country_by_api_ninjas",
        "code": "async def rapi_country_by_api_ninjas_v1_country(self,*args,**kwargs):\n    '''Get useful statistics on every country in the world. See more info at https://api-ninjas.com/api/country.\n    \n    \n\n    :param integer? min_area: Minimum surface area of country in km2.\n    :param string? name: Plain English name, 2-letter ISO-3166 alpha-2, or 3-letter ISO-3166 alpha-3 code of country. defaults to United States\n    :param integer? min_fertility: Minimum fertility rate in %.\n    :param integer? min_gdp_growth: Minimum GDP growth rate in %.\n    :param integer? limit: How many results to return. Must be between **1** and **30**. Default is **5**.\n    :param integer? min_population: Minimum population of country.\n    :param integer? max_unemployment: Maximum unemployment rate in %.\n    :param integer? max_urban_pop_rate: Maximum urban population rate in %.\n    :param integer? max_population: Maximum population of country.\n    :param integer? max_gdp: Maximum gross domestic product (GDP) of country, in US Dollars.\n    :param integer? min_urban_pop_rate: Minimum urban population rate in %.\n    :param integer? min_unemployment: Minimum unemployment rate in %.\n    :param integer? max_area: Maximum surface area of country in km2.\n    :param integer? min_gdp: Minimum gross domestic product (GDP) of country, in US Dollars.\n    :param integer? min_infant_mortality: Minimum infant mortality rate in %.\n    :param integer? max_gdp_growth: Maximum GDP growth rate in %.\n    :param integer? max_infant_mortality: Maximum infant mortality rate in %.\n    :param string? currency: 3-letter currency code of country (e.g. **USD**).\n    :param integer? max_fertility: Maximum fertility rate in %.\n    '''\n    return await self._request_rapid_api('rapi_country_by_api_ninjas_v1_country',kwargs)\n        "
    },
    "rapi_geoip_v2_visitor_lookup": {
        "api_name": "visitor_lookup",
        "category": "Location",
        "tool_name": "geoip_v2",
        "code": "async def rapi_geoip_v2_visitor_lookup(self,*args,**kwargs):\n    '''API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON or XML formats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_geoip_v2_visitor_lookup',kwargs)\n        "
    },
    "rapi_navitime_geocoding_address_reverse_geocoding": {
        "api_name": "address_reverse_geocoding",
        "category": "Location",
        "tool_name": "navitime_geocoding",
        "code": "async def rapi_navitime_geocoding_address_reverse_geocoding(self,*args,**kwargs):\n    '''Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.\n    \n    \n\n    :param string coord: Latitude and longitude. defaults to 35.624822,139.742121\n    :param string? datum: Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System) defaults to wgs84\n    :param string? coord_unit: The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds) defaults to degree\n    '''\n    return await self._request_rapid_api('rapi_navitime_geocoding_address_reverse_geocoding',kwargs)\n        "
    },
    "rapi_navitime_geocoding_address": {
        "api_name": "address",
        "category": "Location",
        "tool_name": "navitime_geocoding",
        "code": "async def rapi_navitime_geocoding_address(self,*args,**kwargs):\n    '''Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.\n    \n    \n\n    :param string? coord_unit: The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds) defaults to degree\n    :param string? datum: Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System) defaults to wgs84\n    :param string? kana_row: Output result filter (consonants).\nOnly addresses in the response that begin with the letter on the specified line will be returned.\n\nAvailable only when 'code' is specified.\n    :param integer? limit: Limits the number of response data. (Minimum value: 1, Maximum value: 100, Default value: 10) defaults to 10\n    :param integer? level_from: Minimum address level.\n(Minimum value: 1, Maximum value: 7)\nNarrow down to only addresses up to a specified address level\n\u30001: Prefecture\n\u30002: City, ward, town or village\n\u30003: Large sections\n\u30004: Small sections\n\u30005: Block\n\u30006: Land number\n\u30007: Branch number\n    :param integer? level_to: Maximum address level.\n(Minimum value: 1, Maximum value: 7)\nNarrow down to only addresses up to a specified address level\n\u30001: Prefecture\n\u30002: City, ward, town or village\n\u30003: Large sections\n\u30004: Small sections\n\u30005: Block\n\u30006: Land number\n\u30007: Branch number\n    :param string? word: Search word.\n\nYou cannot be used in combination with 'code'.\nPlease be sure to specify either 'word' or 'code'. defaults to \u4ee3\u3005\u6728\n    :param string? code: Address code.\n\nYou cannot be used in combination with 'word'.\nPlease be sure to specify either 'word' or 'code'.\n    :param string? sort: Sorting order of addresses.\n(lexical: lexical order, level_asc: address level ascending order, code_asc: address code ascending order (default)) defaults to code_asc\n    :param integer? offset: Skips a given number of first data.\n(Minimum value: 0, Maximum value: 2000, Default value: 0) defaults to 0\n    :param string? address_filter: Address filter.\n\nYou can use this when you want to get a specific address code.\nIf you prefix the address code with a '-', you can exclude the relevant address from the response.\n\nAvailable only when 'word' is specified.\n    '''\n    return await self._request_rapid_api('rapi_navitime_geocoding_address',kwargs)\n        "
    },
    "rapi_navitime_geocoding_address_code": {
        "api_name": "address_code",
        "category": "Location",
        "tool_name": "navitime_geocoding",
        "code": "async def rapi_navitime_geocoding_address_code(self,*args,**kwargs):\n    '''Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.\n    \n    \n\n    :param string code: Address Code.\nCan be specified multiple times, separated by a period. defaults to 13101001\n    :param string? coord_unit: The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds) defaults to degree\n    :param string? datum: Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System) defaults to wgs84\n    '''\n    return await self._request_rapid_api('rapi_navitime_geocoding_address_code',kwargs)\n        "
    },
    "rapi_navitime_geocoding_address_postal_code": {
        "api_name": "address_postal_code",
        "category": "Location",
        "tool_name": "navitime_geocoding",
        "code": "async def rapi_navitime_geocoding_address_postal_code(self,*args,**kwargs):\n    '''Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.\n    \n    \n\n    :param string postal_code: Postal code string (Minimum: 3 digits, Maximum: 7 digits) defaults to 1510053\n    :param string? datum: Geodetic system of latitude and longitude.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System) defaults to wgs84\n    :param integer? offset: Skips a given number of first data.\n(Minimum value: 0, Maximum value: 2000, Default value: 0) defaults to 0\n    :param string? coord_unit: The unit of latitude and longitude included in the output data.\n(degree: decimal system of degrees (default), millisec: milliseconds) defaults to degree\n    :param integer? limit: Limits the number of response data. (Minimum value: 1, Maximum value: 100, Default value: 10) defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_navitime_geocoding_address_postal_code',kwargs)\n        "
    },
    "rapi_ip_geolocation_v3_get_ip_geolocation": {
        "api_name": "get_ip_geolocation",
        "category": "Location",
        "tool_name": "ip_geolocation_v3",
        "code": "async def rapi_ip_geolocation_v3_get_ip_geolocation(self,*args,**kwargs):\n    '''IP Geolocation API allows developers to get geolocation information for a given IP address. Data points returned by this GeoIP API include city, state, province, country, continent, latitude, longitude, region, timezone, current time, organization, ISP, local currency, and country flags. This IP Location API can be used for content personalization, geotargeting, geofencing, ad targeting, digital rights management, form auto-completion, etc. With the free plan, you can make 2,000 IP lookup API...\n    \n    \n\n    :param string? ip:  defaults to 206.71.50.230\n    '''\n    return await self._request_rapid_api('rapi_ip_geolocation_v3_get_ip_geolocation',kwargs)\n        "
    },
    "rapi_uganda_api_directions_between_2_locations": {
        "api_name": "directions_between_2_locations",
        "category": "Location",
        "tool_name": "uganda_api",
        "code": "async def rapi_uganda_api_directions_between_2_locations(self,*args,**kwargs):\n    '''The Uganda API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Uganda.\n    \n    \n\n    :param integer end_lat: Latitude of the ending point (required) defaults to 0.32493795000000003\n    :param integer start_lat: Latitude of the starting point (required) defaults to 0.365816\n    :param integer end_lon: Longitude of the ending point (required) defaults to 32.57523607707668\n    :param integer start_lon: Longitude of the starting point (required) defaults to 32.529226\n    :param string? distance_unit: Unit of distance measurement, valid options are **km** (default), and **mi**. defaults to km\n    '''\n    return await self._request_rapid_api('rapi_uganda_api_directions_between_2_locations',kwargs)\n        "
    },
    "rapi_uganda_api_reverse_geocode": {
        "api_name": "reverse_geocode",
        "category": "Location",
        "tool_name": "uganda_api",
        "code": "async def rapi_uganda_api_reverse_geocode(self,*args,**kwargs):\n    '''The Uganda API provides endpoints to lookup locations, find facilities and perform geospatial operations such as distance calculation and directions between two locations in Uganda.\n    \n    \n\n    :param string lon: The longitude of the location. defaults to 32.57523607707668\n    :param string lat: The latitude of the location. defaults to 0.32493795000000003\n    '''\n    return await self._request_rapid_api('rapi_uganda_api_reverse_geocode',kwargs)\n        "
    },
    "rapi_ip_to_location_v2_ip_lookup": {
        "api_name": "ip_lookup",
        "category": "Location",
        "tool_name": "ip_to_location_v2",
        "code": "async def rapi_ip_to_location_v2_ip_lookup(self,*args,**kwargs):\n    '''API returns location data such as country, city, latitude, longitude, timezone ...\n    \n    \n\n    :param string? ip: If provide this query, API will return geo information for the given IP\n defaults to 8.30.234.123\n    '''\n    return await self._request_rapid_api('rapi_ip_to_location_v2_ip_lookup',kwargs)\n        "
    },
    "rapi_location_get_the_places_by_latitude_and_longitude": {
        "api_name": "get_the_places_by_latitude_and_longitude",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_places_by_latitude_and_longitude(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string latitude: \n    :param string longitude: \n    :param string? group: \n    '''\n    return await self._request_rapid_api('rapi_location_get_the_places_by_latitude_and_longitude',kwargs)\n        "
    },
    "rapi_location_get_the_timezones": {
        "api_name": "get_the_timezones",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_timezones(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string? page:  defaults to 1\n    :param string? name: \n    '''\n    return await self._request_rapid_api('rapi_location_get_the_timezones',kwargs)\n        "
    },
    "rapi_location_get_the_continents": {
        "api_name": "get_the_continents",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_continents(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string? name: \n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_location_get_the_continents',kwargs)\n        "
    },
    "rapi_location_get_the_countries": {
        "api_name": "get_the_countries",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_countries(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string? name: \n    :param string? alpha3: \n    :param string? alpha2: \n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_location_get_the_countries',kwargs)\n        "
    },
    "rapi_location_get_the_cities": {
        "api_name": "get_the_cities",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_cities(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string? name: \n    :param string? stateName: \n    :param string? stateAbbreviation: \n    :param string? page:  defaults to 1\n    :param string? stateId: \n    '''\n    return await self._request_rapid_api('rapi_location_get_the_cities',kwargs)\n        "
    },
    "rapi_location_get_the_addresses_by_ip": {
        "api_name": "get_the_addresses_by_ip",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_addresses_by_ip(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string? ip:  defaults to 54.72.54.234\n    '''\n    return await self._request_rapid_api('rapi_location_get_the_addresses_by_ip',kwargs)\n        "
    },
    "rapi_location_get_the_addresses_by_latitude_and_longitude": {
        "api_name": "get_the_addresses_by_latitude_and_longitude",
        "category": "Location",
        "tool_name": "location",
        "code": "async def rapi_location_get_the_addresses_by_latitude_and_longitude(self,*args,**kwargs):\n    '''Get the locations using a REST API simple and free.\n    \n    \n\n    :param string latitude:  defaults to 51.5007292\n    :param string longitude:  defaults to -0.1268141\n    '''\n    return await self._request_rapid_api('rapi_location_get_the_addresses_by_latitude_and_longitude',kwargs)\n        "
    },
    "rapi_mymappi_reverse_geocoding": {
        "api_name": "reverse_geocoding",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_reverse_geocoding(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param integer lon:  defaults to -3.703823\n    :param integer lat:  defaults to 40.4166314\n    :param string apikey:  defaults to YOUR_API_KEY\n    '''\n    return await self._request_rapid_api('rapi_mymappi_reverse_geocoding',kwargs)\n        "
    },
    "rapi_mymappi_direct_geocoding": {
        "api_name": "direct_geocoding",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_direct_geocoding(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param string q:  defaults to Calle de Alcal\u00e1 56\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param integer? source_lon:  defaults to -3.703823\n    :param integer? source_lat:  defaults to 40.4166314\n    '''\n    return await self._request_rapid_api('rapi_mymappi_direct_geocoding',kwargs)\n        "
    },
    "rapi_mymappi_highway_type": {
        "api_name": "highway_type",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_highway_type(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param integer lat:  defaults to 40.409246\n    :param integer lon:  defaults to -3.677144\n    :param string apikey:  defaults to YOUR_API_KEY\n    '''\n    return await self._request_rapid_api('rapi_mymappi_highway_type',kwargs)\n        "
    },
    "rapi_mymappi_speed_limit": {
        "api_name": "speed_limit",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_speed_limit(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param integer lat:  defaults to 40.409246\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param integer lon:  defaults to -3.677144\n    '''\n    return await self._request_rapid_api('rapi_mymappi_speed_limit',kwargs)\n        "
    },
    "rapi_mymappi_route_calculation": {
        "api_name": "route_calculation",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_route_calculation(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param string dest:  defaults to 40.428924,-3.651969\n    :param string profile:  defaults to car\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param string orig:  defaults to 40.409246,-3.677144\n    :param string? wps:  defaults to 40.416906,-3.678286;40.420252,-3.673561;40.426746,-3.671467\n    :param boolean? steps:  defaults to true\n    :param boolean? alternatives:  defaults to false\n    :param string? geometries:  defaults to polyline\n    :param string? overview:  defaults to simplified\n    '''\n    return await self._request_rapid_api('rapi_mymappi_route_calculation',kwargs)\n        "
    },
    "rapi_mymappi_traveling_salesman": {
        "api_name": "traveling_salesman",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_traveling_salesman(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param string coordinates:  defaults to 40.427772,-3.714630;40.407348,-3.710520;40.461178,-3.676533;40.441933,-3.650275;40.434914,-3.697337;40.451737,-3.683682\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param string profile:  defaults to car\n    :param string? overview:  defaults to simplified\n    :param boolean? roundtrip: \n    :param string? destination:  defaults to any\n    :param string? source:  defaults to any\n    :param string? geometries:  defaults to polyline\n    :param boolean? steps:  defaults to True\n    '''\n    return await self._request_rapid_api('rapi_mymappi_traveling_salesman',kwargs)\n        "
    },
    "rapi_mymappi_isochrone": {
        "api_name": "isochrone",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_isochrone(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param integer lon:  defaults to -3.703823\n    :param string max_time:  defaults to 600,1200\n    :param string profile:  defaults to car\n    :param integer lat:  defaults to 40.4166314\n    :param string apikey:  defaults to YOUR_API_KEY\n    '''\n    return await self._request_rapid_api('rapi_mymappi_isochrone',kwargs)\n        "
    },
    "rapi_mymappi_distance_matrix": {
        "api_name": "distance_matrix",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_distance_matrix(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param string profile:  defaults to car\n    :param string coordinates:  defaults to 40.427772,-3.714630;40.407348,-3.710520;40.461178,-3.676533;40.441933,-3.650275;40.434914,-3.697337;40.451737,-3.683682\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param string? destinations:  defaults to 3;4;5\n    :param string? annotations:  defaults to duration,distance\n    :param string? sources:  defaults to 0;1;2\n    '''\n    return await self._request_rapid_api('rapi_mymappi_distance_matrix',kwargs)\n        "
    },
    "rapi_mymappi_transit": {
        "api_name": "transit",
        "category": "Location",
        "tool_name": "mymappi",
        "code": "async def rapi_mymappi_transit(self,*args,**kwargs):\n    '''REST Location APIs such as Geocoding, Roads, Directions and Places.\n    \n    \n\n    :param string dest:  defaults to 40.428924,-3.651969\n    :param boolean arrive_by:  defaults to false\n    :param string orig:  defaults to 40.409246,-3.677144\n    :param string apikey:  defaults to YOUR_API_KEY\n    :param string? max_walk_distance:  defaults to 500\n    :param string? time:  defaults to 1:02pm\n    :param string? date:  defaults to 04-21-2020\n    '''\n    return await self._request_rapid_api('rapi_mymappi_transit',kwargs)\n        "
    },
    "rapi_locations_languages_countries_german_cities_all_languages": {
        "api_name": "all_languages",
        "category": "Location",
        "tool_name": "locations_languages_countries_german_cities",
        "code": "async def rapi_locations_languages_countries_german_cities_all_languages(self,*args,**kwargs):\n    '''API to request information about Languages, Countries and German Citites\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_locations_languages_countries_german_cities_all_languages',kwargs)\n        "
    },
    "rapi_viet_nam_administrative_divisions_get_all_cities_in_vietnam": {
        "api_name": "get_all_cities_in_vietnam",
        "category": "Location",
        "tool_name": "viet_nam_administrative_divisions",
        "code": "async def rapi_viet_nam_administrative_divisions_get_all_cities_in_vietnam(self,*args,**kwargs):\n    '''Online API for Viet Nam administrative divisions\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_viet_nam_administrative_divisions_get_all_cities_in_vietnam',kwargs)\n        "
    },
    "rapi_ip_address_tracker_free_auto_ip_lookup": {
        "api_name": "auto_ip_lookup",
        "category": "Location",
        "tool_name": "ip_address_tracker_free",
        "code": "async def rapi_ip_address_tracker_free_auto_ip_lookup(self,*args,**kwargs):\n    '''This is a free service that will get you the ip geographical location information of your user.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ip_address_tracker_free_auto_ip_lookup',kwargs)\n        "
    },
    "rapi_nearby_tesla_superchargers_nearby_superchargers": {
        "api_name": "nearby_superchargers",
        "category": "Location",
        "tool_name": "nearby_tesla_superchargers",
        "code": "async def rapi_nearby_tesla_superchargers_nearby_superchargers(self,*args,**kwargs):\n    '''Find nearby Tesla Superchargers. Global.\n    \n    \n\n    :param integer lng:  defaults to -122.348906\n    :param integer lat:  defaults to 47.619957\n    :param integer? radius: Kilometers. Default = 25. Max = 50. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_nearby_tesla_superchargers_nearby_superchargers',kwargs)\n        "
    },
    "rapi_uk_postcode_getpostcode": {
        "api_name": "getpostcode",
        "category": "Location",
        "tool_name": "uk_postcode",
        "code": "async def rapi_uk_postcode_getpostcode(self,*args,**kwargs):\n    '''Integrate this API with your website's address form to quickly and accurately auto-fill UK postal addresses or find locations of addresses. This API contains a database of almost 1.7 million UK postcodes, along with address and location information.\n\nFor a simple demo, visit https://tomwimmenhove.com/ukpostcode/\n    \n    \n\n    :param string postcode: An exact match for the post code to be queried defaults to SW1A2AA\n    '''\n    return await self._request_rapid_api('rapi_uk_postcode_getpostcode',kwargs)\n        "
    },
    "rapi_kfc_locations_get_by_id": {
        "api_name": "get_by_id",
        "category": "Location",
        "tool_name": "kfc_locations",
        "code": "async def rapi_kfc_locations_get_by_id(self,*args,**kwargs):\n    '''Get the list of all KFC locations.\n    \n    \n\n    :param string id:  defaults to kfc62790694\n    :param string? id:  defaults to kfc62790694\n    '''\n    return await self._request_rapid_api('rapi_kfc_locations_get_by_id',kwargs)\n        "
    },
    "rapi_virtual_number_get_all_countries": {
        "api_name": "get_all_countries",
        "category": "SMS",
        "tool_name": "virtual_number",
        "code": "async def rapi_virtual_number_get_all_countries(self,*args,**kwargs):\n    '''Receive SMS for phone verification\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_virtual_number_get_all_countries',kwargs)\n        "
    },
    "rapi_virtual_number_view_sms_history": {
        "api_name": "view_sms_history",
        "category": "SMS",
        "tool_name": "virtual_number",
        "code": "async def rapi_virtual_number_view_sms_history(self,*args,**kwargs):\n    '''Receive SMS for phone verification\n    \n    \n\n    :param string number:  defaults to 79034134722\n    :param string countryId:  defaults to 7\n    '''\n    return await self._request_rapid_api('rapi_virtual_number_view_sms_history',kwargs)\n        "
    },
    "rapi_zigatext_global_bulk_sms_otp_fetch_birthday_groups": {
        "api_name": "fetch_birthday_groups",
        "category": "SMS",
        "tool_name": "zigatext_global_bulk_sms_otp",
        "code": "async def rapi_zigatext_global_bulk_sms_otp_fetch_birthday_groups(self,*args,**kwargs):\n    '''Experience the power of efficient, targeted, and personalized SMS communication with Zigatext. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_zigatext_global_bulk_sms_otp_fetch_birthday_groups',kwargs)\n        "
    },
    "rapi_branded_sms_pakistan_send_message_to_multiple_numbers": {
        "api_name": "send_message_to_multiple_numbers",
        "category": "SMS",
        "tool_name": "branded_sms_pakistan",
        "code": "async def rapi_branded_sms_pakistan_send_message_to_multiple_numbers(self,*args,**kwargs):\n    '''Branded SMS Pakistan provide Mask or Short Code Messaging Gateway in Pakistan\n    \n    \n\n    :param string to: Destination Number (Default Format) 923151231016 defaults to 923151231015, 923151231016\n    :param string key: Account API Key defaults to 6014c421fd3dc1185d2b0603b41\n    :param string mask: Masking (Branded Name) defaults to H3 TEST SMS\n    :param string email: Account Email Address defaults to hello@brandedsmspakistan.com\n    :param string message: Message Limited to 640 characters defaults to Hello I am sending test message\n    :param boolean? status: Return Message ID\n    '''\n    return await self._request_rapid_api('rapi_branded_sms_pakistan_send_message_to_multiple_numbers',kwargs)\n        "
    },
    "rapi_branded_sms_pakistan_send_single_message": {
        "api_name": "send_single_message",
        "category": "SMS",
        "tool_name": "branded_sms_pakistan",
        "code": "async def rapi_branded_sms_pakistan_send_single_message(self,*args,**kwargs):\n    '''Branded SMS Pakistan provide Mask or Short Code Messaging Gateway in Pakistan\n    \n    \n\n    :param string message: Message Limited to 640 characters defaults to Hello I am sending test message\n    :param string mask: Masking (Branded Name) defaults to H3 TEST SMS\n    :param integer to: Destination Number (Default Format) 923151231016 defaults to 923151231015\n    :param string email: Account Email Address defaults to hello@brandedsmspakistan.com\n    :param string key: Account API Key defaults to 6014c421fd3dc1185d2b0603b41\n    :param boolean? status: Return Message ID\n    '''\n    return await self._request_rapid_api('rapi_branded_sms_pakistan_send_single_message',kwargs)\n        "
    },
    "rapi_d7_verify_get_otp_status": {
        "api_name": "get_otp_status",
        "category": "SMS",
        "tool_name": "d7_verify",
        "code": "async def rapi_d7_verify_get_otp_status(self,*args,**kwargs):\n    '''Elevate your verification process to new heights with D7 Verifier API - the ultimate solution for phone number verification!\n    \n    \n\n    :param string otp_id: The otp_ id which was returned from **Send OTP** endpoint\n    '''\n    return await self._request_rapid_api('rapi_d7_verify_get_otp_status',kwargs)\n        "
    },
    "rapi_d7_verify_check_balance": {
        "api_name": "check_balance",
        "category": "SMS",
        "tool_name": "d7_verify",
        "code": "async def rapi_d7_verify_check_balance(self,*args,**kwargs):\n    '''Elevate your verification process to new heights with D7 Verifier API - the ultimate solution for phone number verification!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_d7_verify_check_balance',kwargs)\n        "
    },
    "rapi_smsto_get_messages": {
        "api_name": "get_messages",
        "category": "SMS",
        "tool_name": "smsto",
        "code": "async def rapi_smsto_get_messages(self,*args,**kwargs):\n    '''Implement SMS notifications, OTP, reminders, etc. into your workflow and build apps that send SMS with our redundant SSL SMS API.\n    \n    \n\n    :param string? created_at: Filter by created at defaults to 2022-08-19\n    :param string? order_by: Field to sort by defaults to created_at\n    :param string? to: Filter by recipient number defaults to +3579865333\n    :param string? order_direction: Sort messages. defaults to desc\n    :param string? status: Filter by status defaults to REJECTED\n    :param integer? limit: The number of messages per page. defaults to 15\n    '''\n    return await self._request_rapid_api('rapi_smsto_get_messages',kwargs)\n        "
    },
    "rapi_rivet_sms_sent_message_status": {
        "api_name": "sent_message_status",
        "category": "SMS",
        "tool_name": "rivet_sms",
        "code": "async def rapi_rivet_sms_sent_message_status(self,*args,**kwargs):\n    '''Rivet SMS API offers programmable SMS APIs, so you can get maximum value from your messages. Use our APIs to send single, bulk messages , schedule broadcasts, configure/ triggers messages and much more.\n    \n    \n\n    :param string ClientId: Use Rivet SMS API client Id(You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to client id\n    :param string ApiKey: Use Rivet SMS API API key (You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to api key\n    :param string MessageId: Id of the message for which you need its status. defaults to message id\n    '''\n    return await self._request_rapid_api('rapi_rivet_sms_sent_message_status',kwargs)\n        "
    },
    "rapi_rivet_sms_get_sender_id": {
        "api_name": "get_sender_id",
        "category": "SMS",
        "tool_name": "rivet_sms",
        "code": "async def rapi_rivet_sms_get_sender_id(self,*args,**kwargs):\n    '''Rivet SMS API offers programmable SMS APIs, so you can get maximum value from your messages. Use our APIs to send single, bulk messages , schedule broadcasts, configure/ triggers messages and much more.\n    \n    \n\n    :param string ClientId: You can get the Client ID at https://app.rivet.solutions/ApiDocument/ApiDocs, once your account is created. defaults to clientid\n    :param string ApiKey: You can get the API key at https://app.rivet.solutions/ApiDocument/ApiDocs, once your account is created. defaults to apikey\n    '''\n    return await self._request_rapid_api('rapi_rivet_sms_get_sender_id',kwargs)\n        "
    },
    "rapi_rivet_sms_bulk_sms": {
        "api_name": "bulk_sms",
        "category": "SMS",
        "tool_name": "rivet_sms",
        "code": "async def rapi_rivet_sms_bulk_sms(self,*args,**kwargs):\n    '''Rivet SMS API offers programmable SMS APIs, so you can get maximum value from your messages. Use our APIs to send single, bulk messages , schedule broadcasts, configure/ triggers messages and much more.\n    \n    \n\n    :param string SenderId: Registered sender ID. defaults to sender id\n    :param string MobileNumber_Message: sample: 9138764782364^message1~91344873637^message2~916846465464^message3 defaults to mobilenumber_message\n    :param string ApiKey: Use Rivet SMS API API key (You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to api key\n    :param string ClientId: Use Rivet SMS API client Id(You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to client id\n    :param string? Is_Flash: Is_Flash is true or false for flash message\n    :param string? ScheduleTime: Date in yyyy-MM-dd HH:MM (only for schedule message)\n    :param string? Is_Unicode: Is_Unicode is true ,if the message is unicode message else  false for non-unicode message\n    '''\n    return await self._request_rapid_api('rapi_rivet_sms_bulk_sms',kwargs)\n        "
    },
    "rapi_rivet_sms_sendsms": {
        "api_name": "sendsms",
        "category": "SMS",
        "tool_name": "rivet_sms",
        "code": "async def rapi_rivet_sms_sendsms(self,*args,**kwargs):\n    '''Rivet SMS API offers programmable SMS APIs, so you can get maximum value from your messages. Use our APIs to send single, bulk messages , schedule broadcasts, configure/ triggers messages and much more.\n    \n    \n\n    :param string SenderId: Use  Rivet SMS  sender ID that is assigned to you (You can get it from https://app.rivet.solutions/Management/ManageSenderID) defaults to sender id\n    :param string ClientId: Use  Rivet SMS API client ID (You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to client id\n    :param string MobileNumbers: Recipient number \u2013  numbers in format - 971 223344566(please enter mobile number with country code, without preceding 00 or +). Multiple recipients can be specified separated by commas. defaults to 971009900990\n    :param string Message: Write the content of your SMS  defaults to your message\n    :param string ApiKey: Use  Rivet SMS API API key (You can get it from https://app.rivet.solutions/ApiDocument/ApiDocs#) defaults to api key\n    :param boolean? Is_Unicode: Boolean value : Is_Unicode is true for unicode message else false.\n    :param string? ScheduleTime: Date in yyyy-MM-dd HH:MM (only for schedule message)\n    :param string? GroupId: Valid group-id of current user (only for group message otherwise leave empty string)\n    :param boolean? Is_Flash: Boolean value: True if flash message else false.\n    '''\n    return await self._request_rapid_api('rapi_rivet_sms_sendsms',kwargs)\n        "
    },
    "rapi_phonenumbervalidatefree_validate": {
        "api_name": "validate",
        "category": "SMS",
        "tool_name": "phonenumbervalidatefree",
        "code": "async def rapi_phonenumbervalidatefree_validate(self,*args,**kwargs):\n    '''Free and easy. Validate any phone number, from any country.\nGet type of number (for example, fixed line or mobile), the location of the number, and also reformat the number into local and international dialing formats.\n    \n    \n\n    :param string number: 1_ Option: local format (without prefix):\nExample: 94887799\n\n2_ Option: format E 164:\nRecommended: starting with symbol + followed by country prefix and number, without blank spaces\nRemark: the + symbol in a url is escaped for the text %2B leaving %2B59894887799\nExample: +59894887799 \n\n1_ Opci\u00f3n: formato local (sin prefijo):\nEjemplo: 94887799\n\n2_ Opci\u00f3n: formato E 164:\nRecomendado: comenzando con s\u00edmbolo + seguido de prefijo pa\u00eds y n\u00famero, sin espacios en blanco\nObservaci\u00f3n: el s\u00edmbolo + en una url se escapea para el texto %2B quedando %2B59894887799\nEjemplo: +59894887799 defaults to +59894887799\n    :param string? country: Format: ISO 3166-1 alpha-2 code\nRemark: in capital letters.\nOptional if the number parameter starts with the + symbol \n\nFormato: ISO 3166-1 alpha-2 code\nObservaci\u00f3n: en may\u00fasculas.\nOpcional si el parametro number comienza con el s\u00edmbolo + defaults to UY\n    '''\n    return await self._request_rapid_api('rapi_phonenumbervalidatefree_validate',kwargs)\n        "
    },
    "rapi_d7sms_get_otp_status": {
        "api_name": "get_otp_status",
        "category": "SMS",
        "tool_name": "d7sms",
        "code": "async def rapi_d7sms_get_otp_status(self,*args,**kwargs):\n    '''Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access\n    \n    \n\n    :param string otp_id: The otp_ id which was returned from **Send OTP** endpoint\n    '''\n    return await self._request_rapid_api('rapi_d7sms_get_otp_status',kwargs)\n        "
    },
    "rapi_d7sms_get_message_status": {
        "api_name": "get_message_status",
        "category": "SMS",
        "tool_name": "d7sms",
        "code": "async def rapi_d7sms_get_message_status(self,*args,**kwargs):\n    '''Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access\n    \n    \n\n    :param string request_id: The Request id which was returned from **Send Message** endpoint\n    '''\n    return await self._request_rapid_api('rapi_d7sms_get_message_status',kwargs)\n        "
    },
    "rapi_d7sms_d7api_check_balance": {
        "api_name": "d7api_check_balance",
        "category": "SMS",
        "tool_name": "d7sms",
        "code": "async def rapi_d7sms_d7api_check_balance(self,*args,**kwargs):\n    '''Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_d7sms_d7api_check_balance',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v3_get_tiktok_video_info": {
        "api_name": "get_tiktok_video_info",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v3",
        "code": "async def rapi_tiktok_video_no_watermark_v3_get_tiktok_video_info(self,*args,**kwargs):\n    '''Fast \u2026 Stable \u2026 Without Watermark APi gives you full info about tiktok posts and videos without watermark\n\nFastest Tiktok API with response video without watermark, music, cover, and more!\nready to handle huge amount of requests with error rates below 1%\npowered by strong servers\nAll kinds of TikTok links are supported (:\nThe API does not depend on any external services and it is entirely private\n    \n    \n\n    :param string url: use tiktok id: 7213756991653547269 \nor https://vm.tiktok.com/ZTRvK8Fn4/\nor https://www.tiktok.com/@tiktok/video/7213756991653547269 defaults to https://vm.tiktok.com/ZTRvK8Fn4/\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v3_get_tiktok_video_info',kwargs)\n        "
    },
    "rapi_tiktok_private_api_api_userinfo": {
        "api_name": "api_userinfo",
        "category": "Social",
        "tool_name": "tiktok_private_api",
        "code": "async def rapi_tiktok_private_api_api_userinfo(self,*args,**kwargs):\n    '''Get and analyze TikTok users and videos data.\n    \n    \n\n    :param string id:  defaults to 6867450947363636225\n    '''\n    return await self._request_rapid_api('rapi_tiktok_private_api_api_userinfo',kwargs)\n        "
    },
    "rapi_zodiac_sign_api_getallsign": {
        "api_name": "getallsign",
        "category": "Social",
        "tool_name": "zodiac_sign_api",
        "code": "async def rapi_zodiac_sign_api_getallsign(self,*args,**kwargs):\n    '''Gives data on Zodiac signs, their personality traits and dates\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_zodiac_sign_api_getallsign',kwargs)\n        "
    },
    "rapi_zodiac_sign_api_searchzodiacbysign": {
        "api_name": "searchzodiacbysign",
        "category": "Social",
        "tool_name": "zodiac_sign_api",
        "code": "async def rapi_zodiac_sign_api_searchzodiacbysign(self,*args,**kwargs):\n    '''Gives data on Zodiac signs, their personality traits and dates\n    \n    \n\n    :param string sign: Ensure the first letter of the value is in capital letter defaults to Gemini\n    '''\n    return await self._request_rapid_api('rapi_zodiac_sign_api_searchzodiacbysign',kwargs)\n        "
    },
    "rapi_hashtag_trending_tags_from_country": {
        "api_name": "trending_tags_from_country",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_trending_tags_from_country(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    :param string country_name:  defaults to United States\n    '''\n    return await self._request_rapid_api('rapi_hashtag_trending_tags_from_country',kwargs)\n        "
    },
    "rapi_hashtag_trending_countries_list": {
        "api_name": "trending_countries_list",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_trending_countries_list(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hashtag_trending_countries_list',kwargs)\n        "
    },
    "rapi_hashtag_trending_tags": {
        "api_name": "trending_tags",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_trending_tags(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hashtag_trending_tags',kwargs)\n        "
    },
    "rapi_hashtag_category_tags": {
        "api_name": "category_tags",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_category_tags(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    :param string id:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_hashtag_category_tags',kwargs)\n        "
    },
    "rapi_hashtag_categories": {
        "api_name": "categories",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_categories(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hashtag_categories',kwargs)\n        "
    },
    "rapi_hashtag_similar_hashtags": {
        "api_name": "similar_hashtags",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_similar_hashtags(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    :param string keyword:  defaults to insta\n    '''\n    return await self._request_rapid_api('rapi_hashtag_similar_hashtags',kwargs)\n        "
    },
    "rapi_hashtag_post_count": {
        "api_name": "post_count",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_post_count(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    :param string tag:  defaults to insta\n    '''\n    return await self._request_rapid_api('rapi_hashtag_post_count',kwargs)\n        "
    },
    "rapi_hashtag_top_hashtags": {
        "api_name": "top_hashtags",
        "category": "Social",
        "tool_name": "hashtag",
        "code": "async def rapi_hashtag_top_hashtags(self,*args,**kwargs):\n    '''Generate hashtags based on image, text and get the post count detail of that hashtag.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hashtag_top_hashtags',kwargs)\n        "
    },
    "rapi_instagram_hashtags_generate": {
        "api_name": "generate",
        "category": "Social",
        "tool_name": "instagram_hashtags",
        "code": "async def rapi_instagram_hashtags_generate(self,*args,**kwargs):\n    '''Hashtag Generator API - Generate up to 35 times free hashtags  everyday.\nFor private plans, custom plans, custom billing contact : info@getecz.com\n\n\n\n    \n    \n\n    :param string keyword:  defaults to nature\n    '''\n    return await self._request_rapid_api('rapi_instagram_hashtags_generate',kwargs)\n        "
    },
    "rapi_instagram_pro_following_by_username": {
        "api_name": "following_by_username",
        "category": "Social",
        "tool_name": "instagram_pro",
        "code": "async def rapi_instagram_pro_following_by_username(self,*args,**kwargs):\n    '''Insatgram API Pro Version\n    \n    \n\n    :param string username:  defaults to therock\n    :param string? corsEnabled: \n    :param string? nextMaxId: \n    '''\n    return await self._request_rapid_api('rapi_instagram_pro_following_by_username',kwargs)\n        "
    },
    "rapi_instagram_pro_followers_by_username": {
        "api_name": "followers_by_username",
        "category": "Social",
        "tool_name": "instagram_pro",
        "code": "async def rapi_instagram_pro_followers_by_username(self,*args,**kwargs):\n    '''Insatgram API Pro Version\n    \n    \n\n    :param string username:  defaults to therock\n    :param string? nextMaxId: \n    :param string? corsEnabled: \n    '''\n    return await self._request_rapid_api('rapi_instagram_pro_followers_by_username',kwargs)\n        "
    },
    "rapi_instagram_pro_advance_profile": {
        "api_name": "advance_profile",
        "category": "Social",
        "tool_name": "instagram_pro",
        "code": "async def rapi_instagram_pro_advance_profile(self,*args,**kwargs):\n    '''Insatgram API Pro Version\n    \n    \n\n    :param string ig:  defaults to therock\n    :param string response_type:  defaults to info\n    :param string? corsEnabled:  defaults to false\n    '''\n    return await self._request_rapid_api('rapi_instagram_pro_advance_profile',kwargs)\n        "
    },
    "rapi_twitter_v4_user_by_rest_id": {
        "api_name": "user_by_rest_id",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_user_by_rest_id(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID defaults to 44196397\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_user_by_rest_id',kwargs)\n        "
    },
    "rapi_twitter_v4_tweet_retweeters": {
        "api_name": "tweet_retweeters",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_tweet_retweeters(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: Tweet ID defaults to 1485953263040188416\n    :param integer? count: Number of results defaults to 20\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_tweet_retweeters',kwargs)\n        "
    },
    "rapi_twitter_v4_tweet_favoriters": {
        "api_name": "tweet_favoriters",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_tweet_favoriters(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: Tweet ID defaults to 1485953263040188416\n    :param integer? count: Number of results defaults to 20\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_tweet_favoriters',kwargs)\n        "
    },
    "rapi_twitter_v4_user_media": {
        "api_name": "user_media",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_user_media(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username. defaults to 44196397\n    :param integer? count: Number of results defaults to 20\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_user_media',kwargs)\n        "
    },
    "rapi_twitter_v4_user_followers": {
        "api_name": "user_followers",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_user_followers(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username. defaults to 44196397\n    :param string? cursor: Cursor for other results\n    :param integer? count: Number of results defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_user_followers',kwargs)\n        "
    },
    "rapi_twitter_v4_v2_user_tweets_replies": {
        "api_name": "v2_user_tweets_replies",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_v2_user_tweets_replies(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username. defaults to 44196397\n    :param integer? count: Number of results defaults to 40\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_v2_user_tweets_replies',kwargs)\n        "
    },
    "rapi_twitter_v4_tweet_detail_conversation": {
        "api_name": "tweet_detail_conversation",
        "category": "Social",
        "tool_name": "twitter_v4",
        "code": "async def rapi_twitter_v4_tweet_detail_conversation(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: Tweet ID defaults to 1485953263040188416\n    :param string? cursor: Cursor for other results\n    '''\n    return await self._request_rapid_api('rapi_twitter_v4_tweet_detail_conversation',kwargs)\n        "
    },
    "rapi_mescalc_get_misinformation_score_account_twitter_account_get": {
        "api_name": "get_misinformation_score_account_twitter_account_get",
        "category": "Social",
        "tool_name": "mescalc",
        "code": "async def rapi_mescalc_get_misinformation_score_account_twitter_account_get(self,*args,**kwargs):\n    '''Calculates Misinformation Exposure Score for Twitter accounts\n    \n    \n\n    :param object twitter_account:  defaults to {}\n    '''\n    return await self._request_rapid_api('rapi_mescalc_get_misinformation_score_account_twitter_account_get',kwargs)\n        "
    },
    "rapi_instagram_looter_get_media_info_by_url": {
        "api_name": "get_media_info_by_url",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_media_info_by_url(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param string link:  defaults to https://www.instagram.com/p/CqIbCzYMi5C/\n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_media_info_by_url',kwargs)\n        "
    },
    "rapi_instagram_looter_get_media_download_link": {
        "api_name": "get_media_download_link",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_media_download_link(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param string link:  defaults to https://www.instagram.com/p/CqIbCzYMi5C/\n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_media_download_link',kwargs)\n        "
    },
    "rapi_instagram_looter_get_user_related_profiles_by_user_id": {
        "api_name": "get_user_related_profiles_by_user_id",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_user_related_profiles_by_user_id(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param integer id:  defaults to 18527\n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_user_related_profiles_by_user_id',kwargs)\n        "
    },
    "rapi_instagram_looter_global_search_by_query": {
        "api_name": "global_search_by_query",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_global_search_by_query(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param string query:  defaults to iq\n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_global_search_by_query',kwargs)\n        "
    },
    "rapi_instagram_looter_get_hashtag_media_by_query": {
        "api_name": "get_hashtag_media_by_query",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_hashtag_media_by_query(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param integer count:  defaults to 12\n    :param string query:  defaults to iq\n    :param string? end_cursor: \n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_hashtag_media_by_query',kwargs)\n        "
    },
    "rapi_instagram_looter_get_user_media_by_user_id": {
        "api_name": "get_user_media_by_user_id",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_user_media_by_user_id(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param integer count:  defaults to 12\n    :param integer id:  defaults to 18527\n    :param string? end_cursor: \n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_user_media_by_user_id',kwargs)\n        "
    },
    "rapi_instagram_looter_get_user_info_by_user_id": {
        "api_name": "get_user_info_by_user_id",
        "category": "Social",
        "tool_name": "instagram_looter",
        "code": "async def rapi_instagram_looter_get_user_info_by_user_id(self,*args,**kwargs):\n    '''Get information from Instagram accurately and quickly! Smart request filtering for 100% response.\n    \n    \n\n    :param integer id:  defaults to 18527\n    '''\n    return await self._request_rapid_api('rapi_instagram_looter_get_user_info_by_user_id',kwargs)\n        "
    },
    "rapi_conversation_starters_api_random": {
        "api_name": "random",
        "category": "Social",
        "tool_name": "conversation_starters_api",
        "code": "async def rapi_conversation_starters_api_random(self,*args,**kwargs):\n    '''Get a random conversation starter\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_conversation_starters_api_random',kwargs)\n        "
    },
    "rapi_tiktok_video_downloader_download_tiktok_video": {
        "api_name": "download_tiktok_video",
        "category": "Social",
        "tool_name": "tiktok_video_downloader",
        "code": "async def rapi_tiktok_video_downloader_download_tiktok_video(self,*args,**kwargs):\n    '''Simple and Lightweight Api to Download TikTok Videos Easily.\n    \n    \n\n    :param string url:  defaults to https://www.tiktok.com/@world_dawgxx/video/7228270440354204974?is_from_webapp=1&sender_device=mobile&sender_web_id=7166870640249718273\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_downloader_download_tiktok_video',kwargs)\n        "
    },
    "rapi_instagram_cheapest_userinfo": {
        "api_name": "userinfo",
        "category": "Social",
        "tool_name": "instagram_cheapest",
        "code": "async def rapi_instagram_cheapest_userinfo(self,*args,**kwargs):\n    '''2023\uff0cReal-time and cheapest Instagram data API\uff0craw json\u3002\u6700\u4fbf\u5b9c\u7684instagram api\n    \n    \n\n    :param string username:  defaults to nike\n    '''\n    return await self._request_rapid_api('rapi_instagram_cheapest_userinfo',kwargs)\n        "
    },
    "rapi_social_media_data_tt_trending_feed_video_posts_v2": {
        "api_name": "trending_feed_video_posts_v2",
        "category": "Social",
        "tool_name": "social_media_data_tt",
        "code": "async def rapi_social_media_data_tt_trending_feed_video_posts_v2(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.  -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param integer? limit: Limit the output number of records. \n\n- Default is 12\n- Max number is 12\n\n    :param integer? max_cursor: Pagination cursor. \nTo get next batch of videos, paste here **max_cursor** value that you have received in previous request response.\n    '''\n    return await self._request_rapid_api('rapi_social_media_data_tt_trending_feed_video_posts_v2',kwargs)\n        "
    },
    "rapi_social_media_data_tt_user_feed_video_posts": {
        "api_name": "user_feed_video_posts",
        "category": "Social",
        "tool_name": "social_media_data_tt",
        "code": "async def rapi_social_media_data_tt_user_feed_video_posts(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.  -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string? username: The influencer username. For example: **charlidamelio**\n\n- **NOTE:** By using **sec_uid** instead of the **username** request will be executed faster\n- To use **sec_uid** use input field **BELOW** defaults to amazon\n    :param integer? limit: Limit the output number of records. \n\n- Default is 100\n- Max number is 500\n\n    :param integer? max_cursor: Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.\n    :param string? sec_uid: **NOTE:** By using **sec_uid**, request will be executed faster then if you will use username\n\n**NOTE:** **sec_uid** can be obtained from the **User Information** endpoint\n\n**NOTE:** **sec_uid** example: MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\n    :param string? country: \n    '''\n    return await self._request_rapid_api('rapi_social_media_data_tt_user_feed_video_posts',kwargs)\n        "
    },
    "rapi_social_media_data_tt_direct_post_url": {
        "api_name": "direct_post_url",
        "category": "Social",
        "tool_name": "social_media_data_tt",
        "code": "async def rapi_social_media_data_tt_direct_post_url(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.  -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string video: \n    '''\n    return await self._request_rapid_api('rapi_social_media_data_tt_direct_post_url',kwargs)\n        "
    },
    "rapi_social_media_data_tt_video_post_metadata": {
        "api_name": "video_post_metadata",
        "category": "Social",
        "tool_name": "social_media_data_tt",
        "code": "async def rapi_social_media_data_tt_video_post_metadata(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.  -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string video: Post url\n    '''\n    return await self._request_rapid_api('rapi_social_media_data_tt_video_post_metadata',kwargs)\n        "
    },
    "rapi_geeklist_get_authenticated_users_contributions": {
        "api_name": "get_authenticated_users_contributions",
        "category": "Social",
        "tool_name": "geeklist",
        "code": "async def rapi_geeklist_get_authenticated_users_contributions(self,*args,**kwargs):\n    '''The first social network for developers and the tech community.\n    \n    \n\n    :param string? featured: Returns only featured cards for user (only for cards and not contribs).\n    '''\n    return await self._request_rapid_api('rapi_geeklist_get_authenticated_users_contributions',kwargs)\n        "
    },
    "rapi_quotes_api_get_quotes_by_source": {
        "api_name": "get_quotes_by_source",
        "category": "Social",
        "tool_name": "quotes_api",
        "code": "async def rapi_quotes_api_get_quotes_by_source(self,*args,**kwargs):\n    '''The Quotes API is a powerful and comprehensive resource, providing access to over 190,000 unique quotes spanning a wide range of topics and sources. Designed with user experience and versatility in mind, the API offers a variety of endpoints to cater to different use cases and requirements, making it an ideal choice for developers, content creators, and enthusiasts alike.\n    \n    \n\n    :param string source: \n    '''\n    return await self._request_rapid_api('rapi_quotes_api_get_quotes_by_source',kwargs)\n        "
    },
    "rapi_quotes_api_get_random_quote": {
        "api_name": "get_random_quote",
        "category": "Social",
        "tool_name": "quotes_api",
        "code": "async def rapi_quotes_api_get_random_quote(self,*args,**kwargs):\n    '''The Quotes API is a powerful and comprehensive resource, providing access to over 190,000 unique quotes spanning a wide range of topics and sources. Designed with user experience and versatility in mind, the API offers a variety of endpoints to cater to different use cases and requirements, making it an ideal choice for developers, content creators, and enthusiasts alike.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotes_api_get_random_quote',kwargs)\n        "
    },
    "rapi_instagram_v6_hashtagmedias": {
        "api_name": "hashtagmedias",
        "category": "Social",
        "tool_name": "instagram_v6",
        "code": "async def rapi_instagram_v6_hashtagmedias(self,*args,**kwargs):\n    '''instagram api\n    \n    \n\n    :param string hash_tag:  defaults to cat\n    :param string? next_cursor: \n    '''\n    return await self._request_rapid_api('rapi_instagram_v6_hashtagmedias',kwargs)\n        "
    },
    "rapi_instagram_v6_mediainfo": {
        "api_name": "mediainfo",
        "category": "Social",
        "tool_name": "instagram_v6",
        "code": "async def rapi_instagram_v6_mediainfo(self,*args,**kwargs):\n    '''instagram api\n    \n    \n\n    :param string short_code:  defaults to CA_ifcxMjFR\n    '''\n    return await self._request_rapid_api('rapi_instagram_v6_mediainfo',kwargs)\n        "
    },
    "rapi_instagram_v6_medialikers": {
        "api_name": "medialikers",
        "category": "Social",
        "tool_name": "instagram_v6",
        "code": "async def rapi_instagram_v6_medialikers(self,*args,**kwargs):\n    '''instagram api\n    \n    \n\n    :param string short_code:  defaults to CB_B4z_s-0r\n    :param string? next_cursor: \n    :param integer? batch_size: Range from 1 to 50. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_instagram_v6_medialikers',kwargs)\n        "
    },
    "rapi_instagram_v6_followers": {
        "api_name": "followers",
        "category": "Social",
        "tool_name": "instagram_v6",
        "code": "async def rapi_instagram_v6_followers(self,*args,**kwargs):\n    '''instagram api\n    \n    \n\n    :param string user_id:  defaults to 25025320\n    :param integer? batch_size: Custom value can only be set by paying user. defaults to 20\n    :param string? next_cursor: \n    '''\n    return await self._request_rapid_api('rapi_instagram_v6_followers',kwargs)\n        "
    },
    "rapi_instagram_profile_get_highlight_item": {
        "api_name": "get_highlight_item",
        "category": "Social",
        "tool_name": "instagram_profile",
        "code": "async def rapi_instagram_profile_get_highlight_item(self,*args,**kwargs):\n    '''Get profile information with proxy image will show directly to your frontend\n    \n    \n\n    :param string id:  defaults to 17934390836227915\n    '''\n    return await self._request_rapid_api('rapi_instagram_profile_get_highlight_item',kwargs)\n        "
    },
    "rapi_instagram_profile_get_highlights": {
        "api_name": "get_highlights",
        "category": "Social",
        "tool_name": "instagram_profile",
        "code": "async def rapi_instagram_profile_get_highlights(self,*args,**kwargs):\n    '''Get profile information with proxy image will show directly to your frontend\n    \n    \n\n    :param string username:  defaults to therock\n    '''\n    return await self._request_rapid_api('rapi_instagram_profile_get_highlights',kwargs)\n        "
    },
    "rapi_instagram_profile_get_following_by_id": {
        "api_name": "get_following_by_id",
        "category": "Social",
        "tool_name": "instagram_profile",
        "code": "async def rapi_instagram_profile_get_following_by_id(self,*args,**kwargs):\n    '''Get profile information with proxy image will show directly to your frontend\n    \n    \n\n    :param string id:  defaults to 232192182\n    '''\n    return await self._request_rapid_api('rapi_instagram_profile_get_following_by_id',kwargs)\n        "
    },
    "rapi_instagram_profile_get_followers_by_username": {
        "api_name": "get_followers_by_username",
        "category": "Social",
        "tool_name": "instagram_profile",
        "code": "async def rapi_instagram_profile_get_followers_by_username(self,*args,**kwargs):\n    '''Get profile information with proxy image will show directly to your frontend\n    \n    \n\n    :param string username:  defaults to therock\n    '''\n    return await self._request_rapid_api('rapi_instagram_profile_get_followers_by_username',kwargs)\n        "
    },
    "rapi_instagram_profile_get_followers_by_id": {
        "api_name": "get_followers_by_id",
        "category": "Social",
        "tool_name": "instagram_profile",
        "code": "async def rapi_instagram_profile_get_followers_by_id(self,*args,**kwargs):\n    '''Get profile information with proxy image will show directly to your frontend\n    \n    \n\n    :param string id:  defaults to 232192182\n    '''\n    return await self._request_rapid_api('rapi_instagram_profile_get_followers_by_id',kwargs)\n        "
    },
    "rapi_fortune_cookie_category_list": {
        "api_name": "category_list",
        "category": "Social",
        "tool_name": "fortune_cookie",
        "code": "async def rapi_fortune_cookie_category_list(self,*args,**kwargs):\n    '''The Fortune Cookie, a piece of advice, a future prediction, an inspiration... Open the fortune cookie and you will discover the message it holds for you.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fortune_cookie_category_list',kwargs)\n        "
    },
    "rapi_fortune_cookie_my_fortune": {
        "api_name": "my_fortune",
        "category": "Social",
        "tool_name": "fortune_cookie",
        "code": "async def rapi_fortune_cookie_my_fortune(self,*args,**kwargs):\n    '''The Fortune Cookie, a piece of advice, a future prediction, an inspiration... Open the fortune cookie and you will discover the message it holds for you.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fortune_cookie_my_fortune',kwargs)\n        "
    },
    "rapi_youtube_channel_details_youtube_channel_details": {
        "api_name": "youtube_channel_details",
        "category": "Social",
        "tool_name": "youtube_channel_details",
        "code": "async def rapi_youtube_channel_details_youtube_channel_details(self,*args,**kwargs):\n    '''YouTube Channel Details API\n    \n    \n\n    :param string id: **Channel ID** starting with the `UC` prefix, or **Channel URL**\n\ne.g. `https://www.youtube.com/user/PewDiePie`\ne.g. `UC-lHJZR3Gqxm24_Vd_AJ5Yw` defaults to UC-lHJZR3Gqxm24_Vd_AJ5Yw\n    '''\n    return await self._request_rapid_api('rapi_youtube_channel_details_youtube_channel_details',kwargs)\n        "
    },
    "rapi_twitter_scraper_search": {
        "api_name": "search",
        "category": "Social",
        "tool_name": "twitter_scraper",
        "code": "async def rapi_twitter_scraper_search(self,*args,**kwargs):\n    '''Search and extract Twitter data at scale \ud83d\ude80 Extract up to 2,000 tweets per search query\n    \n    \n\n    :param DATE (YYYY-MM-DD)? toDate: Check the About tab for more info\n    :param string? near: Check the About tab for more info\n    :param string? url: Check the About tab for more info\n    :param DATE (YYYY-MM-DD)? fromDate: Check the About tab for more info\n    :param string? lang: Check the About tab for more info\n    :param integer? maxTweets: Check the About tab for more info defaults to 100\n    :param string? searchMode: Check the About tab for more info\n    :param string? searchTerms: Check the About tab for more info defaults to wikipedia\n    '''\n    return await self._request_rapid_api('rapi_twitter_scraper_search',kwargs)\n        "
    },
    "rapi_tiktok_v3_music_info": {
        "api_name": "music_info",
        "category": "Social",
        "tool_name": "tiktok_v3",
        "code": "async def rapi_tiktok_v3_music_info(self,*args,**kwargs):\n    '''TikTok API\n    \n    \n\n    :param string music_id:  defaults to 6761543137128089601\n    '''\n    return await self._request_rapid_api('rapi_tiktok_v3_music_info',kwargs)\n        "
    },
    "rapi_tiktok_v3_profile": {
        "api_name": "profile",
        "category": "Social",
        "tool_name": "tiktok_v3",
        "code": "async def rapi_tiktok_v3_profile(self,*args,**kwargs):\n    '''TikTok API\n    \n    \n\n    :param string username:  defaults to ladbible\n    '''\n    return await self._request_rapid_api('rapi_tiktok_v3_profile',kwargs)\n        "
    },
    "rapi_tiktok_v3_user_videos": {
        "api_name": "user_videos",
        "category": "Social",
        "tool_name": "tiktok_v3",
        "code": "async def rapi_tiktok_v3_user_videos(self,*args,**kwargs):\n    '''TikTok API\n    \n    \n\n    :param string secUid:  defaults to MS4wLjABAAAAsY6EjWejsVbCjir7Vdy-uNX364xNywkQSLqqoV5Hcnt7v3CVToFzfIgcdpQ_iW3D\n    :param string user_id:  defaults to 6676352751163032582\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_tiktok_v3_user_videos',kwargs)\n        "
    },
    "rapi_tiktok_v3_video_comment_replies": {
        "api_name": "video_comment_replies",
        "category": "Social",
        "tool_name": "tiktok_v3",
        "code": "async def rapi_tiktok_v3_video_comment_replies(self,*args,**kwargs):\n    '''TikTok API\n    \n    \n\n    :param string comment_id:  defaults to 7136269575881360155\n    :param string video_id:  defaults to 7136263711043374341\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_tiktok_v3_video_comment_replies',kwargs)\n        "
    },
    "rapi_twitter_profile": {
        "api_name": "profile",
        "category": "Social",
        "tool_name": "twitter",
        "code": "async def rapi_twitter_profile(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string username:  defaults to nike\n    '''\n    return await self._request_rapid_api('rapi_twitter_profile',kwargs)\n        "
    },
    "rapi_chuck_norris_jokes_random": {
        "api_name": "jokes_random",
        "category": "Social",
        "tool_name": "chuck_norris",
        "code": "async def rapi_chuck_norris_jokes_random(self,*args,**kwargs):\n    '''chucknorris.io is a free JSON API for hand curated Chuck Norris facts.\n    \n    \n\n    :param string? category: Specifies the category of the random joke.\n    '''\n    return await self._request_rapid_api('rapi_chuck_norris_jokes_random',kwargs)\n        "
    },
    "rapi_chuck_norris_jokes_categories": {
        "api_name": "jokes_categories",
        "category": "Social",
        "tool_name": "chuck_norris",
        "code": "async def rapi_chuck_norris_jokes_categories(self,*args,**kwargs):\n    '''chucknorris.io is a free JSON API for hand curated Chuck Norris facts.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chuck_norris_jokes_categories',kwargs)\n        "
    },
    "rapi_chuck_norris_jokes_search": {
        "api_name": "jokes_search",
        "category": "Social",
        "tool_name": "chuck_norris",
        "code": "async def rapi_chuck_norris_jokes_search(self,*args,**kwargs):\n    '''chucknorris.io is a free JSON API for hand curated Chuck Norris facts.\n    \n    \n\n    :param string query: The search term.\n    '''\n    return await self._request_rapid_api('rapi_chuck_norris_jokes_search',kwargs)\n        "
    },
    "rapi_instagram_v7_get_media_info": {
        "api_name": "get_media_info",
        "category": "Social",
        "tool_name": "instagram_v7",
        "code": "async def rapi_instagram_v7_get_media_info(self,*args,**kwargs):\n    '''Get information from Instagram reliably\n    \n    \n\n    :param string id:  defaults to 2789566164107201469_25025320\n    '''\n    return await self._request_rapid_api('rapi_instagram_v7_get_media_info',kwargs)\n        "
    },
    "rapi_instagram_v7_get_user_feed": {
        "api_name": "get_user_feed",
        "category": "Social",
        "tool_name": "instagram_v7",
        "code": "async def rapi_instagram_v7_get_user_feed(self,*args,**kwargs):\n    '''Get information from Instagram reliably\n    \n    \n\n    :param integer id:  defaults to 25025320\n    :param string? max_id:  defaults to 2796754904080592191_25025320\n    '''\n    return await self._request_rapid_api('rapi_instagram_v7_get_user_feed',kwargs)\n        "
    },
    "rapi_facebook_video_and_reel_downloader_download_video_or_reel": {
        "api_name": "download_video_or_reel",
        "category": "Social",
        "tool_name": "facebook_video_and_reel_downloader",
        "code": "async def rapi_facebook_video_and_reel_downloader_download_video_or_reel(self,*args,**kwargs):\n    '''Simple and light weight api to extract download links of Facebook video or reel.\n    \n    \n\n    :param string url:  defaults to https://www.facebook.com/antarikshTV/videos/958242908874442/\n    '''\n    return await self._request_rapid_api('rapi_facebook_video_and_reel_downloader_download_video_or_reel',kwargs)\n        "
    },
    "rapi_twitter_v2_user_media": {
        "api_name": "user_media",
        "category": "Social",
        "tool_name": "twitter_v2",
        "code": "async def rapi_twitter_v2_user_media(self,*args,**kwargs):\n    '''Twitter public data API for Tweets and users\n    \n    \n\n    :param string user_id:  defaults to 44196397\n    :param string? cursor: \n    :param integer? limit:  defaults to 40\n    '''\n    return await self._request_rapid_api('rapi_twitter_v2_user_media',kwargs)\n        "
    },
    "rapi_twitter_v2_user_followers": {
        "api_name": "user_followers",
        "category": "Social",
        "tool_name": "twitter_v2",
        "code": "async def rapi_twitter_v2_user_followers(self,*args,**kwargs):\n    '''Twitter public data API for Tweets and users\n    \n    \n\n    :param string user_id:  defaults to 44196397\n    :param string? cursor: \n    :param integer? limit:  defaults to 40\n    '''\n    return await self._request_rapid_api('rapi_twitter_v2_user_followers',kwargs)\n        "
    },
    "rapi_twitter_v2_user_following": {
        "api_name": "user_following",
        "category": "Social",
        "tool_name": "twitter_v2",
        "code": "async def rapi_twitter_v2_user_following(self,*args,**kwargs):\n    '''Twitter public data API for Tweets and users\n    \n    \n\n    :param string user_id:  defaults to 44196397\n    :param string? cursor: \n    :param integer? limit:  defaults to 40\n    '''\n    return await self._request_rapid_api('rapi_twitter_v2_user_following',kwargs)\n        "
    },
    "rapi_twitter_v2_tweet_detail_conversation": {
        "api_name": "tweet_detail_conversation",
        "category": "Social",
        "tool_name": "twitter_v2",
        "code": "async def rapi_twitter_v2_tweet_detail_conversation(self,*args,**kwargs):\n    '''Twitter public data API for Tweets and users\n    \n    \n\n    :param string tweet_id:  defaults to 1299530165463199747\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twitter_v2_tweet_detail_conversation',kwargs)\n        "
    },
    "rapi_robberydata_get_individual_result_by_id": {
        "api_name": "get_individual_result_by_id",
        "category": "Social",
        "tool_name": "robberydata",
        "code": "async def rapi_robberydata_get_individual_result_by_id(self,*args,**kwargs):\n    '''Get Robbery Sample Data and Use the format in your project\n    \n    \n\n    :param string id:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_robberydata_get_individual_result_by_id',kwargs)\n        "
    },
    "rapi_robberydata_all_data": {
        "api_name": "all_data",
        "category": "Social",
        "tool_name": "robberydata",
        "code": "async def rapi_robberydata_all_data(self,*args,**kwargs):\n    '''Get Robbery Sample Data and Use the format in your project\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_robberydata_all_data',kwargs)\n        "
    },
    "rapi_twttrapi_user_tweets": {
        "api_name": "user_tweets",
        "category": "Social",
        "tool_name": "twttrapi",
        "code": "async def rapi_twttrapi_user_tweets(self,*args,**kwargs):\n    '''twttrapi is an unofficial Twitter API that offers a variety of features to easily access Twitter data and perform actions using simple HTTP requests. With twttrapi, you can use Twitter Login + 2FA, get tweets, users, and search results, follow/like/retweet content, create and delete tweets, and even access your direct messages. It is perfect for large scale scraping of public data or for building applications that need access to Twitter's API.\n\ntwttrapi is a well-maintained service with a ded...\n    \n    \n\n    :param string? cursor: \n    :param string? user_id: \n    :param string? username:  defaults to elonmusk\n    '''\n    return await self._request_rapid_api('rapi_twttrapi_user_tweets',kwargs)\n        "
    },
    "rapi_twttrapi_get_dm_conversations": {
        "api_name": "get_dm_conversations",
        "category": "Social",
        "tool_name": "twttrapi",
        "code": "async def rapi_twttrapi_get_dm_conversations(self,*args,**kwargs):\n    '''twttrapi is an unofficial Twitter API that offers a variety of features to easily access Twitter data and perform actions using simple HTTP requests. With twttrapi, you can use Twitter Login + 2FA, get tweets, users, and search results, follow/like/retweet content, create and delete tweets, and even access your direct messages. It is perfect for large scale scraping of public data or for building applications that need access to Twitter's API.\n\ntwttrapi is a well-maintained service with a ded...\n    \n    \n\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twttrapi_get_dm_conversations',kwargs)\n        "
    },
    "rapi_twttrapi_search_suggestions": {
        "api_name": "search_suggestions",
        "category": "Social",
        "tool_name": "twttrapi",
        "code": "async def rapi_twttrapi_search_suggestions(self,*args,**kwargs):\n    '''twttrapi is an unofficial Twitter API that offers a variety of features to easily access Twitter data and perform actions using simple HTTP requests. With twttrapi, you can use Twitter Login + 2FA, get tweets, users, and search results, follow/like/retweet content, create and delete tweets, and even access your direct messages. It is perfect for large scale scraping of public data or for building applications that need access to Twitter's API.\n\ntwttrapi is a well-maintained service with a ded...\n    \n    \n\n    :param string query:  defaults to dogecoin\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twttrapi_search_suggestions',kwargs)\n        "
    },
    "rapi_tiktok_v4_music_posts": {
        "api_name": "music_posts",
        "category": "Social",
        "tool_name": "tiktok_v4",
        "code": "async def rapi_tiktok_v4_music_posts(self,*args,**kwargs):\n    '''TikTok API third party service, Stable and 24/7 maintenance. for any Help or Suggestions Contact me on https://t.me/dhmye\n    \n    \n\n    :param string music_id:  defaults to 7102850124136663810\n    :param string? curor:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_v4_music_posts',kwargs)\n        "
    },
    "rapi_fdown_facebook_video_downloader_extract_video_download_links": {
        "api_name": "extract_video_download_links",
        "category": "Social",
        "tool_name": "fdown_facebook_video_downloader",
        "code": "async def rapi_fdown_facebook_video_downloader_extract_video_download_links(self,*args,**kwargs):\n    '''Fdown allows you to extract Facbook video download links in HD and SD format. It is simple, lightweight and Easy to use.\n    \n    \n\n    :param string url:  defaults to https://www.facebook.com/reel/3560860347481096\n    '''\n    return await self._request_rapid_api('rapi_fdown_facebook_video_downloader_extract_video_download_links',kwargs)\n        "
    },
    "rapi_tiktok_hashtag_generator_generate": {
        "api_name": "generate",
        "category": "Social",
        "tool_name": "tiktok_hashtag_generator",
        "code": "async def rapi_tiktok_hashtag_generator_generate(self,*args,**kwargs):\n    '''TikTok Hashtag Generator API\n    \n    \n\n    :param string keyword:  defaults to Love\n    '''\n    return await self._request_rapid_api('rapi_tiktok_hashtag_generator_generate',kwargs)\n        "
    },
    "rapi_instagram_bulk_profile_scrapper_followers_by_username": {
        "api_name": "followers_by_username",
        "category": "Social",
        "tool_name": "instagram_bulk_profile_scrapper",
        "code": "async def rapi_instagram_bulk_profile_scrapper_followers_by_username(self,*args,**kwargs):\n    '''Highly maintained and Stable Instagram Api. Scrap up to 200k Instagram profile per day. It's capable to handle high volume. Contact me for custom plans or requirements\n    \n    \n\n    :param string username:  defaults to therock\n    :param string? corsEnabled:  defaults to false\n    :param string? nextMaxId: Leave this empty in first batch\n    '''\n    return await self._request_rapid_api('rapi_instagram_bulk_profile_scrapper_followers_by_username',kwargs)\n        "
    },
    "rapi_instagram_bulk_profile_scrapper_followings_by_username": {
        "api_name": "followings_by_username",
        "category": "Social",
        "tool_name": "instagram_bulk_profile_scrapper",
        "code": "async def rapi_instagram_bulk_profile_scrapper_followings_by_username(self,*args,**kwargs):\n    '''Highly maintained and Stable Instagram Api. Scrap up to 200k Instagram profile per day. It's capable to handle high volume. Contact me for custom plans or requirements\n    \n    \n\n    :param string username:  defaults to therock\n    :param string? corsEnabled:  defaults to false\n    :param string? nextMaxId: Leave this empty in first batch\n    '''\n    return await self._request_rapid_api('rapi_instagram_bulk_profile_scrapper_followings_by_username',kwargs)\n        "
    },
    "rapi_gigopost_get_api_key": {
        "api_name": "get_api_key",
        "category": "Social",
        "tool_name": "gigopost",
        "code": "async def rapi_gigopost_get_api_key(self,*args,**kwargs):\n    '''The simplest way to involve your teams to share company brand content\n    \n    \n\n    :param string email:  defaults to yardilloapi@gmail.com\n    '''\n    return await self._request_rapid_api('rapi_gigopost_get_api_key',kwargs)\n        "
    },
    "rapi_gigopost_get_session_info": {
        "api_name": "get_session_info",
        "category": "Social",
        "tool_name": "gigopost",
        "code": "async def rapi_gigopost_get_session_info(self,*args,**kwargs):\n    '''The simplest way to involve your teams to share company brand content\n    \n    \n\n    :param string session_id:  defaults to 1685369452715x643061726475037300\n    '''\n    return await self._request_rapid_api('rapi_gigopost_get_session_info',kwargs)\n        "
    },
    "rapi_wiman_the_social_wi_fi_network_venue_search": {
        "api_name": "venue_search",
        "category": "Social",
        "tool_name": "wiman_the_social_wi_fi_network",
        "code": "async def rapi_wiman_the_social_wi_fi_network_venue_search(self,*args,**kwargs):\n    '''Get informations about wiman hotspots like name, city, coordinates etc .\n    \n    \n\n    :param string latitude: latitude defaults to 44.484994\n    :param string longitude: longitude defaults to 11.327333\n    :param integer? radius: radius between 1 and 6 defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_wiman_the_social_wi_fi_network_venue_search',kwargs)\n        "
    },
    "rapi_twitter_hashtags_get_worldwide_hashtags": {
        "api_name": "get_worldwide_hashtags",
        "category": "Social",
        "tool_name": "twitter_hashtags",
        "code": "async def rapi_twitter_hashtags_get_worldwide_hashtags(self,*args,**kwargs):\n    '''An unoffical twitter hashtag api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_twitter_hashtags_get_worldwide_hashtags',kwargs)\n        "
    },
    "rapi_tweesky_status": {
        "api_name": "status",
        "category": "Social",
        "tool_name": "tweesky",
        "code": "async def rapi_tweesky_status(self,*args,**kwargs):\n    '''From a web page creates a customisable Social Media card which can be shared on all Social Media.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tweesky_status',kwargs)\n        "
    },
    "rapi_instagram_scraper_2023_v2_profile_highlights": {
        "api_name": "profile_highlights",
        "category": "Social",
        "tool_name": "instagram_scraper_2023_v2",
        "code": "async def rapi_instagram_scraper_2023_v2_profile_highlights(self,*args,**kwargs):\n    '''MEGA Instagram Scraper 2023 - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free :) You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_instagram_scraper_2023_v2_profile_highlights',kwargs)\n        "
    },
    "rapi_tiktok_data_video_post_comments": {
        "api_name": "video_post_comments",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_video_post_comments(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string video_id: Where to get vide id value?\n\nFor example in this video /@INFLUENCER/video/6818009093052189958 the id will be **6818009093052189958** defaults to 7137423965982592302\n    :param integer? fresh: By setting this query value to **1** you can force the API to return fresh data(not cached) defaults to 0\n    :param integer? limit: Number of records to return:\n\n- Default is 50\n- Maximum is 150\n defaults to 50\n    :param integer? max_cursor: Pagination cursor defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_video_post_comments',kwargs)\n        "
    },
    "rapi_tiktok_data_user_followers_list": {
        "api_name": "user_followers_list",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_user_followers_list(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param integer? fresh: By setting this query value to **1** you can force the API to return fresh data(not cached) defaults to 0\n    :param string? sec_uid: **Type** of a user id\n\n**NOTE:** By using **sec_uid**, request will be executed faster then if you will use username\n\n**NOTE:** **sec_uid** is not regular user id\n\n**NOTE:** **sec_uid** can be obtained from the **User Information** endpoint\n\n**NOTE:** **sec_uid** example: MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\n    :param string? max_cursor: Pagination cursor. \nTo get next batch of followers, paste here **max_cursor** value that you have received in previous request response.\n    :param string? limit: Number of records to return:\n\n- Default is 100\n- Maximum is 100\n\n    :param string? username: Tiktok username. For example: **amazon**\n\n- **NOTE:** By using **sec_uid** instead of the **username** request will be executed faster\n- To use **sec_uid** use input field **BELOW** defaults to tiktok\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_user_followers_list',kwargs)\n        "
    },
    "rapi_tiktok_data_music_metadata": {
        "api_name": "music_metadata",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_music_metadata(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string music: Tiktok music url. For example: **https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347** defaults to https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347\n    :param integer? fresh: By setting this query value to **1** you can force the API to return fresh data(not cached) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_music_metadata',kwargs)\n        "
    },
    "rapi_tiktok_data_hashtag_metadata_information": {
        "api_name": "hashtag_metadata_information",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_hashtag_metadata_information(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string hashtag: Hashtag name. For example: **summer** defaults to summer\n    :param integer? fresh: By setting this query value to **1** you can force to return fresh data(not cached) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_hashtag_metadata_information',kwargs)\n        "
    },
    "rapi_tiktok_data_hashtag_feed_video_posts": {
        "api_name": "hashtag_feed_video_posts",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_hashtag_feed_video_posts(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param integer? fresh: By setting this query value to **1** you can force to return fresh data(not cached) defaults to 0\n    :param string? name: Hashtag name. For example: **duett** defaults to summer\n    :param integer? limit: Limit the output number of records. \n\n- Default is 20\n- Max number is 20\n\n    :param string? max_cursor: Pagination cursor. \nTo get more videos, paste here **max_cursor** value that you have received in previous request response.\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_hashtag_feed_video_posts',kwargs)\n        "
    },
    "rapi_tiktok_data_real_time_hashtag_search": {
        "api_name": "real_time_hashtag_search",
        "category": "Social",
        "tool_name": "tiktok_data",
        "code": "async def rapi_tiktok_data_real_time_hashtag_search(self,*args,**kwargs):\n    '''Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string keyword:  defaults to blah\n    :param integer? fresh: By setting this query value to **1** you can force to return fresh data(not cached) defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_data_real_time_hashtag_search',kwargs)\n        "
    },
    "rapi_instagram_data_hashtag_feed": {
        "api_name": "hashtag_feed",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_hashtag_feed(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string hashtag: Instagram hashtag\n\nValues accepted:\n - summer defaults to summer\n    :param string? end_cursor: Pagination cursor. \nTo get next batch of data, paste here **end_cursor** value that you have received in previous request response.\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_hashtag_feed',kwargs)\n        "
    },
    "rapi_instagram_data_user_reels_feed": {
        "api_name": "user_reels_feed",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_user_reels_feed(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string? end_cursor: Pagination cursor. \nTo get next batch of data, paste here **end_cursor** value that you have received in previous request response.\n    :param integer? limit: Number of items(posts) to return\n\n- Default value: 25\n- Limit: 150 defaults to 25\n    :param string? user_id: By using **user_id** instead of the username your request will be executed much faster\n    :param string? username: Instagram username defaults to instagram\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_user_reels_feed',kwargs)\n        "
    },
    "rapi_instagram_data_user_information_metadata_by_user_id": {
        "api_name": "user_information_metadata_by_user_id",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_user_information_metadata_by_user_id(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param integer user_id: Instagram username defaults to 25025320\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_user_information_metadata_by_user_id',kwargs)\n        "
    },
    "rapi_instagram_data_user_followings": {
        "api_name": "user_followings",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_user_followings(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string? end_cursor: Pagination cursor. \nTo get next batch of data, paste here **end_cursor** value that you have received in previous request response.\n    :param string? username: Instagram username. \n\nValues accepted:\n - instagram\n - https://www.instagram.com/instagram/ defaults to instagram\n    :param string? user_id: By using **user_id** instead of the username your request will be executed much faster\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_user_followings',kwargs)\n        "
    },
    "rapi_instagram_data_post_metadata": {
        "api_name": "post_metadata",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_post_metadata(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string post: Instagram post url. \n\nTwo url formats are accepted:\n\n-   https://www.instagram.com/p/CG5a3RcDb8X/\n-   CG5a3RcDb8X defaults to https://www.instagram.com/p/CG5a3RcDb8X/\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_post_metadata',kwargs)\n        "
    },
    "rapi_instagram_data_post_comments": {
        "api_name": "post_comments",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_post_comments(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string post: Post\n\nValues accepted:\n- CAVeEm1gDh2\n- https://www.instagram.com/p/CAVeEm1gDh2/ defaults to https://www.instagram.com/p/CAVeEm1gDh2/\n    :param string? end_cursor: Pagination cursor. \nTo get next batch of data, paste here **end_cursor** value that you have received in previous request response.\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_post_comments',kwargs)\n        "
    },
    "rapi_instagram_data_post_likers": {
        "api_name": "post_likers",
        "category": "Social",
        "tool_name": "instagram_data",
        "code": "async def rapi_instagram_data_post_likers(self,*args,**kwargs):\n    '''Real-time Instagram data API. Get very useful and unique information directly from Instagram. \n  I'm on Telegram https://t.me/logicBuilder \n News and announcements Telegram Channel https://t.me/logicApi\n    \n    \n\n    :param string post: Post\n\nValues accepted:\n- CAVeEm1gDh2\n- https://www.instagram.com/p/CAVeEm1gDh2/ defaults to https://www.instagram.com/p/CAVeEm1gDh2/\n    :param string? end_cursor: Pagination cursor. \nTo get next batch of data, paste here **end_cursor** value that you have received in previous request response.\n    '''\n    return await self._request_rapid_api('rapi_instagram_data_post_likers',kwargs)\n        "
    },
    "rapi_flirty_words_generate_flirty_line": {
        "api_name": "generate_flirty_line",
        "category": "Social",
        "tool_name": "flirty_words",
        "code": "async def rapi_flirty_words_generate_flirty_line(self,*args,**kwargs):\n    '''Get flirty word to attract others\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flirty_words_generate_flirty_line',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_video_no_watermark": {
        "api_name": "video_no_watermark",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_video_no_watermark(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string video_url:  defaults to https://www.tiktok.com/@tiktok/video/7182229845932363051\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_video_no_watermark',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_user_info": {
        "api_name": "user_info",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_user_info(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string? user_id:  defaults to 107955\n    :param string? user_name:  defaults to tiktok\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_user_info',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_user_followings": {
        "api_name": "user_followings",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_user_followings(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string user_id:  defaults to 107955\n    :param string? count: \n    :param string? cursor: min_time from response, default 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_user_followings',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_video_comments": {
        "api_name": "video_comments",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_video_comments(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string video_url:  defaults to https://www.tiktok.com/@tiktok/video/6974862859000073478\n    :param integer? count: \n    :param integer? cursor: min_time from response, default 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_video_comments',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_music_videos": {
        "api_name": "music_videos",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_music_videos(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string music_id:  defaults to 6862966224016377857\n    :param string? cursor:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_music_videos',kwargs)\n        "
    },
    "rapi_tiktok_scraper_v2_hashtag_info": {
        "api_name": "hashtag_info",
        "category": "Social",
        "tool_name": "tiktok_scraper_v2",
        "code": "async def rapi_tiktok_scraper_v2_hashtag_info(self,*args,**kwargs):\n    '''Get basic tiktok user info and medias. Cheap and stable. Telegram https://t.me/JoTucker2022\n    \n    \n\n    :param string hashtag:  defaults to bts\n    '''\n    return await self._request_rapid_api('rapi_tiktok_scraper_v2_hashtag_info',kwargs)\n        "
    },
    "rapi_instagram_api_v2_user_stories_by_pk": {
        "api_name": "user_stories_by_pk",
        "category": "Social",
        "tool_name": "instagram_api_v2",
        "code": "async def rapi_instagram_api_v2_user_stories_by_pk(self,*args,**kwargs):\n    '''instagram scraping, all endpoints\n    \n    \n\n    :param integer pk:  defaults to 18428658\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_v2_user_stories_by_pk',kwargs)\n        "
    },
    "rapi_instagram_api_v2_user_info_by_username": {
        "api_name": "user_info_by_username",
        "category": "Social",
        "tool_name": "instagram_api_v2",
        "code": "async def rapi_instagram_api_v2_user_info_by_username(self,*args,**kwargs):\n    '''instagram scraping, all endpoints\n    \n    \n\n    :param string username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_v2_user_info_by_username',kwargs)\n        "
    },
    "rapi_instagram_api_v2_user_info_by_pk": {
        "api_name": "user_info_by_pk",
        "category": "Social",
        "tool_name": "instagram_api_v2",
        "code": "async def rapi_instagram_api_v2_user_info_by_pk(self,*args,**kwargs):\n    '''instagram scraping, all endpoints\n    \n    \n\n    :param integer pk:  defaults to 18428658\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_v2_user_info_by_pk',kwargs)\n        "
    },
    "rapi_instagram_api_v2_search_hashtag": {
        "api_name": "search_hashtag",
        "category": "Social",
        "tool_name": "instagram_api_v2",
        "code": "async def rapi_instagram_api_v2_search_hashtag(self,*args,**kwargs):\n    '''instagram scraping, all endpoints\n    \n    \n\n    :param string tag:  defaults to fashion\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_v2_search_hashtag',kwargs)\n        "
    },
    "rapi_top_instagram_hashtag_get_new_hashtags": {
        "api_name": "get_new_hashtags",
        "category": "Social",
        "tool_name": "top_instagram_hashtag",
        "code": "async def rapi_top_instagram_hashtag_get_new_hashtags(self,*args,**kwargs):\n    '''Find the best instagram hashtag\n    \n    \n\n    :param string page: page 0 - 9 defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_top_instagram_hashtag_get_new_hashtags',kwargs)\n        "
    },
    "rapi_top_instagram_hashtag_get_hashtags": {
        "api_name": "get_hashtags",
        "category": "Social",
        "tool_name": "top_instagram_hashtag",
        "code": "async def rapi_top_instagram_hashtag_get_hashtags(self,*args,**kwargs):\n    '''Find the best instagram hashtag\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_instagram_hashtag_get_hashtags',kwargs)\n        "
    },
    "rapi_top_instagram_hashtag_get_hashtag": {
        "api_name": "get_hashtag",
        "category": "Social",
        "tool_name": "top_instagram_hashtag",
        "code": "async def rapi_top_instagram_hashtag_get_hashtag(self,*args,**kwargs):\n    '''Find the best instagram hashtag\n    \n    \n\n    :param string tag: Name of tag is required to search tag defaults to love\n    '''\n    return await self._request_rapid_api('rapi_top_instagram_hashtag_get_hashtag',kwargs)\n        "
    },
    "rapi_youtube_v2_channel_search": {
        "api_name": "channel_search",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_channel_search(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string query:  defaults to Anthony\n    :param string channel_id:  defaults to UCXuqSBlHAE6Xw-yeJA0Tunw\n    :param string? lang:  defaults to en\n    :param string? country:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_channel_search',kwargs)\n        "
    },
    "rapi_youtube_v2_channel_details": {
        "api_name": "channel_details",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_channel_details(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string channel_id:  defaults to UCXuqSBlHAE6Xw-yeJA0Tunw\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_channel_details',kwargs)\n        "
    },
    "rapi_youtube_v2_channel_shorts": {
        "api_name": "channel_shorts",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_channel_shorts(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string channel_id:  defaults to UCVhQ2NnY5Rskt6UjCUkJ_DA\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_channel_shorts',kwargs)\n        "
    },
    "rapi_youtube_v2_video_comments": {
        "api_name": "video_comments",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_video_comments(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string video_id:  defaults to ACdh-yzENXM\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_video_comments',kwargs)\n        "
    },
    "rapi_youtube_v2_video_subtitles": {
        "api_name": "video_subtitles",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_video_subtitles(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string video_id:  defaults to PuQFESk0BrA\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_video_subtitles',kwargs)\n        "
    },
    "rapi_youtube_v2_video_details": {
        "api_name": "video_details",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_video_details(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string video_id:  defaults to PuQFESk0BrA\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_video_details',kwargs)\n        "
    },
    "rapi_youtube_v2_youtube_search": {
        "api_name": "youtube_search",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_youtube_search(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string query:  defaults to bobby lee\n    :param string? lang:  defaults to en\n    :param string? order_by: Possible values: \\\\\\\\\\\\\\\"last_hour\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"today\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"this_week\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"this_month\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"this_year\\\\\\\\\\\\\\\" defaults to this_month\n    :param string? country:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_youtube_search',kwargs)\n        "
    },
    "rapi_youtube_v2_trending_videos": {
        "api_name": "trending_videos",
        "category": "Social",
        "tool_name": "youtube_v2",
        "code": "async def rapi_youtube_v2_trending_videos(self,*args,**kwargs):\n    '''Youtube API for search, videos, channels, trending, recommendation\n    \n    \n\n    :param string? country:  defaults to us\n    :param string? lang:  defaults to en\n    :param string? section: Possible values: \\\\\\\"Now\\\\\\\", \\\\\\\"Music\\\\\\\", \\\\\\\"Movies\\\\\\\", \\\\\\\"Gaming\\\\\\\" defaults to Now\n    '''\n    return await self._request_rapid_api('rapi_youtube_v2_trending_videos',kwargs)\n        "
    },
    "rapi_twitter_v5_autocomplete": {
        "api_name": "autocomplete",
        "category": "Social",
        "tool_name": "twitter_v5",
        "code": "async def rapi_twitter_v5_autocomplete(self,*args,**kwargs):\n    '''Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data. With our API, you can easily retrieve user followers and followings, post likes, comments, quoted tweets, and retweets. You can also search for top, latest, videos, photos, and people, and access user tweets, replies, media, likes, and info by username or ID. Additionally, our autocomplete function helps you complete typed values with ease. Get started with our Twitter API today!\n    \n    \n\n    :param string value:  defaults to MrB\n    '''\n    return await self._request_rapid_api('rapi_twitter_v5_autocomplete',kwargs)\n        "
    },
    "rapi_twitter_v5_search_twitter": {
        "api_name": "search_twitter",
        "category": "Social",
        "tool_name": "twitter_v5",
        "code": "async def rapi_twitter_v5_search_twitter(self,*args,**kwargs):\n    '''Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data. With our API, you can easily retrieve user followers and followings, post likes, comments, quoted tweets, and retweets. You can also search for top, latest, videos, photos, and people, and access user tweets, replies, media, likes, and info by username or ID. Additionally, our autocomplete function helps you complete typed values with ease. Get started with our Twitter API today!\n    \n    \n\n    :param string type:  defaults to Top\n    :param string count:  defaults to 20\n    :param string query:  defaults to Mr Beast\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twitter_v5_search_twitter',kwargs)\n        "
    },
    "rapi_twitter_v5_get_post_quotes": {
        "api_name": "get_post_quotes",
        "category": "Social",
        "tool_name": "twitter_v5",
        "code": "async def rapi_twitter_v5_get_post_quotes(self,*args,**kwargs):\n    '''Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data. With our API, you can easily retrieve user followers and followings, post likes, comments, quoted tweets, and retweets. You can also search for top, latest, videos, photos, and people, and access user tweets, replies, media, likes, and info by username or ID. Additionally, our autocomplete function helps you complete typed values with ease. Get started with our Twitter API today!\n    \n    \n\n    :param string count:  defaults to 40\n    :param string pid:  defaults to 1552735248026411010\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twitter_v5_get_post_quotes',kwargs)\n        "
    },
    "rapi_twitter_v5_get_post_likes": {
        "api_name": "get_post_likes",
        "category": "Social",
        "tool_name": "twitter_v5",
        "code": "async def rapi_twitter_v5_get_post_likes(self,*args,**kwargs):\n    '''Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data. With our API, you can easily retrieve user followers and followings, post likes, comments, quoted tweets, and retweets. You can also search for top, latest, videos, photos, and people, and access user tweets, replies, media, likes, and info by username or ID. Additionally, our autocomplete function helps you complete typed values with ease. Get started with our Twitter API today!\n    \n    \n\n    :param string count:  defaults to 40\n    :param string pid:  defaults to 1552735248026411010\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twitter_v5_get_post_likes',kwargs)\n        "
    },
    "rapi_twitter_v5_get_user_followers": {
        "api_name": "get_user_followers",
        "category": "Social",
        "tool_name": "twitter_v5",
        "code": "async def rapi_twitter_v5_get_user_followers(self,*args,**kwargs):\n    '''Introducing a powerful Twitter API with 14 endpoints to help you access valuable Twitter data. With our API, you can easily retrieve user followers and followings, post likes, comments, quoted tweets, and retweets. You can also search for top, latest, videos, photos, and people, and access user tweets, replies, media, likes, and info by username or ID. Additionally, our autocomplete function helps you complete typed values with ease. Get started with our Twitter API today!\n    \n    \n\n    :param string user:  defaults to 2455740283\n    :param string count:  defaults to 20\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_twitter_v5_get_user_followers',kwargs)\n        "
    },
    "rapi_twitter_v2_v2_tweet_favoriters": {
        "api_name": "tweet_favoriters",
        "category": "Social",
        "tool_name": "twitter_v2_v2",
        "code": "async def rapi_twitter_v2_v2_tweet_favoriters(self,*args,**kwargs):\n    '''Twitter public and private data API for search, Tweets, users, followers, images, media and more.\n    \n    \n\n    :param string id: Tweet ID defaults to 1485953263040188416\n    :param string? cursor: Cursor for other results\n    :param integer? count: Number of results defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_v2_v2_tweet_favoriters',kwargs)\n        "
    },
    "rapi_instagram_downloader_v2_get_media": {
        "api_name": "get_media",
        "category": "Social",
        "tool_name": "instagram_downloader_v2",
        "code": "async def rapi_instagram_downloader_v2_get_media(self,*args,**kwargs):\n    '''Download Video, Photo, Post, Reel, IGTV, Carousel media from Instagram Note: Story video currently not supported!\n    \n    \n\n    :param string url_username:  defaults to https://www.instagram.com/p/CqDpQo4piyE/\n    '''\n    return await self._request_rapid_api('rapi_instagram_downloader_v2_get_media',kwargs)\n        "
    },
    "rapi_twitter_aio_tweets_by_userid": {
        "api_name": "tweets_by_userid",
        "category": "Social",
        "tool_name": "twitter_aio",
        "code": "async def rapi_twitter_aio_tweets_by_userid(self,*args,**kwargs):\n    '''Access real-time data as soon as it's posted! With the Twitter AIO API, you can retrieve tweets, spaces, media and profiles instantly. Say goodbye to expensive fees charged by Twitter while still getting access to all the available data.\n\n    \n    \n\n    :param string userId: The userId of the user. You can get it by converting a username to the userId or by searching a user and extracting the restId. defaults to 44196397\n    :param string? cursor: At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.\n    :param string? count: The default count is 20. You can specify a custom one here. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_aio_tweets_by_userid',kwargs)\n        "
    },
    "rapi_twitter_aio_user_likes_by_userid": {
        "api_name": "user_likes_by_userid",
        "category": "Social",
        "tool_name": "twitter_aio",
        "code": "async def rapi_twitter_aio_user_likes_by_userid(self,*args,**kwargs):\n    '''Access real-time data as soon as it's posted! With the Twitter AIO API, you can retrieve tweets, spaces, media and profiles instantly. Say goodbye to expensive fees charged by Twitter while still getting access to all the available data.\n\n    \n    \n\n    :param string userId: The userId of the user. You can get it by converting a username to the userId or by searching a user and extracting the restId. defaults to 44196397\n    :param string? cursor: At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.\n    :param string? count: The default count is 20. You can specify a custom one here. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_aio_user_likes_by_userid',kwargs)\n        "
    },
    "rapi_twitter_aio_tweet_details": {
        "api_name": "tweet_details",
        "category": "Social",
        "tool_name": "twitter_aio",
        "code": "async def rapi_twitter_aio_tweet_details(self,*args,**kwargs):\n    '''Access real-time data as soon as it's posted! With the Twitter AIO API, you can retrieve tweets, spaces, media and profiles instantly. Say goodbye to expensive fees charged by Twitter while still getting access to all the available data.\n\n    \n    \n\n    :param string tweetId:  defaults to 1668868113725550592\n    :param string? cursor: At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.\n    :param string? count: The default count is 20. You can specify a custom one here. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_twitter_aio_tweet_details',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_comment_list_by_video": {
        "api_name": "comment_list_by_video",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_comment_list_by_video(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string url: https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782\nor\nhttps://vm.tiktok.com/ZSeQS6B5k/ defaults to https://www.tiktok.com/@tiktok/video/7093219391759764782\n    :param integer? cursor: hasMore is True defaults to 0\n    :param integer? count: max 50 defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_comment_list_by_video',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_music_info": {
        "api_name": "get_music_info",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_music_info(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string url: id or https://vm.tiktok.com/xxxxxxx defaults to 7002634556977908485\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_music_info',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_user_following_list": {
        "api_name": "get_user_following_list",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_user_following_list(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string user_id:  defaults to 107955\n    :param string? time: hasMore is True load next page defaults to 0\n    :param string? count: max 200 defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_user_following_list',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_user_follower_list": {
        "api_name": "get_user_follower_list",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_user_follower_list(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string user_id:  defaults to 107955\n    :param string? time: hasMore is True load next page defaults to 0\n    :param string? count: max 200 defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_user_follower_list',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_related_video_with_keywords": {
        "api_name": "get_related_video_with_keywords",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_related_video_with_keywords(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string keywords:  defaults to Beautiful Girl\n    :param string? region: Please refer to the region list interface for details defaults to US\n    :param integer? sort_type: 0 - Relevance\n1 - Like count\n3 - Date posted defaults to 0\n    :param string? cursor:  defaults to 0\n    :param integer? publish_time: 0 - ALL\n1 - Past 24 hours\n7 - This week\n30 - This month\n90 - Last 3 months\n180 - Last 6 months defaults to 0\n    :param string? count:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_related_video_with_keywords',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_users_detail_info": {
        "api_name": "get_users_detail_info",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_users_detail_info(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string? user_id:  defaults to 107955\n    :param string? unique_id:  defaults to voyagel\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_users_detail_info',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_user_favorite_videos": {
        "api_name": "get_user_favorite_videos",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_user_favorite_videos(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string? count:  defaults to 10\n    :param string? unique_id: voyagel or @voyagel defaults to voyagel\n    :param string? user_id:  defaults to 6741307595983946754\n    :param string? cursor:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_user_favorite_videos',kwargs)\n        "
    },
    "rapi_tiktok_video_feature_summary_get_users_video": {
        "api_name": "get_users_video",
        "category": "Social",
        "tool_name": "tiktok_video_feature_summary",
        "code": "async def rapi_tiktok_video_feature_summary_get_users_video(self,*args,**kwargs):\n    '''Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.\n    \n    \n\n    :param string? count:  defaults to 10\n    :param string? user_id:  defaults to 107955\n    :param string? unique_id: unique_id\ntiktok or @tiktok\n    :param string? cursor:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_feature_summary_get_users_video',kwargs)\n        "
    },
    "rapi_instagram_v2_validate_username": {
        "api_name": "validate_username",
        "category": "Social",
        "tool_name": "instagram_v2",
        "code": "async def rapi_instagram_v2_validate_username(self,*args,**kwargs):\n    '''Instagram most needed endpoints\n    \n    \n\n    :param string username:  defaults to lelepons\n    '''\n    return await self._request_rapid_api('rapi_instagram_v2_validate_username',kwargs)\n        "
    },
    "rapi_instagram_v2_search_hashtags": {
        "api_name": "search_hashtags",
        "category": "Social",
        "tool_name": "instagram_v2",
        "code": "async def rapi_instagram_v2_search_hashtags(self,*args,**kwargs):\n    '''Instagram most needed endpoints\n    \n    \n\n    :param string name:  defaults to fitness\n    '''\n    return await self._request_rapid_api('rapi_instagram_v2_search_hashtags',kwargs)\n        "
    },
    "rapi_instagram_v2_profile": {
        "api_name": "profile",
        "category": "Social",
        "tool_name": "instagram_v2",
        "code": "async def rapi_instagram_v2_profile(self,*args,**kwargs):\n    '''Instagram most needed endpoints\n    \n    \n\n    :param string ig:  defaults to lelepons\n    '''\n    return await self._request_rapid_api('rapi_instagram_v2_profile',kwargs)\n        "
    },
    "rapi_tiktok_private_trending_creators": {
        "api_name": "trending_creators",
        "category": "Social",
        "tool_name": "tiktok_private",
        "code": "async def rapi_tiktok_private_trending_creators(self,*args,**kwargs):\n    '''Fastest,  Highly Maintained TikTok API,  Build For Massive TikTok Scraping. Get TikTok User Profile, Post, Feed, Trends, Hashtags, Music and Download Video Without Watermark.\n    \n    \n\n    :param string? proxy: \n    '''\n    return await self._request_rapid_api('rapi_tiktok_private_trending_creators',kwargs)\n        "
    },
    "rapi_tiktok_private_trending_challenges": {
        "api_name": "trending_challenges",
        "category": "Social",
        "tool_name": "tiktok_private",
        "code": "async def rapi_tiktok_private_trending_challenges(self,*args,**kwargs):\n    '''Fastest,  Highly Maintained TikTok API,  Build For Massive TikTok Scraping. Get TikTok User Profile, Post, Feed, Trends, Hashtags, Music and Download Video Without Watermark.\n    \n    \n\n    :param integer? cursor:  defaults to 0\n    :param string? proxy: \n    :param integer? count:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_tiktok_private_trending_challenges',kwargs)\n        "
    },
    "rapi_instagram_api_2023_get_user_posts_by_username": {
        "api_name": "get_user_posts_by_username",
        "category": "Social",
        "tool_name": "instagram_api_2023",
        "code": "async def rapi_instagram_api_2023_get_user_posts_by_username(self,*args,**kwargs):\n    '''Best Instagram Scraper API 2023 \n\u25cf Launched in May 2023 \n\u25cf 100% real-time data, no cache, no-CORS media, advanced profile, get access to hidden insights & more. \n    \n    \n\n    :param string username:  defaults to instagram\n    :param string? max_id: Leave `max_id` empty for first request then provide `next_max_id` received from previous request to get more items.\n    :param integer? count: number of posts defaults to 12\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_2023_get_user_posts_by_username',kwargs)\n        "
    },
    "rapi_instagram_api_2023_get_reel_by_shortcode": {
        "api_name": "get_reel_by_shortcode",
        "category": "Social",
        "tool_name": "instagram_api_2023",
        "code": "async def rapi_instagram_api_2023_get_reel_by_shortcode(self,*args,**kwargs):\n    '''Best Instagram Scraper API 2023 \n\u25cf Launched in May 2023 \n\u25cf 100% real-time data, no cache, no-CORS media, advanced profile, get access to hidden insights & more. \n    \n    \n\n    :param string shortcode: **How to find shortcode?**\nwww.instagram.com/reel/CrgVBtHr3DP/ here **CrgVBtHr3DP** is shortcode.\nwww.instagram.com/reel/{shortcode} defaults to CrgVBtHr3DP\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_2023_get_reel_by_shortcode',kwargs)\n        "
    },
    "rapi_instagram_api_2023_get_user_reels_by_user_id": {
        "api_name": "get_user_reels_by_user_id",
        "category": "Social",
        "tool_name": "instagram_api_2023",
        "code": "async def rapi_instagram_api_2023_get_user_reels_by_user_id(self,*args,**kwargs):\n    '''Best Instagram Scraper API 2023 \n\u25cf Launched in May 2023 \n\u25cf 100% real-time data, no cache, no-CORS media, advanced profile, get access to hidden insights & more. \n    \n    \n\n    :param integer user_id:  defaults to 25025320\n    :param string? max_id: Leave `max_id` empty for first request then provide `max_id` received from previous request to get more items.\n    '''\n    return await self._request_rapid_api('rapi_instagram_api_2023_get_user_reels_by_user_id',kwargs)\n        "
    },
    "rapi_instagram_api_user_by_username": {
        "api_name": "user_by_username",
        "category": "Social",
        "tool_name": "instagram_api",
        "code": "async def rapi_instagram_api_user_by_username(self,*args,**kwargs):\n    '''Get any information from Instagram.\n    \n    \n\n    :param string username: \n    '''\n    return await self._request_rapid_api('rapi_instagram_api_user_by_username',kwargs)\n        "
    },
    "rapi_instagram_api_user_by_id": {
        "api_name": "user_by_id",
        "category": "Social",
        "tool_name": "instagram_api",
        "code": "async def rapi_instagram_api_user_by_id(self,*args,**kwargs):\n    '''Get any information from Instagram.\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_instagram_api_user_by_id',kwargs)\n        "
    },
    "rapi_reddit_popular_posts": {
        "api_name": "popular_posts",
        "category": "Social",
        "tool_name": "reddit",
        "code": "async def rapi_reddit_popular_posts(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string sort: you can just send `new `or `hot` defaults to new\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_reddit_popular_posts',kwargs)\n        "
    },
    "rapi_reddit_top_posts_by_subreddit": {
        "api_name": "top_posts_by_subreddit",
        "category": "Social",
        "tool_name": "reddit",
        "code": "async def rapi_reddit_top_posts_by_subreddit(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string time: you can just select one item from below:\n`hour`\n`day`\n`week`\n`month`\n`year`\n`all` defaults to year\n    :param string subreddit: example: reddit.com/r/`memes` defaults to memes\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_reddit_top_posts_by_subreddit',kwargs)\n        "
    },
    "rapi_reddit_post_details": {
        "api_name": "post_details",
        "category": "Social",
        "tool_name": "reddit",
        "code": "async def rapi_reddit_post_details(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string post_id:  defaults to t3_t19inj\n    '''\n    return await self._request_rapid_api('rapi_reddit_post_details',kwargs)\n        "
    },
    "rapi_reddit_rising_popular_posts": {
        "api_name": "rising_popular_posts",
        "category": "Social",
        "tool_name": "reddit",
        "code": "async def rapi_reddit_rising_popular_posts(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_reddit_rising_popular_posts',kwargs)\n        "
    },
    "rapi_reddit_top_popular_posts": {
        "api_name": "top_popular_posts",
        "category": "Social",
        "tool_name": "reddit",
        "code": "async def rapi_reddit_top_popular_posts(self,*args,**kwargs):\n    '''Please join our telegram channel to get notified about updates. https://t.me/social_miner_news\n    \n    \n\n    :param string time: you can just select one item from below:\n`hour`\n`day`\n`week`\n`month`\n`year`\n`all` defaults to year\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_reddit_top_popular_posts',kwargs)\n        "
    },
    "rapi_quiz_questions": {
        "api_name": "questions",
        "category": "Social",
        "tool_name": "quiz",
        "code": "async def rapi_quiz_questions(self,*args,**kwargs):\n    '''The Quiz API is a powerful and versatile tool designed to provide developers with easy access to a wide range of quiz-related functionalities. With this API, you can seamlessly integrate quizzes into your applications, websites, or educational platforms. Whether you're building a learning management system, a trivia game, or a quiz-based assessment platform, the Quiz API has got you covered.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quiz_questions',kwargs)\n        "
    },
    "rapi_ig_private_api_highlights": {
        "api_name": "highlights",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_highlights(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_highlights',kwargs)\n        "
    },
    "rapi_ig_private_api_info": {
        "api_name": "info",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_info(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_info',kwargs)\n        "
    },
    "rapi_ig_private_api_search": {
        "api_name": "search",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_search(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kim\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_search',kwargs)\n        "
    },
    "rapi_ig_private_api_publications": {
        "api_name": "publications",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_publications(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? nextMaxId: \n    :param string? username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_publications',kwargs)\n        "
    },
    "rapi_ig_private_api_stories": {
        "api_name": "stories",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_stories(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kimkardashian\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_stories',kwargs)\n        "
    },
    "rapi_ig_private_api_igtv": {
        "api_name": "igtv",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_igtv(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? username:  defaults to kimkardashian\n    :param string? nextMaxId: \n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_igtv',kwargs)\n        "
    },
    "rapi_ig_private_api_highlight_items": {
        "api_name": "highlight_items",
        "category": "Social",
        "tool_name": "ig_private_api",
        "code": "async def rapi_ig_private_api_highlight_items(self,*args,**kwargs):\n    '''IG Private API - get any Instagram stories, Highlights, Posts, Photos and Videos from public profiles by API Test for free \ud83d\ude03 You can get quick help via telegram app: @insta4root\n    \n    \n\n    :param string? highlightId:  defaults to highlight:18064021144190483\n    '''\n    return await self._request_rapid_api('rapi_ig_private_api_highlight_items',kwargs)\n        "
    },
    "rapi_instagram_v5_user_search": {
        "api_name": "user_search",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_user_search(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string keyword:  defaults to insta\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_user_search',kwargs)\n        "
    },
    "rapi_instagram_v5_location_search": {
        "api_name": "location_search",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_location_search(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string keyword:  defaults to paris\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_location_search',kwargs)\n        "
    },
    "rapi_instagram_v5_search_location": {
        "api_name": "search_location",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_search_location(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string keyword:  defaults to paris\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_search_location',kwargs)\n        "
    },
    "rapi_instagram_v5_search_hashtag": {
        "api_name": "search_hashtag",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_search_hashtag(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string keyword:  defaults to love\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_search_hashtag',kwargs)\n        "
    },
    "rapi_instagram_v5_search_user": {
        "api_name": "search_user",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_search_user(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string keyword:  defaults to insta\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_search_user',kwargs)\n        "
    },
    "rapi_instagram_v5_location_information": {
        "api_name": "location_information",
        "category": "Social",
        "tool_name": "instagram_v5",
        "code": "async def rapi_instagram_v5_location_information(self,*args,**kwargs):\n    '''Fast Live Instagram API.All information from Instagram consistently and quickly! It makes 3 times in the backend request for you to get 100% successful response. Need help or custom plan? https://instagapi.com - https://t.me/instagapi\n    \n    \n\n    :param string locationid:  defaults to 331004901\n    '''\n    return await self._request_rapid_api('rapi_instagram_v5_location_information',kwargs)\n        "
    },
    "rapi_greet_generator_get_greet": {
        "api_name": "get_greet",
        "category": "Social",
        "tool_name": "greet_generator",
        "code": "async def rapi_greet_generator_get_greet(self,*args,**kwargs):\n    '''Greet Generator\n    \n    \n\n    :param string name:  defaults to Amir\n    :param string cringeLevel:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_greet_generator_get_greet',kwargs)\n        "
    },
    "rapi_soundcloud_song_download": {
        "api_name": "song_download",
        "category": "Social",
        "tool_name": "soundcloud",
        "code": "async def rapi_soundcloud_song_download(self,*args,**kwargs):\n    '''Soundcloud api\n    \n    \n\n    :param string track_url:  defaults to https://soundcloud.com/user-977421934/the-phoenix\n    '''\n    return await self._request_rapid_api('rapi_soundcloud_song_download',kwargs)\n        "
    },
    "rapi_likee_downloader_download_likee_videos_get_all_videos": {
        "api_name": "get_all_videos",
        "category": "Social",
        "tool_name": "likee_downloader_download_likee_videos",
        "code": "async def rapi_likee_downloader_download_likee_videos_get_all_videos(self,*args,**kwargs):\n    '''This API allows you to retrieve information about a specific video on Likee. You can use it to retrieve details such as title, description, image, video. With the Likee Downloader API, you can easily access and leverage the wealth of information available on Likee.\n    \n    \n\n    :param string uid: You will find in Get User Info endpoint. defaults to 962176076\n    :param string? pageSize:  defaults to 10\n    :param string? count:  defaults to 4\n    :param string? page:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_likee_downloader_download_likee_videos_get_all_videos',kwargs)\n        "
    },
    "rapi_likee_downloader_download_likee_videos_get_user_info": {
        "api_name": "get_user_info",
        "category": "Social",
        "tool_name": "likee_downloader_download_likee_videos",
        "code": "async def rapi_likee_downloader_download_likee_videos_get_user_info(self,*args,**kwargs):\n    '''This API allows you to retrieve information about a specific video on Likee. You can use it to retrieve details such as title, description, image, video. With the Likee Downloader API, you can easily access and leverage the wealth of information available on Likee.\n    \n    \n\n    :param string username: Example: MariamHany\nExtract username from url: https://likee.video/@MariamHany defaults to MariamHany\n    '''\n    return await self._request_rapid_api('rapi_likee_downloader_download_likee_videos_get_user_info',kwargs)\n        "
    },
    "rapi_olato_quotes_love_quote": {
        "api_name": "love_quote",
        "category": "Social",
        "tool_name": "olato_quotes",
        "code": "async def rapi_olato_quotes_love_quote(self,*args,**kwargs):\n    '''Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.\n    \n    \n\n    :param string? quotes:  defaults to random quotes\n    '''\n    return await self._request_rapid_api('rapi_olato_quotes_love_quote',kwargs)\n        "
    },
    "rapi_olato_quotes_success_quote": {
        "api_name": "success_quote",
        "category": "Social",
        "tool_name": "olato_quotes",
        "code": "async def rapi_olato_quotes_success_quote(self,*args,**kwargs):\n    '''Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.\n    \n    \n\n    :param string? quotes:  defaults to random quotes\n    '''\n    return await self._request_rapid_api('rapi_olato_quotes_success_quote',kwargs)\n        "
    },
    "rapi_olato_quotes_motivation_quote": {
        "api_name": "motivation_quote",
        "category": "Social",
        "tool_name": "olato_quotes",
        "code": "async def rapi_olato_quotes_motivation_quote(self,*args,**kwargs):\n    '''Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.\n    \n    \n\n    :param string? quotes:  defaults to random quotes\n    '''\n    return await self._request_rapid_api('rapi_olato_quotes_motivation_quote',kwargs)\n        "
    },
    "rapi_popular_languages_languages": {
        "api_name": "languages",
        "category": "Social",
        "tool_name": "popular_languages",
        "code": "async def rapi_popular_languages_languages(self,*args,**kwargs):\n    '''Most popular languages in the world\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_popular_languages_languages',kwargs)\n        "
    },
    "rapi_tiktok_solutions_user_data_by_secuid": {
        "api_name": "user_data_by_secuid",
        "category": "Social",
        "tool_name": "tiktok_solutions",
        "code": "async def rapi_tiktok_solutions_user_data_by_secuid(self,*args,**kwargs):\n    '''Best TikTok solutions for scrap info\n    \n    \n\n    :param string sec_user_id:  defaults to MS4wLjABAAAABKjQkOz_IIzXXzEAl_9LGsWhvK-gBnlczwRPXK8EmxAp6K3X0qiaP5_OEqmm0XwG\n    '''\n    return await self._request_rapid_api('rapi_tiktok_solutions_user_data_by_secuid',kwargs)\n        "
    },
    "rapi_tiktok_solutions_user_data_by_name": {
        "api_name": "user_data_by_name",
        "category": "Social",
        "tool_name": "tiktok_solutions",
        "code": "async def rapi_tiktok_solutions_user_data_by_name(self,*args,**kwargs):\n    '''Best TikTok solutions for scrap info\n    \n    \n\n    :param string username:  defaults to mrbeast\n    '''\n    return await self._request_rapid_api('rapi_tiktok_solutions_user_data_by_name',kwargs)\n        "
    },
    "rapi_tiktok_solutions_hashtag_data_by_name": {
        "api_name": "hashtag_data_by_name",
        "category": "Social",
        "tool_name": "tiktok_solutions",
        "code": "async def rapi_tiktok_solutions_hashtag_data_by_name(self,*args,**kwargs):\n    '''Best TikTok solutions for scrap info\n    \n    \n\n    :param string challenge_name:  defaults to food\n    '''\n    return await self._request_rapid_api('rapi_tiktok_solutions_hashtag_data_by_name',kwargs)\n        "
    },
    "rapi_snapchat_getlensitem": {
        "api_name": "getlensitem",
        "category": "Social",
        "tool_name": "snapchat",
        "code": "async def rapi_snapchat_getlensitem(self,*args,**kwargs):\n    '''Snapchat API\n    \n    \n\n    :param string lens_id:  defaults to 41a72e9ae9a44f8891327ce6cf1c344d\n    '''\n    return await self._request_rapid_api('rapi_snapchat_getlensitem',kwargs)\n        "
    },
    "rapi_snapchat_getstorybylink": {
        "api_name": "getstorybylink",
        "category": "Social",
        "tool_name": "snapchat",
        "code": "async def rapi_snapchat_getstorybylink(self,*args,**kwargs):\n    '''Snapchat API\n    \n    \n\n    :param string story_link: https://story.snapchat.com/p/`{businessProfileId}`/`{storyId}` defaults to https://story.snapchat.com/p/22b53018-973f-4efb-b1c1-c1acfd937ca9/2407084049637376\n    '''\n    return await self._request_rapid_api('rapi_snapchat_getstorybylink',kwargs)\n        "
    },
    "rapi_snapchat_getlensesbyhashtag": {
        "api_name": "getlensesbyhashtag",
        "category": "Social",
        "tool_name": "snapchat",
        "code": "async def rapi_snapchat_getlensesbyhashtag(self,*args,**kwargs):\n    '''Snapchat API\n    \n    \n\n    :param string hashtag:  defaults to music\n    '''\n    return await self._request_rapid_api('rapi_snapchat_getlensesbyhashtag',kwargs)\n        "
    },
    "rapi_snapchat_getmusiclenses": {
        "api_name": "getmusiclenses",
        "category": "Social",
        "tool_name": "snapchat",
        "code": "async def rapi_snapchat_getmusiclenses(self,*args,**kwargs):\n    '''Snapchat API\n    \n    \n\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_snapchat_getmusiclenses',kwargs)\n        "
    },
    "rapi_snapchat_getworldlenses": {
        "api_name": "getworldlenses",
        "category": "Social",
        "tool_name": "snapchat",
        "code": "async def rapi_snapchat_getworldlenses(self,*args,**kwargs):\n    '''Snapchat API\n    \n    \n\n    :param string? cursor: \n    '''\n    return await self._request_rapid_api('rapi_snapchat_getworldlenses',kwargs)\n        "
    },
    "rapi_initials_avatar_avatar": {
        "api_name": "avatar",
        "category": "Social",
        "tool_name": "initials_avatar",
        "code": "async def rapi_initials_avatar_avatar(self,*args,**kwargs):\n    '''Generates initials avatar image from given name\n    \n    \n\n    :param string? name: Name defaults to john doe\n    :param boolean? rounded: Rounded avatar defaults to True\n    :param boolean? uppercase: Initials uppercase defaults to True\n    :param integer? font-size: Initials font size between 0.1 to 1 (default 0.5) defaults to 0.5\n    :param integer? length: Initials length (default 2) defaults to 2\n    :param integer? size: Avatar size between 16 to 256 (default 64) defaults to 128\n    :param string? background: Background color (RRGGBB) defaults to 000000\n    :param string? color: Initials color (RRGGBB) defaults to ffffff\n    '''\n    return await self._request_rapid_api('rapi_initials_avatar_avatar',kwargs)\n        "
    },
    "rapi_kwai_search_music": {
        "api_name": "search_music",
        "category": "Social",
        "tool_name": "kwai",
        "code": "async def rapi_kwai_search_music(self,*args,**kwargs):\n    '''Kwai Private API (TikTok like mobile app), Best Kwai Scraping API, non-blocking API, contact us if you want a custom plan. http://t.me/aimadnet\n    \n    \n\n    :param string keyword:  defaults to pitbull\n    :param string? country:  defaults to ma\n    :param string? pcursor: \n    :param string? language:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_kwai_search_music',kwargs)\n        "
    },
    "rapi_kwai_get_music": {
        "api_name": "get_music",
        "category": "Social",
        "tool_name": "kwai",
        "code": "async def rapi_kwai_get_music(self,*args,**kwargs):\n    '''Kwai Private API (TikTok like mobile app), Best Kwai Scraping API, non-blocking API, contact us if you want a custom plan. http://t.me/aimadnet\n    \n    \n\n    :param string musicId:  defaults to 195023688857078112\n    :param string? country:  defaults to ma\n    :param string? language:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_kwai_get_music',kwargs)\n        "
    },
    "rapi_kwai_top_music": {
        "api_name": "top_music",
        "category": "Social",
        "tool_name": "kwai",
        "code": "async def rapi_kwai_top_music(self,*args,**kwargs):\n    '''Kwai Private API (TikTok like mobile app), Best Kwai Scraping API, non-blocking API, contact us if you want a custom plan. http://t.me/aimadnet\n    \n    \n\n    :param string? count:  defaults to 20\n    :param string? pcursor: \n    :param string? language:  defaults to en\n    :param string? country:  defaults to ma\n    '''\n    return await self._request_rapid_api('rapi_kwai_top_music',kwargs)\n        "
    },
    "rapi_kwai_feed_hot": {
        "api_name": "feed_hot",
        "category": "Social",
        "tool_name": "kwai",
        "code": "async def rapi_kwai_feed_hot(self,*args,**kwargs):\n    '''Kwai Private API (TikTok like mobile app), Best Kwai Scraping API, non-blocking API, contact us if you want a custom plan. http://t.me/aimadnet\n    \n    \n\n    :param string? country:  defaults to ma\n    :param string? count:  defaults to 30\n    :param string? language:  defaults to en\n    :param string? pcursor: \n    '''\n    return await self._request_rapid_api('rapi_kwai_feed_hot',kwargs)\n        "
    },
    "rapi_tokapi_mobile_version_v1_music_posts_music_id": {
        "api_name": "v1_music_posts_music_id",
        "category": "Social",
        "tool_name": "tokapi_mobile_version",
        "code": "async def rapi_tokapi_mobile_version_v1_music_posts_music_id(self,*args,**kwargs):\n    '''Highly available tiktok **mobile** API. We are doing our best for make your life easy.Bigger API plans and **additional functionality** are available on request.  Feel free to contact us on Telegram: [https://t.me/somjik_tokapi](https://t.me/somjik_tokapi) #tiktok #tik #tok #tik-tok #video #music #user #feed #hashtag #challenge #trending #trend #comments #comment #image #photo #media #search #scrapper #grabber\n    \n    \n\n    :param string music_id:  defaults to 6928004115846924290\n    :param integer? offset: If in a response you get parameter hasMore equal to 1 then you also have cursor value for a next set\n    :param integer? count:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_tokapi_mobile_version_v1_music_posts_music_id',kwargs)\n        "
    },
    "rapi_tokapi_mobile_version_v1_sticker": {
        "api_name": "v1_sticker",
        "category": "Social",
        "tool_name": "tokapi_mobile_version",
        "code": "async def rapi_tokapi_mobile_version_v1_sticker(self,*args,**kwargs):\n    '''Highly available tiktok **mobile** API. We are doing our best for make your life easy.Bigger API plans and **additional functionality** are available on request.  Feel free to contact us on Telegram: [https://t.me/somjik_tokapi](https://t.me/somjik_tokapi) #tiktok #tik #tok #tik-tok #video #music #user #feed #hashtag #challenge #trending #trend #comments #comment #image #photo #media #search #scrapper #grabber\n    \n    \n\n    :param string sticker_ids: Comma separated ids defaults to 1108584,1108584\n    '''\n    return await self._request_rapid_api('rapi_tokapi_mobile_version_v1_sticker',kwargs)\n        "
    },
    "rapi_tokapi_mobile_version_v1_hashtag_hashtag_id": {
        "api_name": "v1_hashtag_hashtag_id",
        "category": "Social",
        "tool_name": "tokapi_mobile_version",
        "code": "async def rapi_tokapi_mobile_version_v1_hashtag_hashtag_id(self,*args,**kwargs):\n    '''Highly available tiktok **mobile** API. We are doing our best for make your life easy.Bigger API plans and **additional functionality** are available on request.  Feel free to contact us on Telegram: [https://t.me/somjik_tokapi](https://t.me/somjik_tokapi) #tiktok #tik #tok #tik-tok #video #music #user #feed #hashtag #challenge #trending #trend #comments #comment #image #photo #media #search #scrapper #grabber\n    \n    \n\n    :param string hashtag_id:  defaults to 2878999\n    '''\n    return await self._request_rapid_api('rapi_tokapi_mobile_version_v1_hashtag_hashtag_id',kwargs)\n        "
    },
    "rapi_tokapi_mobile_version_v1_sticker_sticker_id": {
        "api_name": "v1_sticker_sticker_id",
        "category": "Social",
        "tool_name": "tokapi_mobile_version",
        "code": "async def rapi_tokapi_mobile_version_v1_sticker_sticker_id(self,*args,**kwargs):\n    '''Highly available tiktok **mobile** API. We are doing our best for make your life easy.Bigger API plans and **additional functionality** are available on request.  Feel free to contact us on Telegram: [https://t.me/somjik_tokapi](https://t.me/somjik_tokapi) #tiktok #tik #tok #tik-tok #video #music #user #feed #hashtag #challenge #trending #trend #comments #comment #image #photo #media #search #scrapper #grabber\n    \n    \n\n    :param string sticker_id:  defaults to 1108584\n    '''\n    return await self._request_rapid_api('rapi_tokapi_mobile_version_v1_sticker_sticker_id',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v2_search_music": {
        "api_name": "search_music",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v2",
        "code": "async def rapi_tiktok_video_no_watermark_v2_search_music(self,*args,**kwargs):\n    '''The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail. Contact me: phamvandienofficial@gmail.com if you are interested in the source code\n***\nIf you encounter any errors, please contact me so I can fix it quickly.\n***\nContact me: phamvandienofficial@gmail.com\n    \n    \n\n    :param string keywords:  defaults to thuyen quyen remix\n    :param integer? count: max=30 defaults to 5\n    :param ENUM? cursor: next page\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v2_search_music',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v2_search_challenge": {
        "api_name": "search_challenge",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v2",
        "code": "async def rapi_tiktok_video_no_watermark_v2_search_challenge(self,*args,**kwargs):\n    '''The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail. Contact me: phamvandienofficial@gmail.com if you are interested in the source code\n***\nIf you encounter any errors, please contact me so I can fix it quickly.\n***\nContact me: phamvandienofficial@gmail.com\n    \n    \n\n    :param string keywords:  defaults to Su That La\n    :param integer? cursor: next page defaults to 0\n    :param integer? count: max=5 defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v2_search_challenge',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v2_get_reply_comment_by_id": {
        "api_name": "get_reply_comment_by_id",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v2",
        "code": "async def rapi_tiktok_video_no_watermark_v2_get_reply_comment_by_id(self,*args,**kwargs):\n    '''The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail. Contact me: phamvandienofficial@gmail.com if you are interested in the source code\n***\nIf you encounter any errors, please contact me so I can fix it quickly.\n***\nContact me: phamvandienofficial@gmail.com\n    \n    \n\n    :param integer cid:  defaults to 7178309240628658970\n    :param integer aweme_id:  defaults to 7178094165614464282\n    :param integer? count: max=30 defaults to 5\n    :param integer? cursor: next page defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v2_get_reply_comment_by_id',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v2_get_user_follow_list": {
        "api_name": "get_user_follow_list",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v2",
        "code": "async def rapi_tiktok_video_no_watermark_v2_get_user_follow_list(self,*args,**kwargs):\n    '''The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail. Contact me: phamvandienofficial@gmail.com if you are interested in the source code\n***\nIf you encounter any errors, please contact me so I can fix it quickly.\n***\nContact me: phamvandienofficial@gmail.com\n    \n    \n\n    :param string sec_uid:  defaults to MS4wLjABAAAAv7iSuuXDJGDvJkmH_vz1qkDZYo1apxgzaxdBSeIuPiM\n    :param ENUM type: \n    :param integer? maxCursor:  defaults to 0\n    :param integer? count: max=50 defaults to 50\n    :param integer? minCursor:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v2_get_user_follow_list',kwargs)\n        "
    },
    "rapi_tiktok_video_no_watermark_v2_get_info_user": {
        "api_name": "get_info_user",
        "category": "Social",
        "tool_name": "tiktok_video_no_watermark_v2",
        "code": "async def rapi_tiktok_video_no_watermark_v2_get_info_user(self,*args,**kwargs):\n    '''The API helps you to download and get the video download link without the Tiktok logo quickly, completely and in detail. Contact me: phamvandienofficial@gmail.com if you are interested in the source code\n***\nIf you encounter any errors, please contact me so I can fix it quickly.\n***\nContact me: phamvandienofficial@gmail.com\n    \n    \n\n    :param string username:  defaults to tiktok\n    '''\n    return await self._request_rapid_api('rapi_tiktok_video_no_watermark_v2_get_info_user',kwargs)\n        "
    },
    "rapi_tiktok_user_get_search_user": {
        "api_name": "get_search_user",
        "category": "Social",
        "tool_name": "tiktok_user",
        "code": "async def rapi_tiktok_user_get_search_user(self,*args,**kwargs):\n    '''Get profile information from tiktok user\n    \n    \n\n    :param string id:  defaults to therock\n    '''\n    return await self._request_rapid_api('rapi_tiktok_user_get_search_user',kwargs)\n        "
    },
    "rapi_facegen_generate_a_face": {
        "api_name": "generate_a_face",
        "category": "Social",
        "tool_name": "facegen",
        "code": "async def rapi_facegen_generate_a_face(self,*args,**kwargs):\n    '''Generation of faces by AI. (Occasionally, a neural network makes mistakes, which is why artifacts appear: an incorrectly bent pattern, a strange hair color, and so on.)\n    \n    \n\n    :param string AI:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_facegen_generate_a_face',kwargs)\n        "
    },
    "rapi_instagram_1_hashtag": {
        "api_name": "hashtag",
        "category": "Social",
        "tool_name": "instagram_1",
        "code": "async def rapi_instagram_1_hashtag(self,*args,**kwargs):\n    '''Collect instagram data with no headaches - more APIs are available, please request any that are not yet available!\n    \n    \n\n    :param string hashtag:  defaults to football\n    :param boolean? raw: set to 'true' or '1' to return the raw unprocessed data feed\n    '''\n    return await self._request_rapid_api('rapi_instagram_1_hashtag',kwargs)\n        "
    },
    "rapi_instagram_1_feed_by_username": {
        "api_name": "feed_by_username",
        "category": "Social",
        "tool_name": "instagram_1",
        "code": "async def rapi_instagram_1_feed_by_username(self,*args,**kwargs):\n    '''Collect instagram data with no headaches - more APIs are available, please request any that are not yet available!\n    \n    \n\n    :param string username:  defaults to therock\n    :param boolean? raw: set to 'true' or '1' to return the raw unprocessed data feed\n    '''\n    return await self._request_rapid_api('rapi_instagram_1_feed_by_username',kwargs)\n        "
    },
    "rapi_les_pagesjaunes_les_pagesblanche_france_pagesblanches": {
        "api_name": "pagesblanches",
        "category": "Search",
        "tool_name": "les_pagesjaunes_les_pagesblanche_france",
        "code": "async def rapi_les_pagesjaunes_les_pagesblanche_france_pagesblanches(self,*args,**kwargs):\n    '''Extraire les donn\u00e9es du Pages Jaunes et Pages Blanches scraping email et t\u00e9l\u00e9phone \n    \n    \n\n    :param integer pbpage:  defaults to 1\n    :param string pbkeyword:  defaults to Patrick\n    :param string pblocation:  defaults to Paris\n    '''\n    return await self._request_rapid_api('rapi_les_pagesjaunes_les_pagesblanche_france_pagesblanches',kwargs)\n        "
    },
    "rapi_les_pagesjaunes_les_pagesblanche_france_pagesjaunes": {
        "api_name": "pagesjaunes",
        "category": "Search",
        "tool_name": "les_pagesjaunes_les_pagesblanche_france",
        "code": "async def rapi_les_pagesjaunes_les_pagesblanche_france_pagesjaunes(self,*args,**kwargs):\n    '''Extraire les donn\u00e9es du Pages Jaunes et Pages Blanches scraping email et t\u00e9l\u00e9phone \n    \n    \n\n    :param integer pjpage:  defaults to 1\n    :param string pjlocation:  defaults to Paris\n    :param string pjkeyword:  defaults to Restaurant\n    '''\n    return await self._request_rapid_api('rapi_les_pagesjaunes_les_pagesblanche_france_pagesjaunes',kwargs)\n        "
    },
    "rapi_youtube_search_results_youtubesearchresults": {
        "api_name": "youtubesearchresults",
        "category": "Search",
        "tool_name": "youtube_search_results",
        "code": "async def rapi_youtube_search_results_youtubesearchresults(self,*args,**kwargs):\n    '''Fetch the YouTube Search Results and the information for each item for a specific search term, without any limits!\n    \n    \n\n    :param string q: The URL Encoded search Query defaults to justin+bieber\n    :param string? next: Leave empty if you want the results from the first page.\nUse the value from [nextpageRef] from the previous request (for example first page) to get the next page (for example 2nd page)\nMUST BE URL ENCODED\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_results_youtubesearchresults',kwargs)\n        "
    },
    "rapi_city_and_state_search_api_city_details": {
        "api_name": "city_details",
        "category": "Search",
        "tool_name": "city_and_state_search_api",
        "code": "async def rapi_city_and_state_search_api_city_details(self,*args,**kwargs):\n    '''A easy-to-use API for search cities, states, and countries from around the world.\n    \n    \n\n    :param string id:  defaults to 132782\n    '''\n    return await self._request_rapid_api('rapi_city_and_state_search_api_city_details',kwargs)\n        "
    },
    "rapi_city_and_state_search_api_states_details": {
        "api_name": "states_details",
        "category": "Search",
        "tool_name": "city_and_state_search_api",
        "code": "async def rapi_city_and_state_search_api_states_details(self,*args,**kwargs):\n    '''A easy-to-use API for search cities, states, and countries from around the world.\n    \n    \n\n    :param string id:  defaults to 4022\n    '''\n    return await self._request_rapid_api('rapi_city_and_state_search_api_states_details',kwargs)\n        "
    },
    "rapi_city_and_state_search_api_states_list": {
        "api_name": "states_list",
        "category": "Search",
        "tool_name": "city_and_state_search_api",
        "code": "async def rapi_city_and_state_search_api_states_list(self,*args,**kwargs):\n    '''A easy-to-use API for search cities, states, and countries from around the world.\n    \n    \n\n    :param string? country_id: \n    :param string? sortOrder: \n    :param string? sortBy: \n    :param integer? limit: \n    :param string? country_code:  defaults to IN\n    :param string? country_name: \n    '''\n    return await self._request_rapid_api('rapi_city_and_state_search_api_states_list',kwargs)\n        "
    },
    "rapi_city_and_state_search_api_country_details": {
        "api_name": "country_details",
        "category": "Search",
        "tool_name": "city_and_state_search_api",
        "code": "async def rapi_city_and_state_search_api_country_details(self,*args,**kwargs):\n    '''A easy-to-use API for search cities, states, and countries from around the world.\n    \n    \n\n    :param string country: It can be country name, iso2 or id. defaults to IN\n    '''\n    return await self._request_rapid_api('rapi_city_and_state_search_api_country_details',kwargs)\n        "
    },
    "rapi_city_and_state_search_api_countries_list": {
        "api_name": "countries_list",
        "category": "Search",
        "tool_name": "city_and_state_search_api",
        "code": "async def rapi_city_and_state_search_api_countries_list(self,*args,**kwargs):\n    '''A easy-to-use API for search cities, states, and countries from around the world.\n    \n    \n\n    :param string? sortOrder: \n    :param string? sortBy: \n    :param integer? limit: \n    '''\n    return await self._request_rapid_api('rapi_city_and_state_search_api_countries_list',kwargs)\n        "
    },
    "rapi_google_search_v3_image_search": {
        "api_name": "image_search",
        "category": "Search",
        "tool_name": "google_search_v3",
        "code": "async def rapi_google_search_v3_image_search(self,*args,**kwargs):\n    '''API used to retrieve data from Google search results in real time. Support web search and image search\n    \n    \n\n    :param string q:  defaults to Word Cup\n    :param string? start: The index of the first result to return. defaults to 0\n    :param integer? num: Number of search results to return.\nValid values are integers between 1 and 20, inclusive defaults to 10\n    :param string? gl: The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value. defaults to us\n    :param string? lr: Restricts the search to documents written in a particular language defaults to lang_en\n    '''\n    return await self._request_rapid_api('rapi_google_search_v3_image_search',kwargs)\n        "
    },
    "rapi_google_search_v3_web_search": {
        "api_name": "web_search",
        "category": "Search",
        "tool_name": "google_search_v3",
        "code": "async def rapi_google_search_v3_web_search(self,*args,**kwargs):\n    '''API used to retrieve data from Google search results in real time. Support web search and image search\n    \n    \n\n    :param string q: Search query defaults to word cup\n    :param integer? num: Number of search results to return.\nValid values are integers between 1 and 20, inclusive defaults to 10\n    :param string? start: The index of the first result to return. defaults to 0\n    :param string? gl: The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value. defaults to us\n    :param string? lr: Restricts the search to documents written in a particular language defaults to lang_en\n    '''\n    return await self._request_rapid_api('rapi_google_search_v3_web_search',kwargs)\n        "
    },
    "rapi_fiverr_pro_services_categories": {
        "api_name": "categories",
        "category": "Search",
        "tool_name": "fiverr_pro_services",
        "code": "async def rapi_fiverr_pro_services_categories(self,*args,**kwargs):\n    '''API to provide a list of vetted professional sellers for any category.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fiverr_pro_services_categories',kwargs)\n        "
    },
    "rapi_fiverr_pro_services_services": {
        "api_name": "services",
        "category": "Search",
        "tool_name": "fiverr_pro_services",
        "code": "async def rapi_fiverr_pro_services_services(self,*args,**kwargs):\n    '''API to provide a list of vetted professional sellers for any category.\n    \n    \n\n    :param string category_name:  defaults to Graphics  & Design: Logo Design\n    :param integer? page:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_fiverr_pro_services_services',kwargs)\n        "
    },
    "rapi_webit_image_search_reverse_search_by_image": {
        "api_name": "reverse_search_by_image",
        "category": "Search",
        "tool_name": "webit_image_search",
        "code": "async def rapi_webit_image_search_reverse_search_by_image(self,*args,**kwargs):\n    '''Powerful web image search with rating, reverse search by image and multi-lingual capabilities.\n    \n    \n\n    :param string url: The URL to search images by. A default URL from Wikipedia containing the following pizza has been used.\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg) defaults to https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg\n    :param integer? number:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_webit_image_search_reverse_search_by_image',kwargs)\n        "
    },
    "rapi_webit_image_search_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "webit_image_search",
        "code": "async def rapi_webit_image_search_search(self,*args,**kwargs):\n    '''Powerful web image search with rating, reverse search by image and multi-lingual capabilities.\n    \n    \n\n    :param string q:  defaults to pizza\n    :param integer? number:  defaults to 10\n    :param ENUM? search_filter: \n    '''\n    return await self._request_rapid_api('rapi_webit_image_search_search',kwargs)\n        "
    },
    "rapi_google_trends_regions": {
        "api_name": "regions",
        "category": "Search",
        "tool_name": "google_trends",
        "code": "async def rapi_google_trends_regions(self,*args,**kwargs):\n    '''An API used to access data about search trends on Google based on specific keywords, time range, and location.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_google_trends_regions',kwargs)\n        "
    },
    "rapi_image_search_api_image_search": {
        "api_name": "image_search",
        "category": "Search",
        "tool_name": "image_search_api",
        "code": "async def rapi_image_search_api_image_search(self,*args,**kwargs):\n    '''An API that returns the URL and label of images related to a keyword, and also a list of related searches.\n    \n    \n\n    :param string? imgc:  defaults to black\n    :param string? q:  defaults to cars\n    '''\n    return await self._request_rapid_api('rapi_image_search_api_image_search',kwargs)\n        "
    },
    "rapi_youtube_search_v3_listallsuggestions": {
        "api_name": "listallsuggestions",
        "category": "Search",
        "tool_name": "youtube_search_v3",
        "code": "async def rapi_youtube_search_v3_listallsuggestions(self,*args,**kwargs):\n    '''Welcome to the YouTube Search API documentation! This comprehensive guide provides developers with the necessary information and resources to integrate our powerful search functionality into their applications and services. With this API, you can easily retrieve search results from YouTube, including videos, channels, playlists, and more, based on specific search queries and parameters. Whether you're building a video discovery platform, content aggregator, or personalized recommendation syst...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_youtube_search_v3_listallsuggestions',kwargs)\n        "
    },
    "rapi_youtube_search_v3_searchcontent": {
        "api_name": "searchcontent",
        "category": "Search",
        "tool_name": "youtube_search_v3",
        "code": "async def rapi_youtube_search_v3_searchcontent(self,*args,**kwargs):\n    '''Welcome to the YouTube Search API documentation! This comprehensive guide provides developers with the necessary information and resources to integrate our powerful search functionality into their applications and services. With this API, you can easily retrieve search results from YouTube, including videos, channels, playlists, and more, based on specific search queries and parameters. Whether you're building a video discovery platform, content aggregator, or personalized recommendation syst...\n    \n    \n\n    :param string? q: \n    '''\n    return await self._request_rapid_api('rapi_youtube_search_v3_searchcontent',kwargs)\n        "
    },
    "rapi_youtube_search_v3_getvideodetails": {
        "api_name": "getvideodetails",
        "category": "Search",
        "tool_name": "youtube_search_v3",
        "code": "async def rapi_youtube_search_v3_getvideodetails(self,*args,**kwargs):\n    '''Welcome to the YouTube Search API documentation! This comprehensive guide provides developers with the necessary information and resources to integrate our powerful search functionality into their applications and services. With this API, you can easily retrieve search results from YouTube, including videos, channels, playlists, and more, based on specific search queries and parameters. Whether you're building a video discovery platform, content aggregator, or personalized recommendation syst...\n    \n    \n\n    :param string id: (Required) Channel ID\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_v3_getvideodetails',kwargs)\n        "
    },
    "rapi_neo_google_search_image_search": {
        "api_name": "image_search",
        "category": "Search",
        "tool_name": "neo_google_search",
        "code": "async def rapi_neo_google_search_image_search(self,*args,**kwargs):\n    '''API used to retrieve data from Google search results in real time. Support web search and image search\n    \n    \n\n    :param string q: Search query defaults to New York \n    :param string? gl: The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value defaults to US\n    :param string? lr: Restricts the search to documents written in a particular language defaults to lang_en\n    :param integer? start: The index of the first result to return. defaults to 0\n    :param integer? num: Number of search results to return.\nValid values are integers between 1 and 20, inclusive defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_neo_google_search_image_search',kwargs)\n        "
    },
    "rapi_vin_decoder_vin_decoder_extended": {
        "api_name": "vin_decoder_extended",
        "category": "Search",
        "tool_name": "vin_decoder",
        "code": "async def rapi_vin_decoder_vin_decoder_extended(self,*args,**kwargs):\n    '''This VIN decoder covers up to 168 fields for the USA and Canada. It also includes VIN lookup by US license plate and state. The database is updated regularly. \n[View documents](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19/details)\n    \n    \n\n    :param string vin: The VIN must be 17 characters defaults to 5YJ3E1EA6PF384836\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_vin_decoder_extended',kwargs)\n        "
    },
    "rapi_vin_decoder_vin_decoder_basic": {
        "api_name": "vin_decoder_basic",
        "category": "Search",
        "tool_name": "vin_decoder",
        "code": "async def rapi_vin_decoder_vin_decoder_basic(self,*args,**kwargs):\n    '''This VIN decoder covers up to 168 fields for the USA and Canada. It also includes VIN lookup by US license plate and state. The database is updated regularly. \n[View documents](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19/details)\n    \n    \n\n    :param string vin: The VIN must be 17 characters defaults to 5YJ3E1EA6PF384836\n    '''\n    return await self._request_rapid_api('rapi_vin_decoder_vin_decoder_basic',kwargs)\n        "
    },
    "rapi_google_web_search_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "google_web_search",
        "code": "async def rapi_google_web_search_search(self,*args,**kwargs):\n    '''Google Web Search API. Search the world\u2019s information, including webpages, related keywords and more.\n    \n    \n\n    :param string query: Search query. You can use Google Search parameters.\n\ne.g. adele site:youtube.com\ne.g. harry potter filetype:pdf\ne.g. inurl:store\ne.g. ronaldo -cristiano defaults to World Cup\n    :param string? related_keywords: Shows related keywords. Default: false\n\nEntering true, increases API latency defaults to true\n    :param integer? limit: Max results number. Max recommended value is 300. defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_google_web_search_search',kwargs)\n        "
    },
    "rapi_google_search_v2_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "google_search_v2",
        "code": "async def rapi_google_search_v2_search(self,*args,**kwargs):\n    '''Google Search API. Search the world\u2019s information, including webpages, related keywords and more.\n    \n    \n\n    :param string query: Search query. You can use Google Search parameters.\n\ne.g. adele site:youtube.com\ne.g. harry potter filetype:pdf\ne.g. inurl:store\ne.g. ronaldo -cristiano defaults to Nike\n    :param integer? limit: Max results number. Max recommended value is 300 defaults to 10\n    :param string? related_keywords: Shows related keywords. Default: false\n\nEntering true, increases API latency defaults to true\n    '''\n    return await self._request_rapid_api('rapi_google_search_v2_search',kwargs)\n        "
    },
    "rapi_google_keyword_scraper_keywordsearch": {
        "api_name": "keywordsearch",
        "category": "Search",
        "tool_name": "google_keyword_scraper",
        "code": "async def rapi_google_keyword_scraper_keywordsearch(self,*args,**kwargs):\n    '''Google Keyword Research\n    \n    \n\n    :param string glanguage: you will use alpha code for any language you need: \n\nAfrikaans => \\\"af\\\"\nAlbanian => \\\"sq\\\"\nAmharic => \\\"sm\\\"\nArabic => \\\"ar\\\"\nAzerbaijani => \\\"az\\\"\nBasque => \\\"eu\\\"\nBelarusian => \\\"be\\\"\nBengali => \\\"bn\\\"\nBihari => \\\"bh\\\"\nBosnian => \\\"bs\\\"\nBulgarian => \\\"bg\\\"\nCatalan => \\\"ca\\\"\nChinese (Simplified) => \\\"zh-CN\\\"\nChinese (Traditional) => \\\"zh-TW\\\"\nCroatian => \\\"hr\\\"\nCzech => \\\"cs\\\"\nDanish => \\\"da\\\"\nDutch => \\\"nl\\\"\nEnglish => \\\"en\\\"\nEsperanto => \\\"eo\\\"\nEstonian => \\\"et\\\"\nFaroese => \\\"fo\\\"\nFinnish => \\\"fi\\\"\nFrench => \\\"fr\\\"\nFrisian => \\\"fy\\\"\nGalician => \\\"gl\\\"\nGeorgian => \\\"ka\\\"\nGerman => \\\"de\\\"\nGreek => \\\"el\\\"\nGujarati => \\\"gu\\\"\nHebrew => \\\"iw\\\"\nHindi => \\\"hi\\\"\nHungarian => \\\"hu\\\"\nIcelandic => \\\"is\\\"\nIndonesian => \\\"id\\\"\nInterlingua => \\\"ia\\\"\nIrish => \\\"ga\\\"\nItalian => \\\"it\\\"\nJapanese => \\\"ja\\\"\nJavanese => \\\"jw\\\"\nKannada => \\\"kn\\\"\nKorean => \\\"ko\\\"\nLatin => \\\"la\\\"\nLatvian => \\\"lv\\\"\nLithuanian => \\\"lt\\\"\nMacedonian => \\\"mk\\\"\nMalay => \\\"ms\\\"\nMalayam => \\\"ml\\\"\nMaltese => \\\"mt\\\"\nMarathi => \\\"mr\\\"\nNepali => \\\"ne\\\"\nNorwegian => \\\"no\\\"\nNorwegian (Nynorsk) => \\\"nn\\\"\nOccitan => \\\"oc\\\"\nPersian => \\\"fa\\\"\nPolish => \\\"pl\\\"\nPortuguese (Brazil) => \\\"pt-BR\\\"\nPortuguese (Portugal) => \\\"pt-PT\\\"\nPunjabi => \\\"pa\\\"\nRomanian => \\\"ro\\\"\nRussian => \\\"ru\\\"\nScots Gaelic => \\\"gd\\\"\nSerbian => \\\"sr\\\"\nSinhalese => \\\"si\\\"\nSlovak => \\\"sk\\\"\nSlovenian => \\\"sl\\\"\nSpanish => \\\"es\\\"\nSudanese => \\\"su\\\"\nSwahili => \\\"sw\\\"\nSwedish => \\\"sv\\\"\nTagalog => \\\"tl\\\"\nTamil => \\\"ta\\\"\nTelugu => \\\"te\\\"\nThai => \\\"th\\\"\nTigrinya => \\\"ti\\\"\nTurkish => \\\"tr\\\"\nUkrainian => \\\"uk\\\"\nUrdu => \\\"ur\\\"\nUzbek => \\\"uz\\\"\nVietnamese => \\\"vi\\\"\nWelsh => \\\"cy\\\"\nXhosa => \\\"xh\\\"\nZulu => \\\"zu\\\" defaults to en\n    :param string gcountry: you will use only the alpha code of any country \n\nAfghanistan =>  \\\"af\\\"\nAlbania =>  \\\"al\\\"\nAlgeria =>  \\\"dz\\\"\nAmerican Samoa =>  \\\"as\\\"\nAndorra =>  \\\"ad\\\"\nAngola =>  \\\"ao\\\"\nAnguilla =>  \\\"ai\\\"\nAntarctica =>  \\\"aq\\\"\nAntigua and Barbuda =>  \\\"ag\\\"\nArgentina =>  \\\"ar\\\"\nArmenia =>  \\\"am\\\"\nAruba =>  \\\"aw\\\"\nAustralia =>  \\\"au\\\"\nAustria =>  \\\"at\\\"\nAzerbaijan =>  \\\"az\\\"\nBahamas =>  \\\"bs\\\"\nBahrain =>  \\\"bh\\\"\nBangladesh =>  \\\"bd\\\"\nBarbados =>  \\\"bb\\\"\nBelarus =>  \\\"by\\\"\nBelgium =>  \\\"be\\\"\nBelize =>  \\\"bz\\\"\nBenin =>  \\\"bj\\\"\nBermuda =>  \\\"bm\\\"\nBhutan =>  \\\"bt\\\"\nBolivia, Plurinational State of =>  \\\"bo\\\"\nBolivia =>  \\\"bo\\\"\nBosnia and Herzegovina =>  \\\"ba\\\"\nBotswana =>  \\\"bw\\\"\nBouvet Island =>  \\\"bv\\\"\nBrazil =>  \\\"br\\\"\nBritish Indian Ocean Territory =>  \\\"io\\\"\nBrunei Darussalam =>  \\\"bn\\\"\nBrunei =>  \\\"bn\\\"\nBulgaria =>  \\\"bg\\\"\nBurkina Faso =>  \\\"bf\\\"\nBurundi =>  \\\"bi\\\"\nCambodia =>  \\\"kh\\\"\nCameroon =>  \\\"cm\\\"\nCanada =>  \\\"ca\\\"\nCape Verde =>  \\\"cv\\\"\nCayman Islands =>  \\\"ky\\\"\nCentral African Republic =>  \\\"cf\\\"\nChad =>  \\\"td\\\"\nChile =>  \\\"cl\\\"\nChina =>  \\\"cn\\\"\nChristmas Island =>  \\\"cx\\\"\nCocos (Keeling) Islands =>  \\\"cc\\\"\nColombia =>  \\\"co\\\"\nComoros =>  \\\"km\\\"\nCongo =>  \\\"cg\\\"\nCongo, the Democratic Republic of the =>  \\\"cd\\\"\nCook Islands =>  \\\"ck\\\"\nCosta Rica =>  \\\"cr\\\"\nC\u00f4te d'Ivoire =>  \\\"ci\\\"\nIvory Coast =>  \\\"ci\\\"\nCroatia =>  \\\"hr\\\"\nCuba =>  \\\"cu\\\"\nCyprus =>  \\\"cy\\\"\nCzech Republic =>  \\\"cz\\\"\nDenmark =>  \\\"dk\\\"\nDjibouti =>  \\\"dj\\\"\nDominica =>  \\\"dm\\\"\nDominican Republic =>  \\\"do\\\"\nEcuador =>  \\\"ec\\\"\nEgypt =>  \\\"eg\\\"\nEl Salvador =>  \\\"sv\\\"\nEquatorial Guinea =>  \\\"gq\\\"\nEritrea =>  \\\"er\\\"\nEstonia =>  \\\"ee\\\"\nEthiopia =>  \\\"et\\\"\nFalkland Islands (Malvinas) =>  \\\"fk\\\"\nFaroe Islands =>  \\\"fo\\\"\nFiji =>  \\\"fj\\\"\nFinland =>  \\\"fi\\\"\nFrance =>  \\\"fr\\\"\nFrench Guiana =>  \\\"gf\\\"\nFrench Polynesia =>  \\\"pf\\\"\nFrench Southern Territories =>  \\\"tf\\\"\nGabon =>  \\\"ga\\\"\nGambia =>  \\\"gm\\\"\nGeorgia =>  \\\"ge\\\"\nGermany =>  \\\"de\\\"\nGhana =>  \\\"gh\\\"\nGibraltar =>  \\\"gi\\\"\nGreece =>  \\\"gr\\\"\nGreenland =>  \\\"gl\\\"\nGrenada =>  \\\"gd\\\"\nGuadeloupe =>  \\\"gp\\\"\nGuam =>  \\\"gu\\\"\nGuatemala =>  \\\"gt\\\"\nGuernsey =>  \\\"gg\\\"\nGuinea =>  \\\"gn\\\"\nGuinea-Bissau =>  \\\"gw\\\"\nGuyana =>  \\\"gy\\\"\nHaiti =>  \\\"ht\\\"\nHeard Island and McDonald Islands =>  \\\"hm\\\"\nHoly See (Vatican City State) =>  \\\"va\\\"\nHonduras =>  \\\"hn\\\"\nHong Kong =>  \\\"hk\\\"\nHungary =>  \\\"hu\\\"\nIceland =>  \\\"is\\\"\nIndia =>  \\\"in\\\"\nIndonesia =>  \\\"id\\\"\nIran, Islamic Republic of =>  \\\"ir\\\"\nIraq =>  \\\"iq\\\"\nIreland =>  \\\"ie\\\"\nIsle of Man =>  \\\"im\\\"\nIsrael =>  \\\"il\\\"\nItaly =>  \\\"it\\\"\nJamaica =>  \\\"jm\\\"\nJapan =>  \\\"jp\\\"\nJersey =>  \\\"je\\\"\nJordan =>  \\\"jo\\\"\nKazakhstan =>  \\\"kz\\\"\nKenya =>  \\\"ke\\\"\nKiribati =>  \\\"ki\\\"\nKorea, Democratic People's Republic of =>  \\\"kp\\\"\nKorea, Republic of =>  \\\"kr\\\"\nSouth Korea =>  \\\"kr\\\"\nKuwait =>  \\\"kw\\\"\nKyrgyzstan =>  \\\"kg\\\"\nLao People's Democratic Republic =>  \\\"la\\\"\nLatvia =>  \\\"lv\\\"\nLebanon =>  \\\"lb\\\"\nLesotho =>  \\\"ls\\\"\nLiberia =>  \\\"lr\\\"\nLibyan Arab Jamahiriya =>  \\\"ly\\\"\nLibya =>  \\\"ly\\\"\nLiechtenstein =>  \\\"li\\\"\nLithuania =>  \\\"lt\\\"\nLuxembourg =>  \\\"lu\\\"\nMacao =>  \\\"mo\\\"\nMacedonia, the former Yugoslav Republic of =>  \\\"mk\\\"\nMadagascar =>  \\\"mg\\\"\nMalawi =>  \\\"mw\\\"\nMalaysia =>  \\\"my\\\"\nMaldives =>  \\\"mv\\\"\nMali =>  \\\"ml\\\"\nMalta =>  \\\"mt\\\"\nMarshall Islands =>  \\\"mh\\\"\nMartinique =>  \\\"mq\\\"\nMauritania =>  \\\"mr\\\"\nMauritius =>  \\\"mu\\\"\nMayotte =>  \\\"yt\\\"\nMexico =>  \\\"mx\\\"\nMicronesia, Federated States of =>  \\\"fm\\\"\nMoldova, Republic of =>  \\\"md\\\"\nMonaco =>  \\\"mc\\\"\nMongolia =>  \\\"mn\\\"\nMontenegro =>  \\\"me\\\"\nMontserrat =>  \\\"ms\\\"\nMorocco =>  \\\"ma\\\"\nMozambique =>  \\\"mz\\\"\nMyanmar =>  \\\"mm\\\"\nBurma =>  \\\"mm\\\"\nNamibia =>  \\\"na\\\"\nNauru =>  \\\"nr\\\"\nNepal =>  \\\"np\\\"\nNetherlands =>  \\\"nl\\\"\nNetherlands Antilles =>  \\\"an\\\"\nNew Caledonia =>  \\\"nc\\\"\nNew Zealand =>  \\\"nz\\\"\nNicaragua =>  \\\"ni\\\"\nNiger =>  \\\"ne\\\"\nNigeria =>  \\\"ng\\\"\nNiue =>  \\\"nu\\\"\nNorfolk Island =>  \\\"nf\\\"\nNorthern Mariana Islands =>  \\\"mp\\\"\nNorway =>  \\\"no\\\"\nOman =>  \\\"om\\\"\nPakistan =>  \\\"pk\\\"\nPalau =>  \\\"pw\\\"\nPalestinian Territory, Occupied =>  \\\"ps\\\"\nPanama =>  \\\"pa\\\"\nPapua New Guinea =>  \\\"pg\\\"\nParaguay =>  \\\"py\\\"\nPeru =>  \\\"pe\\\"\nPhilippines =>  \\\"ph\\\"\nPitcairn =>  \\\"pn\\\"\nPoland =>  \\\"pl\\\"\nPortugal =>  \\\"pt\\\"\nPuerto Rico =>  \\\"pr\\\"\nQatar =>  \\\"qa\\\"\nR\u00e9union =>  \\\"re\\\"\nRomania =>  \\\"ro\\\"\nRussian Federation =>  \\\"ru\\\"\nRussia =>  \\\"ru\\\"\nRwanda =>  \\\"rw\\\"\nSaint Helena, Ascension and Tristan da Cunha =>  \\\"sh\\\"\nSaint Kitts and Nevis =>  \\\"kn\\\"\nSaint Lucia =>  \\\"lc\\\"\nSaint Pierre and Miquelon =>  \\\"pm\\\"\nSaint Vincent and the Grenadines =>  \\\"vc\\\"\nSaint Vincent & the Grenadines =>  \\\"vc\\\"\nSt. Vincent and the Grenadines =>  \\\"vc\\\"\nSamoa =>  \\\"ws\\\"\nSan Marino =>  \\\"sm\\\"\nSao Tome and Principe =>  \\\"st\\\"\nSaudi Arabia =>  \\\"sa\\\"\nSenegal =>  \\\"sn\\\"\nSerbia =>  \\\"rs\\\"\nSeychelles =>  \\\"sc\\\"\nSierra Leone =>  \\\"sl\\\"\nSingapore =>  \\\"sg\\\"\nSlovakia =>  \\\"sk\\\"\nSlovenia =>  \\\"si\\\"\nSolomon Islands =>  \\\"sb\\\"\nSomalia =>  \\\"so\\\"\nSouth Africa =>  \\\"za\\\"\nSouth Georgia and the South Sandwich Islands =>  \\\"gs\\\"\nSouth Sudan =>  \\\"ss\\\"\nSpain =>  \\\"es\\\"\nSri Lanka =>  \\\"lk\\\"\nSudan =>  \\\"sd\\\"\nSuriname =>  \\\"sr\\\"\nSvalbard and Jan Mayen =>  \\\"sj\\\"\nSwaziland =>  \\\"sz\\\"\nSweden =>  \\\"se\\\"\nSwitzerland =>  \\\"ch\\\"\nSyrian Arab Republic =>  \\\"sy\\\"\nTaiwan, Province of China =>  \\\"tw\\\"\nTaiwan =>  \\\"tw\\\"\nTajikistan =>  \\\"tj\\\"\nTanzania, United Republic of =>  \\\"tz\\\"\nThailand =>  \\\"th\\\"\nTimor-Leste =>  \\\"tl\\\"\nTogo =>  \\\"tg\\\"\nTokelau =>  \\\"tk\\\"\nTonga =>  \\\"to\\\"\nTrinidad and Tobago =>  \\\"tt\\\"\nTunisia =>  \\\"tn\\\"\nTurkey =>  \\\"tr\\\"\nTurkmenistan =>  \\\"tm\\\"\nTurks and Caicos Islands =>  \\\"tc\\\"\nTuvalu =>  \\\"tv\\\"\nUganda =>  \\\"ug\\\"\nUkraine =>  \\\"ua\\\"\nUnited Arab Emirates =>  \\\"ae\\\"\nUnited Kingdom =>  \\\"gb\\\"\nUnited States =>  \\\"us\\\"\nUnited States Minor Outlying Islands =>  \\\"um\\\"\nUruguay =>  \\\"uy\\\"\nUzbekistan =>  \\\"uz\\\"\nVanuatu =>  \\\"vu\\\"\nVenezuela, Bolivarian Republic of =>  \\\"ve\\\"\nVenezuela =>  \\\"ve\\\"\nViet Nam =>  \\\"vn\\\"\nVietnam =>  \\\"vn\\\"\nVirgin Islands, British =>  \\\"vg\\\"\nVirgin Islands, U.S. =>  \\\"vi\\\"\nWallis and Futuna =>  \\\"wf\\\"\nWestern Sahara =>  \\\"eh\\\"\nYemen =>  \\\"ye\\\"\nZambia =>  \\\"zm\\\"\nZimbabwe =>  \\\"zw\\\"\n defaults to ua\n    :param string gkeyword:  defaults to ukraine war\n    '''\n    return await self._request_rapid_api('rapi_google_keyword_scraper_keywordsearch',kwargs)\n        "
    },
    "rapi_searchhook_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "searchhook",
        "code": "async def rapi_searchhook_search(self,*args,**kwargs):\n    '''Websearch (SearX) with Webhooks on new results. Allows to automate brand, product, topic monitoring using tools like n8n or node-red.\n    \n    \n\n    :param string q:  defaults to SearchHook API\n    :param string? safesearch:  defaults to 0\n    :param string? categories:  defaults to general\n    :param string? time_range:  defaults to None\n    :param string? language:  defaults to de-DE\n    :param string? queryId:  defaults to 0x02cAce04c8469580A2ADc20F57E143a3693c22bF\n    :param string? url:  defaults to https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4\n    '''\n    return await self._request_rapid_api('rapi_searchhook_search',kwargs)\n        "
    },
    "rapi_searchhook_webhooks": {
        "api_name": "webhooks",
        "category": "Search",
        "tool_name": "searchhook",
        "code": "async def rapi_searchhook_webhooks(self,*args,**kwargs):\n    '''Websearch (SearX) with Webhooks on new results. Allows to automate brand, product, topic monitoring using tools like n8n or node-red.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_searchhook_webhooks',kwargs)\n        "
    },
    "rapi_bing_search_apis_web_search_api": {
        "api_name": "web_search_api",
        "category": "Search",
        "tool_name": "bing_search_apis",
        "code": "async def rapi_bing_search_apis_web_search_api(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that enables secure, ad-free location search for your users, displaying relevant information from web results, images, local businesses, news and images Photo.\n    \n    \n\n    :param string? size:  defaults to 30\n    :param string? keyword:  defaults to how-to-use-excel-for-free\n    :param string? page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_bing_search_apis_web_search_api',kwargs)\n        "
    },
    "rapi_bing_search_apis_images_search": {
        "api_name": "images_search",
        "category": "Search",
        "tool_name": "bing_search_apis",
        "code": "async def rapi_bing_search_apis_images_search(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that enables secure, ad-free location search for your users, displaying relevant information from web results, images, local businesses, news and images Photo.\n    \n    \n\n    :param string keyword:  defaults to wallpapers\n    :param string? size:  defaults to 30\n    :param string? page:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_bing_search_apis_images_search',kwargs)\n        "
    },
    "rapi_bing_web_search_supported_countries": {
        "api_name": "supported_countries",
        "category": "Search",
        "tool_name": "bing_web_search",
        "code": "async def rapi_bing_web_search_supported_countries(self,*args,**kwargs):\n    '''Bing web search api return full result of bing serp.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bing_web_search_supported_countries',kwargs)\n        "
    },
    "rapi_bing_web_search_supported_languages": {
        "api_name": "supported_languages",
        "category": "Search",
        "tool_name": "bing_web_search",
        "code": "async def rapi_bing_web_search_supported_languages(self,*args,**kwargs):\n    '''Bing web search api return full result of bing serp.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bing_web_search_supported_languages',kwargs)\n        "
    },
    "rapi_question_answered_get_answer_to_question": {
        "api_name": "get_answer_to_question",
        "category": "Search",
        "tool_name": "question_answered",
        "code": "async def rapi_question_answered_get_answer_to_question(self,*args,**kwargs):\n    '''Ask a question and get an answer. Example: When did World War two end? answer -  September 2, 1945\n    \n    \n\n    :param string questionAsked:  defaults to how far away is the sun from earth?\n    '''\n    return await self._request_rapid_api('rapi_question_answered_get_answer_to_question',kwargs)\n        "
    },
    "rapi_image_search_v1_image_search": {
        "api_name": "v1_image_search",
        "category": "Search",
        "tool_name": "image_search",
        "code": "async def rapi_image_search_v1_image_search(self,*args,**kwargs):\n    '''The Image Search API is a tool that allows developers to integrate image search functionality into their applications or websites.\n    \n    \n\n    :param string q: Search Query\n    :param string? limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_image_search_v1_image_search',kwargs)\n        "
    },
    "rapi_auto_suggest_queries_suggestqueries": {
        "api_name": "suggestqueries",
        "category": "Search",
        "tool_name": "auto_suggest_queries",
        "code": "async def rapi_auto_suggest_queries_suggestqueries(self,*args,**kwargs):\n    '''This is a Free Query Suggest API which provides suggestions for search queries based on a given keyword\n    \n    \n\n    :param string query:  defaults to How to\n    '''\n    return await self._request_rapid_api('rapi_auto_suggest_queries_suggestqueries',kwargs)\n        "
    },
    "rapi_youtube_keyword_search_youtube_keyword_search": {
        "api_name": "youtube_keyword_search",
        "category": "Search",
        "tool_name": "youtube_keyword_search",
        "code": "async def rapi_youtube_keyword_search_youtube_keyword_search(self,*args,**kwargs):\n    '''YouTube Keyword Search API\n    \n    \n\n    :param string q: Search Query defaults to foot\n    :param string? gl: Country Code (Alpha-2)\n\nDefault: `us` defaults to us\n    :param string? hl: Search Language Code (ISO 639-1)\n\nDefault: `en` defaults to en\n    '''\n    return await self._request_rapid_api('rapi_youtube_keyword_search_youtube_keyword_search',kwargs)\n        "
    },
    "rapi_wiki_briefs_search_wikipedia": {
        "api_name": "search_wikipedia",
        "category": "Search",
        "tool_name": "wiki_briefs",
        "code": "async def rapi_wiki_briefs_search_wikipedia(self,*args,**kwargs):\n    '''Briefs about anything you search. No need to read lengthy articles, we summarize.\n    \n    \n\n    :param string q: Query string, can be anything. defaults to Messi\n    :param integer? topk: Return top k summarized information. Default to 5. Must be greater than 0. defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_wiki_briefs_search_wikipedia',kwargs)\n        "
    },
    "rapi_asktheworld_getcountrycode": {
        "api_name": "getcountrycode",
        "category": "Search",
        "tool_name": "asktheworld",
        "code": "async def rapi_asktheworld_getcountrycode(self,*args,**kwargs):\n    '''This API lets you get all the questions beeing asked on search plattforms like google.\n    \n    \n\n    :param string? getCountryCodes:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_asktheworld_getcountrycode',kwargs)\n        "
    },
    "rapi_asktheworld_getquestions": {
        "api_name": "getquestions",
        "category": "Search",
        "tool_name": "asktheworld",
        "code": "async def rapi_asktheworld_getquestions(self,*args,**kwargs):\n    '''This API lets you get all the questions beeing asked on search plattforms like google.\n    \n    \n\n    :param string keyword:  defaults to tech\n    :param string? countryCode:  defaults to us\n    '''\n    return await self._request_rapid_api('rapi_asktheworld_getquestions',kwargs)\n        "
    },
    "rapi_asktheworld_getmultiplequestions": {
        "api_name": "getmultiplequestions",
        "category": "Search",
        "tool_name": "asktheworld",
        "code": "async def rapi_asktheworld_getmultiplequestions(self,*args,**kwargs):\n    '''This API lets you get all the questions beeing asked on search plattforms like google.\n    \n    \n\n    :param string keyword:  defaults to tech\n    :param string countryCode:  defaults to us\n    :param boolean? multipleQuestions:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_asktheworld_getmultiplequestions',kwargs)\n        "
    },
    "rapi_postali_codes": {
        "api_name": "codes",
        "category": "Search",
        "tool_name": "postali",
        "code": "async def rapi_postali_codes(self,*args,**kwargs):\n    '''Mexico zip codes / C\u00f3digos postales de M\u00e9xico\n    \n    \n\n    :param string code:  defaults to 66446\n    '''\n    return await self._request_rapid_api('rapi_postali_codes',kwargs)\n        "
    },
    "rapi_web_search_v2_web_search": {
        "api_name": "web_search",
        "category": "Search",
        "tool_name": "web_search_v2",
        "code": "async def rapi_web_search_v2_web_search(self,*args,**kwargs):\n    '''Web Search API. Search the web pages from billions of results. Related keywords, knowledge panel and more.\n    \n    \n\n    :param string query: Search query. You can use web search parameters.\n\ne.g. `ronaldo site:instagram.com`\ne.g. `twitter filetype:pdf`\ne.g. `inurl:market` defaults to Leo Messi\n    :param string? related_keywords: Shows related keywords. Default: `false`\n\nEntering `true`, increases API latency\n    :param integer? limit: Max results number. Max recommended value is `300`. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_web_search_v2_web_search',kwargs)\n        "
    },
    "rapi_google_jobs_offerinfo": {
        "api_name": "offerinfo",
        "category": "Search",
        "tool_name": "google_jobs",
        "code": "async def rapi_google_jobs_offerinfo(self,*args,**kwargs):\n    '''Google Jobs Scraper\n    \n    \n\n    :param string joburl:  defaults to https://www.google.com/search?ibp=htl%3Bjobs&q=developer+newyork&hl=en-US&kgs=e473f607e23ae72f&shndl=-1&source=sh%2Fx%2Fim%2Ftextlists%2Fdetail%2F1&entrypoint=sh%2Fx%2Fim%2Ftextlists%2Fdetail&mysharpfpstate=tldetail&htivrt=jobs&htiq=developer+newyork&htidocid=6ak4txGw4C4AAAAAAAAAAA%3D%3D\n    '''\n    return await self._request_rapid_api('rapi_google_jobs_offerinfo',kwargs)\n        "
    },
    "rapi_google_jobs_searchoffers": {
        "api_name": "searchoffers",
        "category": "Search",
        "tool_name": "google_jobs",
        "code": "async def rapi_google_jobs_searchoffers(self,*args,**kwargs):\n    '''Google Jobs Scraper\n    \n    \n\n    :param integer offset:  defaults to 0\n    :param string keyword:  defaults to Secretary\n    :param string location:  defaults to Frankfurt\n    '''\n    return await self._request_rapid_api('rapi_google_jobs_searchoffers',kwargs)\n        "
    },
    "rapi_bing_web_search_v2_web_search": {
        "api_name": "web_search",
        "category": "Search",
        "tool_name": "bing_web_search_v2",
        "code": "async def rapi_bing_web_search_v2_web_search(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that enables safe, ad-free, location-aware search for your users, surfacing relevant information from web results, images, local businesses, news, videos, and visuals.\n    \n    \n\n    :param string q: The user's search query term. The term may not be empty. The term may contain Bing Advanced Operators. For example, to limit results to a specific domain, use the site: operator.\n    :param array? responseFilter: A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data. Possible filter values are Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone, Videos, Webpages. Although you may use this filter to get a single answer, you should instead use the answer-specific endpoint in order to get richer results. For example, to receive only images, send the request to one of the Image Search API endpoints. The RelatedSearches and SpellSuggestions answers do not support a separate endpoint like the Image Search API does (only the Web Search API returns them). To include answers that would otherwise be excluded because of ranking, see the promote query parameter.\n    :param string? cc: A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive\u2014do not specify both.\n    :param string? mkt: The market where the results come from. Typically, mkt is the country where the user is making the request from. However, it could be a different country if the user is not located in a country where Bing delivers results. The market must be in the form <language code>-<country code>. For example, en-US. The string is case insensitive. If known, you are encouraged to always specify the market. Specifying the market helps Bing route the request and return an appropriate and optimal response. If you specify a market that is not listed in Market Codes, Bing uses a best fit market code based on an internal mapping that is subject to change. This parameter and the cc query parameter are mutually exclusive\u2014do not specify both. defaults to en-us\n    :param array? promote: A comma-delimited list of answers that you want the response to include regardless of their ranking. For example, if you set answerCount) to two (2) so Bing returns the top two ranked answers, but you also want the response to include news, you'd set promote to news. If the top ranked answers are webpages, images, videos, and relatedSearches, the response includes webpages and images because news is not a ranked answer. But if you set promote to video, Bing would promote the video answer into the response and return webpages, images, and videos. The answers that you want to promote do not count against the answerCount limit. For example, if the ranked answers are news, images, and videos, and you set answerCount to 1 and promote to news, the response contains news and images. Or, if the ranked answers are videos, images, and news, the response contains videos and news. Possible values are Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone, Videos, Webpages. Use only if you specify answerCount.\n    :param boolean? textDecorations: A Boolean value that determines whether display strings should contain decoration markers such as hit highlighting characters. If true, the strings may include markers. The default is false. To specify whether to use Unicode characters or HTML tags as the markers, see the textFormat query parameter.\n    :param string? setLang: The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.\n    :param integer? count: The number of search results to return in the response. The default is 10 and the maximum value is 50. The actual number delivered may be less than requested.Use this parameter along with the offset parameter to page results.For example, if your user interface displays 10 search results per page, set count to 10 and offset to 0 to get the first page of results. For each subsequent page, increment offset by 10 (for example, 0, 10, 20). It is possible for multiple pages to include some overlap in results.\n    :param string? safeSearch: A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content. defaults to Off\n    :param string? textFormat: The type of markers to use for text decorations (see the textDecorations query parameter). Possible values are Raw\u2014Use Unicode characters to mark content that needs special formatting. The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and E001 to mark the beginning and end of query terms for hit highlighting. HTML\u2014Use HTML tags to mark content that needs special formatting. For example, use <b> tags to highlight query terms in display strings. The default is Raw. For display strings that contain escapable HTML characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as appropriate (for example, < is escaped to &lt;). defaults to Raw\n    :param integer? offset: The zero-based offset that indicates the number of search results to skip before returning results. The default is 0. The offset should be less than (totalEstimatedMatches - count). Use this parameter along with the count parameter to page results. For example, if your user interface displays 10 search results per page, set count to 10 and offset to 0 to get the first page of results. For each subsequent page, increment offset by 10 (for example, 0, 10, 20). it is possible for multiple pages to include some overlap in results.\n    :param integer? answerCount: The number of answers that you want the response to include. The answers that Bing returns are based on ranking. For example, if Bing returns webpages, images, videos, and relatedSearches for a request and you set this parameter to two (2), the response includes webpages and images.If you included the responseFilter query parameter in the same request and set it to webpages and news, the response would include only webpages.\n    :param string? freshness: Filter search results by the following age values: Day\u2014Return webpages that Bing discovered within the last 24 hours. Week\u2014Return webpages that Bing discovered within the last 7 days. Month\u2014Return webpages that discovered within the last 30 days. This filter applies only to webpage results and not to the other results such as news and images. defaults to Day\n    '''\n    return await self._request_rapid_api('rapi_bing_web_search_v2_web_search',kwargs)\n        "
    },
    "rapi_license_plate_lookup_license_plate_lookup": {
        "api_name": "license_plate_lookup",
        "category": "Search",
        "tool_name": "license_plate_lookup",
        "code": "async def rapi_license_plate_lookup_license_plate_lookup(self,*args,**kwargs):\n    '''Check VIN by US license plate and state. \nVIN decoder from [VIN decoder](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19).\n[View documents](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19/details)\n\n    \n    \n\n    :param string state_code: **Run a License Plate Search By State**\nAL,AK,AZ,AR,CA,CO,CT,DE,DC,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY defaults to AL\n    :param string license_plate:  defaults to S8TAN\n    '''\n    return await self._request_rapid_api('rapi_license_plate_lookup_license_plate_lookup',kwargs)\n        "
    },
    "rapi_bing_entity_search_entities_search": {
        "api_name": "entities_search",
        "category": "Search",
        "tool_name": "bing_entity_search",
        "code": "async def rapi_bing_entity_search_entities_search(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that recognizes and classifies named entities, and finds search results based on them.\n    \n    \n\n    :param string q: The user's search term. defaults to San Francisco\n    :param string? mkt: The market where the results come from. You are strongly encouraged to always specify the market, if known. Specifying the market helps Bing route the request and return an appropriate and optimal response. This parameter and the cc query parameter are mutually exclusive\u2014do not specify both. defaults to en-us\n    :param string? SafeSearch: A filter used to filter adult content. Off: Return webpages with adult text, images, or videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do not return webpages with adult text, images, or videos. The default is Moderate. If the request comes from a market that Bing's adult policy requires that safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query operator, there is the chance that the response may contain adult content regardless of what the safeSearch query parameter is set to. Use site: only if you are aware of the content on the site and your scenario supports the possibility of adult content.\n    :param string? ResponseFilter: A comma-delimited list of answers to include in the response. If you do not specify this parameter, the response includes all search answers for which there's relevant data.\n    :param string? ResponseFormat: The media type to use for the response. The following are the possible case-insensitive values: JSON, JSONLD. The default is JSON. If you specify JSONLD, the response body includes JSON-LD objects that contain the search results.\n    :param string? SetLang: The language to use for user interface strings. Specify the language using the ISO 639-1 2-letter language code. For example, the language code for English is EN. The default is EN (English). Although optional, you should always specify the language. Typically, you set setLang to the same language specified by mkt unless the user wants the user interface strings displayed in a different language. This parameter and the Accept-Language header are mutually exclusive; do not specify both. A user interface string is a string that's used as a label in a user interface. There are few user interface strings in the JSON response objects. Also, any links to Bing.com properties in the response objects apply the specified language.\n    :param string? cc: A 2-character country code of the country where the results come from. This API supports only the United States market. If you specify this query parameter, it must be set to us. If you set this parameter, you must also specify the Accept-Language header. Bing uses the first supported language it finds from the languages list, and combine that language with the country code that you specify to determine the market to return results for. If the languages list does not include a supported language, Bing finds the closest language and market that supports the request, or it may use an aggregated or default market for the results instead of a specified one. You should use this query parameter and the Accept-Language query parameter only if you specify multiple languages; otherwise, you should use the mkt and setLang query parameters. This parameter and the mkt query parameter are mutually exclusive\u2014do not specify both.\n    '''\n    return await self._request_rapid_api('rapi_bing_entity_search_entities_search',kwargs)\n        "
    },
    "rapi_opt_nc_public_docker_images_get_d_tails_image": {
        "api_name": "get_d_tails_image",
        "category": "Search",
        "tool_name": "opt_nc_public_docker_images",
        "code": "async def rapi_opt_nc_public_docker_images_get_d_tails_image(self,*args,**kwargs):\n    '''R\u00e9cup\u00e9rer les images dockers publiques publi\u00e9es par OPT-NC\n    \n    \n\n    :param string image:  defaults to domaine-nc-api\n    '''\n    return await self._request_rapid_api('rapi_opt_nc_public_docker_images_get_d_tails_image',kwargs)\n        "
    },
    "rapi_opt_nc_public_docker_images_get_all_images": {
        "api_name": "get_all_images",
        "category": "Search",
        "tool_name": "opt_nc_public_docker_images",
        "code": "async def rapi_opt_nc_public_docker_images_get_all_images(self,*args,**kwargs):\n    '''R\u00e9cup\u00e9rer les images dockers publiques publi\u00e9es par OPT-NC\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_opt_nc_public_docker_images_get_all_images',kwargs)\n        "
    },
    "rapi_google_search_json_search_image": {
        "api_name": "search_image",
        "category": "Search",
        "tool_name": "google_search_json",
        "code": "async def rapi_google_search_json_search_image(self,*args,**kwargs):\n    '''Provides Google search results in JSON format. Its features include web search, image search, autocomplete, and trending search.\n    \n    \n\n    :param string q: Search query defaults to Newyork City\n    :param integer? num: Number of search results to return.\nValid values are integers between 1 and 20, inclusive defaults to 10\n    :param string? lr: Restricts the search to documents written in a particular language defaults to lang_en\n    :param integer? start: The index of the first result to return defaults to 0\n    :param string? gl: The **gl** parameter value is a two-letter country code. The **gl** parameter boosts search results whose country of origin matches the parameter value.\n\n defaults to US\n    '''\n    return await self._request_rapid_api('rapi_google_search_json_search_image',kwargs)\n        "
    },
    "rapi_google_search_json_search_web": {
        "api_name": "search_web",
        "category": "Search",
        "tool_name": "google_search_json",
        "code": "async def rapi_google_search_json_search_web(self,*args,**kwargs):\n    '''Provides Google search results in JSON format. Its features include web search, image search, autocomplete, and trending search.\n    \n    \n\n    :param string q: Search query defaults to facebook\n    :param integer? num: Number of search results to return.\nValid values are integers between 1 and 20, inclusive defaults to 10\n    :param integer? start: The index of the first result to return defaults to 0\n    :param string? gl: The **gl** parameter value is a two-letter country code. The **gl** parameter boosts search results whose country of origin matches the parameter value.\n\n defaults to US\n    :param string? lr: Restricts the search to documents written in a particular language defaults to lang_en\n    '''\n    return await self._request_rapid_api('rapi_google_search_json_search_web',kwargs)\n        "
    },
    "rapi_torrenthunt_config": {
        "api_name": "config",
        "category": "Search",
        "tool_name": "torrenthunt",
        "code": "async def rapi_torrenthunt_config(self,*args,**kwargs):\n    '''API to self host Torrent Hunt Bot\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_torrenthunt_config',kwargs)\n        "
    },
    "rapi_front_page_search_engine_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "front_page_search_engine",
        "code": "async def rapi_front_page_search_engine_search(self,*args,**kwargs):\n    '''Search Front Pages of internet and get title and dessription along with screenshot of Front Page of the website and domain. along with a host of other information, like IAB category, size, language, percentile domain rank.\n    \n    \n\n    :param integer pageno:  defaults to 1\n    :param string country:  defaults to US\n    :param string lang:  defaults to en\n    :param string search:  defaults to Hello\n    :param integer? perpage:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_front_page_search_engine_search',kwargs)\n        "
    },
    "rapi_serp_api_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "serp_api",
        "code": "async def rapi_serp_api_search(self,*args,**kwargs):\n    '''Simple SERP API to perform web search and get results in JSON.\n    \n    \n\n    :param string q:  defaults to liverpool\n    :param string? gl: \n    :param string? cr: \n    :param string? tbs: \n    :param integer? num:  defaults to 20\n    :param integer? start: \n    :param string? hl: Locale of Google search results. E.g. en-US\n    '''\n    return await self._request_rapid_api('rapi_serp_api_search',kwargs)\n        "
    },
    "rapi_duckduckgo_search": {
        "api_name": "search",
        "category": "Search",
        "tool_name": "duckduckgo",
        "code": "async def rapi_duckduckgo_search(self,*args,**kwargs):\n    '''DuckDuckGo Search API\n    \n    \n\n    :param string? q: Search Query\n*You can use DuckDuckGo search parameters.* defaults to Nike\n    '''\n    return await self._request_rapid_api('rapi_duckduckgo_search',kwargs)\n        "
    },
    "rapi_cellphones_getbrands": {
        "api_name": "getbrands",
        "category": "Devices",
        "tool_name": "cellphones",
        "code": "async def rapi_cellphones_getbrands(self,*args,**kwargs):\n    '''Welcome to the GSMarena API! Our API allows you to easily access and consume the vast array of data available on the GSMarena website. \n\nWith our API, you can access detailed information about any phone or tablet, including technical specifications, images, and more. \n\nWith the GSMarena API, you can quickly and easily: \n\u2022 Retrieve detailed information about any phone or tablet \n\u2022 Access images of any device \n\u2022 Get full specifications and features of any device \n\u2022 Check prices, ratings, and re...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cellphones_getbrands',kwargs)\n        "
    },
    "rapi_cellphones_getphonedetails": {
        "api_name": "getphonedetails",
        "category": "Devices",
        "tool_name": "cellphones",
        "code": "async def rapi_cellphones_getphonedetails(self,*args,**kwargs):\n    '''Welcome to the GSMarena API! Our API allows you to easily access and consume the vast array of data available on the GSMarena website. \n\nWith our API, you can access detailed information about any phone or tablet, including technical specifications, images, and more. \n\nWith the GSMarena API, you can quickly and easily: \n\u2022 Retrieve detailed information about any phone or tablet \n\u2022 Access images of any device \n\u2022 Get full specifications and features of any device \n\u2022 Check prices, ratings, and re...\n    \n    \n\n    :param integer phoneid:  defaults to 1859\n    '''\n    return await self._request_rapid_api('rapi_cellphones_getphonedetails',kwargs)\n        "
    },
    "rapi_mobile_phone_specs_database_get_phone_image_ids_by_custom_id": {
        "api_name": "get_phone_image_ids_by_custom_id",
        "category": "Devices",
        "tool_name": "mobile_phone_specs_database",
        "code": "async def rapi_mobile_phone_specs_database_get_phone_image_ids_by_custom_id(self,*args,**kwargs):\n    '''Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models). This information includes the device's dimensions,  images, weight, display size and type, processor, memory, storage, camera specifications, battery capacity, operating system, and connectivity options, among others. \nThe purpose of this database is to provide a comprehensive source of information for consumers to compare an...\n    \n    \n\n    :param integer phoneCustomId:  defaults to 103693\n    '''\n    return await self._request_rapid_api('rapi_mobile_phone_specs_database_get_phone_image_ids_by_custom_id',kwargs)\n        "
    },
    "rapi_mobile_phone_specs_database_get_image_by_phone_image_id": {
        "api_name": "get_image_by_phone_image_id",
        "category": "Devices",
        "tool_name": "mobile_phone_specs_database",
        "code": "async def rapi_mobile_phone_specs_database_get_image_by_phone_image_id(self,*args,**kwargs):\n    '''Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models). This information includes the device's dimensions,  images, weight, display size and type, processor, memory, storage, camera specifications, battery capacity, operating system, and connectivity options, among others. \nThe purpose of this database is to provide a comprehensive source of information for consumers to compare an...\n    \n    \n\n    :param string imageId:  defaults to Z2RjOG80Smk2WVV2R0wwR1F1RjRNZG5TR1ZqUUZuU1JhU1pNT0FjNG94UT0=\n    '''\n    return await self._request_rapid_api('rapi_mobile_phone_specs_database_get_image_by_phone_image_id',kwargs)\n        "
    },
    "rapi_mobile_phone_specs_database_get_specifications_by_custom_id": {
        "api_name": "get_specifications_by_custom_id",
        "category": "Devices",
        "tool_name": "mobile_phone_specs_database",
        "code": "async def rapi_mobile_phone_specs_database_get_specifications_by_custom_id(self,*args,**kwargs):\n    '''Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models). This information includes the device's dimensions,  images, weight, display size and type, processor, memory, storage, camera specifications, battery capacity, operating system, and connectivity options, among others. \nThe purpose of this database is to provide a comprehensive source of information for consumers to compare an...\n    \n    \n\n    :param integer phoneCustomId:  defaults to 103693\n    '''\n    return await self._request_rapid_api('rapi_mobile_phone_specs_database_get_specifications_by_custom_id',kwargs)\n        "
    },
    "rapi_mobile_phone_specs_database_list_all_models_by_phone_brand": {
        "api_name": "list_all_models_by_phone_brand",
        "category": "Devices",
        "tool_name": "mobile_phone_specs_database",
        "code": "async def rapi_mobile_phone_specs_database_list_all_models_by_phone_brand(self,*args,**kwargs):\n    '''Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models). This information includes the device's dimensions,  images, weight, display size and type, processor, memory, storage, camera specifications, battery capacity, operating system, and connectivity options, among others. \nThe purpose of this database is to provide a comprehensive source of information for consumers to compare an...\n    \n    \n\n    :param string brandName:  defaults to Samsung\n    '''\n    return await self._request_rapid_api('rapi_mobile_phone_specs_database_list_all_models_by_phone_brand',kwargs)\n        "
    },
    "rapi_mobile_phone_specs_database_list_all_phone_brands": {
        "api_name": "list_all_phone_brands",
        "category": "Devices",
        "tool_name": "mobile_phone_specs_database",
        "code": "async def rapi_mobile_phone_specs_database_list_all_phone_brands(self,*args,**kwargs):\n    '''Our cell phones / mobile phones specs database (GSM specs) is a collection of specifications and features of different models of mobile phones (more than 10,000 models). This information includes the device's dimensions,  images, weight, display size and type, processor, memory, storage, camera specifications, battery capacity, operating system, and connectivity options, among others. \nThe purpose of this database is to provide a comprehensive source of information for consumers to compare an...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mobile_phone_specs_database_list_all_phone_brands',kwargs)\n        "
    },
    "rapi_test_test_copy": {
        "api_name": "test_copy",
        "category": "Devices",
        "tool_name": "test",
        "code": "async def rapi_test_test_copy(self,*args,**kwargs):\n    '''Test\n    \n    \n\n    :param string? s:  defaults to Arrow\n    '''\n    return await self._request_rapid_api('rapi_test_test_copy',kwargs)\n        "
    },
    "rapi_mac_address_to_manufacturer_maclookup": {
        "api_name": "maclookup",
        "category": "Devices",
        "tool_name": "mac_address_to_manufacturer",
        "code": "async def rapi_mac_address_to_manufacturer_maclookup(self,*args,**kwargs):\n    '''MAC Address Lookup to find the hardware manufacturer and its postal address of a specific MAC Address\n    \n    \n\n    :param string mac_number: MAC Address Number to Find Manufacturer defaults to 14-AB-C5-D5-DA-F9\n    '''\n    return await self._request_rapid_api('rapi_mac_address_to_manufacturer_maclookup',kwargs)\n        "
    },
    "rapi_lottery_get_lottery_list_by_date": {
        "api_name": "get_lottery_list_by_date",
        "category": "Devices",
        "tool_name": "lottery",
        "code": "async def rapi_lottery_get_lottery_list_by_date(self,*args,**kwargs):\n    '''lottery studio\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lottery_get_lottery_list_by_date',kwargs)\n        "
    },
    "rapi_football_league": {
        "api_name": "league",
        "category": "Devices",
        "tool_name": "football",
        "code": "async def rapi_football_league(self,*args,**kwargs):\n    '''api-football\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_football_league',kwargs)\n        "
    },
    "rapi_label_detection_get_label_detection": {
        "api_name": "get_label_detection",
        "category": "Visual_Recognition",
        "tool_name": "label_detection",
        "code": "async def rapi_label_detection_get_label_detection(self,*args,**kwargs):\n    '''Extract labels from image using (google vision label detection) \n    \n    \n\n    :param string image:  defaults to https://m.media-amazon.com/images/I/71k6XnjuwkL._AC_SL1500_.jpg\n    '''\n    return await self._request_rapid_api('rapi_label_detection_get_label_detection',kwargs)\n        "
    },
    "rapi_voltox_ocr_voltox_endpoint_ocr": {
        "api_name": "voltox_endpoint_ocr",
        "category": "Visual_Recognition",
        "tool_name": "voltox_ocr",
        "code": "async def rapi_voltox_ocr_voltox_endpoint_ocr(self,*args,**kwargs):\n    '''Ocr for voltox ocr\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_voltox_ocr_voltox_endpoint_ocr',kwargs)\n        "
    },
    "rapi_face_recognition_view_db": {
        "api_name": "view_db",
        "category": "Visual_Recognition",
        "tool_name": "face_recognition",
        "code": "async def rapi_face_recognition_view_db(self,*args,**kwargs):\n    '''All-in-one Face recognition & analysis with dedicated database. Output location of human faces, recognized UID, liveness detection, age, gender, expression (emotion), and facemask detection\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_face_recognition_view_db',kwargs)\n        "
    },
    "rapi_ocr_separate_text_from_images_ocr": {
        "api_name": "ocr",
        "category": "Visual_Recognition",
        "tool_name": "ocr_separate_text_from_images",
        "code": "async def rapi_ocr_separate_text_from_images_ocr(self,*args,**kwargs):\n    '''Our OCR - Separate Text From Images API allows you to quickly and accurately extract text from images. Using advanced image processing and optical character recognition technology, our API can identify and separate text from any image format, including scanned documents, photographs, and screenshots. With our easy-to-use API, you can integrate this functionality into your own applications or services, saving time and effort while improving accuracy and efficiency in your workflow.\n    \n    \n\n    :param string language:  defaults to eng\n    :param string url: \n    '''\n    return await self._request_rapid_api('rapi_ocr_separate_text_from_images_ocr',kwargs)\n        "
    },
    "rapi_microsoft_computer_vision_list_models": {
        "api_name": "list_models",
        "category": "Visual_Recognition",
        "tool_name": "microsoft_computer_vision",
        "code": "async def rapi_microsoft_computer_vision_list_models(self,*args,**kwargs):\n    '''An AI service from Microsoft Azure that analyzes content in images\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_microsoft_computer_vision_list_models',kwargs)\n        "
    },
    "rapi_web_detection_get_web_detection": {
        "api_name": "get_web_detection",
        "category": "Visual_Recognition",
        "tool_name": "web_detection",
        "code": "async def rapi_web_detection_get_web_detection(self,*args,**kwargs):\n    '''Extract list of entities, full matches urls, partial matches urls, visual matches urls, pages, locale and dimensions from image using (google vision web detection)\n    \n    \n\n    :param string image:  defaults to https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig\n    '''\n    return await self._request_rapid_api('rapi_web_detection_get_web_detection',kwargs)\n        "
    },
    "rapi_image_text_recognition_supported_languages": {
        "api_name": "supported_languages",
        "category": "Visual_Recognition",
        "tool_name": "image_text_recognition",
        "code": "async def rapi_image_text_recognition_supported_languages(self,*args,**kwargs):\n    '''Recognizing text content from images\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_image_text_recognition_supported_languages',kwargs)\n        "
    },
    "rapi_background_remover_getaccount": {
        "api_name": "getaccount",
        "category": "Visual_Recognition",
        "tool_name": "background_remover",
        "code": "async def rapi_background_remover_getaccount(self,*args,**kwargs):\n    '''PixCleaner offers a REST API that allows you to easily use and interact with our service programmatically. Using our HTTP interface integrate our background removal features into any business or application.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_background_remover_getaccount',kwargs)\n        "
    },
    "rapi_background_remover_getimage": {
        "api_name": "getimage",
        "category": "Visual_Recognition",
        "tool_name": "background_remover",
        "code": "async def rapi_background_remover_getimage(self,*args,**kwargs):\n    '''PixCleaner offers a REST API that allows you to easily use and interact with our service programmatically. Using our HTTP interface integrate our background removal features into any business or application.\n    \n    \n\n    :param string imageId: ID of the image to get\n    :param boolean? recompute: ask the server to remove the background again (cost credits) defaults to True\n    '''\n    return await self._request_rapid_api('rapi_background_remover_getimage',kwargs)\n        "
    },
    "rapi_aircraft_data_simple_collection_getbyhex": {
        "api_name": "getbyhex",
        "category": "Transportation",
        "tool_name": "aircraft_data_simple_collection",
        "code": "async def rapi_aircraft_data_simple_collection_getbyhex(self,*args,**kwargs):\n    '''This API gives you information about an aircraft. We have collected this data from multiple sources. You get data from multiple sources at once using a single request.\n    \n    \n\n    :param string id:  defaults to 424353\n    '''\n    return await self._request_rapid_api('rapi_aircraft_data_simple_collection_getbyhex',kwargs)\n        "
    },
    "rapi_brazilian_airlines_real_flights_data_get_airline_data": {
        "api_name": "get_airline_data",
        "category": "Transportation",
        "tool_name": "brazilian_airlines_real_flights_data",
        "code": "async def rapi_brazilian_airlines_real_flights_data_get_airline_data(self,*args,**kwargs):\n    '''\u2708 This is an API that provides real brazilian airlines flights information.\n    \n    \n\n    :param string company:  defaults to AZU\n    :param DATE (YYYY-MM-DD) date:  defaults to 2022-04-30\n    '''\n    return await self._request_rapid_api('rapi_brazilian_airlines_real_flights_data_get_airline_data',kwargs)\n        "
    },
    "rapi_car_api_engines": {
        "api_name": "engines",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_engines(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? year: \n    :param string? direction:  defaults to asc\n    :param string? valves: \n    :param string? valve_timing: \n    :param string? fuel_type: \n    :param string? json: \n    :param string? model: \n    :param string? make: \n    :param string? make_model_id: \n    :param string? trim: \n    :param string? cam_type: \n    :param string? engine_type: \n    :param string? make_model_trim_id: \n    :param integer? limit: \n    :param string? drive_type: \n    :param string? verbose: Includes make, model and trim defaults to yes\n    :param string? make_id: \n    :param string? cylinders: \n    :param integer? page: \n    :param string? sort:  defaults to id\n    :param string? size: \n    :param string? horsepower_hp: \n    :param string? transmission: \n    '''\n    return await self._request_rapid_api('rapi_car_api_engines',kwargs)\n        "
    },
    "rapi_car_api_bodies": {
        "api_name": "bodies",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_bodies(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? make_model_trim_id: \n    :param string? direction:  defaults to asc\n    :param string? year: \n    :param integer? page: \n    :param string? verbose: Includes make, model and trim defaults to yes\n    :param string? json: \n    :param string? make_id: \n    :param string? trim: \n    :param string? sort:  defaults to id\n    :param string? make_model_id: \n    :param string? model: \n    :param string? make: \n    :param string? type: \n    :param integer? limit: \n    :param string? doors: \n    '''\n    return await self._request_rapid_api('rapi_car_api_bodies',kwargs)\n        "
    },
    "rapi_car_api_years": {
        "api_name": "years",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_years(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? make_id: \n    :param string? make: \n    :param string? year: \n    :param string? json: \n    :param string? make_model_id: \n    :param string? model: \n    :param string? trim: \n    '''\n    return await self._request_rapid_api('rapi_car_api_years',kwargs)\n        "
    },
    "rapi_car_api_trims": {
        "api_name": "trims",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_trims(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? make_id: \n    :param integer? limit: \n    :param string? direction:  defaults to asc\n    :param string? sort:  defaults to id\n    :param string? year: \n    :param string? model: \n    :param integer? page: \n    :param string? trim: \n    :param string? make_model_id: \n    :param string? verbose: Includes make, model and trim defaults to yes\n    :param string? make: \n    :param string? json: \n    '''\n    return await self._request_rapid_api('rapi_car_api_trims',kwargs)\n        "
    },
    "rapi_car_api_interior_colors": {
        "api_name": "interior_colors",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_interior_colors(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? model: \n    :param string? name: \n    :param string? trim: \n    :param integer? page: \n    :param string? direction:  defaults to asc\n    :param integer? limit: \n    :param string? make_model_trim_id: \n    :param string? year: \n    :param string? rgb: \n    :param string? sort:  defaults to id\n    :param string? verbose: Includes make, model and trim defaults to yes\n    :param string? json: \n    :param string? make_id: \n    :param string? make: \n    :param string? make_model_id: \n    '''\n    return await self._request_rapid_api('rapi_car_api_interior_colors',kwargs)\n        "
    },
    "rapi_car_api_exterior_colors": {
        "api_name": "exterior_colors",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_exterior_colors(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? trim: \n    :param string? make_model_id: \n    :param string? sort:  defaults to id\n    :param string? verbose: Includes make, model and trim defaults to yes\n    :param string? rgb: \n    :param integer? limit: \n    :param string? direction:  defaults to asc\n    :param string? name: \n    :param string? make_id: \n    :param string? make: \n    :param string? year: \n    :param string? model: \n    :param string? make_model_trim_id: \n    :param integer? page: \n    :param string? json: \n    '''\n    return await self._request_rapid_api('rapi_car_api_exterior_colors',kwargs)\n        "
    },
    "rapi_car_api_makes": {
        "api_name": "makes",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_makes(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param integer? limit: \n    :param string? direction:  defaults to asc\n    :param string? sort:  defaults to id\n    :param integer? page: \n    :param string? make: \n    :param string? year: \n    '''\n    return await self._request_rapid_api('rapi_car_api_makes',kwargs)\n        "
    },
    "rapi_car_api_vin_decoder": {
        "api_name": "vin_decoder",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_vin_decoder(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string vin:  defaults to KNDJ23AU4N7154467\n    '''\n    return await self._request_rapid_api('rapi_car_api_vin_decoder',kwargs)\n        "
    },
    "rapi_car_api_models": {
        "api_name": "models",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_models(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param integer? limit: \n    :param string? make_id: \n    :param string? year: \n    :param integer? page: \n    :param string? sort:  defaults to id\n    :param string? make: \n    :param string? model: \n    :param string? direction:  defaults to asc\n    :param string? verbose: Includes make, model and trim defaults to yes\n    '''\n    return await self._request_rapid_api('rapi_car_api_models',kwargs)\n        "
    },
    "rapi_car_api_vehicle_attributes": {
        "api_name": "vehicle_attributes",
        "category": "Transportation",
        "tool_name": "car_api",
        "code": "async def rapi_car_api_vehicle_attributes(self,*args,**kwargs):\n    '''Search vehicles sold in the United States by year, make, model, trim, engine, body, mileage, VIN decoder and more.\n    \n    \n\n    :param string? attribute: The attribute options to be returned defaults to bodies.type\n    '''\n    return await self._request_rapid_api('rapi_car_api_vehicle_attributes',kwargs)\n        "
    },
    "rapi_adsbx_flight_sim_traffic_livetraffic": {
        "api_name": "livetraffic",
        "category": "Transportation",
        "tool_name": "adsbx_flight_sim_traffic",
        "code": "async def rapi_adsbx_flight_sim_traffic_livetraffic(self,*args,**kwargs):\n    '''ADSBexchange.com traffic feed for flight simulators\n    \n    \n\n    :param integer lat: Latitude (-90 to 90)\n    :param integer lon: Longitude (-180 to 180) Hint: US is negative longitude!\n    '''\n    return await self._request_rapid_api('rapi_adsbx_flight_sim_traffic_livetraffic',kwargs)\n        "
    },
    "rapi_autoymm_ymm": {
        "api_name": "ymm",
        "category": "Transportation",
        "tool_name": "autoymm",
        "code": "async def rapi_autoymm_ymm(self,*args,**kwargs):\n    '''Ecommerce Automotive Year Make Model Data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_autoymm_ymm',kwargs)\n        "
    },
    "rapi_airlines_by_api_ninjas_v1_airlines": {
        "api_name": "v1_airlines",
        "category": "Transportation",
        "tool_name": "airlines_by_api_ninjas",
        "code": "async def rapi_airlines_by_api_ninjas_v1_airlines(self,*args,**kwargs):\n    '''General and detailed fleet information for over 1,000 airlines. See more info  at https://api-ninjas.com/api/airlines.\n    \n    \n\n    :param string? iata: International Air Transport Association (IATA) 2-character airline code.\n    :param string? name: Airline name. This parameter supports partial matching (e.g. United will match United Airlines) defaults to Singapore Airlines\n    :param string? icao: International Civil Aviation Organization (ICAO) 3-character airline code.\n    '''\n    return await self._request_rapid_api('rapi_airlines_by_api_ninjas_v1_airlines',kwargs)\n        "
    },
    "rapi_taxi_fare_calculator_get_taxi_fares": {
        "api_name": "get_taxi_fares",
        "category": "Transportation",
        "tool_name": "taxi_fare_calculator",
        "code": "async def rapi_taxi_fare_calculator_get_taxi_fares(self,*args,**kwargs):\n    '''How much does a taxi cost? Estimate your taxicab fare & rates. Get your taxi fare now and compare taxi prices. Taxi Fare Calculator provides taxi & cab fares for any trip in any city. The API provides you with a price for the best possible route for your cab ride.\n    \n    \n\n    :param integer arr_lat: Latitude of arrival point defaults to 52.47\n    :param integer arr_lng: Longitude of arrival point defaults to 13.63\n    :param integer dep_lat: Latitude of departure point defaults to 52.50\n    :param integer dep_lng: Longitude of departure point defaults to 13.43\n    '''\n    return await self._request_rapid_api('rapi_taxi_fare_calculator_get_taxi_fares',kwargs)\n        "
    },
    "rapi_aircraft_by_api_ninjas_v1_aircraft": {
        "api_name": "v1_aircraft",
        "category": "Transportation",
        "tool_name": "aircraft_by_api_ninjas",
        "code": "async def rapi_aircraft_by_api_ninjas_v1_aircraft(self,*args,**kwargs):\n    '''Detailed technical specs on over 1000 airplane models. See more info at https://api-ninjas.com/api/aircraft\n    \n    \n\n    :param integer? min_height: Minimum height of the aircraft in feet.\n    :param integer? min_wingspan: Minimum wingspan of the aircraft in feet.\n    :param integer? limit: How many results to return. Must be between 1 and 30. Default is 1.\n    :param integer? max_height: Maximum height of the aircraft in feet.\n    :param integer? max_length: Maximum length of the aircraft in feet.\n    :param integer? min_length: Minimum length of the aircraft in feet.\n    :param integer? max_range: Maximum range of the aircraft in nautical miles.\n    :param integer? min_range: Minimum range of the aircraft in nautical miles.\n    :param integer? max_speed: Maximum max. air speed in knots.\n    :param integer? max_wingspan: Maximum wingspan of the aircraft in feet.\n    :param string? engine_type: Type of engine. Must be one of: piston, propjet, jet.\n    :param integer? min_speed: Minimum max. air speed in knots.\n    :param string? model: Aircraft model name. defaults to G550\n    :param string? manufacturer: Company that designed and built the aircraft. defaults to Gulfstream\n    '''\n    return await self._request_rapid_api('rapi_aircraft_by_api_ninjas_v1_aircraft',kwargs)\n        "
    },
    "rapi_canadian_gas_prices_cities": {
        "api_name": "cities",
        "category": "Transportation",
        "tool_name": "canadian_gas_prices",
        "code": "async def rapi_canadian_gas_prices_cities(self,*args,**kwargs):\n    '''Provides current gas prices in Canada. Try the `/locations-list` endpoint to view all supported locations.\n    \n    \n\n    :param ENUM province: \n    '''\n    return await self._request_rapid_api('rapi_canadian_gas_prices_cities',kwargs)\n        "
    },
    "rapi_canadian_gas_prices_provinces": {
        "api_name": "provinces",
        "category": "Transportation",
        "tool_name": "canadian_gas_prices",
        "code": "async def rapi_canadian_gas_prices_provinces(self,*args,**kwargs):\n    '''Provides current gas prices in Canada. Try the `/locations-list` endpoint to view all supported locations.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_canadian_gas_prices_provinces',kwargs)\n        "
    },
    "rapi_canadian_gas_prices_city_list": {
        "api_name": "city_list",
        "category": "Transportation",
        "tool_name": "canadian_gas_prices",
        "code": "async def rapi_canadian_gas_prices_city_list(self,*args,**kwargs):\n    '''Provides current gas prices in Canada. Try the `/locations-list` endpoint to view all supported locations.\n    \n    \n\n    :param ENUM province: \n    '''\n    return await self._request_rapid_api('rapi_canadian_gas_prices_city_list',kwargs)\n        "
    },
    "rapi_vehicle_rc_information_v2_vehicle_information": {
        "api_name": "vehicle_information",
        "category": "Transportation",
        "tool_name": "vehicle_rc_information_v2",
        "code": "async def rapi_vehicle_rc_information_v2_vehicle_information(self,*args,**kwargs):\n    '''Fetch any Indian Vehicle's Information through it's Registration Number/License Plate.\nThis API can fetch:-\n[+] Owner Name\n[+] Owner's Father Name\n[+] Owner's Permanent & Current Address\n[+] Vehicle Details\n[+] Financer Details\n[+] Permit & Insurance Details\n[+] NOC Details\n.......And Much More\n\nTags: Parivahan mParivahan Vehicle Info RC Details India Car Info Car Info RC database\n    \n    \n\n    :param string VehicleNumber:  defaults to PB65AM0008\n    '''\n    return await self._request_rapid_api('rapi_vehicle_rc_information_v2_vehicle_information',kwargs)\n        "
    },
    "rapi_helicopter_by_api_ninjas_v1_helicopter": {
        "api_name": "v1_helicopter",
        "category": "Transportation",
        "tool_name": "helicopter_by_api_ninjas",
        "code": "async def rapi_helicopter_by_api_ninjas_v1_helicopter(self,*args,**kwargs):\n    '''Detailed technical specs for a wide range of helicopter models. See more info at https://api-ninjas.com/api/helicopter.\n    \n    \n\n    :param integer? max_height: Maximum height of the helicopter in feet.\n    :param integer? limit: How many results to return. Must be between 1 and 30. Default is 1.\n    :param integer? min_height: Minimum height of the helicopter in feet.\n    :param integer? max_length: Maximum length of the helicopter in feet.\n    :param integer? min_length: Minimum length of the helicopter in feet.\n    :param integer? min_speed: Minimum max. air speed in knots.\n    :param integer? min_range: Minimum range of the helicopter in nautical miles.\n    :param integer? max_range: Maximum range of the helicopter in nautical miles.\n    :param integer? max_speed: Maximum max. air speed in knots.\n    :param string? manufacturer: Company that designed and built the helicopter. defaults to Bell\n    :param string? model: Helicopter model name. defaults to 206\n    '''\n    return await self._request_rapid_api('rapi_helicopter_by_api_ninjas_v1_helicopter',kwargs)\n        "
    },
    "rapi_waze_autocomplete": {
        "api_name": "autocomplete",
        "category": "Transportation",
        "tool_name": "waze",
        "code": "async def rapi_waze_autocomplete(self,*args,**kwargs):\n    '''Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.\n    \n    \n\n    :param string q: Free-text geographic query defaults to sunn\n    :param string? lang: The language of the results. See https://wazeopedia.waze.com/wiki/USA/Countries_and_Languages for a list of supported languages. defaults to en\n    :param string? coordinates: Geographic coordinates (latitude, longitude) bias. Highly recommended to use for getting accurate results. defaults to 37.376754, -122.023350\n    '''\n    return await self._request_rapid_api('rapi_waze_autocomplete',kwargs)\n        "
    },
    "rapi_waze_driving_directions": {
        "api_name": "driving_directions",
        "category": "Transportation",
        "tool_name": "waze",
        "code": "async def rapi_waze_driving_directions(self,*args,**kwargs):\n    '''Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.\n    \n    \n\n    :param string source_coordinates: Geographic coordinates (latitude, longitude pair) of the starting point defaults to 32.0852999,34.78176759999999\n    :param string destination_coordinates: Geographic coordinates (latitude, longitude pair) of the destination defaults to 32.7940463,34.989571\n    :param boolean? return_route_coordinates: Whether to return route coordinate pairs (`route_coordinates` field)\n    :param integer? arrival_timestamp: Unix-timestamp (seconds since epoch) of the arrival time (in case not specified directions will be returned for current time) \n    '''\n    return await self._request_rapid_api('rapi_waze_driving_directions',kwargs)\n        "
    },
    "rapi_waze_alerts_and_jams": {
        "api_name": "alerts_and_jams",
        "category": "Transportation",
        "tool_name": "waze",
        "code": "async def rapi_waze_alerts_and_jams(self,*args,**kwargs):\n    '''Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.\n    \n    \n\n    :param string top_right: Top-right corner of the geographic rectangular area for which to get alerts and traffic jams. Specified as latitude, longitude pair. defaults to 40.772787404902594,-73.76818084716798\n    :param string bottom_left: Bottom-left corner of the geographic rectangular area for which to get alerts and traffic jams. Specified as latitude, longitude pair. defaults to 40.66615391742187,-74.13732147216798\n    :param integer? max_alerts: Maximum number of alerts to fetch (to avoid fetching alerts set it to `0`).\nDefault: `20` defaults to 20\n    :param integer? max_jams: Maximum number of traffic jams to fetch (to avoid fetching traffic jams, set it to `0`).\nDefault: `20` defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_waze_alerts_and_jams',kwargs)\n        "
    },
    "rapi_datamo_specs_v1_tier1": {
        "api_name": "specs_v1_tier1",
        "category": "Transportation",
        "tool_name": "datamo",
        "code": "async def rapi_datamo_specs_v1_tier1(self,*args,**kwargs):\n    '''Datamo is a RESTful API that provides extensive electric and combustion vehicle specification data.\n    \n    \n\n    :param string make: At least 1 query parameter is required to make a successful call. For purpose of testing through the RapidAPI interface, this is required. Normally, only one of any additional query parameters is required. i.e. make, model, engineType, ... defaults to Tesla\n    :param string? sortBy: The field you would like to sort by.\n    :param string? order: The sort order of the specified field.\n    :param string? model: At least 1 query parameter is required to make a successful call. defaults to Model 3\n    :param integer? page: The page of data returned, starting with index 1 (Default 1)\n    :param integer? per_page: The number of entries returned per query. The default is 10 per page. The max per page is 250. \n    :param string? fields: Over 100+ returnable fields including: make, model, engineType, bodyType, msrp, etc. See the Datamo website for a full list. Leave blank to return all fields.\n    '''\n    return await self._request_rapid_api('rapi_datamo_specs_v1_tier1',kwargs)\n        "
    },
    "rapi_datamo_specs_v1_getmakes": {
        "api_name": "specs_v1_getmakes",
        "category": "Transportation",
        "tool_name": "datamo",
        "code": "async def rapi_datamo_specs_v1_getmakes(self,*args,**kwargs):\n    '''Datamo is a RESTful API that provides extensive electric and combustion vehicle specification data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_datamo_specs_v1_getmakes',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_ak": {
        "api_name": "us_ak",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_ak(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_ak',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_az": {
        "api_name": "us_az",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_az(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_az',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_de": {
        "api_name": "us_de",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_de(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_de',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_dc": {
        "api_name": "us_dc",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_dc(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_dc',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_al": {
        "api_name": "us_al",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_al(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_al',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_ca": {
        "api_name": "us_ca",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_ca(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_ca',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_fl": {
        "api_name": "us_fl",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_fl(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_fl',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_ga": {
        "api_name": "us_ga",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_ga(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_ga',kwargs)\n        "
    },
    "rapi_us_gas_prices_us_ar": {
        "api_name": "us_ar",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us_ar(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us_ar',kwargs)\n        "
    },
    "rapi_us_gas_prices_us": {
        "api_name": "us",
        "category": "Transportation",
        "tool_name": "us_gas_prices",
        "code": "async def rapi_us_gas_prices_us(self,*args,**kwargs):\n    '''Simplest and most comprehensive API for average gas price data in the US.\n    \n    \n\n    :param DATE (YYYY-MM-DD)? date: \n    '''\n    return await self._request_rapid_api('rapi_us_gas_prices_us',kwargs)\n        "
    },
    "rapi_fachaapi_temporary_email_stats": {
        "api_name": "temporary_email_stats",
        "category": "Transportation",
        "tool_name": "fachaapi",
        "code": "async def rapi_fachaapi_temporary_email_stats(self,*args,**kwargs):\n    '''Multi Purpose API, including Temporary Disposable Email Detection, Aircraft Database and Live Aircraft Data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fachaapi_temporary_email_stats',kwargs)\n        "
    },
    "rapi_travel_hacking_tool_get_airline_alliance_list": {
        "api_name": "get_airline_alliance_list",
        "category": "Transportation",
        "tool_name": "travel_hacking_tool",
        "code": "async def rapi_travel_hacking_tool_get_airline_alliance_list(self,*args,**kwargs):\n    '''Complete and up-to-date database with detailed information about IATA airports, IATA airlines, countries, alliances and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_travel_hacking_tool_get_airline_alliance_list',kwargs)\n        "
    },
    "rapi_travel_hacking_tool_get_timezones": {
        "api_name": "get_timezones",
        "category": "Transportation",
        "tool_name": "travel_hacking_tool",
        "code": "async def rapi_travel_hacking_tool_get_timezones(self,*args,**kwargs):\n    '''Complete and up-to-date database with detailed information about IATA airports, IATA airlines, countries, alliances and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_travel_hacking_tool_get_timezones',kwargs)\n        "
    },
    "rapi_travel_hacking_tool_get_airport_details": {
        "api_name": "get_airport_details",
        "category": "Transportation",
        "tool_name": "travel_hacking_tool",
        "code": "async def rapi_travel_hacking_tool_get_airport_details(self,*args,**kwargs):\n    '''Complete and up-to-date database with detailed information about IATA airports, IATA airlines, countries, alliances and more.\n    \n    \n\n    :param string code: Specify a valid three letter IATA code. defaults to DFW\n    '''\n    return await self._request_rapid_api('rapi_travel_hacking_tool_get_airport_details',kwargs)\n        "
    },
    "rapi_flight_radar_aircrafts_list": {
        "api_name": "aircrafts_list",
        "category": "Transportation",
        "tool_name": "flight_radar",
        "code": "async def rapi_flight_radar_aircrafts_list(self,*args,**kwargs):\n    '''The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_radar_aircrafts_list',kwargs)\n        "
    },
    "rapi_flight_radar_flights_list_by_airline": {
        "api_name": "flights_list_by_airline",
        "category": "Transportation",
        "tool_name": "flight_radar",
        "code": "async def rapi_flight_radar_flights_list_by_airline(self,*args,**kwargs):\n    '''The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com\n    \n    \n\n    :param string airline: The value of 'icao' field returned in .../airlines/list or .../flights/detail endpoint\nThe value of 'operator' field returned in .../flights/search endpoint\n defaults to AXM\n    '''\n    return await self._request_rapid_api('rapi_flight_radar_flights_list_by_airline',kwargs)\n        "
    },
    "rapi_flight_radar_flights_search": {
        "api_name": "flights_search",
        "category": "Transportation",
        "tool_name": "flight_radar",
        "code": "async def rapi_flight_radar_flights_search(self,*args,**kwargs):\n    '''The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com\n    \n    \n\n    :param string query: Aircraft number, flight code, airline code, etc... defaults to FD3210\n    :param integer? limit: The number of items per response (max 25) defaults to 25\n    '''\n    return await self._request_rapid_api('rapi_flight_radar_flights_search',kwargs)\n        "
    },
    "rapi_flight_radar_airlines_get_logos": {
        "api_name": "airlines_get_logos",
        "category": "Transportation",
        "tool_name": "flight_radar",
        "code": "async def rapi_flight_radar_airlines_get_logos(self,*args,**kwargs):\n    '''The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_radar_airlines_get_logos',kwargs)\n        "
    },
    "rapi_flight_radar_airlines_list": {
        "api_name": "airlines_list",
        "category": "Transportation",
        "tool_name": "flight_radar",
        "code": "async def rapi_flight_radar_airlines_list(self,*args,**kwargs):\n    '''The world's most popular flight tracker API which helps you to create Flight tracker application, such as : flightradar24.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_flight_radar_airlines_list',kwargs)\n        "
    },
    "rapi_vin_lookup_by_api_ninjas_v1_vinlookup": {
        "api_name": "v1_vinlookup",
        "category": "Transportation",
        "tool_name": "vin_lookup_by_api_ninjas",
        "code": "async def rapi_vin_lookup_by_api_ninjas_v1_vinlookup(self,*args,**kwargs):\n    '''Find vehicle information from Vehicle Identification Numbers. See more info at https://api-ninjas.com/api/vinlookup.\n    \n    \n\n    :param string vin: valid VIN to check. Must be a 17-character string. defaults to JH4KA7561PC008269\n    '''\n    return await self._request_rapid_api('rapi_vin_lookup_by_api_ninjas_v1_vinlookup',kwargs)\n        "
    },
    "rapi_pragmavantapi_web_pdf": {
        "api_name": "web_pdf",
        "category": "Other",
        "tool_name": "pragmavantapi",
        "code": "async def rapi_pragmavantapi_web_pdf(self,*args,**kwargs):\n    '''Practical API for streamlined business and cloud applications.\n    \n    \n\n    :param string source:  defaults to https://www.msn.com\n    '''\n    return await self._request_rapid_api('rapi_pragmavantapi_web_pdf',kwargs)\n        "
    },
    "rapi_pragmavantapi_python_env": {
        "api_name": "python_env",
        "category": "Other",
        "tool_name": "pragmavantapi",
        "code": "async def rapi_pragmavantapi_python_env(self,*args,**kwargs):\n    '''Practical API for streamlined business and cloud applications.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pragmavantapi_python_env',kwargs)\n        "
    },
    "rapi_pragmavantapi_file_content_type": {
        "api_name": "file_content_type",
        "category": "Other",
        "tool_name": "pragmavantapi",
        "code": "async def rapi_pragmavantapi_file_content_type(self,*args,**kwargs):\n    '''Practical API for streamlined business and cloud applications.\n    \n    \n\n    :param string source:  defaults to http://google.com\n    :param string? cache-key:  defaults to c7b920f57e553df2bb68272f61570210\n    '''\n    return await self._request_rapid_api('rapi_pragmavantapi_file_content_type',kwargs)\n        "
    },
    "rapi_pragmavantapi_file_digest": {
        "api_name": "file_digest",
        "category": "Other",
        "tool_name": "pragmavantapi",
        "code": "async def rapi_pragmavantapi_file_digest(self,*args,**kwargs):\n    '''Practical API for streamlined business and cloud applications.\n    \n    \n\n    :param string source:  defaults to http://google.com\n    :param string? cache-key: \n    '''\n    return await self._request_rapid_api('rapi_pragmavantapi_file_digest',kwargs)\n        "
    },
    "rapi_pragmavantapi_image_convert": {
        "api_name": "image_convert",
        "category": "Other",
        "tool_name": "pragmavantapi",
        "code": "async def rapi_pragmavantapi_image_convert(self,*args,**kwargs):\n    '''Practical API for streamlined business and cloud applications.\n    \n    \n\n    :param string? format:  defaults to jpeg\n    :param string? source: \n    :param integer? height:  defaults to 300\n    :param integer? width:  defaults to 300\n    '''\n    return await self._request_rapid_api('rapi_pragmavantapi_image_convert',kwargs)\n        "
    },
    "rapi_online_code_compiler_languages_versions": {
        "api_name": "languages_versions",
        "category": "Other",
        "tool_name": "online_code_compiler",
        "code": "async def rapi_online_code_compiler_languages_versions(self,*args,**kwargs):\n    '''Online code compiler API in 75+ languages. Integrate the code compiler API into your applications/sites simply and quickly.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_online_code_compiler_languages_versions',kwargs)\n        "
    },
    "rapi_world_of_quotes_get_quotes_by_specific_category": {
        "api_name": "get_quotes_by_specific_category",
        "category": "Other",
        "tool_name": "world_of_quotes",
        "code": "async def rapi_world_of_quotes_get_quotes_by_specific_category(self,*args,**kwargs):\n    '''API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.\n    \n    \n\n    :param string category:  defaults to age\n    :param integer? page:  defaults to 2\n    :param integer? limit:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_world_of_quotes_get_quotes_by_specific_category',kwargs)\n        "
    },
    "rapi_world_of_quotes_get_quote_of_the_day": {
        "api_name": "get_quote_of_the_day",
        "category": "Other",
        "tool_name": "world_of_quotes",
        "code": "async def rapi_world_of_quotes_get_quote_of_the_day(self,*args,**kwargs):\n    '''API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.\n    \n    \n\n    :param string? author: \n    :param string? category:  defaults to inspirational\n    '''\n    return await self._request_rapid_api('rapi_world_of_quotes_get_quote_of_the_day',kwargs)\n        "
    },
    "rapi_world_of_quotes_get_quotes_by_specific_author": {
        "api_name": "get_quotes_by_specific_author",
        "category": "Other",
        "tool_name": "world_of_quotes",
        "code": "async def rapi_world_of_quotes_get_quotes_by_specific_author(self,*args,**kwargs):\n    '''API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.\n    \n    \n\n    :param string author:  defaults to Albert Einstein\n    :param integer? page:  defaults to 3\n    :param integer? limit:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_world_of_quotes_get_quotes_by_specific_author',kwargs)\n        "
    },
    "rapi_world_of_quotes_get_authors": {
        "api_name": "get_authors",
        "category": "Other",
        "tool_name": "world_of_quotes",
        "code": "async def rapi_world_of_quotes_get_authors(self,*args,**kwargs):\n    '''API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_of_quotes_get_authors',kwargs)\n        "
    },
    "rapi_world_of_quotes_get_quotes_category": {
        "api_name": "get_quotes_category",
        "category": "Other",
        "tool_name": "world_of_quotes",
        "code": "async def rapi_world_of_quotes_get_quotes_category(self,*args,**kwargs):\n    '''API returns over 50,000+ famous quotes from over 10,000+ great authors and over 350+ different categories.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_of_quotes_get_quotes_category',kwargs)\n        "
    },
    "rapi_quran_com_recitations_by_chapter_number": {
        "api_name": "recitations_by_chapter_number",
        "category": "Other",
        "tool_name": "quran_com",
        "code": "async def rapi_quran_com_recitations_by_chapter_number(self,*args,**kwargs):\n    '''The default API of Quran.com website\n    \n    \n\n    :param integer chapter_number: \n    :param integer recitation_id: Recitation Id, you can get list of all ayah by ayah recitations using this endpoint #endpoint:HLbauN2sdGitPQPPL\n    '''\n    return await self._request_rapid_api('rapi_quran_com_recitations_by_chapter_number',kwargs)\n        "
    },
    "rapi_quran_com_simple_text_without_tashkil_diacritical": {
        "api_name": "simple_text_without_tashkil_diacritical",
        "category": "Other",
        "tool_name": "quran_com",
        "code": "async def rapi_quran_com_simple_text_without_tashkil_diacritical(self,*args,**kwargs):\n    '''The default API of Quran.com website\n    \n    \n\n    :param integer? chapter_number: If you want to get text of a specific surah.\n    :param integer? hizb_number: If you want to get text of a specific hizb.\n    :param string? verse_key: If you want to get text of a specific ayah.\n    :param integer? page_number: If you want to get text of a Madani Muhsaf page\n    :param integer? rub_el_hizb_number: If you want to get text of a specific Rub el Hizb.\n    :param integer? juz_number: If you want to get text of a specific juz.\n    '''\n    return await self._request_rapid_api('rapi_quran_com_simple_text_without_tashkil_diacritical',kwargs)\n        "
    },
    "rapi_quran_com_glyph_codes_qcf_v2_font": {
        "api_name": "glyph_codes_qcf_v2_font",
        "category": "Other",
        "tool_name": "quran_com",
        "code": "async def rapi_quran_com_glyph_codes_qcf_v2_font(self,*args,**kwargs):\n    '''The default API of Quran.com website\n    \n    \n\n    :param string? verse_key: If you want to get text of a specific ayah.\n    :param integer? hizb_number: If you want to get text of a specific hizb.\n    :param integer? rub_el_hizb_number: If you want to get text of a specific Rub el Hizb.\n    :param integer? juz_number: If you want to get text of a specific juz.\n    :param integer? chapter_number: If you want to get text of a specific surah.\n    :param integer? page_number: If you want to get text of a Madani Muhsaf page\n    '''\n    return await self._request_rapid_api('rapi_quran_com_glyph_codes_qcf_v2_font',kwargs)\n        "
    },
    "rapi_quotes_diffusion_random": {
        "api_name": "random",
        "category": "Other",
        "tool_name": "quotes_diffusion",
        "code": "async def rapi_quotes_diffusion_random(self,*args,**kwargs):\n    '''The \"Quotes Diffusion\" API provides users with a vast collection of curated popular quotes from around the world. It includes 56,394 quotes, spanning 1,963 topics, from 10,920 authors. The API also generates background images based on keywords from the quotes using text-to-image diffusion models.\n    \n    \n\n    :param string? search: Search for a random quote based on custom terms\n    '''\n    return await self._request_rapid_api('rapi_quotes_diffusion_random',kwargs)\n        "
    },
    "rapi_quotes_diffusion_topic": {
        "api_name": "topic",
        "category": "Other",
        "tool_name": "quotes_diffusion",
        "code": "async def rapi_quotes_diffusion_topic(self,*args,**kwargs):\n    '''The \"Quotes Diffusion\" API provides users with a vast collection of curated popular quotes from around the world. It includes 56,394 quotes, spanning 1,963 topics, from 10,920 authors. The API also generates background images based on keywords from the quotes using text-to-image diffusion models.\n    \n    \n\n    :param integer? page: Page number for pagination purpose\n    :param string? search: Search for topics based on custom terms\n    '''\n    return await self._request_rapid_api('rapi_quotes_diffusion_topic',kwargs)\n        "
    },
    "rapi_quotes_diffusion_author": {
        "api_name": "author",
        "category": "Other",
        "tool_name": "quotes_diffusion",
        "code": "async def rapi_quotes_diffusion_author(self,*args,**kwargs):\n    '''The \"Quotes Diffusion\" API provides users with a vast collection of curated popular quotes from around the world. It includes 56,394 quotes, spanning 1,963 topics, from 10,920 authors. The API also generates background images based on keywords from the quotes using text-to-image diffusion models.\n    \n    \n\n    :param integer? page: Page number for pagination purpose\n    :param string? search: Search for authors based on custom terms\n    '''\n    return await self._request_rapid_api('rapi_quotes_diffusion_author',kwargs)\n        "
    },
    "rapi_shreehari_shriji": {
        "api_name": "shriji",
        "category": "Other",
        "tool_name": "shreehari",
        "code": "async def rapi_shreehari_shriji(self,*args,**kwargs):\n    '''Shreehari\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shreehari_shriji',kwargs)\n        "
    },
    "rapi_j2acoin_ranking_list": {
        "api_name": "ranking_list",
        "category": "Other",
        "tool_name": "j2acoin",
        "code": "async def rapi_j2acoin_ranking_list(self,*args,**kwargs):\n    '''Test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_j2acoin_ranking_list',kwargs)\n        "
    },
    "rapi_cardsearch_v1_prices": {
        "api_name": "v1_prices",
        "category": "Other",
        "tool_name": "cardsearch",
        "code": "async def rapi_cardsearch_v1_prices(self,*args,**kwargs):\n    '''Magic the Gathering card, set and Dutch price information.\r\nEach api call is required to provide a authentication key.\r\nYou can request one by email, it's free by the way\r\ninfo@cardsearch.nl\r\n\r\nEach api call can provide an additional parameter \"format\" with values \"json\",\"xml\", \"csv\" or \"table\".\r\nJson is the default format.\r\nExample GET http://api.cardsearch.nl/v1/sets?key=demo&format=xml\n    \n    \n\n    :param string? key: Your Cardsearch api key\n    :param string? names[]: Single card: \"Terror\", card from set: \"Terror@6ED\"\n    :param string? mids[]: A single card or multiple cards by multiverseid\n    '''\n    return await self._request_rapid_api('rapi_cardsearch_v1_prices',kwargs)\n        "
    },
    "rapi_uniswap_v2_api_pair_id": {
        "api_name": "pair_id",
        "category": "Other",
        "tool_name": "uniswap_v2_api",
        "code": "async def rapi_uniswap_v2_api_pair_id(self,*args,**kwargs):\n    '''REST API of Uniswap V2\n    \n    \n\n    :param string id: The address of the Pair defaults to 0xb011eeaab8bf0c6de75510128da95498e4b7e67f\n    '''\n    return await self._request_rapid_api('rapi_uniswap_v2_api_pair_id',kwargs)\n        "
    },
    "rapi_uniswap_v2_api_ethprice": {
        "api_name": "ethprice",
        "category": "Other",
        "tool_name": "uniswap_v2_api",
        "code": "async def rapi_uniswap_v2_api_ethprice(self,*args,**kwargs):\n    '''REST API of Uniswap V2\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_uniswap_v2_api_ethprice',kwargs)\n        "
    },
    "rapi_uniswap_v2_api_token_id": {
        "api_name": "token_id",
        "category": "Other",
        "tool_name": "uniswap_v2_api",
        "code": "async def rapi_uniswap_v2_api_token_id(self,*args,**kwargs):\n    '''REST API of Uniswap V2\n    \n    \n\n    :param string id: The address of the Token defaults to 0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce\n    '''\n    return await self._request_rapid_api('rapi_uniswap_v2_api_token_id',kwargs)\n        "
    },
    "rapi_agc_rr": {
        "api_name": "rr",
        "category": "Other",
        "tool_name": "agc",
        "code": "async def rapi_agc_rr(self,*args,**kwargs):\n    '''Test\n    \n    \n\n    :param string? RR: \n    '''\n    return await self._request_rapid_api('rapi_agc_rr',kwargs)\n        "
    },
    "rapi_air_quality_demo_1_v1_airquality": {
        "api_name": "v1_airquality",
        "category": "Other",
        "tool_name": "air_quality_demo_1",
        "code": "async def rapi_air_quality_demo_1_v1_airquality(self,*args,**kwargs):\n    '''Created from RapidAPI for Mac\n    \n    \n\n    :param string? city:  defaults to Berlin\n    '''\n    return await self._request_rapid_api('rapi_air_quality_demo_1_v1_airquality',kwargs)\n        "
    },
    "rapi_darko_androcec_example_versions": {
        "api_name": "versions",
        "category": "Other",
        "tool_name": "darko_androcec_example",
        "code": "async def rapi_darko_androcec_example_versions(self,*args,**kwargs):\n    '''Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_darko_androcec_example_versions',kwargs)\n        "
    },
    "rapi_cat_facts_get_all_facts_about_cat": {
        "api_name": "get_all_facts_about_cat",
        "category": "Other",
        "tool_name": "cat_facts",
        "code": "async def rapi_cat_facts_get_all_facts_about_cat(self,*args,**kwargs):\n    '''An API Service returning fun facts about cats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cat_facts_get_all_facts_about_cat',kwargs)\n        "
    },
    "rapi_cat_facts_get_a_random_fact_about_cats": {
        "api_name": "get_a_random_fact_about_cats",
        "category": "Other",
        "tool_name": "cat_facts",
        "code": "async def rapi_cat_facts_get_a_random_fact_about_cats(self,*args,**kwargs):\n    '''An API Service returning fun facts about cats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cat_facts_get_a_random_fact_about_cats',kwargs)\n        "
    },
    "rapi_dogbreeds_get_specific_dog_breed": {
        "api_name": "get_specific_dog_breed",
        "category": "Other",
        "tool_name": "dogbreeds",
        "code": "async def rapi_dogbreeds_get_specific_dog_breed(self,*args,**kwargs):\n    '''An API showing all dog breeds and your characteristics\n    \n    \n\n    :param string slug:  defaults to shiba-inu\n    '''\n    return await self._request_rapid_api('rapi_dogbreeds_get_specific_dog_breed',kwargs)\n        "
    },
    "rapi_dogbreeds_get_all_dog_breeds": {
        "api_name": "get_all_dog_breeds",
        "category": "Other",
        "tool_name": "dogbreeds",
        "code": "async def rapi_dogbreeds_get_all_dog_breeds(self,*args,**kwargs):\n    '''An API showing all dog breeds and your characteristics\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dogbreeds_get_all_dog_breeds',kwargs)\n        "
    },
    "rapi_demo_validation": {
        "api_name": "validation",
        "category": "Other",
        "tool_name": "demo",
        "code": "async def rapi_demo_validation(self,*args,**kwargs):\n    '''demo para RH\n    \n    \n\n    :param string q1: \n    '''\n    return await self._request_rapid_api('rapi_demo_validation',kwargs)\n        "
    },
    "rapi_colegiosantaana_disciplina_2": {
        "api_name": "disciplina_2",
        "category": "Other",
        "tool_name": "colegiosantaana",
        "code": "async def rapi_colegiosantaana_disciplina_2(self,*args,**kwargs):\n    '''Colegio Santa Ana\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_colegiosantaana_disciplina_2',kwargs)\n        "
    },
    "rapi_colegiosantaana_inasistencias_2": {
        "api_name": "inasistencias_2",
        "category": "Other",
        "tool_name": "colegiosantaana",
        "code": "async def rapi_colegiosantaana_inasistencias_2(self,*args,**kwargs):\n    '''Colegio Santa Ana\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_colegiosantaana_inasistencias_2',kwargs)\n        "
    },
    "rapi_colegiosantaana_inasistencias_1": {
        "api_name": "inasistencias_1",
        "category": "Other",
        "tool_name": "colegiosantaana",
        "code": "async def rapi_colegiosantaana_inasistencias_1(self,*args,**kwargs):\n    '''Colegio Santa Ana\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_colegiosantaana_inasistencias_1',kwargs)\n        "
    },
    "rapi_ukraine_war_data_refugee_by_country": {
        "api_name": "refugee_by_country",
        "category": "Other",
        "tool_name": "ukraine_war_data",
        "code": "async def rapi_ukraine_war_data_refugee_by_country(self,*args,**kwargs):\n    '''Data about the Ukrainian conflict\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ukraine_war_data_refugee_by_country',kwargs)\n        "
    },
    "rapi_ukraine_war_data_refugee_by_data": {
        "api_name": "refugee_by_data",
        "category": "Other",
        "tool_name": "ukraine_war_data",
        "code": "async def rapi_ukraine_war_data_refugee_by_data(self,*args,**kwargs):\n    '''Data about the Ukrainian conflict\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ukraine_war_data_refugee_by_data',kwargs)\n        "
    },
    "rapi_mypolicyapi_get_policy": {
        "api_name": "get_policy",
        "category": "Other",
        "tool_name": "mypolicyapi",
        "code": "async def rapi_mypolicyapi_get_policy(self,*args,**kwargs):\n    '''Policy functions\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mypolicyapi_get_policy',kwargs)\n        "
    },
    "rapi_neko_sfw_sfw": {
        "api_name": "sfw",
        "category": "Other",
        "tool_name": "neko_sfw",
        "code": "async def rapi_neko_sfw_sfw(self,*args,**kwargs):\n    '''This Program will provide SFW images\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_neko_sfw_sfw',kwargs)\n        "
    },
    "rapi_lab2_incognito_location": {
        "api_name": "incognito_location",
        "category": "Other",
        "tool_name": "lab2",
        "code": "async def rapi_lab2_incognito_location(self,*args,**kwargs):\n    '''An api for lab 2 for a course\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lab2_incognito_location',kwargs)\n        "
    },
    "rapi_httpbin_test_get": {
        "api_name": "get",
        "category": "Other",
        "tool_name": "httpbin_test",
        "code": "async def rapi_httpbin_test_get(self,*args,**kwargs):\n    '''httpbin test\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_httpbin_test_get',kwargs)\n        "
    },
    "rapi_csa_v2_indisciplina_1": {
        "api_name": "indisciplina_1",
        "category": "Other",
        "tool_name": "csa_v2",
        "code": "async def rapi_csa_v2_indisciplina_1(self,*args,**kwargs):\n    '''Colegio Santa Ana\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_csa_v2_indisciplina_1',kwargs)\n        "
    },
    "rapi_demo1_health": {
        "api_name": "health",
        "category": "Other",
        "tool_name": "demo1",
        "code": "async def rapi_demo1_health(self,*args,**kwargs):\n    '''demo1\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_demo1_health',kwargs)\n        "
    },
    "rapi_demo1_contests": {
        "api_name": "contests",
        "category": "Other",
        "tool_name": "demo1",
        "code": "async def rapi_demo1_contests(self,*args,**kwargs):\n    '''demo1\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_demo1_contests',kwargs)\n        "
    },
    "rapi_quotsy_get_genres": {
        "api_name": "get_genres",
        "category": "Other",
        "tool_name": "quotsy",
        "code": "async def rapi_quotsy_get_genres(self,*args,**kwargs):\n    '''api for quots\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotsy_get_genres',kwargs)\n        "
    },
    "rapi_quotsy_get_all_authors": {
        "api_name": "get_all_authors",
        "category": "Other",
        "tool_name": "quotsy",
        "code": "async def rapi_quotsy_get_all_authors(self,*args,**kwargs):\n    '''api for quots\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotsy_get_all_authors',kwargs)\n        "
    },
    "rapi_quotsy_get_quotes_by_genre": {
        "api_name": "get_quotes_by_genre",
        "category": "Other",
        "tool_name": "quotsy",
        "code": "async def rapi_quotsy_get_quotes_by_genre(self,*args,**kwargs):\n    '''api for quots\n    \n    \n\n    :param string name:  defaults to love\n    '''\n    return await self._request_rapid_api('rapi_quotsy_get_quotes_by_genre',kwargs)\n        "
    },
    "rapi_quotsy_get_qoute": {
        "api_name": "get_qoute",
        "category": "Other",
        "tool_name": "quotsy",
        "code": "async def rapi_quotsy_get_qoute(self,*args,**kwargs):\n    '''api for quots\n    \n    \n\n    :param string id:  defaults to 00667985-3375-4b1b-abb0-60bcfa70a80f\n    '''\n    return await self._request_rapid_api('rapi_quotsy_get_qoute',kwargs)\n        "
    },
    "rapi_quotsy_get_quotes": {
        "api_name": "get_quotes",
        "category": "Other",
        "tool_name": "quotsy",
        "code": "async def rapi_quotsy_get_quotes(self,*args,**kwargs):\n    '''api for quots\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_quotsy_get_quotes',kwargs)\n        "
    },
    "rapi_typography_type": {
        "api_name": "type",
        "category": "Other",
        "tool_name": "typography",
        "code": "async def rapi_typography_type(self,*args,**kwargs):\n    '''A curated (120+) typeface combinations from Google Fonts, including details about tones, types, styles, and categories. The API also includes configurations for font sizes, letter spacing, and line heights, allowing developers and designers to create engaging and visually appealing content.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_typography_type',kwargs)\n        "
    },
    "rapi_typography_tone": {
        "api_name": "tone",
        "category": "Other",
        "tool_name": "typography",
        "code": "async def rapi_typography_tone(self,*args,**kwargs):\n    '''A curated (120+) typeface combinations from Google Fonts, including details about tones, types, styles, and categories. The API also includes configurations for font sizes, letter spacing, and line heights, allowing developers and designers to create engaging and visually appealing content.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_typography_tone',kwargs)\n        "
    },
    "rapi_typography_random": {
        "api_name": "random",
        "category": "Other",
        "tool_name": "typography",
        "code": "async def rapi_typography_random(self,*args,**kwargs):\n    '''A curated (120+) typeface combinations from Google Fonts, including details about tones, types, styles, and categories. The API also includes configurations for font sizes, letter spacing, and line heights, allowing developers and designers to create engaging and visually appealing content.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_typography_random',kwargs)\n        "
    },
    "rapi_typography_font": {
        "api_name": "font",
        "category": "Other",
        "tool_name": "typography",
        "code": "async def rapi_typography_font(self,*args,**kwargs):\n    '''A curated (120+) typeface combinations from Google Fonts, including details about tones, types, styles, and categories. The API also includes configurations for font sizes, letter spacing, and line heights, allowing developers and designers to create engaging and visually appealing content.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_typography_font',kwargs)\n        "
    },
    "rapi_dad_asd": {
        "api_name": "asd",
        "category": "Other",
        "tool_name": "dad",
        "code": "async def rapi_dad_asd(self,*args,**kwargs):\n    '''DASas\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dad_asd',kwargs)\n        "
    },
    "rapi_sunnah_fasting_api_v1_types": {
        "api_name": "api_v1_types",
        "category": "Other",
        "tool_name": "sunnah_fasting",
        "code": "async def rapi_sunnah_fasting_api_v1_types(self,*args,**kwargs):\n    '''List of sunnah fasting schedule. Start from year 2022.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sunnah_fasting_api_v1_types',kwargs)\n        "
    },
    "rapi_sunnah_fasting_api_v1_sources": {
        "api_name": "api_v1_sources",
        "category": "Other",
        "tool_name": "sunnah_fasting",
        "code": "async def rapi_sunnah_fasting_api_v1_sources(self,*args,**kwargs):\n    '''List of sunnah fasting schedule. Start from year 2022.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sunnah_fasting_api_v1_sources',kwargs)\n        "
    },
    "rapi_sunnah_fasting_api_v1_fastings": {
        "api_name": "api_v1_fastings",
        "category": "Other",
        "tool_name": "sunnah_fasting",
        "code": "async def rapi_sunnah_fasting_api_v1_fastings(self,*args,**kwargs):\n    '''List of sunnah fasting schedule. Start from year 2022.\n    \n    \n\n    :param integer? day: Day in month\n    :param integer? Year: Year\n    :param integer? month: Month\n    :param integer? category_id: Category ID\n    :param integer? type_id: Type ID\n    '''\n    return await self._request_rapid_api('rapi_sunnah_fasting_api_v1_fastings',kwargs)\n        "
    },
    "rapi_sunnah_fasting_api_v1_categories": {
        "api_name": "api_v1_categories",
        "category": "Other",
        "tool_name": "sunnah_fasting",
        "code": "async def rapi_sunnah_fasting_api_v1_categories(self,*args,**kwargs):\n    '''List of sunnah fasting schedule. Start from year 2022.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sunnah_fasting_api_v1_categories',kwargs)\n        "
    },
    "rapi_toptalonlinetest_items": {
        "api_name": "items",
        "category": "Other",
        "tool_name": "toptalonlinetest",
        "code": "async def rapi_toptalonlinetest_items(self,*args,**kwargs):\n    '''a small api similar to the one I got in the toptal test, returns an array of strings only with the possibility to filter using query params\n    \n    \n\n    :param string? q:  defaults to a\n    '''\n    return await self._request_rapid_api('rapi_toptalonlinetest_items',kwargs)\n        "
    },
    "rapi_surveymethods_dashboard": {
        "api_name": "dashboard",
        "category": "Other",
        "tool_name": "surveymethods",
        "code": "async def rapi_surveymethods_dashboard(self,*args,**kwargs):\n    '''The SurveyMethods API is designed so that you can integrate third party applications (like HR, CRM, Helpdesk, etc.) with SurveyMethods using HTTP methods. To use our API, you must have an account with SurveyMethods. Our API is available to all users regardless of package preferences.\n    \n    \n\n    :param string login_id: \n    :param string api_key: \n    :param string survey_code: \n    '''\n    return await self._request_rapid_api('rapi_surveymethods_dashboard',kwargs)\n        "
    },
    "rapi_surveymethods_deployment_details": {
        "api_name": "deployment_details",
        "category": "Other",
        "tool_name": "surveymethods",
        "code": "async def rapi_surveymethods_deployment_details(self,*args,**kwargs):\n    '''The SurveyMethods API is designed so that you can integrate third party applications (like HR, CRM, Helpdesk, etc.) with SurveyMethods using HTTP methods. To use our API, you must have an account with SurveyMethods. Our API is available to all users regardless of package preferences.\n    \n    \n\n    :param string login_id: \n    :param string api_key: \n    :param string survey_code: \n    '''\n    return await self._request_rapid_api('rapi_surveymethods_deployment_details',kwargs)\n        "
    },
    "rapi_surveymethods_responses_summary": {
        "api_name": "responses_summary",
        "category": "Other",
        "tool_name": "surveymethods",
        "code": "async def rapi_surveymethods_responses_summary(self,*args,**kwargs):\n    '''The SurveyMethods API is designed so that you can integrate third party applications (like HR, CRM, Helpdesk, etc.) with SurveyMethods using HTTP methods. To use our API, you must have an account with SurveyMethods. Our API is available to all users regardless of package preferences.\n    \n    \n\n    :param string login_id: \n    :param string api_key: \n    :param string survey_code: \n    '''\n    return await self._request_rapid_api('rapi_surveymethods_responses_summary',kwargs)\n        "
    },
    "rapi_surveymethods_all_survey_details": {
        "api_name": "all_survey_details",
        "category": "Other",
        "tool_name": "surveymethods",
        "code": "async def rapi_surveymethods_all_survey_details(self,*args,**kwargs):\n    '''The SurveyMethods API is designed so that you can integrate third party applications (like HR, CRM, Helpdesk, etc.) with SurveyMethods using HTTP methods. To use our API, you must have an account with SurveyMethods. Our API is available to all users regardless of package preferences.\n    \n    \n\n    :param string login_id: \n    :param string api_key: \n    '''\n    return await self._request_rapid_api('rapi_surveymethods_all_survey_details',kwargs)\n        "
    },
    "rapi_jak_api_brawl_stars": {
        "api_name": "brawl_stars",
        "category": "Other",
        "tool_name": "jak_api",
        "code": "async def rapi_jak_api_brawl_stars(self,*args,**kwargs):\n    '''A API made by Jonak Adipta Kalita!!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jak_api_brawl_stars',kwargs)\n        "
    },
    "rapi_jak_api_jak": {
        "api_name": "jak",
        "category": "Other",
        "tool_name": "jak_api",
        "code": "async def rapi_jak_api_jak(self,*args,**kwargs):\n    '''A API made by Jonak Adipta Kalita!!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jak_api_jak',kwargs)\n        "
    },
    "rapi_jak_api_mughal_empire": {
        "api_name": "mughal_empire",
        "category": "Other",
        "tool_name": "jak_api",
        "code": "async def rapi_jak_api_mughal_empire(self,*args,**kwargs):\n    '''A API made by Jonak Adipta Kalita!!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jak_api_mughal_empire',kwargs)\n        "
    },
    "rapi_jak_api_ben_10": {
        "api_name": "ben_10",
        "category": "Other",
        "tool_name": "jak_api",
        "code": "async def rapi_jak_api_ben_10(self,*args,**kwargs):\n    '''A API made by Jonak Adipta Kalita!!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jak_api_ben_10',kwargs)\n        "
    },
    "rapi_jak_api_miraculous": {
        "api_name": "miraculous",
        "category": "Other",
        "tool_name": "jak_api",
        "code": "async def rapi_jak_api_miraculous(self,*args,**kwargs):\n    '''A API made by Jonak Adipta Kalita!!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jak_api_miraculous',kwargs)\n        "
    },
    "rapi_sample_app_config_json_sample_app_config_copy": {
        "api_name": "sample_app_config_copy",
        "category": "Other",
        "tool_name": "sample_app_config_json",
        "code": "async def rapi_sample_app_config_json_sample_app_config_copy(self,*args,**kwargs):\n    '''version\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sample_app_config_json_sample_app_config_copy',kwargs)\n        "
    },
    "rapi_sample_app_config_json_version": {
        "api_name": "version",
        "category": "Other",
        "tool_name": "sample_app_config_json",
        "code": "async def rapi_sample_app_config_json_version(self,*args,**kwargs):\n    '''version\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sample_app_config_json_version',kwargs)\n        "
    },
    "rapi_ridet_nc_etablissements_d_une_entreprise": {
        "api_name": "etablissements_d_une_entreprise",
        "category": "Other",
        "tool_name": "ridet_nc",
        "code": "async def rapi_ridet_nc_etablissements_d_une_entreprise(self,*args,**kwargs):\n    '''API permettant d'obtenir les informations sur une entreprise ou un \u00e9tablissement en Nouvelle-Cal\u00e9donie\n    \n    \n\n    :param string rid:  defaults to 0132720\n    '''\n    return await self._request_rapid_api('rapi_ridet_nc_etablissements_d_une_entreprise',kwargs)\n        "
    },
    "rapi_ridet_nc_entreprise_par_rid": {
        "api_name": "entreprise_par_rid",
        "category": "Other",
        "tool_name": "ridet_nc",
        "code": "async def rapi_ridet_nc_entreprise_par_rid(self,*args,**kwargs):\n    '''API permettant d'obtenir les informations sur une entreprise ou un \u00e9tablissement en Nouvelle-Cal\u00e9donie\n    \n    \n\n    :param string rid:  defaults to 0132720\n    '''\n    return await self._request_rapid_api('rapi_ridet_nc_entreprise_par_rid',kwargs)\n        "
    },
    "rapi_ridet_nc_etablissement_par_ridet": {
        "api_name": "etablissement_par_ridet",
        "category": "Other",
        "tool_name": "ridet_nc",
        "code": "async def rapi_ridet_nc_etablissement_par_ridet(self,*args,**kwargs):\n    '''API permettant d'obtenir les informations sur une entreprise ou un \u00e9tablissement en Nouvelle-Cal\u00e9donie\n    \n    \n\n    :param string ridet:  defaults to 0132720001\n    '''\n    return await self._request_rapid_api('rapi_ridet_nc_etablissement_par_ridet',kwargs)\n        "
    },
    "rapi_ecoindex_get_healthcheck_health_get": {
        "api_name": "get_healthcheck_health_get",
        "category": "Other",
        "tool_name": "ecoindex",
        "code": "async def rapi_ecoindex_get_healthcheck_health_get(self,*args,**kwargs):\n    '''This API provides an easy way to analyze websites with Ecoindex. You have the ability to:\n\n- Make a page analysis\n- Define screen resolution\n- Save results to a DB\n- Retrieve results\n- Limit the number of request per day for a given host\n\nThis API is built on top of ecoindex-python with FastAPI\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ecoindex_get_healthcheck_health_get',kwargs)\n        "
    },
    "rapi_ecoindex_get_host_list_version_hosts_get": {
        "api_name": "get_host_list_version_hosts_get",
        "category": "Other",
        "tool_name": "ecoindex",
        "code": "async def rapi_ecoindex_get_host_list_version_hosts_get(self,*args,**kwargs):\n    '''This API provides an easy way to analyze websites with Ecoindex. You have the ability to:\n\n- Make a page analysis\n- Define screen resolution\n- Save results to a DB\n- Retrieve results\n- Limit the number of request per day for a given host\n\nThis API is built on top of ecoindex-python with FastAPI\n    \n    \n\n    :param object version: Engine version used to run the analysis (v0 or v1) defaults to v1\n    :param string? q: Filter by partial host name\n    :param string? date_from: Start date of the filter elements (example: 2020-01-01)\n    :param integer? size: Number of elements per page defaults to 50\n    :param string? date_to: End date of the filter elements  (example: 2020-01-01)\n    :param integer? page: Page number defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_ecoindex_get_host_list_version_hosts_get',kwargs)\n        "
    },
    "rapi_getassessments_getassessment": {
        "api_name": "getassessment",
        "category": "Other",
        "tool_name": "getassessments",
        "code": "async def rapi_getassessments_getassessment(self,*args,**kwargs):\n    '''Get Assessment Data\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_getassessments_getassessment',kwargs)\n        "
    },
    "rapi_uniblock_get_nft_owner": {
        "api_name": "get_nft_owner",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_nft_owner(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Enter the chain ID of the specific NFT to query. defaults to 1\n    :param string nftAddress: Enter the address of the NFT contract.\n    :param string nftId: Enter the NFT ID of the specific NFT to query.\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_nft_owner',kwargs)\n        "
    },
    "rapi_uniblock_get_nft_collection_metadata": {
        "api_name": "get_nft_collection_metadata",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_nft_collection_metadata(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Specific network to fetch the user's NFT balance. defaults to 1\n    :param string collectionAddress: The address of a specific NFT contract.\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_nft_collection_metadata',kwargs)\n        "
    },
    "rapi_uniblock_get_historical_nft_balances": {
        "api_name": "get_historical_nft_balances",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_historical_nft_balances(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param string walletAddress: The wallet address of the user whose NFT balances are being retrieved. Accepts either address or ENS.\n    :param integer chainId: Specific network to fetch the user's NFT balance. defaults to 1\n    :param integer timestamp: Date to retrieve user's NFT balances. Unix timestamp in seconds.\n    :param string? nftId: Id of the specific NFT to query.\n    :param string? nftAddress: The address of a particular NFT contract.\n    :param integer? limit: The maximum number of NFT balance records to return. defaults to 100\n    :param integer? offset: Number of rows to skip in query. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_historical_nft_balances',kwargs)\n        "
    },
    "rapi_uniblock_get_nft_info": {
        "api_name": "get_nft_info",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_nft_info(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Enter the chain ID of the specific NFT to query. defaults to 1\n    :param string nftAddress: Enter the address of the NFT contract.\n    :param string nftId: Enter the NFT ID of the specific NFT to query.\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_nft_info',kwargs)\n        "
    },
    "rapi_uniblock_get_nft_transfers_for_user": {
        "api_name": "get_nft_transfers_for_user",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_nft_transfers_for_user(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Network to filter through NFT transfer records. defaults to 1\n    :param string walletAddress: The user address that the transaction records are tied to. Accepts either address or ENS.\n    :param string? nftAddress: Specify NFT address to filter for in the NFT transfer records.\n    :param string? direction: Filter transactions based on whether they were sent or received. defaults to both\n    :param string? sortByDate: Specify whether to sort NFT transfers chronologically or reverse-chronologically (asc/desc). defaults to desc\n    :param integer? limit: The maximum number of NFT transfer records to return. defaults to 100\n    :param integer? offset: Number of records to skip in the query. defaults to 0\n    :param string? cursor: The cursor returned in the previous response (used to getting the next page).\n    :param string? nftId: Specify NFT ID to filter for in the NFT transfer records.\n    :param string? interactingWith: Specifies the wallet or contract address of the second-party involved in the NFT transfer.\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_nft_transfers_for_user',kwargs)\n        "
    },
    "rapi_uniblock_get_user_collections": {
        "api_name": "get_user_collections",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_user_collections(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Enter the chain ID of the specific NFT to query. defaults to 1\n    :param string walletAddress: The wallet address of the user whose NFT balances are being retrieved. Accepts either address or ENS.\n    :param string? nftAddress: Enter the address of the NFT collection.\n    :param integer? limit: The maximum number of NFT balance records to return. defaults to 100\n    :param integer? offset: Number of records to skip in the query. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_user_collections',kwargs)\n        "
    },
    "rapi_uniblock_get_token_transfers_for_user": {
        "api_name": "get_token_transfers_for_user",
        "category": "Other",
        "tool_name": "uniblock",
        "code": "async def rapi_uniblock_get_token_transfers_for_user(self,*args,**kwargs):\n    '''Unified Blockchain API, use one, use them all. \n\n \n\nFrom NFTs, DeFi, Wallets, GameFi, Tokens, or simply launching contracts, we've got tools to help build them both easier and faster.\n\nUniblockis a suite of blockchain tooling to support developers in building any blockchain project.\n    \n    \n\n    :param integer chainId: Network to filter through token transfer records. defaults to 1\n    :param string walletAddress: The user address that the transaction records are tied to. Accepts either address or ENS.\n    :param string? direction: Filter transactions based on whether they were sent or received. defaults to both\n    :param string? cursor: The cursor returned in the previous response (used to getting the next page).\n    :param string? interactingWith: Specifies the wallet or contract address of the second-party involved in the token transfer.\n    :param integer? offset: Number of records to skip in the query. defaults to 0\n    :param string? sortByDate: Specify whether to sort token transfers chronologically or reverse-chronologically (asc/desc). defaults to desc\n    :param string? tokenAddress: Specify token address to filter for in the token transfer records.\n    :param integer? limit: The maximum number of token transfer records to return. defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_uniblock_get_token_transfers_for_user',kwargs)\n        "
    },
    "rapi_rakutensupportdefaultteam_search": {
        "api_name": "search",
        "category": "Other",
        "tool_name": "rakutensupportdefaultteam",
        "code": "async def rapi_rakutensupportdefaultteam_search(self,*args,**kwargs):\n    '''R\u306eSupport\u30c6\u30b9\u30c8\u3067\u3059\u3002\n    \n    \n\n    :param string? applicationId:  defaults to 1068023759784411308\n    :param integer? genreId:  defaults to 559887\n    :param string? format:  defaults to json\n    '''\n    return await self._request_rapid_api('rapi_rakutensupportdefaultteam_search',kwargs)\n        "
    },
    "rapi_baby_names_by_api_ninjas_v1_babynames": {
        "api_name": "v1_babynames",
        "category": "Other",
        "tool_name": "baby_names_by_api_ninjas",
        "code": "async def rapi_baby_names_by_api_ninjas_v1_babynames(self,*args,**kwargs):\n    '''Popular and unique baby name name generator for boys, girls, and gender-neutral names. See more info at https://api-ninjas.com/api/babynames\n    \n    \n\n    :param string? popular_only: Whether to only return popular (top 10%) of names. Must be either true or false. If unset, default is true.\n    :param string? gender: Baby name gender. Must be one of the following: boy, girl, neutral\n    '''\n    return await self._request_rapid_api('rapi_baby_names_by_api_ninjas_v1_babynames',kwargs)\n        "
    },
    "rapi_zomatoapi_bhaskar_singavaram_bhaskar": {
        "api_name": "singavaram_bhaskar",
        "category": "Other",
        "tool_name": "zomatoapi_bhaskar",
        "code": "async def rapi_zomatoapi_bhaskar_singavaram_bhaskar(self,*args,**kwargs):\n    '''ZomatoAPI-bhaskar\n    \n    \n\n    :param string? city: \n    '''\n    return await self._request_rapid_api('rapi_zomatoapi_bhaskar_singavaram_bhaskar',kwargs)\n        "
    },
    "rapi_felina_api_faucets": {
        "api_name": "faucets",
        "category": "Other",
        "tool_name": "felina_api",
        "code": "async def rapi_felina_api_faucets(self,*args,**kwargs):\n    '''Handles transacions of FEL tokens.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_felina_api_faucets',kwargs)\n        "
    },
    "rapi_flow_study_getcode_relatedcontracts": {
        "api_name": "getcode_relatedcontracts",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_getcode_relatedcontracts(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param string contract_address:  defaults to 0x097bafa4e0b48eef\n    :param string contract_name:  defaults to CharityNFT\n    '''\n    return await self._request_rapid_api('rapi_flow_study_getcode_relatedcontracts',kwargs)\n        "
    },
    "rapi_flow_study_codesearch": {
        "api_name": "codesearch",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_codesearch(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param integer page_num: \u9875\u6570 defaults to 1\n    :param integer page_size: \u9875\u5927\u5c0f defaults to 10\n    :param string query: \u641c\u7d22\u5173\u952e\u8bcd defaults to flow\n    '''\n    return await self._request_rapid_api('rapi_flow_study_codesearch',kwargs)\n        "
    },
    "rapi_flow_study_getcodeplaygroundlink": {
        "api_name": "getcodeplaygroundlink",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_getcodeplaygroundlink(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param string contract_address:  defaults to 0x011b6f1425389550\n    :param string contract_name:  defaults to NWayUtilityCoin\n    '''\n    return await self._request_rapid_api('rapi_flow_study_getcodeplaygroundlink',kwargs)\n        "
    },
    "rapi_flow_study_getcodecontent": {
        "api_name": "getcodecontent",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_getcodecontent(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param string contract_address: \u5408\u7ea6\u5730\u5740 defaults to 0x011b6f1425389550\n    :param string contract_name: \u5408\u7ea6\u540d\u79f0 defaults to NWayUtilityCoin \n    '''\n    return await self._request_rapid_api('rapi_flow_study_getcodecontent',kwargs)\n        "
    },
    "rapi_flow_study_getcodestructure": {
        "api_name": "getcodestructure",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_getcodestructure(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param string contract_name:  defaults to NWayUtilityCoin\n    :param string contract_address:  defaults to 0x011b6f1425389550\n    '''\n    return await self._request_rapid_api('rapi_flow_study_getcodestructure',kwargs)\n        "
    },
    "rapi_flow_study_getcode_relatedproperties": {
        "api_name": "getcode_relatedproperties",
        "category": "Other",
        "tool_name": "flow_study",
        "code": "async def rapi_flow_study_getcode_relatedproperties(self,*args,**kwargs):\n    '''search in flow block chain \n    \n    \n\n    :param string contract_name:  defaults to CharityNFT\n    :param string contract_address:  defaults to 0x097bafa4e0b48eef\n    '''\n    return await self._request_rapid_api('rapi_flow_study_getcode_relatedproperties',kwargs)\n        "
    },
    "rapi_dog_api_getbreeds": {
        "api_name": "getbreeds",
        "category": "Other",
        "tool_name": "dog_api",
        "code": "async def rapi_dog_api_getbreeds(self,*args,**kwargs):\n    '''Do you care about accessing free images of dogs on the internet? Do you want your dog pictures to be served at lightning fast speed with 99.999% uptime? Do you care about DaaS (Dogs as a Service)? Help us pay our hosting bills and ensure that Dog API stays free to access and use for everyone. We'll even gift you an executive business tie for your pet (or small child) to say thanks.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dog_api_getbreeds',kwargs)\n        "
    },
    "rapi_dog_api_getrandom": {
        "api_name": "getrandom",
        "category": "Other",
        "tool_name": "dog_api",
        "code": "async def rapi_dog_api_getrandom(self,*args,**kwargs):\n    '''Do you care about accessing free images of dogs on the internet? Do you want your dog pictures to be served at lightning fast speed with 99.999% uptime? Do you care about DaaS (Dogs as a Service)? Help us pay our hosting bills and ensure that Dog API stays free to access and use for everyone. We'll even gift you an executive business tie for your pet (or small child) to say thanks.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dog_api_getrandom',kwargs)\n        "
    },
    "rapi_platformbil_getorderbyid": {
        "api_name": "getorderbyid",
        "category": "Other",
        "tool_name": "platformbil",
        "code": "async def rapi_platformbil_getorderbyid(self,*args,**kwargs):\n    '''None\n    \n    \n\n    :param integer orderId: ID of pet that needs to be fetched\n    '''\n    return await self._request_rapid_api('rapi_platformbil_getorderbyid',kwargs)\n        "
    },
    "rapi_platformbil_getinventory": {
        "api_name": "getinventory",
        "category": "Other",
        "tool_name": "platformbil",
        "code": "async def rapi_platformbil_getinventory(self,*args,**kwargs):\n    '''None\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_platformbil_getinventory',kwargs)\n        "
    },
    "rapi_platformbil_getpetbyid": {
        "api_name": "getpetbyid",
        "category": "Other",
        "tool_name": "platformbil",
        "code": "async def rapi_platformbil_getpetbyid(self,*args,**kwargs):\n    '''None\n    \n    \n\n    :param integer petId: ID of pet to return\n    '''\n    return await self._request_rapid_api('rapi_platformbil_getpetbyid',kwargs)\n        "
    },
    "rapi_platformbil_loginuser": {
        "api_name": "loginuser",
        "category": "Other",
        "tool_name": "platformbil",
        "code": "async def rapi_platformbil_loginuser(self,*args,**kwargs):\n    '''None\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_platformbil_loginuser',kwargs)\n        "
    },
    "rapi_horoscope_astrology_numerology": {
        "api_name": "numerology",
        "category": "Other",
        "tool_name": "horoscope_astrology",
        "code": "async def rapi_horoscope_astrology_numerology(self,*args,**kwargs):\n    '''The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...\n    \n    \n\n    :param string n:  defaults to 7\n    '''\n    return await self._request_rapid_api('rapi_horoscope_astrology_numerology',kwargs)\n        "
    },
    "rapi_horoscope_astrology_sign": {
        "api_name": "sign",
        "category": "Other",
        "tool_name": "horoscope_astrology",
        "code": "async def rapi_horoscope_astrology_sign(self,*args,**kwargs):\n    '''The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...\n    \n    \n\n    :param string s: - aries\n- taurus\n- gemini\n- cancer\n- leo\n- virgo\n- libra\n- scorpio\n- sagittarius\n- capricorn\n- aquarius\n- pisces defaults to libra\n    '''\n    return await self._request_rapid_api('rapi_horoscope_astrology_sign',kwargs)\n        "
    },
    "rapi_horoscope_astrology_compatibility": {
        "api_name": "compatibility",
        "category": "Other",
        "tool_name": "horoscope_astrology",
        "code": "async def rapi_horoscope_astrology_compatibility(self,*args,**kwargs):\n    '''The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...\n    \n    \n\n    :param string sign1: - aries\n- taurus\n- gemini\n- cancer\n- leo\n- virgo\n- libra\n- scorpio\n- sagittarius\n- capricorn\n- aquarius\n- pisces defaults to Libra\n    :param string sign2: - aries\n- taurus\n- gemini\n- cancer\n- leo\n- virgo\n- libra\n- scorpio\n- sagittarius\n- capricorn\n- aquarius\n- pisces defaults to Aries\n    '''\n    return await self._request_rapid_api('rapi_horoscope_astrology_compatibility',kwargs)\n        "
    },
    "rapi_horoscope_astrology_get_three_tarot_card": {
        "api_name": "get_three_tarot_card",
        "category": "Other",
        "tool_name": "horoscope_astrology",
        "code": "async def rapi_horoscope_astrology_get_three_tarot_card(self,*args,**kwargs):\n    '''The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_horoscope_astrology_get_three_tarot_card',kwargs)\n        "
    },
    "rapi_erictestpet_getorderbyid": {
        "api_name": "getorderbyid",
        "category": "Other",
        "tool_name": "erictestpet",
        "code": "async def rapi_erictestpet_getorderbyid(self,*args,**kwargs):\n    '''test api for pet store\n    \n    \n\n    :param integer orderId: ID of pet that needs to be fetched\n    '''\n    return await self._request_rapid_api('rapi_erictestpet_getorderbyid',kwargs)\n        "
    },
    "rapi_erictestpet_getpetbyid": {
        "api_name": "getpetbyid",
        "category": "Other",
        "tool_name": "erictestpet",
        "code": "async def rapi_erictestpet_getpetbyid(self,*args,**kwargs):\n    '''test api for pet store\n    \n    \n\n    :param integer petId: ID of pet to return\n    '''\n    return await self._request_rapid_api('rapi_erictestpet_getpetbyid',kwargs)\n        "
    },
    "rapi_erictestpet_getinventory": {
        "api_name": "getinventory",
        "category": "Other",
        "tool_name": "erictestpet",
        "code": "async def rapi_erictestpet_getinventory(self,*args,**kwargs):\n    '''test api for pet store\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_erictestpet_getinventory',kwargs)\n        "
    },
    "rapi_odam_info": {
        "api_name": "info",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_info(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string dataset: dataset identifier defaults to frim1\n    '''\n    return await self._request_rapid_api('rapi_odam_info',kwargs)\n        "
    },
    "rapi_odam_tsv6": {
        "api_name": "tsv6",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_tsv6(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string dataset: dataset identifier defaults to frim1\n    :param string category: category defaults to factor\n    :param string subset: data subset identifier defaults to activome\n    :param string? format: output format defaults to tsv\n    '''\n    return await self._request_rapid_api('rapi_odam_tsv6',kwargs)\n        "
    },
    "rapi_odam_tsv4": {
        "api_name": "tsv4",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_tsv4(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string subset: data subset identifier defaults to activome\n    :param string dataset: dataset identifier defaults to frim1\n    :param string? format: output format defaults to tsv\n    '''\n    return await self._request_rapid_api('rapi_odam_tsv4',kwargs)\n        "
    },
    "rapi_odam_tsv": {
        "api_name": "tsv",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_tsv(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string dataset: dataset identifier defaults to frim1\n    :param string? format: output format defaults to tsv\n    '''\n    return await self._request_rapid_api('rapi_odam_tsv',kwargs)\n        "
    },
    "rapi_odam_tsv2": {
        "api_name": "tsv2",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_tsv2(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string subset: data subset identifier defaults to samples\n    :param string dataset: dataset identifier defaults to frim1\n    :param integer? limit: limit the number of lines in the output table (0 means no limit) defaults to 10\n    :param integer? debug: debug status\n    :param string? format: output format defaults to tsv\n    '''\n    return await self._request_rapid_api('rapi_odam_tsv2',kwargs)\n        "
    },
    "rapi_odam_tsv1": {
        "api_name": "tsv1",
        "category": "Other",
        "tool_name": "odam",
        "code": "async def rapi_odam_tsv1(self,*args,**kwargs):\n    '''ODAM\n    \n    \n\n    :param string dataset: dataset identifier defaults to frim1\n    :param string? format: output format defaults to tsv\n    '''\n    return await self._request_rapid_api('rapi_odam_tsv1',kwargs)\n        "
    },
    "rapi_argentina_movie_theatres_showtimes": {
        "api_name": "showtimes",
        "category": "Entertainment",
        "tool_name": "argentina_movie_theatres",
        "code": "async def rapi_argentina_movie_theatres_showtimes(self,*args,**kwargs):\n    '''This api will give you data about the movies and showtimes of the 3 main theatre chains in Argentina\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_argentina_movie_theatres_showtimes',kwargs)\n        "
    },
    "rapi_argentina_movie_theatres_cinemas_id_showtimes": {
        "api_name": "cinemas_id_showtimes",
        "category": "Entertainment",
        "tool_name": "argentina_movie_theatres",
        "code": "async def rapi_argentina_movie_theatres_cinemas_id_showtimes(self,*args,**kwargs):\n    '''This api will give you data about the movies and showtimes of the 3 main theatre chains in Argentina\n    \n    \n\n    :param string id: The cinema identifier\n    :param string? filmId: Film id to filter showtimes\n    '''\n    return await self._request_rapid_api('rapi_argentina_movie_theatres_cinemas_id_showtimes',kwargs)\n        "
    },
    "rapi_argentina_movie_theatres_cinemas": {
        "api_name": "cinemas",
        "category": "Entertainment",
        "tool_name": "argentina_movie_theatres",
        "code": "async def rapi_argentina_movie_theatres_cinemas(self,*args,**kwargs):\n    '''This api will give you data about the movies and showtimes of the 3 main theatre chains in Argentina\n    \n    \n\n    :param string? brand: The brand of the cinema defaults to hoyts\n    '''\n    return await self._request_rapid_api('rapi_argentina_movie_theatres_cinemas',kwargs)\n        "
    },
    "rapi_deezer_infos": {
        "api_name": "infos",
        "category": "Entertainment",
        "tool_name": "deezer",
        "code": "async def rapi_deezer_infos(self,*args,**kwargs):\n    '''Deezer is the No. 1 site for listening to music on demand. Discover more than 30 million tracks, create your own playlists, and share your favourite tracks.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_deezer_infos',kwargs)\n        "
    },
    "rapi_deezer_genre": {
        "api_name": "genre",
        "category": "Entertainment",
        "tool_name": "deezer",
        "code": "async def rapi_deezer_genre(self,*args,**kwargs):\n    '''Deezer is the No. 1 site for listening to music on demand. Discover more than 30 million tracks, create your own playlists, and share your favourite tracks.\n    \n    \n\n    :param string id: The editorial's Deezer id\n    '''\n    return await self._request_rapid_api('rapi_deezer_genre',kwargs)\n        "
    },
    "rapi_deezer_editorial": {
        "api_name": "editorial",
        "category": "Entertainment",
        "tool_name": "deezer",
        "code": "async def rapi_deezer_editorial(self,*args,**kwargs):\n    '''Deezer is the No. 1 site for listening to music on demand. Discover more than 30 million tracks, create your own playlists, and share your favourite tracks.\n    \n    \n\n    :param string id: The editorial's Deezer id\n    '''\n    return await self._request_rapid_api('rapi_deezer_editorial',kwargs)\n        "
    },
    "rapi_minecraft_forge_optifine_optifineversionlist": {
        "api_name": "optifineversionlist",
        "category": "Entertainment",
        "tool_name": "minecraft_forge_optifine",
        "code": "async def rapi_minecraft_forge_optifine_optifineversionlist(self,*args,**kwargs):\n    '''This api is used to get version list and download for Minectaft, Forge and Optifine.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_minecraft_forge_optifine_optifineversionlist',kwargs)\n        "
    },
    "rapi_hapi_books_get_the_most_popular_authors": {
        "api_name": "get_the_most_popular_authors",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_get_the_most_popular_authors(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hapi_books_get_the_most_popular_authors',kwargs)\n        "
    },
    "rapi_hapi_books_get_book_information_by_book_id": {
        "api_name": "get_book_information_by_book_id",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_get_book_information_by_book_id(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string book_Id:  defaults to 56597885\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_get_book_information_by_book_id',kwargs)\n        "
    },
    "rapi_hapi_books_get_weekly_popular_books_by_genre": {
        "api_name": "get_weekly_popular_books_by_genre",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_get_weekly_popular_books_by_genre(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string genre:  defaults to horror\n    :param integer? number_results:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_get_weekly_popular_books_by_genre',kwargs)\n        "
    },
    "rapi_hapi_books_search_books_by_name": {
        "api_name": "search_books_by_name",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_search_books_by_name(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string book_name:  defaults to the+walking+dead\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_search_books_by_name',kwargs)\n        "
    },
    "rapi_hapi_books_get_the_awarded_books_of_a_year": {
        "api_name": "get_the_awarded_books_of_a_year",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_get_the_awarded_books_of_a_year(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string year:  defaults to 2021\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_get_the_awarded_books_of_a_year',kwargs)\n        "
    },
    "rapi_hapi_books_list_of_nominated_books_for_a_genre_in_a_year": {
        "api_name": "list_of_nominated_books_for_a_genre_in_a_year",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_list_of_nominated_books_for_a_genre_in_a_year(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string genre:  defaults to romance\n    :param string year:  defaults to 2020\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_list_of_nominated_books_for_a_genre_in_a_year',kwargs)\n        "
    },
    "rapi_hapi_books_get_author_information_by_id": {
        "api_name": "get_author_information_by_id",
        "category": "Entertainment",
        "tool_name": "hapi_books",
        "code": "async def rapi_hapi_books_get_author_information_by_id(self,*args,**kwargs):\n    '''HAPI Books is an API about books. It gives information about thousands of books from all around the world. Search by name, by genre, get the best books by year, and more!\n    \n    \n\n    :param string author_Id:  defaults to 239579\n    '''\n    return await self._request_rapid_api('rapi_hapi_books_get_author_information_by_id',kwargs)\n        "
    },
    "rapi_mdblist_search_by_title": {
        "api_name": "search_by_title",
        "category": "Entertainment",
        "tool_name": "mdblist",
        "code": "async def rapi_mdblist_search_by_title(self,*args,**kwargs):\n    '''Get Movies and TV Shows data with ratings from multiple providers in JSON format\n    \n    \n\n    :param string s: Movie or TV Show Title to search defaults to jaws\n    :param integer? l: Limit returned items.\nYou can use numbes from 1 to 100 (default is 50)\n    :param integer? y: Year (format YYYY, for example 2020) to limit title search (would also include previous and next year movies)\n    :param ENUM? m: Search for only movie or tv show, leave empty for both\n    '''\n    return await self._request_rapid_api('rapi_mdblist_search_by_title',kwargs)\n        "
    },
    "rapi_netflix_original_series_top_100_ranked_search": {
        "api_name": "search",
        "category": "Entertainment",
        "tool_name": "netflix_original_series_top_100_ranked",
        "code": "async def rapi_netflix_original_series_top_100_ranked_search(self,*args,**kwargs):\n    '''The Netflix  orginal Series Top 100 API contains information on movies, including the release year, duration, cast, brief summaries, and ratings . This data can be used for recommendation systems, data analysis, and research. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_netflix_original_series_top_100_ranked_search',kwargs)\n        "
    },
    "rapi_euro_millions_get_the_last_result": {
        "api_name": "get_the_last_result",
        "category": "Entertainment",
        "tool_name": "euro_millions",
        "code": "async def rapi_euro_millions_get_the_last_result(self,*args,**kwargs):\n    '''A rich API to get EuroMillions results. With this API you can consult the last result, submit the numbers of one or more bets and check how many numbers you hit. As it has a track record since 2004, you can even get statistics on the numbers that have been drawn the most, check if your lucky numbers have ever come out in previous draws or consult the results of a specific draw. For the most recent draws, you can find out how many bets matched the numbers and how much money each one received. ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_euro_millions_get_the_last_result',kwargs)\n        "
    },
    "rapi_euro_millions_get_m1lhao": {
        "api_name": "get_m1lhao",
        "category": "Entertainment",
        "tool_name": "euro_millions",
        "code": "async def rapi_euro_millions_get_m1lhao(self,*args,**kwargs):\n    '''A rich API to get EuroMillions results. With this API you can consult the last result, submit the numbers of one or more bets and check how many numbers you hit. As it has a track record since 2004, you can even get statistics on the numbers that have been drawn the most, check if your lucky numbers have ever come out in previous draws or consult the results of a specific draw. For the most recent draws, you can find out how many bets matched the numbers and how much money each one received. ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_euro_millions_get_m1lhao',kwargs)\n        "
    },
    "rapi_euro_millions_get_birthday_draws": {
        "api_name": "get_birthday_draws",
        "category": "Entertainment",
        "tool_name": "euro_millions",
        "code": "async def rapi_euro_millions_get_birthday_draws(self,*args,**kwargs):\n    '''A rich API to get EuroMillions results. With this API you can consult the last result, submit the numbers of one or more bets and check how many numbers you hit. As it has a track record since 2004, you can even get statistics on the numbers that have been drawn the most, check if your lucky numbers have ever come out in previous draws or consult the results of a specific draw. For the most recent draws, you can find out how many bets matched the numbers and how much money each one received. ...\n    \n    \n\n    :param string date:  defaults to 01-21\n    '''\n    return await self._request_rapid_api('rapi_euro_millions_get_birthday_draws',kwargs)\n        "
    },
    "rapi_chuck_norris_by_api_ninjas_v1_chucknorris": {
        "api_name": "v1_chucknorris",
        "category": "Entertainment",
        "tool_name": "chuck_norris_by_api_ninjas",
        "code": "async def rapi_chuck_norris_by_api_ninjas_v1_chucknorris(self,*args,**kwargs):\n    '''Access thousands of funny Chuck Norris Jokes! See more info at https://api-ninjas.com/api/worldtime\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_chuck_norris_by_api_ninjas_v1_chucknorris',kwargs)\n        "
    },
    "rapi_watchmode_new_titles": {
        "api_name": "new_titles",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_new_titles(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    :param integer? page: Set the page of results you want to return, if this isn't set you will always get page 1 returned. defaults to 1\n    :param string? types: Filter result to only include certain types of titles. Pass a single type or pass multiple types comma delimited. Possible values: movie, tv_series, tv_special, tv_miniseries, short_film defaults to movie,tv_series\n    :param integer? limit: Set how many titles to return per page, default and maximum is 250. defaults to 50\n    :param integer? end_date: By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a end date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).\n    :param integer? start_date: By default, the changes API will return changes since the beginning of yesterday. Populate this parameter to manually set a start date to include changes from a specific date range, format is YYYYMMDD (eg 20210101 for January 1st, 2021).\n    '''\n    return await self._request_rapid_api('rapi_watchmode_new_titles',kwargs)\n        "
    },
    "rapi_watchmode_networks": {
        "api_name": "networks",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_networks(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_watchmode_networks',kwargs)\n        "
    },
    "rapi_watchmode_title_details": {
        "api_name": "title_details",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_title_details(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    :param string id: This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396.  defaults to 3173903\n    :param string? language: Two letter iso_639_1 language code. Return the title and plot overview in the language of your choosing (default is EN). If this is set, and not to EN, then an additional field called english_title will be returned with the title in English if available.\n defaults to ES\n    '''\n    return await self._request_rapid_api('rapi_watchmode_title_details',kwargs)\n        "
    },
    "rapi_watchmode_title_seasons": {
        "api_name": "title_seasons",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_title_seasons(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    :param string id: This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396.  defaults to 3173903\n    '''\n    return await self._request_rapid_api('rapi_watchmode_title_seasons',kwargs)\n        "
    },
    "rapi_watchmode_title_streaming_sources": {
        "api_name": "title_streaming_sources",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_title_streaming_sources(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    :param string id: This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396.  defaults to 3173903\n    '''\n    return await self._request_rapid_api('rapi_watchmode_title_streaming_sources',kwargs)\n        "
    },
    "rapi_watchmode_title_cast_crew": {
        "api_name": "title_cast_crew",
        "category": "Entertainment",
        "tool_name": "watchmode",
        "code": "async def rapi_watchmode_title_cast_crew(self,*args,**kwargs):\n    '''Universal OTT Streaming Service Availability API (Netflix, HBO Max, Peacock, Hulu, Amazon Prime Video, AppleTV+, Disney+ & over 100 more)\n    \n    \n\n    :param string id: This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\n\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396.  defaults to 3173903\n    '''\n    return await self._request_rapid_api('rapi_watchmode_title_cast_crew',kwargs)\n        "
    },
    "rapi_hobbies_by_api_ninjas_v1_hobbies": {
        "api_name": "v1_hobbies",
        "category": "Entertainment",
        "tool_name": "hobbies_by_api_ninjas",
        "code": "async def rapi_hobbies_by_api_ninjas_v1_hobbies(self,*args,**kwargs):\n    '''Access thousands of awesome hobby ideas. See more info at https://api-ninjas.com/api/hobbies.\n    \n    \n\n    :param string? category: hobby category. Possible values are:\n\ngeneral\nsports_and_outdoors\neducation\ncollection\ncompetition\nobservation defaults to general\n    '''\n    return await self._request_rapid_api('rapi_hobbies_by_api_ninjas_v1_hobbies',kwargs)\n        "
    },
    "rapi_programming_memes_images_v1_memes": {
        "api_name": "v1_memes",
        "category": "Entertainment",
        "tool_name": "programming_memes_images",
        "code": "async def rapi_programming_memes_images_v1_memes(self,*args,**kwargs):\n    '''Get random endless programming memes images. You can also see https://memes.semanticerror.com for the usage example.\n\nIn case of any issues, please start discussion here or just send me a mail at kaushalsharma880@gmail.com and I will try to help you as much as I can. Also feature requests are welcomed. \n\nYou can also connect with me on twitter for any issues or feature requests: https://twitter.com/kaushalhere\n\nThank you for visiting my API.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_programming_memes_images_v1_memes',kwargs)\n        "
    },
    "rapi_new_girl_get_extra_character_details": {
        "api_name": "get_extra_character_details",
        "category": "Entertainment",
        "tool_name": "new_girl",
        "code": "async def rapi_new_girl_get_extra_character_details(self,*args,**kwargs):\n    '''This api provides data for the tv show called New Girl. There is also data & details for each character. \n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_new_girl_get_extra_character_details',kwargs)\n        "
    },
    "rapi_new_girl_get_show_facts_rotten_tomato_scores": {
        "api_name": "get_show_facts_rotten_tomato_scores",
        "category": "Entertainment",
        "tool_name": "new_girl",
        "code": "async def rapi_new_girl_get_show_facts_rotten_tomato_scores(self,*args,**kwargs):\n    '''This api provides data for the tv show called New Girl. There is also data & details for each character. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_new_girl_get_show_facts_rotten_tomato_scores',kwargs)\n        "
    },
    "rapi_new_girl_get_recurring_characters": {
        "api_name": "get_recurring_characters",
        "category": "Entertainment",
        "tool_name": "new_girl",
        "code": "async def rapi_new_girl_get_recurring_characters(self,*args,**kwargs):\n    '''This api provides data for the tv show called New Girl. There is also data & details for each character. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_new_girl_get_recurring_characters',kwargs)\n        "
    },
    "rapi_new_girl_get_main_characters": {
        "api_name": "get_main_characters",
        "category": "Entertainment",
        "tool_name": "new_girl",
        "code": "async def rapi_new_girl_get_main_characters(self,*args,**kwargs):\n    '''This api provides data for the tv show called New Girl. There is also data & details for each character. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_new_girl_get_main_characters',kwargs)\n        "
    },
    "rapi_new_girl_get_all_characters": {
        "api_name": "get_all_characters",
        "category": "Entertainment",
        "tool_name": "new_girl",
        "code": "async def rapi_new_girl_get_all_characters(self,*args,**kwargs):\n    '''This api provides data for the tv show called New Girl. There is also data & details for each character. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_new_girl_get_all_characters',kwargs)\n        "
    },
    "rapi_papi_pornstarsapi_listpornstars": {
        "api_name": "listpornstars",
        "category": "Entertainment",
        "tool_name": "papi_pornstarsapi",
        "code": "async def rapi_papi_pornstarsapi_listpornstars(self,*args,**kwargs):\n    '''Trying to be the most comprehensive and accurate source of data for pornstars and movies.\n    \n    \n\n    :param string? max_rank: \n    :param string? min_rank: \n    :param string? max_waist: max_waist\n    :param string? max_cup_size: max_cup_size\n    :param string? min_cup_size: min_cup_size\n    :param string? min_weight: min_weight\n    :param string? max_weight: max_weight\n    :param string? max_age: max_age\n    :param string? ethnicity: ethnicity\n    :param string? min_age: min_age\n    :param string? nationality: nationality\n    :param string? tattoos: tattoos\n    :param string? eyes: eyes\n    :param string? hair: hair\n    :param integer? page: A page number within the paginated result set.\n    :param string? min_waist: min_waist\n    :param string? name: name\n    :param string? date_of_birth: date_of_birth\n    '''\n    return await self._request_rapid_api('rapi_papi_pornstarsapi_listpornstars',kwargs)\n        "
    },
    "rapi_papi_pornstarsapi_retrievepornstar": {
        "api_name": "retrievepornstar",
        "category": "Entertainment",
        "tool_name": "papi_pornstarsapi",
        "code": "async def rapi_papi_pornstarsapi_retrievepornstar(self,*args,**kwargs):\n    '''Trying to be the most comprehensive and accurate source of data for pornstars and movies.\n    \n    \n\n    :param string id: A unique integer value identifying this pornstar.\n    :param string? ethnicity: ethnicity\n    :param string? min_weight: min_weight\n    :param string? max_cup_size: max_cup_size\n    :param string? nationality: nationality\n    :param string? min_waist: min_waist\n    :param string? hair: hair\n    :param string? max_age: max_age\n    :param string? min_age: min_age\n    :param string? min_cup_size: min_cup_size\n    :param string? date_of_birth: date_of_birth\n    :param string? eyes: eyes\n    :param string? max_waist: max_waist\n    :param string? name: name\n    :param string? tattoos: tattoos\n    :param string? max_weight: max_weight\n    '''\n    return await self._request_rapid_api('rapi_papi_pornstarsapi_retrievepornstar',kwargs)\n        "
    },
    "rapi_manga_scrapper_a_chapter_by_its_slug": {
        "api_name": "a_chapter_by_its_slug",
        "category": "Entertainment",
        "tool_name": "manga_scrapper",
        "code": "async def rapi_manga_scrapper_a_chapter_by_its_slug(self,*args,**kwargs):\n    '''Get webtoon / comic data from favourite scanlation websites.\n    \n    \n\n    :param string slug: Specify the chapter's slug. See /chapters for the chapter list. defaults to the-world-after-the-fall-chapter-64\n    :param string provider: Specify the webtoon provider's slug. See /providers for the provider list. defaults to flame\n    :param string webtoon: Specify the webtoon's slug. See /webtoons for the webtoon list. defaults to the-world-after-the-fall\n    '''\n    return await self._request_rapid_api('rapi_manga_scrapper_a_chapter_by_its_slug',kwargs)\n        "
    },
    "rapi_manga_scrapper_providers_list_all": {
        "api_name": "providers_list_all",
        "category": "Entertainment",
        "tool_name": "manga_scrapper",
        "code": "async def rapi_manga_scrapper_providers_list_all(self,*args,**kwargs):\n    '''Get webtoon / comic data from favourite scanlation websites.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_manga_scrapper_providers_list_all',kwargs)\n        "
    },
    "rapi_manga_scrapper_a_webtoon_by_its_slug": {
        "api_name": "a_webtoon_by_its_slug",
        "category": "Entertainment",
        "tool_name": "manga_scrapper",
        "code": "async def rapi_manga_scrapper_a_webtoon_by_its_slug(self,*args,**kwargs):\n    '''Get webtoon / comic data from favourite scanlation websites.\n    \n    \n\n    :param string provider: Specify the webtoon provider' slug. See /providers for the provider list. defaults to omega\n    :param string slug: Specify the webtoon's slug. See /webtoons for the webtoon list. defaults to heroine-app\n    '''\n    return await self._request_rapid_api('rapi_manga_scrapper_a_webtoon_by_its_slug',kwargs)\n        "
    },
    "rapi_manga_scrapper_webtoons_list_paginated": {
        "api_name": "webtoons_list_paginated",
        "category": "Entertainment",
        "tool_name": "manga_scrapper",
        "code": "async def rapi_manga_scrapper_webtoons_list_paginated(self,*args,**kwargs):\n    '''Get webtoon / comic data from favourite scanlation websites.\n    \n    \n\n    :param string provider: Specify the webtoon provider' slug. See /providers for the provider list. defaults to surya\n    :param integer page: Specify the page to fetch. defaults to 1\n    :param integer limit: Number of results per page, between 1 - 20. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_manga_scrapper_webtoons_list_paginated',kwargs)\n        "
    },
    "rapi_events_linz_events": {
        "api_name": "events",
        "category": "Entertainment",
        "tool_name": "events_linz",
        "code": "async def rapi_events_linz_events(self,*args,**kwargs):\n    '''API that provides events in Linz, Austria\n    \n    \n\n    :param integer? pageSize:  defaults to 150\n    '''\n    return await self._request_rapid_api('rapi_events_linz_events',kwargs)\n        "
    },
    "rapi_youtube_data_community_post_comments": {
        "api_name": "community_post_comments",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_community_post_comments(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string cursor: Cursor token\n\nYou can get it from the Community Post Details endpoint.\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_community_post_comments',kwargs)\n        "
    },
    "rapi_youtube_data_community_post_details": {
        "api_name": "community_post_details",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_community_post_details(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? id: Community post ID defaults to UgkxCWeKPiIOLsnh_5a0MPHWCmYgbhifgwIZ\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_community_post_details',kwargs)\n        "
    },
    "rapi_youtube_data_search": {
        "api_name": "search",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_search(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? cursor: \n    :param string? hl:  defaults to en\n    :param string? q:  defaults to movie\n    :param string? gl:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_search',kwargs)\n        "
    },
    "rapi_youtube_data_video_comments": {
        "api_name": "video_comments",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_video_comments(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? cursor: Cursor token\n    :param string? gl:  defaults to US\n    :param string? id: Video ID defaults to kJQP7kiw5Fk\n    :param string? hl:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_video_comments',kwargs)\n        "
    },
    "rapi_youtube_data_playlist_videos": {
        "api_name": "playlist_videos",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_playlist_videos(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? gl:  defaults to US\n    :param string? cursor: Cursor token\n    :param string? hl:  defaults to en\n    :param string? id: Playlist ID defaults to PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_playlist_videos',kwargs)\n        "
    },
    "rapi_youtube_data_playlist_details": {
        "api_name": "playlist_details",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_playlist_details(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? id: Playlist ID defaults to PLcirGkCPmbmFeQ1sm4wFciF03D_EroIfr\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_playlist_details',kwargs)\n        "
    },
    "rapi_youtube_data_video_details": {
        "api_name": "video_details",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_video_details(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string id: Video ID defaults to kJQP7kiw5Fk\n    :param string? hl:  defaults to en\n    :param string? gl:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_video_details',kwargs)\n        "
    },
    "rapi_youtube_data_channel_channels": {
        "api_name": "channel_channels",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_channel_channels(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? id: Channel ID defaults to UC-lHJZR3Gqxm24_Vd_AJ5Yw\n    :param string? gl:  defaults to US\n    :param string? cursor: \n    :param string? hl:  defaults to en\n    :param string? filter: Filter key or token, default: all_collections\n\nKeys you can enter:\n\nall_collections: Returns channel collections\nsubscriptions: Returns subscribed channels\nor custom collection token\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_channel_channels',kwargs)\n        "
    },
    "rapi_youtube_data_channel_playlists": {
        "api_name": "channel_playlists",
        "category": "Entertainment",
        "tool_name": "youtube_data",
        "code": "async def rapi_youtube_data_channel_playlists(self,*args,**kwargs):\n    '''Use the API for search, videos, playlists, channels and more.\n    \n    \n\n    :param string? hl:  defaults to en\n    :param string? filter: Filter key or token, default: all_collections\n\nKeys you can enter:\n\nall_collections: Returns playlist collections\ncreated_playlists_newest: Returns created playlists (by newest)\ncreated_playlists_last_video_added: Returns created playlists (by last video added)\nsaved_playlists: Returns saved playlists\nor custom collection token\n    :param string? cursor: \n    :param string? id: Channel ID defaults to UC-lHJZR3Gqxm24_Vd_AJ5Yw\n    :param string? gl:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_youtube_data_channel_playlists',kwargs)\n        "
    },
    "rapi_wisdom_quotes_get_a_random_wisdom_quote": {
        "api_name": "get_a_random_wisdom_quote",
        "category": "Entertainment",
        "tool_name": "wisdom_quotes",
        "code": "async def rapi_wisdom_quotes_get_a_random_wisdom_quote(self,*args,**kwargs):\n    '''Last update: February 11, 2023.\nAn API providing a lot of different wisdom quotes.  You will love it!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_wisdom_quotes_get_a_random_wisdom_quote',kwargs)\n        "
    },
    "rapi_random_quote_generator_request_random_quote": {
        "api_name": "request_random_quote",
        "category": "Entertainment",
        "tool_name": "random_quote_generator",
        "code": "async def rapi_random_quote_generator_request_random_quote(self,*args,**kwargs):\n    '''API serves from large collections of quotes. A GET request will give you quote, author and related tags.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_random_quote_generator_request_random_quote',kwargs)\n        "
    },
    "rapi_jokester_jokes_categories": {
        "api_name": "jokes_categories",
        "category": "Entertainment",
        "tool_name": "jokester",
        "code": "async def rapi_jokester_jokes_categories(self,*args,**kwargs):\n    '''Your Source for Endless Laughter - Jokester API is your go-to source for hilarious jokes and puns.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_jokester_jokes_categories',kwargs)\n        "
    },
    "rapi_jokester_jokes": {
        "api_name": "jokes",
        "category": "Entertainment",
        "tool_name": "jokester",
        "code": "async def rapi_jokester_jokes(self,*args,**kwargs):\n    '''Your Source for Endless Laughter - Jokester API is your go-to source for hilarious jokes and puns.\n    \n    \n\n    :param string? category: Filter jokes by category\n    '''\n    return await self._request_rapid_api('rapi_jokester_jokes',kwargs)\n        "
    },
    "rapi_kast_info_news": {
        "api_name": "info_news",
        "category": "Entertainment",
        "tool_name": "kast",
        "code": "async def rapi_kast_info_news(self,*args,**kwargs):\n    '''free apis for everyone!\n    \n    \n\n    :param string q:  defaults to global\n    '''\n    return await self._request_rapid_api('rapi_kast_info_news',kwargs)\n        "
    },
    "rapi_dad_jokes_v2_dad_jokes_joke_of_the_day": {
        "api_name": "dad_jokes_joke_of_the_day",
        "category": "Entertainment",
        "tool_name": "dad_jokes_v2",
        "code": "async def rapi_dad_jokes_v2_dad_jokes_joke_of_the_day(self,*args,**kwargs):\n    '''This API returns wide range of dad jokes. New jokes are added monthly.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dad_jokes_v2_dad_jokes_joke_of_the_day',kwargs)\n        "
    },
    "rapi_dad_jokes_v2_dad_jokes_search": {
        "api_name": "dad_jokes_search",
        "category": "Entertainment",
        "tool_name": "dad_jokes_v2",
        "code": "async def rapi_dad_jokes_v2_dad_jokes_search(self,*args,**kwargs):\n    '''This API returns wide range of dad jokes. New jokes are added monthly.\n    \n    \n\n    :param string? text: 'text' query parameter is required and should be more than 3 characters long. defaults to dad\n    '''\n    return await self._request_rapid_api('rapi_dad_jokes_v2_dad_jokes_search',kwargs)\n        "
    },
    "rapi_dad_jokes_v2_dad_jokes_random": {
        "api_name": "dad_jokes_random",
        "category": "Entertainment",
        "tool_name": "dad_jokes_v2",
        "code": "async def rapi_dad_jokes_v2_dad_jokes_random(self,*args,**kwargs):\n    '''This API returns wide range of dad jokes. New jokes are added monthly.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_dad_jokes_v2_dad_jokes_random',kwargs)\n        "
    },
    "rapi_daddyjokes_random": {
        "api_name": "random",
        "category": "Entertainment",
        "tool_name": "daddyjokes",
        "code": "async def rapi_daddyjokes_random(self,*args,**kwargs):\n    '''The Dad Joke API with over 700+ Dad jokes! Get random endless dadjokes!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_daddyjokes_random',kwargs)\n        "
    },
    "rapi_lotto_america_general_statistics": {
        "api_name": "general_statistics",
        "category": "Entertainment",
        "tool_name": "lotto_america",
        "code": "async def rapi_lotto_america_general_statistics(self,*args,**kwargs):\n    '''Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lotto_america_general_statistics',kwargs)\n        "
    },
    "rapi_lotto_america_drawing_by_date": {
        "api_name": "drawing_by_date",
        "category": "Entertainment",
        "tool_name": "lotto_america",
        "code": "async def rapi_lotto_america_drawing_by_date(self,*args,**kwargs):\n    '''Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!\n    \n    \n\n    :param string date:  defaults to 01-04-2023\n    '''\n    return await self._request_rapid_api('rapi_lotto_america_drawing_by_date',kwargs)\n        "
    },
    "rapi_lotto_america_random_quickpick_for_play": {
        "api_name": "random_quickpick_for_play",
        "category": "Entertainment",
        "tool_name": "lotto_america",
        "code": "async def rapi_lotto_america_random_quickpick_for_play(self,*args,**kwargs):\n    '''Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lotto_america_random_quickpick_for_play',kwargs)\n        "
    },
    "rapi_lotto_america_latest_drawing": {
        "api_name": "latest_drawing",
        "category": "Entertainment",
        "tool_name": "lotto_america",
        "code": "async def rapi_lotto_america_latest_drawing(self,*args,**kwargs):\n    '''Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lotto_america_latest_drawing',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_graffiti_tags": {
        "api_name": "graffiti_tags",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_graffiti_tags(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_graffiti_tags',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_artists": {
        "api_name": "artists",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_artists(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_artists',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_songs": {
        "api_name": "songs",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_songs(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_songs',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_levels": {
        "api_name": "levels",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_levels(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_levels',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_games": {
        "api_name": "games",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_games(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_games',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_jsrf_characters": {
        "api_name": "jsrf_characters",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_jsrf_characters(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_jsrf_characters',kwargs)\n        "
    },
    "rapi_jet_set_radio_api_characters": {
        "api_name": "characters",
        "category": "Entertainment",
        "tool_name": "jet_set_radio_api",
        "code": "async def rapi_jet_set_radio_api_characters(self,*args,**kwargs):\n    '''A data provider for all things Jet Set Radio in JSON format!\n    \n    \n\n    :param string? limit: Limit the number of items returned in the response. defaults to 5\n    :param string? sortBy: Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats defaults to name\n    :param string? orderBy: Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n defaults to asc\n    '''\n    return await self._request_rapid_api('rapi_jet_set_radio_api_characters',kwargs)\n        "
    },
    "rapi_anime_jokes_query_joke_using_id": {
        "api_name": "query_joke_using_id",
        "category": "Entertainment",
        "tool_name": "anime_jokes",
        "code": "async def rapi_anime_jokes_query_joke_using_id(self,*args,**kwargs):\n    '''The Anime Jokes API provides access to a collection of jokes related to anime. \n    \n    \n\n    :param integer id:  defaults to 4\n    '''\n    return await self._request_rapid_api('rapi_anime_jokes_query_joke_using_id',kwargs)\n        "
    },
    "rapi_imdb_top_100_movies_movie_data_by_id": {
        "api_name": "movie_data_by_id",
        "category": "Entertainment",
        "tool_name": "imdb_top_100_movies",
        "code": "async def rapi_imdb_top_100_movies_movie_data_by_id(self,*args,**kwargs):\n    '''Top 100 Greatest Movies of All Time. Easy to use. It also includes the YouTube trailers.\n    \n    \n\n    :param string id:  defaults to top17\n    '''\n    return await self._request_rapid_api('rapi_imdb_top_100_movies_movie_data_by_id',kwargs)\n        "
    },
    "rapi_poker_cards_cartomancy_get_one_card": {
        "api_name": "get_one_card",
        "category": "Entertainment",
        "tool_name": "poker_cards_cartomancy",
        "code": "async def rapi_poker_cards_cartomancy_get_one_card(self,*args,**kwargs):\n    '''Giving meaning to each playing poker cards\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_poker_cards_cartomancy_get_one_card',kwargs)\n        "
    },
    "rapi_poker_cards_cartomancy_get_all_cards": {
        "api_name": "get_all_cards",
        "category": "Entertainment",
        "tool_name": "poker_cards_cartomancy",
        "code": "async def rapi_poker_cards_cartomancy_get_all_cards(self,*args,**kwargs):\n    '''Giving meaning to each playing poker cards\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_poker_cards_cartomancy_get_all_cards',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_joke_of_the_day_by_category": {
        "api_name": "get_joke_of_the_day_by_category",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_joke_of_the_day_by_category(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    :param string category: Category of joke based on the jokes categories API defaults to Money\n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_joke_of_the_day_by_category',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_random_joke_by_category": {
        "api_name": "get_random_joke_by_category",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_random_joke_by_category(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    :param string category: Category of joke based on the jokes categories API defaults to Political\n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_random_joke_by_category',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_random_joke": {
        "api_name": "get_random_joke",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_random_joke(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_random_joke',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_jokes": {
        "api_name": "get_jokes",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_jokes(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    :param integer limit:  defaults to 100\n    :param integer page:  defaults to 1\n    :param string? sortBy: Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\n\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order defaults to score:desc\n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_jokes',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_categories_of_jokes": {
        "api_name": "get_categories_of_jokes",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_categories_of_jokes(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_categories_of_jokes',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_jokes_by_specific_category": {
        "api_name": "get_jokes_by_specific_category",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_jokes_by_specific_category(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    :param integer limit:  defaults to 100\n    :param integer page:  defaults to 1\n    :param string category: Category of joke based on the jokes categories API defaults to Women\n    :param string? sortBy: Valid format to sort is `field:order`\ne.g. `score:desc` for highest score first sorting\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order defaults to score:desc\n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_jokes_by_specific_category',kwargs)\n        "
    },
    "rapi_world_of_jokes_get_joke_of_the_day": {
        "api_name": "get_joke_of_the_day",
        "category": "Entertainment",
        "tool_name": "world_of_jokes",
        "code": "async def rapi_world_of_jokes_get_joke_of_the_day(self,*args,**kwargs):\n    '''Get over 10 millions jokes from around the world falling under 60+ categories.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_world_of_jokes_get_joke_of_the_day',kwargs)\n        "
    },
    "rapi_vod_app_episode": {
        "api_name": "episode",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_episode(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string episodeHouseNumber: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_episode',kwargs)\n        "
    },
    "rapi_vod_app_series": {
        "api_name": "series",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_series(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string series-slug: \n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_series',kwargs)\n        "
    },
    "rapi_vod_app_category": {
        "api_name": "category",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_category(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string name: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_category',kwargs)\n        "
    },
    "rapi_vod_app_show_all_series": {
        "api_name": "show_all_series",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_show_all_series(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string show-slug: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_show_all_series',kwargs)\n        "
    },
    "rapi_vod_app_home": {
        "api_name": "home",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_home(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_vod_app_home',kwargs)\n        "
    },
    "rapi_vod_app_related": {
        "api_name": "related",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_related(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string show-slug: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_related',kwargs)\n        "
    },
    "rapi_vod_app_show_movie": {
        "api_name": "show_movie",
        "category": "Entertainment",
        "tool_name": "vod_app",
        "code": "async def rapi_vod_app_show_movie(self,*args,**kwargs):\n    '''API for video on demand app\n    \n    \n\n    :param string show-slug: \n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_vod_app_show_movie',kwargs)\n        "
    },
    "rapi_tvmaze_people_id": {
        "api_name": "people_id",
        "category": "Entertainment",
        "tool_name": "tvmaze",
        "code": "async def rapi_tvmaze_people_id(self,*args,**kwargs):\n    '''Add TV information to your website or app with our easy to use REST API.\r\nThe TVMaze API uses JSON and conforms to the HATEOAS / HAL principles.\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_tvmaze_people_id',kwargs)\n        "
    },
    "rapi_tvmaze_schedule": {
        "api_name": "schedule",
        "category": "Entertainment",
        "tool_name": "tvmaze",
        "code": "async def rapi_tvmaze_schedule(self,*args,**kwargs):\n    '''Add TV information to your website or app with our easy to use REST API.\r\nThe TVMaze API uses JSON and conforms to the HATEOAS / HAL principles.\n    \n    \n\n    :param string? country: An ISO country code\n    :param string? date: An ISO formatted date\n    :param string? filter: Whether to show primetime shows only defaults to primetime\n    '''\n    return await self._request_rapid_api('rapi_tvmaze_schedule',kwargs)\n        "
    },
    "rapi_tvmaze_shows_id": {
        "api_name": "shows_id",
        "category": "Entertainment",
        "tool_name": "tvmaze",
        "code": "async def rapi_tvmaze_shows_id(self,*args,**kwargs):\n    '''Add TV information to your website or app with our easy to use REST API.\r\nThe TVMaze API uses JSON and conforms to the HATEOAS / HAL principles.\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_tvmaze_shows_id',kwargs)\n        "
    },
    "rapi_fortune_cookie_slack": {
        "api_name": "slack",
        "category": "Entertainment",
        "tool_name": "fortune_cookie",
        "code": "async def rapi_fortune_cookie_slack(self,*args,**kwargs):\n    '''\ud83e\udd60 This RESTful API returns a json object with aphorisms, almost like what you get in a fortune cookie.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fortune_cookie_slack',kwargs)\n        "
    },
    "rapi_fortune_cookie_defaultroot": {
        "api_name": "defaultroot",
        "category": "Entertainment",
        "tool_name": "fortune_cookie",
        "code": "async def rapi_fortune_cookie_defaultroot(self,*args,**kwargs):\n    '''\ud83e\udd60 This RESTful API returns a json object with aphorisms, almost like what you get in a fortune cookie.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fortune_cookie_defaultroot',kwargs)\n        "
    },
    "rapi_fortune_cookie_healthcheck": {
        "api_name": "healthcheck",
        "category": "Entertainment",
        "tool_name": "fortune_cookie",
        "code": "async def rapi_fortune_cookie_healthcheck(self,*args,**kwargs):\n    '''\ud83e\udd60 This RESTful API returns a json object with aphorisms, almost like what you get in a fortune cookie.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_fortune_cookie_healthcheck',kwargs)\n        "
    },
    "rapi_riddles_by_api_ninjas_v1_riddles": {
        "api_name": "v1_riddles",
        "category": "Entertainment",
        "tool_name": "riddles_by_api_ninjas",
        "code": "async def rapi_riddles_by_api_ninjas_v1_riddles(self,*args,**kwargs):\n    '''Quality riddles perfect for entertainment apps. See more info at https://api-ninjas.com/api/riddles\n    \n    \n\n    :param integer? limit: Number of results to return. Must be between 1 and 20. Default is 1.\n    '''\n    return await self._request_rapid_api('rapi_riddles_by_api_ninjas_v1_riddles',kwargs)\n        "
    },
    "rapi_steam_global_achievement_percentages_for_app": {
        "api_name": "global_achievement_percentages_for_app",
        "category": "Entertainment",
        "tool_name": "steam",
        "code": "async def rapi_steam_global_achievement_percentages_for_app(self,*args,**kwargs):\n    '''Search, and get app/reviews/news data from store.steampowered.com\n    \n    \n\n    :param integer appId:  defaults to 730\n    '''\n    return await self._request_rapid_api('rapi_steam_global_achievement_percentages_for_app',kwargs)\n        "
    },
    "rapi_steam_app_news": {
        "api_name": "app_news",
        "category": "Entertainment",
        "tool_name": "steam",
        "code": "async def rapi_steam_app_news(self,*args,**kwargs):\n    '''Search, and get app/reviews/news data from store.steampowered.com\n    \n    \n\n    :param integer limit:  defaults to 10\n    :param integer appId:  defaults to 730\n    :param integer? contentLength: Default 300 defaults to 300\n    '''\n    return await self._request_rapid_api('rapi_steam_app_news',kwargs)\n        "
    },
    "rapi_steam_app_reviews": {
        "api_name": "app_reviews",
        "category": "Entertainment",
        "tool_name": "steam",
        "code": "async def rapi_steam_app_reviews(self,*args,**kwargs):\n    '''Search, and get app/reviews/news data from store.steampowered.com\n    \n    \n\n    :param string appId:  defaults to 730\n    :param integer limit: Max limit 200 defaults to 40\n    :param string? cursor: Reviews are returned in batches max 200 (instead of 20 as in original API), so pass \\\"*\\\" for the first set, then the value of \\\"cursor\\\" that was returned in the response for the next set, etc. Note that cursor values may contain characters that need to be URLEncoded for use in the query string. As default is \\\"*\\\" defaults to *\n    '''\n    return await self._request_rapid_api('rapi_steam_app_reviews',kwargs)\n        "
    },
    "rapi_steam_app_detail": {
        "api_name": "app_detail",
        "category": "Entertainment",
        "tool_name": "steam",
        "code": "async def rapi_steam_app_detail(self,*args,**kwargs):\n    '''Search, and get app/reviews/news data from store.steampowered.com\n    \n    \n\n    :param integer appId:  defaults to 730\n    '''\n    return await self._request_rapid_api('rapi_steam_app_detail',kwargs)\n        "
    },
    "rapi_boggle_letters": {
        "api_name": "letters",
        "category": "Entertainment",
        "tool_name": "boggle",
        "code": "async def rapi_boggle_letters(self,*args,**kwargs):\n    '''A Boggle solver - supply 16 letters representing the tiles on a Boggle board and the service will return all allowable words that can be found. Letters from the first row of the board should be listed first reading from left to right, followed by letters from the second row and so on down the board. On a traditional Boggle board, the letters 'Q' and 'U' appear together on a single square, in order to be consistent with this rule the web service will interpret the single letter 'Q' as the sequence 'QU'.\n    \n    \n\n    :param string letters: \n    '''\n    return await self._request_rapid_api('rapi_boggle_letters',kwargs)\n        "
    },
    "rapi_immersiverouletteapi_statistics": {
        "api_name": "statistics",
        "category": "Entertainment",
        "tool_name": "immersiverouletteapi",
        "code": "async def rapi_immersiverouletteapi_statistics(self,*args,**kwargs):\n    '''ImmersiveRouletteAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy\n    \n    \n\n    :param integer? duration:  defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_immersiverouletteapi_statistics',kwargs)\n        "
    },
    "rapi_immersiverouletteapi_latest_outcome": {
        "api_name": "latest_outcome",
        "category": "Entertainment",
        "tool_name": "immersiverouletteapi",
        "code": "async def rapi_immersiverouletteapi_latest_outcome(self,*args,**kwargs):\n    '''ImmersiveRouletteAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_immersiverouletteapi_latest_outcome',kwargs)\n        "
    },
    "rapi_immersiverouletteapi_history": {
        "api_name": "history",
        "category": "Entertainment",
        "tool_name": "immersiverouletteapi",
        "code": "async def rapi_immersiverouletteapi_history(self,*args,**kwargs):\n    '''ImmersiveRouletteAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_immersiverouletteapi_history',kwargs)\n        "
    },
    "rapi_top_free_apps_temp_endpoint": {
        "api_name": "temp_endpoint",
        "category": "Entertainment",
        "tool_name": "top_free_apps",
        "code": "async def rapi_top_free_apps_temp_endpoint(self,*args,**kwargs):\n    '''shows top free apps in app store\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_top_free_apps_temp_endpoint',kwargs)\n        "
    },
    "rapi_cinema_api_get_movie_images_by_id": {
        "api_name": "get_movie_images_by_id",
        "category": "Entertainment",
        "tool_name": "cinema_api",
        "code": "async def rapi_cinema_api_get_movie_images_by_id(self,*args,**kwargs):\n    '''Welcome to our exciting new API! \ud83c\udf89 Our API provides a seamless experience for accessing a treasure trove of information about catalogs, actors, movies, and streaming platforms. With just a few simple requests, you can unlock a world of entertainment possibilities!  Retrieve comprehensive details about catalogs, including genres, release dates, and more. Dive into the captivating lives of actors by exploring their biographies, filmography, and achievements. Discover the latest blockbusters, ti...\n    \n    \n\n    :param string id: Movie ID. You can obtain the ID from the Get Movie By ID endpoint. defaults to tt0120338\n    '''\n    return await self._request_rapid_api('rapi_cinema_api_get_movie_images_by_id',kwargs)\n        "
    },
    "rapi_cinema_api_get_movie_id_by_title": {
        "api_name": "get_movie_id_by_title",
        "category": "Entertainment",
        "tool_name": "cinema_api",
        "code": "async def rapi_cinema_api_get_movie_id_by_title(self,*args,**kwargs):\n    '''Welcome to our exciting new API! \ud83c\udf89 Our API provides a seamless experience for accessing a treasure trove of information about catalogs, actors, movies, and streaming platforms. With just a few simple requests, you can unlock a world of entertainment possibilities!  Retrieve comprehensive details about catalogs, including genres, release dates, and more. Dive into the captivating lives of actors by exploring their biographies, filmography, and achievements. Discover the latest blockbusters, ti...\n    \n    \n\n    :param string category: Two categories allowed:\n*movies*\n*actors* defaults to movies\n    :param string title: Enter the text to search.  defaults to Titanic\n    '''\n    return await self._request_rapid_api('rapi_cinema_api_get_movie_id_by_title',kwargs)\n        "
    },
    "rapi_cinema_api_get_cast_by_id": {
        "api_name": "get_cast_by_id",
        "category": "Entertainment",
        "tool_name": "cinema_api",
        "code": "async def rapi_cinema_api_get_cast_by_id(self,*args,**kwargs):\n    '''Welcome to our exciting new API! \ud83c\udf89 Our API provides a seamless experience for accessing a treasure trove of information about catalogs, actors, movies, and streaming platforms. With just a few simple requests, you can unlock a world of entertainment possibilities!  Retrieve comprehensive details about catalogs, including genres, release dates, and more. Dive into the captivating lives of actors by exploring their biographies, filmography, and achievements. Discover the latest blockbusters, ti...\n    \n    \n\n    :param string ID: Movie ID. You can obtain the ID from the Get Movie By ID endpoint. defaults to tt0120338\n    '''\n    return await self._request_rapid_api('rapi_cinema_api_get_cast_by_id',kwargs)\n        "
    },
    "rapi_game_of_thrones_get_continents": {
        "api_name": "get_continents",
        "category": "Entertainment",
        "tool_name": "game_of_thrones",
        "code": "async def rapi_game_of_thrones_get_continents(self,*args,**kwargs):\n    '''List of all Game of Thrones characters' names, families, images, and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_game_of_thrones_get_continents',kwargs)\n        "
    },
    "rapi_game_of_thrones_get_all_characters": {
        "api_name": "get_all_characters",
        "category": "Entertainment",
        "tool_name": "game_of_thrones",
        "code": "async def rapi_game_of_thrones_get_all_characters(self,*args,**kwargs):\n    '''List of all Game of Thrones characters' names, families, images, and more.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_game_of_thrones_get_all_characters',kwargs)\n        "
    },
    "rapi_jokes_by_api_ninjas_v1_jokes": {
        "api_name": "v1_jokes",
        "category": "Entertainment",
        "tool_name": "jokes_by_api_ninjas",
        "code": "async def rapi_jokes_by_api_ninjas_v1_jokes(self,*args,**kwargs):\n    '''Access a large collection of jokes from the internet. See more info at https://api-ninjas.com/api/jokes.\n    \n    \n\n    :param string? limit: How many results to return. Must be between **1** and **30**. Default is **1**.\n    '''\n    return await self._request_rapid_api('rapi_jokes_by_api_ninjas_v1_jokes',kwargs)\n        "
    },
    "rapi_love_calculator_getpercentage": {
        "api_name": "getpercentage",
        "category": "Entertainment",
        "tool_name": "love_calculator",
        "code": "async def rapi_love_calculator_getpercentage(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param string sname: Enter second name. defaults to Alice\n    :param string fname: Enter first name. defaults to John\n    '''\n    return await self._request_rapid_api('rapi_love_calculator_getpercentage',kwargs)\n        "
    },
    "rapi_mixy_word_guess_api_produce_mixy_words_list": {
        "api_name": "produce_mixy_words_list",
        "category": "Entertainment",
        "tool_name": "mixy_word_guess_api",
        "code": "async def rapi_mixy_word_guess_api_produce_mixy_words_list(self,*args,**kwargs):\n    '''\n    \n    \n\n    :param integer? amount: Valid values: integer between 1 and 100 defaults to 10\n    :param string? difficulty: valid values: \"easy\", \"medium\", \"hard\" defaults to easy\n    '''\n    return await self._request_rapid_api('rapi_mixy_word_guess_api_produce_mixy_words_list',kwargs)\n        "
    },
    "rapi_new_york_lottery_get_draw_results": {
        "api_name": "get_draw_results",
        "category": "Entertainment",
        "tool_name": "new_york_lottery",
        "code": "async def rapi_new_york_lottery_get_draw_results(self,*args,**kwargs):\n    '''Live draw results of New York Lottery\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_new_york_lottery_get_draw_results',kwargs)\n        "
    },
    "rapi_humor_jokes_and_memes_create_joke": {
        "api_name": "create_joke",
        "category": "Entertainment",
        "tool_name": "humor_jokes_and_memes",
        "code": "async def rapi_humor_jokes_and_memes_create_joke(self,*args,**kwargs):\n    '''Humor API lets you search through 50,000 jokes, over 200,000 memes, and gifs. From Chuck Norris, over Knock Knock to Yo Mama jokes, you'll find something for every occasion.\n    \n    \n\n    :param string topics:  defaults to pirates\n    :param integer? max-length:  defaults to 1000\n    '''\n    return await self._request_rapid_api('rapi_humor_jokes_and_memes_create_joke',kwargs)\n        "
    },
    "rapi_humor_jokes_and_memes_search_gifs": {
        "api_name": "search_gifs",
        "category": "Entertainment",
        "tool_name": "humor_jokes_and_memes",
        "code": "async def rapi_humor_jokes_and_memes_search_gifs(self,*args,**kwargs):\n    '''Humor API lets you search through 50,000 jokes, over 200,000 memes, and gifs. From Chuck Norris, over Knock Knock to Yo Mama jokes, you'll find something for every occasion.\n    \n    \n\n    :param string query: A search query. defaults to cat\n    :param integer? number: The number of results to retrieve between 1 and 10. defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_humor_jokes_and_memes_search_gifs',kwargs)\n        "
    },
    "rapi_celebrity_by_api_ninjas_v1_celebrity": {
        "api_name": "v1_celebrity",
        "category": "Entertainment",
        "tool_name": "celebrity_by_api_ninjas",
        "code": "async def rapi_celebrity_by_api_ninjas_v1_celebrity(self,*args,**kwargs):\n    '''Get information on all your favorite celebrities. See more info at https://api-ninjas.com/api/celebrity.\n    \n    \n\n    :param string? name: Name of the celebrity you wish to search. This field is case-insensitive. defaults to Michael Jordan\n    :param string? min_height: Minimum height of celebrities in meters (e.g. **1.65**).\n    :param integer? min_net_worth: Minimum net worth of celebrities.\n    :param string? nationality: Nationality of celebrities. Must be an ISO 3166 Alpha-2 country code (e.g. **US**).\n    :param integer? max_net_worth: Maximum net worth of celebrities.\n    :param string? max_height: Maximum height of celebrities in meters (e.g. **1.80**).\n    '''\n    return await self._request_rapid_api('rapi_celebrity_by_api_ninjas_v1_celebrity',kwargs)\n        "
    },
    "rapi_soft_cat_quiz_get_results": {
        "api_name": "get_results",
        "category": "Entertainment",
        "tool_name": "soft_cat_quiz",
        "code": "async def rapi_soft_cat_quiz_get_results(self,*args,**kwargs):\n    '''An API Service returning data for a  Quiz Web Application about cats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_soft_cat_quiz_get_results',kwargs)\n        "
    },
    "rapi_soft_cat_quiz_get_questions_and_answers": {
        "api_name": "get_questions_and_answers",
        "category": "Entertainment",
        "tool_name": "soft_cat_quiz",
        "code": "async def rapi_soft_cat_quiz_get_questions_and_answers(self,*args,**kwargs):\n    '''An API Service returning data for a  Quiz Web Application about cats.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_soft_cat_quiz_get_questions_and_answers',kwargs)\n        "
    },
    "rapi_text_similarity_calculator_getpercentage": {
        "api_name": "getpercentage",
        "category": "Entertainment",
        "tool_name": "text_similarity_calculator",
        "code": "async def rapi_text_similarity_calculator_getpercentage(self,*args,**kwargs):\n    '''This calculates the similarity between two texts in percentage. It is an implementation as described in Programming Classics: Implementing the World's Best Algorithms by Ian Oliver). Note that this implementation does not use a stack as in Oliver's pseudo code, but recursive calls which may or may not speed up the whole process. Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string.\r\n\r\nFor more details: \r\nhttps://en.wikipedia.org/wiki/Approximate_string_matching\n    \n    \n\n    :param string ftext: Enter text number one defaults to This is text numer one.\n    :param string stext: Enter text number two. defaults to This is text number two.\n    '''\n    return await self._request_rapid_api('rapi_text_similarity_calculator_getpercentage',kwargs)\n        "
    },
    "rapi_pixelstix_pixelstix_meta": {
        "api_name": "pixelstix_meta",
        "category": "Entertainment",
        "tool_name": "pixelstix",
        "code": "async def rapi_pixelstix_pixelstix_meta(self,*args,**kwargs):\n    '''PixelStix is a suite of technologies for locating and interacting with physical objects.\n    \n    \n\n    :param string pixelstix_code:  defaults to BAAA\n    '''\n    return await self._request_rapid_api('rapi_pixelstix_pixelstix_meta',kwargs)\n        "
    },
    "rapi_crazytimeapi_statistics": {
        "api_name": "statistics",
        "category": "Entertainment",
        "tool_name": "crazytimeapi",
        "code": "async def rapi_crazytimeapi_statistics(self,*args,**kwargs):\n    '''CrazyTimeAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time game outcome data so they can integrate in any strategy\n    \n    \n\n    :param integer duration:  defaults to 3\n    '''\n    return await self._request_rapid_api('rapi_crazytimeapi_statistics',kwargs)\n        "
    },
    "rapi_crazytimeapi_history": {
        "api_name": "history",
        "category": "Entertainment",
        "tool_name": "crazytimeapi",
        "code": "async def rapi_crazytimeapi_history(self,*args,**kwargs):\n    '''CrazyTimeAPI is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time game outcome data so they can integrate in any strategy\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_crazytimeapi_history',kwargs)\n        "
    },
    "rapi_direct_porn_v2_search": {
        "api_name": "search",
        "category": "Entertainment",
        "tool_name": "direct_porn_v2",
        "code": "async def rapi_direct_porn_v2_search(self,*args,**kwargs):\n    '''Find porn videos from popular direct download file hosting services.\n    \n    \n\n    :param string query: \n    :param string? quality: Filter video  by quality.\nThe parameter is either a single value, or a range of minimum/maximum values (in pixels). \nFor example:\n- **480** will select 480p videos\n- **720..1080** will select videos between 720p and 1080p\n- **720..** will select 720p videos (or more)\n- **..1080** will select 1080p videos (or less)\n    :param string? size: Filter video by size.\nThe parameter is a range of minimum/maximum values (in MB).\nFor example:\n- **500..1000** will select videos between 500 and 1000 MB\n- **500..** will select videos bigger than 500 MB\n- **..1000** will select videos smaller than 1000 MB\n    :param string? sort: Sort videos by size, duration or quality.\nFor example:\n- **size** will sort videos by size (ascending)\n- **-quality** will sort videos by quality (descending)\n- **-quality,duration** will sort videos by quality (descending) then by duration (ascending)\n    :param string? hosts: Filter videos by file-hosts.\nThe parameter is a comma-separated list of file-hosts codes:\n- **DF** (depositfiles)\n- **RG** (rapidgator)\n- **KS** (keep2share)\n- **FB** (fileboom)\n- **FJ** (filejoker)\n    :param string? duration: Filter videos by duration.\nThe parameter is a range of minimum/maximum values (in seconds).\nFor example:\n- **300..600** will select videos between 300 and 600 seconds\n- **300..** will select videos longer than 300 seconds\n- **..600** will select videos shorter than 600 seconds\n    :param integer? page: Page number.\n    '''\n    return await self._request_rapid_api('rapi_direct_porn_v2_search',kwargs)\n        "
    },
    "rapi_ase_s_quiz_api_get_random_20_questions": {
        "api_name": "get_random_20_questions",
        "category": "Entertainment",
        "tool_name": "ase_s_quiz_api",
        "code": "async def rapi_ase_s_quiz_api_get_random_20_questions(self,*args,**kwargs):\n    '''Question API with 500+ questions, 8 categories and 3 difficulties for your apps.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ase_s_quiz_api_get_random_20_questions',kwargs)\n        "
    },
    "rapi_riddlie_riddle_by_keyword": {
        "api_name": "riddle_by_keyword",
        "category": "Entertainment",
        "tool_name": "riddlie",
        "code": "async def rapi_riddlie_riddle_by_keyword(self,*args,**kwargs):\n    '''API that provides access to a collection of thousands of riddles (and growing). Fetch a random riddle or a riddle of the day. You can build a perfect app to entertain kids and families for dinner times. You can also pull riddles by their ID, difficulty level and keyword of your interest. API also collects feedback such as upvotes, and flags to fine-tune the library of riddles. I will constantly be adding more riddles to the API as I come across them. \nThe Basic plan is completely FREE with a ...\n    \n    \n\n    :param string keyword:  defaults to cat\n    '''\n    return await self._request_rapid_api('rapi_riddlie_riddle_by_keyword',kwargs)\n        "
    },
    "rapi_riddlie_riddle_by_difficulty_level": {
        "api_name": "riddle_by_difficulty_level",
        "category": "Entertainment",
        "tool_name": "riddlie",
        "code": "async def rapi_riddlie_riddle_by_difficulty_level(self,*args,**kwargs):\n    '''API that provides access to a collection of thousands of riddles (and growing). Fetch a random riddle or a riddle of the day. You can build a perfect app to entertain kids and families for dinner times. You can also pull riddles by their ID, difficulty level and keyword of your interest. API also collects feedback such as upvotes, and flags to fine-tune the library of riddles. I will constantly be adding more riddles to the API as I come across them. \nThe Basic plan is completely FREE with a ...\n    \n    \n\n    :param string level:  defaults to easy\n    '''\n    return await self._request_rapid_api('rapi_riddlie_riddle_by_difficulty_level',kwargs)\n        "
    },
    "rapi_riddlie_get_riddle_of_the_day": {
        "api_name": "get_riddle_of_the_day",
        "category": "Entertainment",
        "tool_name": "riddlie",
        "code": "async def rapi_riddlie_get_riddle_of_the_day(self,*args,**kwargs):\n    '''API that provides access to a collection of thousands of riddles (and growing). Fetch a random riddle or a riddle of the day. You can build a perfect app to entertain kids and families for dinner times. You can also pull riddles by their ID, difficulty level and keyword of your interest. API also collects feedback such as upvotes, and flags to fine-tune the library of riddles. I will constantly be adding more riddles to the API as I come across them. \nThe Basic plan is completely FREE with a ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_riddlie_get_riddle_of_the_day',kwargs)\n        "
    },
    "rapi_riddlie_get_random_riddle": {
        "api_name": "get_random_riddle",
        "category": "Entertainment",
        "tool_name": "riddlie",
        "code": "async def rapi_riddlie_get_random_riddle(self,*args,**kwargs):\n    '''API that provides access to a collection of thousands of riddles (and growing). Fetch a random riddle or a riddle of the day. You can build a perfect app to entertain kids and families for dinner times. You can also pull riddles by their ID, difficulty level and keyword of your interest. API also collects feedback such as upvotes, and flags to fine-tune the library of riddles. I will constantly be adding more riddles to the API as I come across them. \nThe Basic plan is completely FREE with a ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_riddlie_get_random_riddle',kwargs)\n        "
    },
    "rapi_tvview_allchannel": {
        "api_name": "allchannel",
        "category": "Entertainment",
        "tool_name": "tvview",
        "code": "async def rapi_tvview_allchannel(self,*args,**kwargs):\n    '''Live FREE to Air Tv Channel Streaming Links. For Development Purpose Only.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tvview_allchannel',kwargs)\n        "
    },
    "rapi_vadym_rock_paper_scissors_api_choice_endpoint": {
        "api_name": "choice_endpoint",
        "category": "Entertainment",
        "tool_name": "vadym_rock_paper_scissors_api",
        "code": "async def rapi_vadym_rock_paper_scissors_api_choice_endpoint(self,*args,**kwargs):\n    '''Rock Paper Scissors game!\n    \n    \n\n    :param string choice:  defaults to rock\n    '''\n    return await self._request_rapid_api('rapi_vadym_rock_paper_scissors_api_choice_endpoint',kwargs)\n        "
    },
    "rapi_pipotronic_get_sentence": {
        "api_name": "get_sentence",
        "category": "Entertainment",
        "tool_name": "pipotronic",
        "code": "async def rapi_pipotronic_get_sentence(self,*args,**kwargs):\n    '''This application is perfect for generating funny and ironic textual content in French to use in your powerpoints, meetings, corporate brochures, and more! Simply call the get request with no parameter, and the app will generate a random selection of text for you.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pipotronic_get_sentence',kwargs)\n        "
    },
    "rapi_animes_get_animes": {
        "api_name": "get_animes",
        "category": "Entertainment",
        "tool_name": "animes",
        "code": "async def rapi_animes_get_animes(self,*args,**kwargs):\n    '''Get all data from your favorite anime, and the chapter or tomo of the manga or  the light novel that the anime adapted\n    \n    \n\n    :param integer? year_greater: Find the animes with the year greater than the given one\n\n    :param string? media_type: The media type of the anime.\nThey are:\n\n- music,\n- tv,\n- ona,\n- ova,\n- movie,\n- special\n    :param string? studio: Filter the animes by the studio\n    :param integer? year_less: Find the animes with the year less than the given one\n\n    :param string? nsfw: Activate the nsfw content. If you don't want it, don't use it\n    :param string? status: Filter the animes by the actual status of the anime.\n\n- currently_airing,\n- finished_airing,\n- ` not_yet_aired`\n    :param integer? limit: Limit the number of data recieved\n    :param string? q: Search the anime title in english or japanase.\n    :param string? genre: Filter the animes by the genre\n    :param boolean? sort: Especify the order if asc or desc.\n    :param integer? offset: Recieve the data after the number of the offset.\n    :param string? season: Filter the animes by their season\n    :param string? fields: Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms\n    :param integer? year_equal: Filter the anime by the year release\n    :param string? source: Filter the anime by the source.\nThey are:\n\n- manga,\n- visual_novel,\n- novel,\n- `4_koma_manga`,\n- book,\n- card_game,\n- game,\n- light_novel,\n- mixed_media,\n- music,\n- novel,\n- original,\n- web_manga,\n- web_novel,\n- visual_novel,\n- picture_book,\n- other\n    :param string? order: Order the data with the field tha you want\n    '''\n    return await self._request_rapid_api('rapi_animes_get_animes',kwargs)\n        "
    },
    "rapi_http_status_cats_get_status_cat_image": {
        "api_name": "get_status_cat_image",
        "category": "Entertainment",
        "tool_name": "http_status_cats",
        "code": "async def rapi_http_status_cats_get_status_cat_image(self,*args,**kwargs):\n    '''HTTP Status Cats API.  'Nuff said! =^..^= =^..^= =^..^= =^..^= =^..^= =^..^=\n    \n    \n\n    :param string status: 100 101 200 201 202 204 206 207 300 301 303 304 305 307 400 401 402 403 404 405 406 408 409 410 411 413 414 416 417 418 422 423 424 425 426 429 431 444 450 500 502 503 506 507 508 509 599 defaults to 200\n    '''\n    return await self._request_rapid_api('rapi_http_status_cats_get_status_cat_image',kwargs)\n        "
    },
    "rapi_drinking_get_random_question": {
        "api_name": "get_random_question",
        "category": "Entertainment",
        "tool_name": "drinking",
        "code": "async def rapi_drinking_get_random_question(self,*args,**kwargs):\n    '''API that provides with drinking questions and challenges.\n    \n    \n\n    :param string? type: You can choose question type from: funny, dirty. defaults to dirty\n    '''\n    return await self._request_rapid_api('rapi_drinking_get_random_question',kwargs)\n        "
    },
    "rapi_drinking_get_random_challange": {
        "api_name": "get_random_challange",
        "category": "Entertainment",
        "tool_name": "drinking",
        "code": "async def rapi_drinking_get_random_challange(self,*args,**kwargs):\n    '''API that provides with drinking questions and challenges.\n    \n    \n\n    :param string? type: You can choose the type from: funny, dirty, sport. defaults to funny\n    '''\n    return await self._request_rapid_api('rapi_drinking_get_random_challange',kwargs)\n        "
    },
    "rapi_words_of_wisdom_the_famous_quotes_api_authors": {
        "api_name": "authors",
        "category": "Entertainment",
        "tool_name": "words_of_wisdom_the_famous_quotes_api",
        "code": "async def rapi_words_of_wisdom_the_famous_quotes_api_authors(self,*args,**kwargs):\n    '''Unlock the wisdom of the ages with our Famous Quotes API! Discover thought-provoking and inspirational quotes from great minds of the past and present.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_words_of_wisdom_the_famous_quotes_api_authors',kwargs)\n        "
    },
    "rapi_words_of_wisdom_the_famous_quotes_api_categories": {
        "api_name": "categories",
        "category": "Entertainment",
        "tool_name": "words_of_wisdom_the_famous_quotes_api",
        "code": "async def rapi_words_of_wisdom_the_famous_quotes_api_categories(self,*args,**kwargs):\n    '''Unlock the wisdom of the ages with our Famous Quotes API! Discover thought-provoking and inspirational quotes from great minds of the past and present.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_words_of_wisdom_the_famous_quotes_api_categories',kwargs)\n        "
    },
    "rapi_cash4life_drawings_between_dates": {
        "api_name": "drawings_between_dates",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_drawings_between_dates(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    :param DATE (YYYY-MM-DD) date1:  defaults to 2023-01-01\n    :param DATE (YYYY-MM-DD) date2:  defaults to 2023-01-05\n    '''\n    return await self._request_rapid_api('rapi_cash4life_drawings_between_dates',kwargs)\n        "
    },
    "rapi_cash4life_drawing_by_date": {
        "api_name": "drawing_by_date",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_drawing_by_date(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2023-01-05\n    '''\n    return await self._request_rapid_api('rapi_cash4life_drawing_by_date',kwargs)\n        "
    },
    "rapi_cash4life_general_statistics": {
        "api_name": "general_statistics",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_general_statistics(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cash4life_general_statistics',kwargs)\n        "
    },
    "rapi_cash4life_lastest_drawing": {
        "api_name": "lastest_drawing",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_lastest_drawing(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cash4life_lastest_drawing',kwargs)\n        "
    },
    "rapi_cash4life_random_quickpick_for_play": {
        "api_name": "random_quickpick_for_play",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_random_quickpick_for_play(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cash4life_random_quickpick_for_play',kwargs)\n        "
    },
    "rapi_cash4life_latest_10_drawings": {
        "api_name": "latest_10_drawings",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_latest_10_drawings(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cash4life_latest_10_drawings',kwargs)\n        "
    },
    "rapi_cash4life_all_drawings": {
        "api_name": "all_drawings",
        "category": "Entertainment",
        "tool_name": "cash4life",
        "code": "async def rapi_cash4life_all_drawings(self,*args,**kwargs):\n    '''Do you want to get paid for the rest of your life? This is your game! Introducing the latest winning numbers and the best statistics!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cash4life_all_drawings',kwargs)\n        "
    },
    "rapi_media_group_list_genres": {
        "api_name": "list_genres",
        "category": "Entertainment",
        "tool_name": "media_group",
        "code": "async def rapi_media_group_list_genres(self,*args,**kwargs):\n    '''\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_media_group_list_genres',kwargs)\n        "
    },
    "rapi_stapi_showerthoughts_latest": {
        "api_name": "latest",
        "category": "Entertainment",
        "tool_name": "stapi_showerthoughts",
        "code": "async def rapi_stapi_showerthoughts_latest(self,*args,**kwargs):\n    '''stapi or showerthoughts api is an api which makes use of the posts on subreddit r/showerthoughts and fetches results for the end user.\n    \n    \n\n    :param integer? num:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_stapi_showerthoughts_latest',kwargs)\n        "
    },
    "rapi_stapi_showerthoughts_random": {
        "api_name": "random",
        "category": "Entertainment",
        "tool_name": "stapi_showerthoughts",
        "code": "async def rapi_stapi_showerthoughts_random(self,*args,**kwargs):\n    '''stapi or showerthoughts api is an api which makes use of the posts on subreddit r/showerthoughts and fetches results for the end user.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_stapi_showerthoughts_random',kwargs)\n        "
    },
    "rapi_meowfacts_defaultroot": {
        "api_name": "defaultroot",
        "category": "Entertainment",
        "tool_name": "meowfacts",
        "code": "async def rapi_meowfacts_defaultroot(self,*args,**kwargs):\n    ''' a simple api which returns a catfact \n    \n    \n\n    :param integer? count: number of facts to return\n    :param string? factID: pass an optional id to call a specific fact\n    :param string? lang: requested locale to retrieve the cat fact in. defaults to eng\n    '''\n    return await self._request_rapid_api('rapi_meowfacts_defaultroot',kwargs)\n        "
    },
    "rapi_meowfacts_options": {
        "api_name": "options",
        "category": "Entertainment",
        "tool_name": "meowfacts",
        "code": "async def rapi_meowfacts_options(self,*args,**kwargs):\n    ''' a simple api which returns a catfact \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_meowfacts_options',kwargs)\n        "
    },
    "rapi_meowfacts_healthcheck": {
        "api_name": "healthcheck",
        "category": "Entertainment",
        "tool_name": "meowfacts",
        "code": "async def rapi_meowfacts_healthcheck(self,*args,**kwargs):\n    ''' a simple api which returns a catfact \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_meowfacts_healthcheck',kwargs)\n        "
    },
    "rapi_throne_of_glass_api_2_get_all_characters": {
        "api_name": "get_all_characters",
        "category": "Entertainment",
        "tool_name": "throne_of_glass_api_2",
        "code": "async def rapi_throne_of_glass_api_2_get_all_characters(self,*args,**kwargs):\n    '''API for Throne of Glass Characters\n    \n    \n\n    :param string? limit: \n    :param string? skip: \n    '''\n    return await self._request_rapid_api('rapi_throne_of_glass_api_2_get_all_characters',kwargs)\n        "
    },
    "rapi_nameforge_double_name_medium": {
        "api_name": "double_name_medium",
        "category": "Entertainment",
        "tool_name": "nameforge",
        "code": "async def rapi_nameforge_double_name_medium(self,*args,**kwargs):\n    '''Unleash your imagination and create any name you can dream up. Generate unique names for children, companies, characters, and usernames, literally anything using descriptive queries. The possibilities are endless - see where your creativity takes you!\n    \n    \n\n    :param string query: \n    '''\n    return await self._request_rapid_api('rapi_nameforge_double_name_medium',kwargs)\n        "
    },
    "rapi_nameforge_double_name_short": {
        "api_name": "double_name_short",
        "category": "Entertainment",
        "tool_name": "nameforge",
        "code": "async def rapi_nameforge_double_name_short(self,*args,**kwargs):\n    '''Unleash your imagination and create any name you can dream up. Generate unique names for children, companies, characters, and usernames, literally anything using descriptive queries. The possibilities are endless - see where your creativity takes you!\n    \n    \n\n    :param string query: \n    '''\n    return await self._request_rapid_api('rapi_nameforge_double_name_short',kwargs)\n        "
    },
    "rapi_hearthstone_info": {
        "api_name": "info",
        "category": "Entertainment",
        "tool_name": "hearthstone",
        "code": "async def rapi_hearthstone_info(self,*args,**kwargs):\n    '''This API provides up to date Hearthstone data pulled directly from the game.\n    \n    \n\n    :param string? callback: Request data to be returned as a JsonP callback.\n    :param string? locale: What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.\n    '''\n    return await self._request_rapid_api('rapi_hearthstone_info',kwargs)\n        "
    },
    "rapi_hearthstone_cards_by_race": {
        "api_name": "cards_by_race",
        "category": "Entertainment",
        "tool_name": "hearthstone",
        "code": "async def rapi_hearthstone_cards_by_race(self,*args,**kwargs):\n    '''This API provides up to date Hearthstone data pulled directly from the game.\n    \n    \n\n    :param string race: Card race.\n    :param integer? attack: Return only cards with a certain attack.\n    :param integer? durability: Return only cards with a certain durability.\n    :param integer? health: Return only cards with a certain health.\n    :param integer? cost: Return only cards of a certain cost.\n    :param string? callback: Request data to be returned as a JsonP callback.\n    :param integer? collectible: Set this to 1 to only return collectible cards.\n    :param string? locale: What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.\n    '''\n    return await self._request_rapid_api('rapi_hearthstone_cards_by_race',kwargs)\n        "
    },
    "rapi_hearthstone_cards_by_quality": {
        "api_name": "cards_by_quality",
        "category": "Entertainment",
        "tool_name": "hearthstone",
        "code": "async def rapi_hearthstone_cards_by_quality(self,*args,**kwargs):\n    '''This API provides up to date Hearthstone data pulled directly from the game.\n    \n    \n\n    :param string quality: Card quality.\n    :param integer? cost: Return only cards of a certain cost.\n    :param integer? attack: Return only cards with a certain attack.\n    :param integer? durability: Return only cards with a certain durability.\n    :param integer? health: Return only cards with a certain health.\n    :param string? callback: Request data to be returned as a JsonP callback.\n    :param integer? collectible: Set this to 1 to only return collectible cards.\n    :param string? locale: What locale to use in the response. Default locale is enUS. Available locales: enUS, enGB, deDE, esES, esMX, frFR, itIT, koKR, plPL, ptBR, ruRU, zhCN, zhTW, jaJP, thTH.\n    '''\n    return await self._request_rapid_api('rapi_hearthstone_cards_by_quality',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_about_channel": {
        "api_name": "about_channel",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_about_channel(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string id: Channel id defaults to UCE_M8A5yxnLfW0KghEeajjw\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_about_channel',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_video_comments": {
        "api_name": "video_comments",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_video_comments(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string? next: Pagination(continuation) parameter to get more comments , no need any other parameters if 'next' present. Could be used for sorting, just pass \\\"sortNewestNext\\\" or \\\"sortTopNext\\\" field values for newest or top sorting.\nCan be obtained from response with \\\"id\\\" parameter in request defaults to Eg0SC1lRSHNYTWdsQzlBGAYyJSIRIgtZUUhzWE1nbEM5QTAAeAJCEGNvbW1lbnRzLXNlY3Rpb24%3D\n    :param string? id: Video id to get first part of comments.\n defaults to YQHsXMglC9A\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_video_comments',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_trending": {
        "api_name": "trending",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_trending(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string? hl: Locale/language for request defaults to en\n    :param string? gl: Country from you want get trendings like US(default), UK, BE, etc... defaults to US\n    :param string? type: Type of trending videos:\nn - now (default)\nmu - music\nmo - movies\ng - gaming defaults to mu\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_trending',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_video_info": {
        "api_name": "video_info",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_video_info(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string id: Video id from YouTube defaults to dQw4w9WgXcQ\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_video_info',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_playlist": {
        "api_name": "playlist",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_playlist(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string? next: Pagination(continuation) parameter to get more playlist items, no need any other parameters if 'next' present.\nCan be obtained from inside playlist request result. defaults to 4qmFsgJhEiRWTFBMV3dBeXBBY0ZSZ0tBSUlGcUJyOW95LVpZWm5peGFfRmoaFENBRjZCbEJVT2tOSFZRJTNEJTNEmgIiUExXd0F5cEFjRlJnS0FJSUZxQnI5b3ktWllabml4YV9Gag%3D%3D\n    :param string? id: Playlist id defaults to PL2UMfhpwklNNI9ALzCFI-cObgnO4nQ2fu\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_playlist',kwargs)\n        "
    },
    "rapi_youtube_search_and_download_search_videos_channels_playlists": {
        "api_name": "search_videos_channels_playlists",
        "category": "Entertainment",
        "tool_name": "youtube_search_and_download",
        "code": "async def rapi_youtube_search_and_download_search_videos_channels_playlists(self,*args,**kwargs):\n    '''Get info about channel, playlist, video, get trendings or search everything you want in YouTube\n    \n    \n\n    :param string? upload_date: Upload date filter.\nAvailable options:\nl - last hour;\nt - today;\nw - weak ago;\nm - month ago;\ny - year ago; defaults to t\n    :param string? sort: Result sort. Available options:\nr - relevance;\nra - rating;\nu - upload date;\nv - view count; defaults to v\n    :param string? features: Video features.  Available options(could be joined by ';'):\nh - hdr;\nhd - hd;\ns - subtitles;\nc - cc;\n3d - 3d;\n3 - 360;\nli - live;\nlo - location;\n4 - 4k;\n defaults to li;hd\n    :param string? next: Pagination(continuation) parameter to get next result for same search query, no need any other parameters if 'next' present.\nCan be obtained from inside search result. defaults to EogDEgVoZWxsbxr-AlNCU0NBUXRaVVVoeldFMW5iRU01UVlJQkMyMUlUMDVPWTFwaWQwUlpnZ0VMWW1VeE1rSkROWEJSVEVXQ0FRdFZNMEZUYWpGTU5sOXpXWUlCQzJaaGVrMVRRMXBuTFcxM2dnRUxaV3hrWldGSlFYWmZkMFdDQVExU1JGbFJTSE5ZVFdkc1F6bEJnZ0VMT0hwRVUybHJRMmc1Tm1PQ0FRc3pOMFU1VjNORWJVUmxaNElCQzJGaFNXcHpPRXN6YjFsdmdnRUxaMmRvUkZKS1ZuaEdlRldDQVF0clN6UXlURnB4VHpCM1FZSUJDME42VHpOaFNXVXdVbkJ6Z2dFTFNVNHdUMk5WZGtkaU5qQ0NBUXRSYTJWbGFGRTRSRjlXVFlJQkMyWk9NVU41Y2pCYVN6bE5nZ0VMZEZac1kwdHdNMkpYU0RpQ0FRdGZSQzFGT1Rsa01XSk1TWUlCQzJoQlUwNVRSSFZOY2pGUmdnRUxkREEzTVZkdE5EVnhWMDAlM0QYgeDoGCILc2VhcmNoLWZlZWQ%3D\n    :param string? hl: Search language defaults to en\n    :param string? duration: Video duration. Available options:\ns - short;\nl - long; defaults to s\n    :param string? gl: Search location defaults to US\n    :param string? type: Search type. Available options:\nv - video;\nc - channel;\np - playlist; defaults to v\n    :param string? query: Search query you want to search defaults to rick roll\n    '''\n    return await self._request_rapid_api('rapi_youtube_search_and_download_search_videos_channels_playlists',kwargs)\n        "
    },
    "rapi_rapid_porn_photo": {
        "api_name": "photo",
        "category": "Entertainment",
        "tool_name": "rapid_porn",
        "code": "async def rapi_rapid_porn_photo(self,*args,**kwargs):\n    '''If you're looking for a random adult picture, our API is just what you need. Simply send a request to our API and you'll receive a random adult picture in return. Whether you need a picture for a project or just for fun, our API is perfect.\n    \n    \n\n    :param string category:  defaults to ass\n    '''\n    return await self._request_rapid_api('rapi_rapid_porn_photo',kwargs)\n        "
    },
    "rapi_rapid_porn_all_tags": {
        "api_name": "all_tags",
        "category": "Entertainment",
        "tool_name": "rapid_porn",
        "code": "async def rapi_rapid_porn_all_tags(self,*args,**kwargs):\n    '''If you're looking for a random adult picture, our API is just what you need. Simply send a request to our API and you'll receive a random adult picture in return. Whether you need a picture for a project or just for fun, our API is perfect.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_rapid_porn_all_tags',kwargs)\n        "
    },
    "rapi_webtoon_canvas_home": {
        "api_name": "canvas_home",
        "category": "Entertainment",
        "tool_name": "webtoon",
        "code": "async def rapi_webtoon_canvas_home(self,*args,**kwargs):\n    '''This API provides the largest webcomics data in the world to create a comic site/application such as webtoons.com\n    \n    \n\n    :param string? language: One of the following : en|zh-hant|de|fr|es|th|id defaults to en\n    '''\n    return await self._request_rapid_api('rapi_webtoon_canvas_home',kwargs)\n        "
    },
    "rapi_jokes_search_for_joke": {
        "api_name": "search_for_joke",
        "category": "Entertainment",
        "tool_name": "jokes",
        "code": "async def rapi_jokes_search_for_joke(self,*args,**kwargs):\n    '''This API provides 1536 English funny jokes.\n    \n    \n\n    :param string? q: Search for jokes by text defaults to Did you hear about the butcher who backed\n    '''\n    return await self._request_rapid_api('rapi_jokes_search_for_joke',kwargs)\n        "
    },
    "rapi_jokes_get_jokes": {
        "api_name": "get_jokes",
        "category": "Entertainment",
        "tool_name": "jokes",
        "code": "async def rapi_jokes_get_jokes(self,*args,**kwargs):\n    '''This API provides 1536 English funny jokes.\n    \n    \n\n    :param integer? limit: number of results per request between 0 and 30 (default 30)  defaults to 20\n    :param integer? page: Current page (default 1).  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_jokes_get_jokes',kwargs)\n        "
    },
    "rapi_follow_youtube_channel_get_videos_by_channel": {
        "api_name": "get_videos_by_channel",
        "category": "Entertainment",
        "tool_name": "follow_youtube_channel",
        "code": "async def rapi_follow_youtube_channel_get_videos_by_channel(self,*args,**kwargs):\n    '''An API that shows all videos and notifies you that was lanced new videos of any channel\n    \n    \n\n    :param string cid: \n    '''\n    return await self._request_rapid_api('rapi_follow_youtube_channel_get_videos_by_channel',kwargs)\n        "
    },
    "rapi_memeados_google_fake_autocomplete": {
        "api_name": "google_fake_autocomplete",
        "category": "Entertainment",
        "tool_name": "memeados",
        "code": "async def rapi_memeados_google_fake_autocomplete(self,*args,**kwargs):\n    '''Generate custom image, gif and video memes.\n    \n    \n\n    :param string text1:  defaults to Search\n    :param string text3:  defaults to search autocomplete 2\n    :param string text2:  defaults to search autocomplete 1\n    '''\n    return await self._request_rapid_api('rapi_memeados_google_fake_autocomplete',kwargs)\n        "
    },
    "rapi_mangaverse_api_fetch_images": {
        "api_name": "fetch_images",
        "category": "Entertainment",
        "tool_name": "mangaverse_api",
        "code": "async def rapi_mangaverse_api_fetch_images(self,*args,**kwargs):\n    '''Unleash the World of Manga with MangaVerse API!  Discover a captivating universe of manga from Japan, Korea, and China, all conveniently translated into English. \n    \n    \n\n    :param string? id:  defaults to 6486b7937ae7cb74845df888\n    '''\n    return await self._request_rapid_api('rapi_mangaverse_api_fetch_images',kwargs)\n        "
    },
    "rapi_mangaverse_api_fetch_chapters": {
        "api_name": "fetch_chapters",
        "category": "Entertainment",
        "tool_name": "mangaverse_api",
        "code": "async def rapi_mangaverse_api_fetch_chapters(self,*args,**kwargs):\n    '''Unleash the World of Manga with MangaVerse API!  Discover a captivating universe of manga from Japan, Korea, and China, all conveniently translated into English. \n    \n    \n\n    :param string? id:  defaults to 6486b7547ae7cb74845df856\n    '''\n    return await self._request_rapid_api('rapi_mangaverse_api_fetch_chapters',kwargs)\n        "
    },
    "rapi_mangaverse_api_get_manga": {
        "api_name": "get_manga",
        "category": "Entertainment",
        "tool_name": "mangaverse_api",
        "code": "async def rapi_mangaverse_api_get_manga(self,*args,**kwargs):\n    '''Unleash the World of Manga with MangaVerse API!  Discover a captivating universe of manga from Japan, Korea, and China, all conveniently translated into English. \n    \n    \n\n    :param string? id:  defaults to 647fed35c71c2c9122b318f8\n    '''\n    return await self._request_rapid_api('rapi_mangaverse_api_get_manga',kwargs)\n        "
    },
    "rapi_joke1_random_joke": {
        "api_name": "random_joke",
        "category": "Entertainment",
        "tool_name": "joke1",
        "code": "async def rapi_joke1_random_joke(self,*args,**kwargs):\n    '''Get a Random joke\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_joke1_random_joke',kwargs)\n        "
    },
    "rapi_horoscopes_ai_get_horoscope_multilingual": {
        "api_name": "get_horoscope_multilingual",
        "category": "Entertainment",
        "tool_name": "horoscopes_ai",
        "code": "async def rapi_horoscopes_ai_get_horoscope_multilingual(self,*args,**kwargs):\n    '''Horoscopes by AI in multilingual.\n    \n    \n\n    :param ENUM language: en: English, \nzh-t: Chinese (transditional), \nzh-s: Chinese (simplified),\nes: Spanish,\nhi: Hindu,\nfr: French,\nja: Japanese,\nko: Korean\n    :param ENUM period: \n    :param ENUM sign: \n    :param string type: Depend on period, use **Get Types** method to get available types for the selected period. defaults to general\n    '''\n    return await self._request_rapid_api('rapi_horoscopes_ai_get_horoscope_multilingual',kwargs)\n        "
    },
    "rapi_horoscopes_ai_get_signs": {
        "api_name": "get_signs",
        "category": "Entertainment",
        "tool_name": "horoscopes_ai",
        "code": "async def rapi_horoscopes_ai_get_signs(self,*args,**kwargs):\n    '''Horoscopes by AI in multilingual.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_horoscopes_ai_get_signs',kwargs)\n        "
    },
    "rapi_the_dozen_the_yo_mamsa_roast_api_get_specific_insult": {
        "api_name": "get_specific_insult",
        "category": "Entertainment",
        "tool_name": "the_dozen_the_yo_mamsa_roast_api",
        "code": "async def rapi_the_dozen_the_yo_mamsa_roast_api_get_specific_insult(self,*args,**kwargs):\n    '''Rest API that serves random, catagorized and filteres lighthearted familial insults/jokes\n    \n    \n\n    :param string id: This is the UUID for a Specific Joke\n    '''\n    return await self._request_rapid_api('rapi_the_dozen_the_yo_mamsa_roast_api_get_specific_insult',kwargs)\n        "
    },
    "rapi_poetry_db_title": {
        "api_name": "title",
        "category": "Entertainment",
        "tool_name": "poetry_db",
        "code": "async def rapi_poetry_db_title(self,*args,**kwargs):\n    '''PoetryDB is the world's first API for Next Generation internet poets\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_poetry_db_title',kwargs)\n        "
    },
    "rapi_poetry_db_author": {
        "api_name": "author",
        "category": "Entertainment",
        "tool_name": "poetry_db",
        "code": "async def rapi_poetry_db_author(self,*args,**kwargs):\n    '''PoetryDB is the world's first API for Next Generation internet poets\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_poetry_db_author',kwargs)\n        "
    },
    "rapi_poetry_db_author_title_author_title": {
        "api_name": "author_title_author_title",
        "category": "Entertainment",
        "tool_name": "poetry_db",
        "code": "async def rapi_poetry_db_author_title_author_title(self,*args,**kwargs):\n    '''PoetryDB is the world's first API for Next Generation internet poets\n    \n    \n\n    :param string author: The poet, or part of the poet's name\n    :param string title: The title of the poem, or part of the title of the poem.\n    '''\n    return await self._request_rapid_api('rapi_poetry_db_author_title_author_title',kwargs)\n        "
    },
    "rapi_poetry_db_lines_line": {
        "api_name": "lines_line",
        "category": "Entertainment",
        "tool_name": "poetry_db",
        "code": "async def rapi_poetry_db_lines_line(self,*args,**kwargs):\n    '''PoetryDB is the world's first API for Next Generation internet poets\n    \n    \n\n    :param string line: The line of a poem, or part of the line of a poem. defaults to Shall I Compare Thee\n    '''\n    return await self._request_rapid_api('rapi_poetry_db_lines_line',kwargs)\n        "
    },
    "rapi_xxxtremelightningrouletteapi_latest_outcome": {
        "api_name": "latest_outcome",
        "category": "Entertainment",
        "tool_name": "xxxtremelightningrouletteapi",
        "code": "async def rapi_xxxtremelightningrouletteapi_latest_outcome(self,*args,**kwargs):\n    '''XXXTremeLightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_xxxtremelightningrouletteapi_latest_outcome',kwargs)\n        "
    },
    "rapi_xxxtremelightningrouletteapi_history": {
        "api_name": "history",
        "category": "Entertainment",
        "tool_name": "xxxtremelightningrouletteapi",
        "code": "async def rapi_xxxtremelightningrouletteapi_history(self,*args,**kwargs):\n    '''XXXTremeLightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_xxxtremelightningrouletteapi_history',kwargs)\n        "
    },
    "rapi_songmeanings_lyrics_get": {
        "api_name": "lyrics_get",
        "category": "Entertainment",
        "tool_name": "songmeanings",
        "code": "async def rapi_songmeanings_lyrics_get(self,*args,**kwargs):\n    '''Easily follow and track your favorite artists on SongMeanings!\r\nBe the first to know about new lyrics, song meanings & more!\n    \n    \n\n    :param string sm_lid: SongMeanings Lyric ID. When specified, this parameter will bypass any other lyric identification parameters.\n    :param string lyric_title: Song or track title.\n    :param string artist_name: Artist name.\n    :param string format: Decide the output type (either xml or json); xml is default.\n    :param string? spotify_id: If specified, a match will attempt to be made via spotify_id. Please note that if parameter is used, the API will also require lyric_title and artist_name as a backup attempt.\n    :param string? count: This parameter is used to track, and report, any offline cached views of lyrics.\n    '''\n    return await self._request_rapid_api('rapi_songmeanings_lyrics_get',kwargs)\n        "
    },
    "rapi_songmeanings_users_password_reset": {
        "api_name": "users_password_reset",
        "category": "Entertainment",
        "tool_name": "songmeanings",
        "code": "async def rapi_songmeanings_users_password_reset(self,*args,**kwargs):\n    '''Easily follow and track your favorite artists on SongMeanings!\r\nBe the first to know about new lyrics, song meanings & more!\n    \n    \n\n    :param string sm_emai: The user\u2019s email address on the account to be reset.\n    :param string? sm_uid: SM User ID of the user initiating the password reset request.\n    :param string? sm_username: SM Username of the user initiating the password reset request.\n    '''\n    return await self._request_rapid_api('rapi_songmeanings_users_password_reset',kwargs)\n        "
    },
    "rapi_gogoanime_data_api_getrecentanimes": {
        "api_name": "getrecentanimes",
        "category": "Entertainment",
        "tool_name": "gogoanime_data_api",
        "code": "async def rapi_gogoanime_data_api_getrecentanimes(self,*args,**kwargs):\n    '''data from gogoanime website for anime website building and stuff.\n    \n    \n\n    :param integer pageNumber:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_gogoanime_data_api_getrecentanimes',kwargs)\n        "
    },
    "rapi_would_you_rather_question": {
        "api_name": "question",
        "category": "Entertainment",
        "tool_name": "would_you_rather",
        "code": "async def rapi_would_you_rather_question(self,*args,**kwargs):\n    '''Get random fun 'Would You Rather' questions that are up to date! :) Data is constantly being updated/added!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_would_you_rather_question',kwargs)\n        "
    },
    "rapi_epic_games_store_get_news": {
        "api_name": "get_news",
        "category": "Entertainment",
        "tool_name": "epic_games_store",
        "code": "async def rapi_epic_games_store_get_news(self,*args,**kwargs):\n    '''Search games/bundles/editors in Epic Games store, get latest news from the platform and present free games.\n    \n    \n\n    :param integer limit:  defaults to 30\n    :param string locale:  defaults to en\n    '''\n    return await self._request_rapid_api('rapi_epic_games_store_get_news',kwargs)\n        "
    },
    "rapi_epic_games_store_get_free_games": {
        "api_name": "get_free_games",
        "category": "Entertainment",
        "tool_name": "epic_games_store",
        "code": "async def rapi_epic_games_store_get_free_games(self,*args,**kwargs):\n    '''Search games/bundles/editors in Epic Games store, get latest news from the platform and present free games.\n    \n    \n\n    :param string locale:  defaults to en\n    :param string country:  defaults to US\n    '''\n    return await self._request_rapid_api('rapi_epic_games_store_get_free_games',kwargs)\n        "
    },
    "rapi_epic_games_store_search": {
        "api_name": "search",
        "category": "Entertainment",
        "tool_name": "epic_games_store",
        "code": "async def rapi_epic_games_store_search(self,*args,**kwargs):\n    '''Search games/bundles/editors in Epic Games store, get latest news from the platform and present free games.\n    \n    \n\n    :param integer page:  defaults to 1\n    :param string locale:  defaults to en\n    :param string country:  defaults to US\n    :param string term:  defaults to fortnite\n    :param string? term: \n    '''\n    return await self._request_rapid_api('rapi_epic_games_store_search',kwargs)\n        "
    },
    "rapi_meme_generator_and_template_database_fonts": {
        "api_name": "fonts",
        "category": "Entertainment",
        "tool_name": "meme_generator_and_template_database",
        "code": "async def rapi_meme_generator_and_template_database_fonts(self,*args,**kwargs):\n    '''Meme Generator with support of adding captions and text directly on images to over 1.8k meme templates in 10+ fonts (works in multiple languages).\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_meme_generator_and_template_database_fonts',kwargs)\n        "
    },
    "rapi_meme_generator_and_template_database_templates": {
        "api_name": "templates",
        "category": "Entertainment",
        "tool_name": "meme_generator_and_template_database",
        "code": "async def rapi_meme_generator_and_template_database_templates(self,*args,**kwargs):\n    '''Meme Generator with support of adding captions and text directly on images to over 1.8k meme templates in 10+ fonts (works in multiple languages).\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_meme_generator_and_template_database_templates',kwargs)\n        "
    },
    "rapi_imdb_charts_chart_by_id": {
        "api_name": "chart_by_id",
        "category": "Entertainment",
        "tool_name": "imdb_charts",
        "code": "async def rapi_imdb_charts_chart_by_id(self,*args,**kwargs):\n    '''IMDB charts of most popular movies and tv shows. Titles, ranks, ratings, votes, covers and more. Fast and reliable!\n    \n    \n\n    :param string id:  defaults to boxoffice\n    '''\n    return await self._request_rapid_api('rapi_imdb_charts_chart_by_id',kwargs)\n        "
    },
    "rapi_reddit_meme_trending_memes": {
        "api_name": "trending_memes",
        "category": "Entertainment",
        "tool_name": "reddit_meme",
        "code": "async def rapi_reddit_meme_trending_memes(self,*args,**kwargs):\n    '''An API for showing the best memes on the internet using Reddit\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reddit_meme_trending_memes',kwargs)\n        "
    },
    "rapi_reddit_meme_top_memes": {
        "api_name": "top_memes",
        "category": "Entertainment",
        "tool_name": "reddit_meme",
        "code": "async def rapi_reddit_meme_top_memes(self,*args,**kwargs):\n    '''An API for showing the best memes on the internet using Reddit\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_reddit_meme_top_memes',kwargs)\n        "
    },
    "rapi_capacitacionangular_productos": {
        "api_name": "productos",
        "category": "Payments",
        "tool_name": "capacitacionangular",
        "code": "async def rapi_capacitacionangular_productos(self,*args,**kwargs):\n    '''Capacitacionangular\n    \n    \n\n    :param string? Nombre: \n    :param string? Precio: \n    :param string? CantidadStock: \n    :param integer? Id: \n    '''\n    return await self._request_rapid_api('rapi_capacitacionangular_productos',kwargs)\n        "
    },
    "rapi_capacitacionangular_categorias": {
        "api_name": "categorias",
        "category": "Payments",
        "tool_name": "capacitacionangular",
        "code": "async def rapi_capacitacionangular_categorias(self,*args,**kwargs):\n    '''Capacitacionangular\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_capacitacionangular_categorias',kwargs)\n        "
    },
    "rapi_capacitacionangular_cliente": {
        "api_name": "cliente",
        "category": "Payments",
        "tool_name": "capacitacionangular",
        "code": "async def rapi_capacitacionangular_cliente(self,*args,**kwargs):\n    '''Capacitacionangular\n    \n    \n\n    :param integer? Id: \n    :param string? Edad: \n    :param string? Celular: \n    :param string? Cedula: \n    :param string? Nombre: \n    :param string? Direccion: \n    '''\n    return await self._request_rapid_api('rapi_capacitacionangular_cliente',kwargs)\n        "
    },
    "rapi_fraudsentinel_fraudsentinel": {
        "api_name": "fraudsentinel",
        "category": "Payments",
        "tool_name": "fraudsentinel",
        "code": "async def rapi_fraudsentinel_fraudsentinel(self,*args,**kwargs):\n    '''Detect fraud in real time by checking IPs reputation, Proxy/VPN/TOR , BOT, and more... \n    \n    \n\n    :param string ip:  defaults to 127.0.0.1\n    :param boolean? nocache: \n    :param boolean? paranoid: \n    '''\n    return await self._request_rapid_api('rapi_fraudsentinel_fraudsentinel',kwargs)\n        "
    },
    "rapi_fake_valid_cc_data_generator_receive_the_credit_card_data": {
        "api_name": "receive_the_credit_card_data",
        "category": "Payments",
        "tool_name": "fake_valid_cc_data_generator",
        "code": "async def rapi_fake_valid_cc_data_generator_receive_the_credit_card_data(self,*args,**kwargs):\n    '''The API provides you valid and real credit card data for the providers: amex, diners, discover, jcb, maestro,  mastercard and visa\n    \n    \n\n    :param string? visa_type:  defaults to visa\n    '''\n    return await self._request_rapid_api('rapi_fake_valid_cc_data_generator_receive_the_credit_card_data',kwargs)\n        "
    },
    "rapi_nowpayments_7_getlistofpayments": {
        "api_name": "7_getlistofpayments",
        "category": "Payments",
        "tool_name": "nowpayments",
        "code": "async def rapi_nowpayments_7_getlistofpayments(self,*args,**kwargs):\n    '''NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013 no excess. NOWPayments' API allows you to integrate crypto payments in 50+ assets into any service.\n    \n    \n\n    :param string dateFrom:  defaults to 2020-01-01\n    :param integer page: \n    :param integer limit:  defaults to 10\n    :param string sortBy:  defaults to created_at\n    :param string orderBy:  defaults to asc\n    :param string dateTo:  defaults to 2021-01-01\n    '''\n    return await self._request_rapid_api('rapi_nowpayments_7_getlistofpayments',kwargs)\n        "
    },
    "rapi_nowpayments_2_getavailablecurrencies": {
        "api_name": "2_getavailablecurrencies",
        "category": "Payments",
        "tool_name": "nowpayments",
        "code": "async def rapi_nowpayments_2_getavailablecurrencies(self,*args,**kwargs):\n    '''NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013 no excess. NOWPayments' API allows you to integrate crypto payments in 50+ assets into any service.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_nowpayments_2_getavailablecurrencies',kwargs)\n        "
    },
    "rapi_nowpayments_3_getestimatedprice": {
        "api_name": "3_getestimatedprice",
        "category": "Payments",
        "tool_name": "nowpayments",
        "code": "async def rapi_nowpayments_3_getestimatedprice(self,*args,**kwargs):\n    '''NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013 no excess. NOWPayments' API allows you to integrate crypto payments in 50+ assets into any service.\n    \n    \n\n    :param string currency_to:  defaults to btc\n    :param string currency_from:  defaults to usd\n    :param integer amount:  defaults to 3999.5\n    '''\n    return await self._request_rapid_api('rapi_nowpayments_3_getestimatedprice',kwargs)\n        "
    },
    "rapi_nowpayments_6_gettheminimumpaymentamount": {
        "api_name": "6_gettheminimumpaymentamount",
        "category": "Payments",
        "tool_name": "nowpayments",
        "code": "async def rapi_nowpayments_6_gettheminimumpaymentamount(self,*args,**kwargs):\n    '''NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013 no excess. NOWPayments' API allows you to integrate crypto payments in 50+ assets into any service.\n    \n    \n\n    :param string currency_from:  defaults to eth\n    :param string currency_to:  defaults to trx\n    '''\n    return await self._request_rapid_api('rapi_nowpayments_6_gettheminimumpaymentamount',kwargs)\n        "
    },
    "rapi_food_nutrition_information_find_food_by_id": {
        "api_name": "find_food_by_id",
        "category": "Food",
        "tool_name": "food_nutrition_information",
        "code": "async def rapi_food_nutrition_information_find_food_by_id(self,*args,**kwargs):\n    '''search and find foods with their nutritional information\n    \n    \n\n    :param integer fooId:  defaults to 1497465\n    '''\n    return await self._request_rapid_api('rapi_food_nutrition_information_find_food_by_id',kwargs)\n        "
    },
    "rapi_food_nutrition_information_search_foods_using_keywords": {
        "api_name": "search_foods_using_keywords",
        "category": "Food",
        "tool_name": "food_nutrition_information",
        "code": "async def rapi_food_nutrition_information_search_foods_using_keywords(self,*args,**kwargs):\n    '''search and find foods with their nutritional information\n    \n    \n\n    :param string query:  defaults to cheese\n    :param string? brandOwner:  defaults to Kar Nut Products Company\n    :param string? pageSize:  defaults to 1\n    :param string? pageNumber:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_food_nutrition_information_search_foods_using_keywords',kwargs)\n        "
    },
    "rapi_generate_a_recipe_based_on_an_ingredient_generate_recipe": {
        "api_name": "generate_recipe",
        "category": "Food",
        "tool_name": "generate_a_recipe_based_on_an_ingredient",
        "code": "async def rapi_generate_a_recipe_based_on_an_ingredient_generate_recipe(self,*args,**kwargs):\n    '''Generate a health recipe based on the ingredients you specify in the request\n    \n    \n\n    :param string? ingredient:  defaults to chicken\n    '''\n    return await self._request_rapid_api('rapi_generate_a_recipe_based_on_an_ingredient_generate_recipe',kwargs)\n        "
    },
    "rapi_cocktails_random": {
        "api_name": "random",
        "category": "Food",
        "tool_name": "cocktails",
        "code": "async def rapi_cocktails_random(self,*args,**kwargs):\n    '''The cocktail API with over 300 Cocktails! Get Cocktail and the ingredients. Get a random one or search! \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cocktails_random',kwargs)\n        "
    },
    "rapi_cocktails_random_nonalcoholic": {
        "api_name": "random_nonalcoholic",
        "category": "Food",
        "tool_name": "cocktails",
        "code": "async def rapi_cocktails_random_nonalcoholic(self,*args,**kwargs):\n    '''The cocktail API with over 300 Cocktails! Get Cocktail and the ingredients. Get a random one or search! \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cocktails_random_nonalcoholic',kwargs)\n        "
    },
    "rapi_postcap_capend": {
        "api_name": "capend",
        "category": "Food",
        "tool_name": "postcap",
        "code": "async def rapi_postcap_capend(self,*args,**kwargs):\n    '''class\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_postcap_capend',kwargs)\n        "
    },
    "rapi_the_vegan_recipes_db_detailed_food_recipe_by_id": {
        "api_name": "detailed_food_recipe_by_id",
        "category": "Food",
        "tool_name": "the_vegan_recipes_db",
        "code": "async def rapi_the_vegan_recipes_db_detailed_food_recipe_by_id(self,*args,**kwargs):\n    '''Vegan Food Recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food\n    \n    \n\n    :param string id:  defaults to 45\n    '''\n    return await self._request_rapid_api('rapi_the_vegan_recipes_db_detailed_food_recipe_by_id',kwargs)\n        "
    },
    "rapi_the_vegan_recipes_db_list_of_foods": {
        "api_name": "list_of_foods",
        "category": "Food",
        "tool_name": "the_vegan_recipes_db",
        "code": "async def rapi_the_vegan_recipes_db_list_of_foods(self,*args,**kwargs):\n    '''Vegan Food Recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_vegan_recipes_db_list_of_foods',kwargs)\n        "
    },
    "rapi_recipe_search_and_diet_recipe_search_and_recommendations": {
        "api_name": "recipe_search_and_recommendations",
        "category": "Food",
        "tool_name": "recipe_search_and_diet",
        "code": "async def rapi_recipe_search_and_diet_recipe_search_and_recommendations(self,*args,**kwargs):\n    '''Since we understand the recipe \u2013 ingredients, diets, allergies, nutrition, taste, techniques & more. We can connect your users with the best recipes available for their unique food preferences.\r\n\r\n\r\nSearch over 2 million recipes\r\n\r\n- Search our large recipe database. We add new sites and recipes continuously.\r\n- You will also get access to over 5000 top web recipe sources\r\n- Our search algorithm returns the most relevant recipes from the most popular and best recipes sources on the web. We or...\n    \n    \n\n    :param string? q:  defaults to chicken\n    :param string? r: \n    '''\n    return await self._request_rapid_api('rapi_recipe_search_and_diet_recipe_search_and_recommendations',kwargs)\n        "
    },
    "rapi_recetas_en_espa_ol_get_recipes_details": {
        "api_name": "get_recipes_details",
        "category": "Food",
        "tool_name": "recetas_en_espa_ol",
        "code": "async def rapi_recetas_en_espa_ol_get_recipes_details(self,*args,**kwargs):\n    '''Algunas recetas para tu sitio y en espa\u00f1ol\n    \n    \n\n    :param string slug:  defaults to articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html\n    '''\n    return await self._request_rapid_api('rapi_recetas_en_espa_ol_get_recipes_details',kwargs)\n        "
    },
    "rapi_recetas_en_espa_ol_get_recipes": {
        "api_name": "get_recipes",
        "category": "Food",
        "tool_name": "recetas_en_espa_ol",
        "code": "async def rapi_recetas_en_espa_ol_get_recipes(self,*args,**kwargs):\n    '''Algunas recetas para tu sitio y en espa\u00f1ol\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_recetas_en_espa_ol_get_recipes',kwargs)\n        "
    },
    "rapi_beers_list_get_beers_by_single_country": {
        "api_name": "get_beers_by_single_country",
        "category": "Food",
        "tool_name": "beers_list",
        "code": "async def rapi_beers_list_get_beers_by_single_country(self,*args,**kwargs):\n    '''A list of beers from many European countries\n    \n    \n\n    :param string beerId:  defaults to italy\n    '''\n    return await self._request_rapid_api('rapi_beers_list_get_beers_by_single_country',kwargs)\n        "
    },
    "rapi_beers_list_getallbeerslist": {
        "api_name": "getallbeerslist",
        "category": "Food",
        "tool_name": "beers_list",
        "code": "async def rapi_beers_list_getallbeerslist(self,*args,**kwargs):\n    '''A list of beers from many European countries\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_beers_list_getallbeerslist',kwargs)\n        "
    },
    "rapi_nutrition_by_api_ninjas_v1_nutrition": {
        "api_name": "v1_nutrition",
        "category": "Food",
        "tool_name": "nutrition_by_api_ninjas",
        "code": "async def rapi_nutrition_by_api_ninjas_v1_nutrition(self,*args,**kwargs):\n    '''Natural language API to extract nutrition data from any text. See more info at https://api-ninjas.com/api/nutrition.\n    \n    \n\n    :param string query: Query text to extract nutrition information (e.g. **bacon and 3 eggs**). defaults to 1lb brisket with fries\n    '''\n    return await self._request_rapid_api('rapi_nutrition_by_api_ninjas_v1_nutrition',kwargs)\n        "
    },
    "rapi_keto_diet_filter_protein": {
        "api_name": "filter_protein",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_protein(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer protein_in_grams__lt:  defaults to 15\n    :param integer protein_in_grams__gt:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_protein',kwargs)\n        "
    },
    "rapi_keto_diet_filter_carbohydrates": {
        "api_name": "filter_carbohydrates",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_carbohydrates(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer carbohydrates_in_grams__lt:  defaults to 100\n    :param integer carbohydrates_in_grams__gt:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_carbohydrates',kwargs)\n        "
    },
    "rapi_keto_diet_filter_fats": {
        "api_name": "filter_fats",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_fats(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer fat_in_grams__lt:  defaults to 25\n    :param integer fat_in_grams__gt:  defaults to 5\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_fats',kwargs)\n        "
    },
    "rapi_keto_diet_filter_calories": {
        "api_name": "filter_calories",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_calories(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer calories__lt:  defaults to 200\n    :param integer calories__gt:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_calories',kwargs)\n        "
    },
    "rapi_keto_diet_filter_cook_time_in_minutes": {
        "api_name": "filter_cook_time_in_minutes",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_cook_time_in_minutes(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer cook_time_in_minutes__tg:  defaults to 10\n    :param integer cook_time_in_minutes__lt:  defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_cook_time_in_minutes',kwargs)\n        "
    },
    "rapi_keto_diet_filter_prep_time_in_minutes": {
        "api_name": "filter_prep_time_in_minutes",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_filter_prep_time_in_minutes(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer prep_time_in_minutes__gt:  defaults to 10\n    :param integer prep_time_in_minutes__lt:  defaults to 30\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_filter_prep_time_in_minutes',kwargs)\n        "
    },
    "rapi_keto_diet_keto_recipes_by_difficulty": {
        "api_name": "keto_recipes_by_difficulty",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_keto_recipes_by_difficulty(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param string difficulty:  defaults to Medium\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_keto_recipes_by_difficulty',kwargs)\n        "
    },
    "rapi_keto_diet_all_keto_recipes_by_category": {
        "api_name": "all_keto_recipes_by_category",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_all_keto_recipes_by_category(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    :param integer category:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_keto_diet_all_keto_recipes_by_category',kwargs)\n        "
    },
    "rapi_keto_diet_categories": {
        "api_name": "categories",
        "category": "Food",
        "tool_name": "keto_diet",
        "code": "async def rapi_keto_diet_categories(self,*args,**kwargs):\n    '''Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_keto_diet_categories',kwargs)\n        "
    },
    "rapi_halal_korean_restaurants_api_restaurants": {
        "api_name": "restaurants",
        "category": "Food",
        "tool_name": "halal_korean_restaurants_api",
        "code": "async def rapi_halal_korean_restaurants_api_restaurants(self,*args,**kwargs):\n    '''\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_halal_korean_restaurants_api_restaurants',kwargs)\n        "
    },
    "rapi_testing_v2_menudetails": {
        "api_name": "menudetails",
        "category": "Food",
        "tool_name": "testing_v2",
        "code": "async def rapi_testing_v2_menudetails(self,*args,**kwargs):\n    '''testing\n    \n    \n\n    :param string lang:  defaults to zh-hans\n    :param string id:  defaults to 5a76c927bb5d660001e09731\n    '''\n    return await self._request_rapid_api('rapi_testing_v2_menudetails',kwargs)\n        "
    },
    "rapi_testing_v2_venuedetails": {
        "api_name": "venuedetails",
        "category": "Food",
        "tool_name": "testing_v2",
        "code": "async def rapi_testing_v2_venuedetails(self,*args,**kwargs):\n    '''testing\n    \n    \n\n    :param string id:  defaults to 56c467cb7b0d464811a42017\n    :param string lang:  defaults to zh-hans\n    '''\n    return await self._request_rapid_api('rapi_testing_v2_venuedetails',kwargs)\n        "
    },
    "rapi_veggie_me_restaurants": {
        "api_name": "restaurants",
        "category": "Food",
        "tool_name": "veggie_me",
        "code": "async def rapi_veggie_me_restaurants(self,*args,**kwargs):\n    '''An API for aggregating vegetarian restaurants from Yelp from London, Amsterdam, Berlin, Stockholm, Barcelona and Paris.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_veggie_me_restaurants',kwargs)\n        "
    },
    "rapi_worldwide_recipes_detail": {
        "api_name": "detail",
        "category": "Food",
        "tool_name": "worldwide_recipes",
        "code": "async def rapi_worldwide_recipes_detail(self,*args,**kwargs):\n    '''Over 2 MILLION recipes, nutrition, ingredients, users and reviews worldwide.\n    \n    \n\n    :param string canonical_term:  defaults to Rachael-Ray_s-Southwestern-Chili-Con-Queso-Pasta-Bake-1178051\n    '''\n    return await self._request_rapid_api('rapi_worldwide_recipes_detail',kwargs)\n        "
    },
    "rapi_worldwide_recipes_review": {
        "api_name": "review",
        "category": "Food",
        "tool_name": "worldwide_recipes",
        "code": "async def rapi_worldwide_recipes_review(self,*args,**kwargs):\n    '''Over 2 MILLION recipes, nutrition, ingredients, users and reviews worldwide.\n    \n    \n\n    :param string recipe_id:  defaults to 8282fe1d-1222-4da0-9d12-cfb97f50944e\n    :param integer? offset: For pagination\n    '''\n    return await self._request_rapid_api('rapi_worldwide_recipes_review',kwargs)\n        "
    },
    "rapi_worldwide_recipes_related": {
        "api_name": "related",
        "category": "Food",
        "tool_name": "worldwide_recipes",
        "code": "async def rapi_worldwide_recipes_related(self,*args,**kwargs):\n    '''Over 2 MILLION recipes, nutrition, ingredients, users and reviews worldwide.\n    \n    \n\n    :param string related_product_id:  defaults to recipe:Rachael-Ray_s-Southwestern-Chili-Con-Queso-Pasta-Bake-1178051\n    '''\n    return await self._request_rapid_api('rapi_worldwide_recipes_related',kwargs)\n        "
    },
    "rapi_worldwide_recipes_explore": {
        "api_name": "explore",
        "category": "Food",
        "tool_name": "worldwide_recipes",
        "code": "async def rapi_worldwide_recipes_explore(self,*args,**kwargs):\n    '''Over 2 MILLION recipes, nutrition, ingredients, users and reviews worldwide.\n    \n    \n\n    :param integer? start: For pagination, eg: \n\n- Page 1 = start:0\n- Page 2 = start:20\n- Page 3 = start:40\n\nand so on...\n    '''\n    return await self._request_rapid_api('rapi_worldwide_recipes_explore',kwargs)\n        "
    },
    "rapi_beverages_and_desserts_get_all_the_desserts": {
        "api_name": "get_all_the_desserts",
        "category": "Food",
        "tool_name": "beverages_and_desserts",
        "code": "async def rapi_beverages_and_desserts_get_all_the_desserts(self,*args,**kwargs):\n    '''This api returns various kinds of Beverages and Desserts\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_beverages_and_desserts_get_all_the_desserts',kwargs)\n        "
    },
    "rapi_beverages_and_desserts_get_all_the_beverages": {
        "api_name": "get_all_the_beverages",
        "category": "Food",
        "tool_name": "beverages_and_desserts",
        "code": "async def rapi_beverages_and_desserts_get_all_the_beverages(self,*args,**kwargs):\n    '''This api returns various kinds of Beverages and Desserts\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_beverages_and_desserts_get_all_the_beverages',kwargs)\n        "
    },
    "rapi_ghana_food_recipe_api_get_all_recipe": {
        "api_name": "get_all_recipe",
        "category": "Food",
        "tool_name": "ghana_food_recipe_api",
        "code": "async def rapi_ghana_food_recipe_api_get_all_recipe(self,*args,**kwargs):\n    '''Ghana has a rich culture of food,with 1000s of food recipes. This api will enable both local and international developers build apps tailored around this rich culture of food or for developers building recipe apps specific to countries.More recipe to be added. Contact the developer if you love to help. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ghana_food_recipe_api_get_all_recipe',kwargs)\n        "
    },
    "rapi_ghana_food_recipe_api_drink_by_id": {
        "api_name": "drink_by_id",
        "category": "Food",
        "tool_name": "ghana_food_recipe_api",
        "code": "async def rapi_ghana_food_recipe_api_drink_by_id(self,*args,**kwargs):\n    '''Ghana has a rich culture of food,with 1000s of food recipes. This api will enable both local and international developers build apps tailored around this rich culture of food or for developers building recipe apps specific to countries.More recipe to be added. Contact the developer if you love to help. \n    \n    \n\n    :param string id:  defaults to 63c67c9db06a3ed9f92b2367\n    '''\n    return await self._request_rapid_api('rapi_ghana_food_recipe_api_drink_by_id',kwargs)\n        "
    },
    "rapi_ghana_food_recipe_api_drinks": {
        "api_name": "drinks",
        "category": "Food",
        "tool_name": "ghana_food_recipe_api",
        "code": "async def rapi_ghana_food_recipe_api_drinks(self,*args,**kwargs):\n    '''Ghana has a rich culture of food,with 1000s of food recipes. This api will enable both local and international developers build apps tailored around this rich culture of food or for developers building recipe apps specific to countries.More recipe to be added. Contact the developer if you love to help. \n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ghana_food_recipe_api_drinks',kwargs)\n        "
    },
    "rapi_ghana_food_recipe_api_get_all_food": {
        "api_name": "get_all_food",
        "category": "Food",
        "tool_name": "ghana_food_recipe_api",
        "code": "async def rapi_ghana_food_recipe_api_get_all_food(self,*args,**kwargs):\n    '''Ghana has a rich culture of food,with 1000s of food recipes. This api will enable both local and international developers build apps tailored around this rich culture of food or for developers building recipe apps specific to countries.More recipe to be added. Contact the developer if you love to help. \n    \n    \n\n    :param string? page:  defaults to ?page=2\n    '''\n    return await self._request_rapid_api('rapi_ghana_food_recipe_api_get_all_food',kwargs)\n        "
    },
    "rapi_tasty_tags_list": {
        "api_name": "tags_list",
        "category": "Food",
        "tool_name": "tasty",
        "code": "async def rapi_tasty_tags_list(self,*args,**kwargs):\n    '''API to query data about recipe, plan, ingredients, etc... as on official site\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tasty_tags_list',kwargs)\n        "
    },
    "rapi_tasty_recipes_list_similarities": {
        "api_name": "recipes_list_similarities",
        "category": "Food",
        "tool_name": "tasty",
        "code": "async def rapi_tasty_recipes_list_similarities(self,*args,**kwargs):\n    '''API to query data about recipe, plan, ingredients, etc... as on official site\n    \n    \n\n    :param integer recipe_id: The id value of any recipe returned in recipes/list API defaults to 8138\n    '''\n    return await self._request_rapid_api('rapi_tasty_recipes_list_similarities',kwargs)\n        "
    },
    "rapi_tasty_recipes_auto_complete": {
        "api_name": "recipes_auto_complete",
        "category": "Food",
        "tool_name": "tasty",
        "code": "async def rapi_tasty_recipes_auto_complete(self,*args,**kwargs):\n    '''API to query data about recipe, plan, ingredients, etc... as on official site\n    \n    \n\n    :param string prefix: Food name or ingredient defaults to chicken soup\n    '''\n    return await self._request_rapid_api('rapi_tasty_recipes_auto_complete',kwargs)\n        "
    },
    "rapi_recipe_generator_generate_recipe": {
        "api_name": "generate_recipe",
        "category": "Food",
        "tool_name": "recipe_generator",
        "code": "async def rapi_recipe_generator_generate_recipe(self,*args,**kwargs):\n    '''Uses AI to generate a unique recipe based on a provided name and a list of ingredients\n    \n    \n\n    :param string ingredients: \n    :param string? name:  defaults to (Generate Name)\n    '''\n    return await self._request_rapid_api('rapi_recipe_generator_generate_recipe',kwargs)\n        "
    },
    "rapi_burgers_hub_get_specific_burger": {
        "api_name": "get_specific_burger",
        "category": "Food",
        "tool_name": "burgers_hub",
        "code": "async def rapi_burgers_hub_get_specific_burger(self,*args,**kwargs):\n    '''This api returns kinds of burgers with there name, image, price, ingeridients etc\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_burgers_hub_get_specific_burger',kwargs)\n        "
    },
    "rapi_burgers_hub_burgers": {
        "api_name": "burgers",
        "category": "Food",
        "tool_name": "burgers_hub",
        "code": "async def rapi_burgers_hub_burgers(self,*args,**kwargs):\n    '''This api returns kinds of burgers with there name, image, price, ingeridients etc\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_burgers_hub_burgers',kwargs)\n        "
    },
    "rapi_the_fork_the_spoon_locations_list_deprecated": {
        "api_name": "locations_list_deprecated",
        "category": "Food",
        "tool_name": "the_fork_the_spoon",
        "code": "async def rapi_the_fork_the_spoon_locations_list_deprecated(self,*args,**kwargs):\n    '''This API helps to query the best restaurant and meal around the world to create a traveling site/application such as thefork.com\n    \n    \n\n    :param string google_place_id: The value of data/geolocation/id/id fields returned in \u2026/locations/auto-complete endpoint defaults to ChIJ53USP0nBhkcRjQ50xhPN_zw\n    '''\n    return await self._request_rapid_api('rapi_the_fork_the_spoon_locations_list_deprecated',kwargs)\n        "
    },
    "rapi_the_fork_the_spoon_locations_v2_list": {
        "api_name": "locations_v2_list",
        "category": "Food",
        "tool_name": "the_fork_the_spoon",
        "code": "async def rapi_the_fork_the_spoon_locations_v2_list(self,*args,**kwargs):\n    '''This API helps to query the best restaurant and meal around the world to create a traveling site/application such as thefork.com\n    \n    \n\n    :param string google_place_id: The value of data/geolocation/id/id fields returned in \u2026/locations/auto-complete endpoint defaults to ChIJu46S-ZZhLxMROG5lkwZ3D7k\n    :param string? geo_text: The value of 'text' fields returned in .../locations/v2/auto-complete endpoint defaults to Roma, Metropolitan City of Rome, Italy\n    :param boolean? geo_ref:  defaults to false\n    :param string? geo_type: The value of 'type' fields returned in .../locations/v2/auto-complete defaults to locality\n    '''\n    return await self._request_rapid_api('rapi_the_fork_the_spoon_locations_v2_list',kwargs)\n        "
    },
    "rapi_the_fork_the_spoon_locations_v2_auto_complete": {
        "api_name": "locations_v2_auto_complete",
        "category": "Food",
        "tool_name": "the_fork_the_spoon",
        "code": "async def rapi_the_fork_the_spoon_locations_v2_auto_complete(self,*args,**kwargs):\n    '''This API helps to query the best restaurant and meal around the world to create a traveling site/application such as thefork.com\n    \n    \n\n    :param string text: City, district,country name, etc any word that you are familiar with defaults to milan\n    :param integer? longitude: The end user's location, used for sorting purpose\n    :param integer? latitude: The end user's location, used for sorting purpose\n    '''\n    return await self._request_rapid_api('rapi_the_fork_the_spoon_locations_v2_auto_complete',kwargs)\n        "
    },
    "rapi_yummly_reviews_list": {
        "api_name": "reviews_list",
        "category": "Food",
        "tool_name": "yummly",
        "code": "async def rapi_yummly_reviews_list(self,*args,**kwargs):\n    '''API to query data about recipe, plan, ingredients, etc... as on official site\n    \n    \n\n    :param integer offset: The offset of items to be ignored in response for paging defaults to 0\n    :param string globalId: The value of globalId field returned in feeds/list and feeds/search API defaults to a8d6747a-bfaa-46a7-92fb-892e3f76b264\n    :param integer limit: Number of items returned per response defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_yummly_reviews_list',kwargs)\n        "
    },
    "rapi_the_mexican_food_db_list_of_foods": {
        "api_name": "list_of_foods",
        "category": "Food",
        "tool_name": "the_mexican_food_db",
        "code": "async def rapi_the_mexican_food_db_list_of_foods(self,*args,**kwargs):\n    '''Mexican Food Recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_mexican_food_db_list_of_foods',kwargs)\n        "
    },
    "rapi_store_groceries_search_a_grocery": {
        "api_name": "search_a_grocery",
        "category": "Food",
        "tool_name": "store_groceries",
        "code": "async def rapi_store_groceries_search_a_grocery(self,*args,**kwargs):\n    '''Access the biggest groceries store in the UK with over 50000 items as well as promotions\n    \n    \n\n    :param string grocery: \n    '''\n    return await self._request_rapid_api('rapi_store_groceries_search_a_grocery',kwargs)\n        "
    },
    "rapi_the_cocktail_db_list_of_cocktails": {
        "api_name": "list_of_cocktails",
        "category": "Food",
        "tool_name": "the_cocktail_db",
        "code": "async def rapi_the_cocktail_db_list_of_cocktails(self,*args,**kwargs):\n    '''Cocktail recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_the_cocktail_db_list_of_cocktails',kwargs)\n        "
    },
    "rapi_comfyfood_get_all_recipes_2": {
        "api_name": "get_all_recipes_2",
        "category": "Food",
        "tool_name": "comfyfood",
        "code": "async def rapi_comfyfood_get_all_recipes_2(self,*args,**kwargs):\n    '''This is an API from ComfyFood's website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_comfyfood_get_all_recipes_2',kwargs)\n        "
    },
    "rapi_comfyfood_get_all_recipes_1": {
        "api_name": "get_all_recipes_1",
        "category": "Food",
        "tool_name": "comfyfood",
        "code": "async def rapi_comfyfood_get_all_recipes_1(self,*args,**kwargs):\n    '''This is an API from ComfyFood's website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_comfyfood_get_all_recipes_1',kwargs)\n        "
    },
    "rapi_comfyfood_get_all_recipes_3": {
        "api_name": "get_all_recipes_3",
        "category": "Food",
        "tool_name": "comfyfood",
        "code": "async def rapi_comfyfood_get_all_recipes_3(self,*args,**kwargs):\n    '''This is an API from ComfyFood's website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_comfyfood_get_all_recipes_3',kwargs)\n        "
    },
    "rapi_comfyfood_get_all_categories": {
        "api_name": "get_all_categories",
        "category": "Food",
        "tool_name": "comfyfood",
        "code": "async def rapi_comfyfood_get_all_categories(self,*args,**kwargs):\n    '''This is an API from ComfyFood's website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_comfyfood_get_all_categories',kwargs)\n        "
    },
    "rapi_dietagram_food_api": {
        "api_name": "food_api",
        "category": "Food",
        "tool_name": "dietagram",
        "code": "async def rapi_dietagram_food_api(self,*args,**kwargs):\n    '''Find nutrition facts by food name or by UPC (barcode). API supports English, Russian, Polish, Spanish, Bulgarian, Ukrainian\n    \n    \n\n    :param string name:  defaults to Jab\u0142ko\n    :param string? lang: Lang is necessary for search in the certain lang food base.  It will be detected automatically or you could set manually from this set of values (\\\\\\\"en\\\\\\\", \\\\\\\"ru\\\\\\\", \\\\\\\"pl\\\\\\\", \\\\\\\"bg\\\\\\\", \\\\\\\"de\\\\\\\", \\\\\\\"es\\\\\\\", \\\\\\\"ua\\\\\\\", \\\\\\\"by\\\\\\\") defaults to pl\n    '''\n    return await self._request_rapid_api('rapi_dietagram_food_api',kwargs)\n        "
    },
    "rapi_dietagram_upc_api": {
        "api_name": "upc_api",
        "category": "Food",
        "tool_name": "dietagram",
        "code": "async def rapi_dietagram_upc_api(self,*args,**kwargs):\n    '''Find nutrition facts by food name or by UPC (barcode). API supports English, Russian, Polish, Spanish, Bulgarian, Ukrainian\n    \n    \n\n    :param string? name:  defaults to 4019300005154\n    '''\n    return await self._request_rapid_api('rapi_dietagram_upc_api',kwargs)\n        "
    },
    "rapi_cocktail_by_api_ninjas_v1_cocktail": {
        "api_name": "v1_cocktail",
        "category": "Food",
        "tool_name": "cocktail_by_api_ninjas",
        "code": "async def rapi_cocktail_by_api_ninjas_v1_cocktail(self,*args,**kwargs):\n    '''Search thousands of cocktail recipes. See more info at https://api-ninjas.com/api/cocktail.\n    \n    \n\n    :param string? name: name of cocktail. This parameter supports partial matches (e.g. bloody will match bloody mary and bloody margarita) defaults to bloody mary\n    :param string? ingredients: comma-separated string of ingredients to search. Only cocktails containing all listed ingredients will be returned. For example, to search cocktails containing Vodka and lemon juice, use vodka,lemon juice.\n    '''\n    return await self._request_rapid_api('rapi_cocktail_by_api_ninjas_v1_cocktail',kwargs)\n        "
    },
    "rapi_food_nutrional_data_search_a_food_recipe_item_100g_serving": {
        "api_name": "search_a_food_recipe_item_100g_serving",
        "category": "Food",
        "tool_name": "food_nutrional_data",
        "code": "async def rapi_food_nutrional_data_search_a_food_recipe_item_100g_serving(self,*args,**kwargs):\n    '''Access thousands of food ingredients and their nutritional information\n    \n    \n\n    :param string nutrientQuery:  defaults to milk\n    '''\n    return await self._request_rapid_api('rapi_food_nutrional_data_search_a_food_recipe_item_100g_serving',kwargs)\n        "
    },
    "rapi_caterer_groceries_intel_search_a_grocery": {
        "api_name": "search_a_grocery",
        "category": "Food",
        "tool_name": "caterer_groceries_intel",
        "code": "async def rapi_caterer_groceries_intel_search_a_grocery(self,*args,**kwargs):\n    '''Access more than 24000 groceries data, suitable for caterers\n    \n    \n\n    :param string searchQuery:  defaults to apple\n    '''\n    return await self._request_rapid_api('rapi_caterer_groceries_intel_search_a_grocery',kwargs)\n        "
    },
    "rapi_caterer_groceries_intel_get_all_groceries": {
        "api_name": "get_all_groceries",
        "category": "Food",
        "tool_name": "caterer_groceries_intel",
        "code": "async def rapi_caterer_groceries_intel_get_all_groceries(self,*args,**kwargs):\n    '''Access more than 24000 groceries data, suitable for caterers\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_caterer_groceries_intel_get_all_groceries',kwargs)\n        "
    },
    "rapi_recipe_v4_search_recipes": {
        "api_name": "search_recipes",
        "category": "Food",
        "tool_name": "recipe_v4",
        "code": "async def rapi_recipe_v4_search_recipes(self,*args,**kwargs):\n    '''REST-based recipe and search\n    \n    \n\n    :param string? q:  defaults to chicken\n    '''\n    return await self._request_rapid_api('rapi_recipe_v4_search_recipes',kwargs)\n        "
    },
    "rapi_kfc_chickens_search_by_id": {
        "api_name": "search_by_id",
        "category": "Food",
        "tool_name": "kfc_chickens",
        "code": "async def rapi_kfc_chickens_search_by_id(self,*args,**kwargs):\n    '''Provides you KFC dishes\n    \n    \n\n    :param integer id:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_kfc_chickens_search_by_id',kwargs)\n        "
    },
    "rapi_kfc_chickens_get_chickens": {
        "api_name": "get_chickens",
        "category": "Food",
        "tool_name": "kfc_chickens",
        "code": "async def rapi_kfc_chickens_get_chickens(self,*args,**kwargs):\n    '''Provides you KFC dishes\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kfc_chickens_get_chickens',kwargs)\n        "
    },
    "rapi_foodiefetch_fetch_restaurant_information": {
        "api_name": "fetch_restaurant_information",
        "category": "Food",
        "tool_name": "foodiefetch",
        "code": "async def rapi_foodiefetch_fetch_restaurant_information(self,*args,**kwargs):\n    '''FoodieFetch is a new API that allows users to fetch menu locations and ratings from popular food delivery platforms like Swiggy and soon Zomato. Created using Go and available on RapidAPI, FoodieFetch is the perfect solution for developers looking to add food-related data to their applications. Give it a try today and bring a little flavor to your project!\n    \n    \n\n    :param string query:  defaults to grandamas cafe pune\n    '''\n    return await self._request_rapid_api('rapi_foodiefetch_fetch_restaurant_information',kwargs)\n        "
    },
    "rapi_pizza_and_desserts_all_desserts_data": {
        "api_name": "all_desserts_data",
        "category": "Food",
        "tool_name": "pizza_and_desserts",
        "code": "async def rapi_pizza_and_desserts_all_desserts_data(self,*args,**kwargs):\n    '''decent collection of pizzas and desserts for your next food app project..\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pizza_and_desserts_all_desserts_data',kwargs)\n        "
    },
    "rapi_pizza_and_desserts_all_pizza_data": {
        "api_name": "all_pizza_data",
        "category": "Food",
        "tool_name": "pizza_and_desserts",
        "code": "async def rapi_pizza_and_desserts_all_pizza_data(self,*args,**kwargs):\n    '''decent collection of pizzas and desserts for your next food app project..\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_pizza_and_desserts_all_pizza_data',kwargs)\n        "
    },
    "rapi_bbc_good_food_api_categories_collections_ids": {
        "api_name": "categories_collections_ids",
        "category": "Food",
        "tool_name": "bbc_good_food_api",
        "code": "async def rapi_bbc_good_food_api_categories_collections_ids(self,*args,**kwargs):\n    '''Fetch recipies from search keyword, Author profile + recipes, collections recipes..\n\nNote: The API is deployed on basic plan server after the first subscriber I will upgrade the plan currently server go to sleep and first request wake up the server it takes 3 to 5 minutes.After 30 min of inactivity server go to sleep.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bbc_good_food_api_categories_collections_ids',kwargs)\n        "
    },
    "rapi_bbc_good_food_api_author_profile_recipes": {
        "api_name": "author_profile_recipes",
        "category": "Food",
        "tool_name": "bbc_good_food_api",
        "code": "async def rapi_bbc_good_food_api_author_profile_recipes(self,*args,**kwargs):\n    '''Fetch recipies from search keyword, Author profile + recipes, collections recipes..\n\nNote: The API is deployed on basic plan server after the first subscriber I will upgrade the plan currently server go to sleep and first request wake up the server it takes 3 to 5 minutes.After 30 min of inactivity server go to sleep.\n    \n    \n\n    :param string id: Name ID of the author/chef defaults to samuelgoldsmith\n    :param integer? page: \n    '''\n    return await self._request_rapid_api('rapi_bbc_good_food_api_author_profile_recipes',kwargs)\n        "
    },
    "rapi_bespoke_diet_generator_get_ingredients": {
        "api_name": "get_ingredients",
        "category": "Food",
        "tool_name": "bespoke_diet_generator",
        "code": "async def rapi_bespoke_diet_generator_get_ingredients(self,*args,**kwargs):\n    '''Our API generates a complete meal plan that is specific to the nutrition counseling world. We create fully detailed, personalized meal plans with specific ingredients / quantities and little cooking skill required. For better flexibility, our ingredient replacement algorithm creates a template where users can adapt their menu even more to fit their desires.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bespoke_diet_generator_get_ingredients',kwargs)\n        "
    },
    "rapi_recipe_finder_icecream_ingredient": {
        "api_name": "icecream_ingredient",
        "category": "Food",
        "tool_name": "recipe_finder",
        "code": "async def rapi_recipe_finder_icecream_ingredient(self,*args,**kwargs):\n    '''This recipe API allows users to search for recipes by ingredient. It returns a JSON response with the matching recipes, including the name, list of ingredients, and instructions.\n    \n    \n\n    :param string ingredient:  defaults to blueberry\n    '''\n    return await self._request_rapid_api('rapi_recipe_finder_icecream_ingredient',kwargs)\n        "
    },
    "rapi_recipe_finder_cake_ingredient": {
        "api_name": "cake_ingredient",
        "category": "Food",
        "tool_name": "recipe_finder",
        "code": "async def rapi_recipe_finder_cake_ingredient(self,*args,**kwargs):\n    '''This recipe API allows users to search for recipes by ingredient. It returns a JSON response with the matching recipes, including the name, list of ingredients, and instructions.\n    \n    \n\n    :param string ingredient:  defaults to lime\n    '''\n    return await self._request_rapid_api('rapi_recipe_finder_cake_ingredient',kwargs)\n        "
    },
    "rapi_recipe_finder_pastry_ingredient": {
        "api_name": "pastry_ingredient",
        "category": "Food",
        "tool_name": "recipe_finder",
        "code": "async def rapi_recipe_finder_pastry_ingredient(self,*args,**kwargs):\n    '''This recipe API allows users to search for recipes by ingredient. It returns a JSON response with the matching recipes, including the name, list of ingredients, and instructions.\n    \n    \n\n    :param string ingredient:  defaults to strawberry\n    '''\n    return await self._request_rapid_api('rapi_recipe_finder_pastry_ingredient',kwargs)\n        "
    },
    "rapi_recipe_finder_salad_ingredient": {
        "api_name": "salad_ingredient",
        "category": "Food",
        "tool_name": "recipe_finder",
        "code": "async def rapi_recipe_finder_salad_ingredient(self,*args,**kwargs):\n    '''This recipe API allows users to search for recipes by ingredient. It returns a JSON response with the matching recipes, including the name, list of ingredients, and instructions.\n    \n    \n\n    :param string ingredient:  defaults to cucumbers\n    '''\n    return await self._request_rapid_api('rapi_recipe_finder_salad_ingredient',kwargs)\n        "
    },
    "rapi_recipe_finder_lunch_ingredient": {
        "api_name": "lunch_ingredient",
        "category": "Food",
        "tool_name": "recipe_finder",
        "code": "async def rapi_recipe_finder_lunch_ingredient(self,*args,**kwargs):\n    '''This recipe API allows users to search for recipes by ingredient. It returns a JSON response with the matching recipes, including the name, list of ingredients, and instructions.\n    \n    \n\n    :param string ingredient:  defaults to pork\n    '''\n    return await self._request_rapid_api('rapi_recipe_finder_lunch_ingredient',kwargs)\n        "
    },
    "rapi_postput_transform_your_images": {
        "api_name": "transform_your_images",
        "category": "Storage",
        "tool_name": "postput",
        "code": "async def rapi_postput_transform_your_images(self,*args,**kwargs):\n    '''Store & perform on-the-fly operations on your files\n    \n    \n\n    :param boolean? grayscale:  defaults to true\n    :param integer? rotate:  defaults to 90\n    :param integer? blur:  defaults to 4\n    :param string? resize:  defaults to 100,100\n    '''\n    return await self._request_rapid_api('rapi_postput_transform_your_images',kwargs)\n        "
    },
    "rapi_proclima_dolar": {
        "api_name": "dolar",
        "category": "Energy",
        "tool_name": "proclima",
        "code": "async def rapi_proclima_dolar(self,*args,**kwargs):\n    '''proclima\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_proclima_dolar',kwargs)\n        "
    },
    "rapi_ecoweather_heizgradtage": {
        "api_name": "heizgradtage",
        "category": "Energy",
        "tool_name": "ecoweather",
        "code": "async def rapi_ecoweather_heizgradtage(self,*args,**kwargs):\n    '''Economically relevant meteorological data like heat degree days, average temperature. \n    \n    \n\n    :param string from:  defaults to 2021-01-01\n    :param integer lon:  defaults to 8.79\n    :param integer lat:  defaults to 49.34\n    :param string? to:  defaults to 2021-09-21\n    '''\n    return await self._request_rapid_api('rapi_ecoweather_heizgradtage',kwargs)\n        "
    },
    "rapi_ecoweather_niederschlag": {
        "api_name": "niederschlag",
        "category": "Energy",
        "tool_name": "ecoweather",
        "code": "async def rapi_ecoweather_niederschlag(self,*args,**kwargs):\n    '''Economically relevant meteorological data like heat degree days, average temperature. \n    \n    \n\n    :param string from:  defaults to 2021-01-01\n    :param integer lon:  defaults to 8.79\n    :param integer lat:  defaults to 49.34\n    :param string? to:  defaults to 2021-09-21\n    '''\n    return await self._request_rapid_api('rapi_ecoweather_niederschlag',kwargs)\n        "
    },
    "rapi_ecoweather_ecoweather": {
        "api_name": "ecoweather",
        "category": "Energy",
        "tool_name": "ecoweather",
        "code": "async def rapi_ecoweather_ecoweather(self,*args,**kwargs):\n    '''Economically relevant meteorological data like heat degree days, average temperature. \n    \n    \n\n    :param integer lon: Longitude of a geo-location in degrees.  defaults to 8.80282\n    :param integer lat: Latitude of a geo-location in degrees.  defaults to 49.3427818\n    :param string from: Start date in YYYY-MM-DD format. defaults to 2021-12-31\n    :param string? to: End date in YYYY-MM-DD format. \n\nNote: if time period relative to `from` is more than 366 days it will automatically be replaced with this date. defaults to 2022-09-31\n    '''\n    return await self._request_rapid_api('rapi_ecoweather_ecoweather',kwargs)\n        "
    },
    "rapi_caiso_caisonode": {
        "api_name": "caisonode",
        "category": "Energy",
        "tool_name": "caiso",
        "code": "async def rapi_caiso_caisonode(self,*args,**kwargs):\n    '''API for California Independent System Operator data provided from caiso.com. It includes data on energy emissions, demand, supply, and prices. Updated daily.\n    \n    \n\n    :param string type:  defaults to state\n    :param integer? long:  defaults to -114.1056\n    :param integer? radius:  defaults to 100\n    :param string? region: \n    :param string? state:  defaults to wa\n    :param string? name: \n    :param integer? lat:  defaults to 34.6106\n    '''\n    return await self._request_rapid_api('rapi_caiso_caisonode',kwargs)\n        "
    },
    "rapi_caiso_caisoregion": {
        "api_name": "caisoregion",
        "category": "Energy",
        "tool_name": "caiso",
        "code": "async def rapi_caiso_caisoregion(self,*args,**kwargs):\n    '''API for California Independent System Operator data provided from caiso.com. It includes data on energy emissions, demand, supply, and prices. Updated daily.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_caiso_caisoregion',kwargs)\n        "
    },
    "rapi_indian_fuel_fuel_data": {
        "api_name": "fuel_data",
        "category": "Energy",
        "tool_name": "indian_fuel",
        "code": "async def rapi_indian_fuel_fuel_data(self,*args,**kwargs):\n    '''This API contains the fuel rate of every city in India. The fuel price of a particular city can also be viewed.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_indian_fuel_fuel_data',kwargs)\n        "
    },
    "rapi_europe_fuel_prices_all_countries": {
        "api_name": "all_countries",
        "category": "Energy",
        "tool_name": "europe_fuel_prices",
        "code": "async def rapi_europe_fuel_prices_all_countries(self,*args,**kwargs):\n    '''Fuel prices from European Commision website\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_europe_fuel_prices_all_countries',kwargs)\n        "
    },
    "rapi_marktdaten_deutschland_marketdata": {
        "api_name": "marketdata",
        "category": "Energy",
        "tool_name": "marktdaten_deutschland",
        "code": "async def rapi_marktdaten_deutschland_marketdata(self,*args,**kwargs):\n    '''Prognose des regionalen Strompreises\n    \n    \n\n    :param string zip: Postleitzahl in Deutschland defaults to 69256\n    '''\n    return await self._request_rapid_api('rapi_marktdaten_deutschland_marketdata',kwargs)\n        "
    },
    "rapi_aliexpress_unofficial_categories": {
        "api_name": "categories",
        "category": "Commerce",
        "tool_name": "aliexpress_unofficial",
        "code": "async def rapi_aliexpress_unofficial_categories(self,*args,**kwargs):\n    '''DEPRECATED. Will deleted after 2023-03-01\n    \n    \n\n    :param string? locale: \n    :param string? country: \n    '''\n    return await self._request_rapid_api('rapi_aliexpress_unofficial_categories',kwargs)\n        "
    },
    "rapi_sandbox_ecombr_com_04_orders_listoforders": {
        "api_name": "listoforders",
        "category": "Commerce",
        "tool_name": "sandbox_ecombr_com_04_orders",
        "code": "async def rapi_sandbox_ecombr_com_04_orders_listoforders(self,*args,**kwargs):\n    '''sandbox.ecombr.com - 04 orders\n    \n    \n\n    :param string status: \n    :param string action:  defaults to orders_list\n    '''\n    return await self._request_rapid_api('rapi_sandbox_ecombr_com_04_orders_listoforders',kwargs)\n        "
    },
    "rapi_sandbox_ecombr_com_04_orders_getthelistofcountriesregistered": {
        "api_name": "getthelistofcountriesregistered",
        "category": "Commerce",
        "tool_name": "sandbox_ecombr_com_04_orders",
        "code": "async def rapi_sandbox_ecombr_com_04_orders_getthelistofcountriesregistered(self,*args,**kwargs):\n    '''sandbox.ecombr.com - 04 orders\n    \n    \n\n    :param string action:  defaults to countries\n    :param string Content-Type:  defaults to application/json\n    :param string Cache-Control:  defaults to no-cache\n    :param string Secret: \n    :param string Token: \n    :param string E-mail: \n    '''\n    return await self._request_rapid_api('rapi_sandbox_ecombr_com_04_orders_getthelistofcountriesregistered',kwargs)\n        "
    },
    "rapi_amazon_api_v2_smart_phones": {
        "api_name": "smart_phones",
        "category": "Commerce",
        "tool_name": "amazon_api_v2",
        "code": "async def rapi_amazon_api_v2_smart_phones(self,*args,**kwargs):\n    '''Amazon_API\n    \n    \n\n    :param string? Name_Brand: \n    '''\n    return await self._request_rapid_api('rapi_amazon_api_v2_smart_phones',kwargs)\n        "
    },
    "rapi_amazon_api_v2_laptops": {
        "api_name": "laptops",
        "category": "Commerce",
        "tool_name": "amazon_api_v2",
        "code": "async def rapi_amazon_api_v2_laptops(self,*args,**kwargs):\n    '''Amazon_API\n    \n    \n\n    :param string? Name_Brand: \n    '''\n    return await self._request_rapid_api('rapi_amazon_api_v2_laptops',kwargs)\n        "
    },
    "rapi_amazon_api_v2_bcaa": {
        "api_name": "bcaa",
        "category": "Commerce",
        "tool_name": "amazon_api_v2",
        "code": "async def rapi_amazon_api_v2_bcaa(self,*args,**kwargs):\n    '''Amazon_API\n    \n    \n\n    :param string? product_name_brand: \n    '''\n    return await self._request_rapid_api('rapi_amazon_api_v2_bcaa',kwargs)\n        "
    },
    "rapi_amazon_api_v2_headphones": {
        "api_name": "headphones",
        "category": "Commerce",
        "tool_name": "amazon_api_v2",
        "code": "async def rapi_amazon_api_v2_headphones(self,*args,**kwargs):\n    '''Amazon_API\n    \n    \n\n    :param string? Name_Brand: \n    '''\n    return await self._request_rapid_api('rapi_amazon_api_v2_headphones',kwargs)\n        "
    },
    "rapi_inventory_and_ecommerce_hosted_and_self_hosted_solution_all": {
        "api_name": "all",
        "category": "Commerce",
        "tool_name": "inventory_and_ecommerce_hosted_and_self_hosted_solution",
        "code": "async def rapi_inventory_and_ecommerce_hosted_and_self_hosted_solution_all(self,*args,**kwargs):\n    '''Use this API to establish an omni channel eCommerce website with a full front end JS GUI to interact with it. Customize the way your inventory data is displayed on your website. Automate invoice processing, merchant API integration and item shipment label creator.  Join now on https://orkiv.com/inventory/inventory.html\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_inventory_and_ecommerce_hosted_and_self_hosted_solution_all',kwargs)\n        "
    },
    "rapi_gst_advance_gst": {
        "api_name": "gst",
        "category": "Commerce",
        "tool_name": "gst_advance",
        "code": "async def rapi_gst_advance_gst(self,*args,**kwargs):\n    '''get data from GST and also get owner details with Turnover details\n    \n    \n\n    :param string gstnumber:  defaults to 24AEAPS9376R2ZI\n    '''\n    return await self._request_rapid_api('rapi_gst_advance_gst',kwargs)\n        "
    },
    "rapi_my_store_get_products": {
        "api_name": "get_products",
        "category": "Commerce",
        "tool_name": "my_store",
        "code": "async def rapi_my_store_get_products(self,*args,**kwargs):\n    '''My Store API\n    \n    \n\n    :param integer? skip: \n    :param integer? limit: \n    '''\n    return await self._request_rapid_api('rapi_my_store_get_products',kwargs)\n        "
    },
    "rapi_test_pg_prod_get": {
        "api_name": "get",
        "category": "Commerce",
        "tool_name": "test_pg_prod",
        "code": "async def rapi_test_pg_prod_get(self,*args,**kwargs):\n    '''123\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_test_pg_prod_get',kwargs)\n        "
    },
    "rapi_apfelpreise_price": {
        "api_name": "price",
        "category": "Commerce",
        "tool_name": "apfelpreise",
        "code": "async def rapi_apfelpreise_price(self,*args,**kwargs):\n    '''market data for used apple products\n    \n    \n\n    :param string manufacturerNumBase64Encoded: A manufacturer number of an apple product, base64 encoded, e.g for a Apple MacBook Pro 13\\\\\\\" 2020 with manufacturer number MWP72D/A -> TVdQNzJEL0E= defaults to TVdQNzJEL0E=\n    :param ENUM condition: ENUM, valid values are: USED, NEW, DEFECT, REFURBISHED\n\nNote: Until now in v1, only values USED and REFURBISHED are allowed and give the same results (no distringuish between USED or REFURBISHED, so use any of the two.\nIn a future release, the other values will be also supported.\n    '''\n    return await self._request_rapid_api('rapi_apfelpreise_price',kwargs)\n        "
    },
    "rapi_e_mail_check_invalid_or_disposable_domain_v2_mailcheck": {
        "api_name": "mailcheck",
        "category": "Commerce",
        "tool_name": "e_mail_check_invalid_or_disposable_domain_v2",
        "code": "async def rapi_e_mail_check_invalid_or_disposable_domain_v2_mailcheck(self,*args,**kwargs):\n    '''Easily check if a certain e-mail address is valid. Is it a valid domain? Is the e-mail a temporary/disposable e-mail? That's a common indicator of spamming/trolling, so now there's an API for you so you can easily block it!\n    \n    \n\n    :param string domain: Full e-mail, or domain to check if valid or temporary/disposable. You can enter an e-mail address, and it will be converted to a domain, but entering just the domain is recommended for user privacy reasons. defaults to mailinator.com\n    '''\n    return await self._request_rapid_api('rapi_e_mail_check_invalid_or_disposable_domain_v2_mailcheck',kwargs)\n        "
    },
    "rapi_ebay_product_details": {
        "api_name": "product_details",
        "category": "Commerce",
        "tool_name": "ebay",
        "code": "async def rapi_ebay_product_details(self,*args,**kwargs):\n    '''Get Products from Ebay (Unofficial)\n    \n    \n\n    :param integer product_id: ID of the product. Can be obtained from the url of the product or by using the `/search` endpoint. defaults to 195499451557\n    :param string? country: Valid country to return offers for.\nValid values are in description of this endpoint.\nDefault: `united states`. defaults to germany\n    :param string? country_code: Country code of the valid country to return offers for.\nValid values are in description of this endpoint.\nDefault: `us`. defaults to de\n    '''\n    return await self._request_rapid_api('rapi_ebay_product_details',kwargs)\n        "
    },
    "rapi_ebay_search_products": {
        "api_name": "search_products",
        "category": "Commerce",
        "tool_name": "ebay",
        "code": "async def rapi_ebay_search_products(self,*args,**kwargs):\n    '''Get Products from Ebay (Unofficial)\n    \n    \n\n    :param string search_query: Search Query used in Ebay search defaults to iphone\n    :param string? country: Valid country to return offers for.\nValid values are in description of this endpoint.\nDefault: `united states`. defaults to germany\n    :param integer? page: Results page to return.\nDefault: `1`. defaults to 1\n    :param string? country_code: Country code of the valid country to return offers for.\nValid values are in description of this endpoint.\nDefault: `us`. defaults to de\n    '''\n    return await self._request_rapid_api('rapi_ebay_search_products',kwargs)\n        "
    },
    "rapi_cartify_getproducts": {
        "api_name": "getproducts",
        "category": "Commerce",
        "tool_name": "cartify",
        "code": "async def rapi_cartify_getproducts(self,*args,**kwargs):\n    '''Welcome to our e-commerce API! Our API is designed to make it easy for you to build and manage your online store and also build projects you can show on your porfolio. With our API, you can create products, manage orders, track shipments, and more. Our API is built on modern technologies and is easy to integrate with your existing systems.  Our API provides a secure and reliable platform for your e-commerce needs. You can trust us to keep your data safe and secure. We also provide a range of ...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_cartify_getproducts',kwargs)\n        "
    },
    "rapi_cartify_getproductbycategory": {
        "api_name": "getproductbycategory",
        "category": "Commerce",
        "tool_name": "cartify",
        "code": "async def rapi_cartify_getproductbycategory(self,*args,**kwargs):\n    '''Welcome to our e-commerce API! Our API is designed to make it easy for you to build and manage your online store and also build projects you can show on your porfolio. With our API, you can create products, manage orders, track shipments, and more. Our API is built on modern technologies and is easy to integrate with your existing systems.  Our API provides a secure and reliable platform for your e-commerce needs. You can trust us to keep your data safe and secure. We also provide a range of ...\n    \n    \n\n    :param string category:  defaults to Phones\n    '''\n    return await self._request_rapid_api('rapi_cartify_getproductbycategory',kwargs)\n        "
    },
    "rapi_browserobject_browserobject_api": {
        "api_name": "browserobject_api",
        "category": "Commerce",
        "tool_name": "browserobject",
        "code": "async def rapi_browserobject_browserobject_api(self,*args,**kwargs):\n    '''The BrowserObject Browser Detection Web Service allows instant detection of online visitor's Web Browser information.\r\n\r\nSign up for free license key at http://www.fraudlabs.com/freelicense.aspx?PackageID=8 which allows up to 90 queries a month.\n    \n    \n\n    :param string USERAGENTSTRING: The browser user agent string.\n    :param string LICENSE: API license key.\n    '''\n    return await self._request_rapid_api('rapi_browserobject_browserobject_api',kwargs)\n        "
    },
    "rapi_direct_wines_recommendations": {
        "api_name": "recommendations",
        "category": "Commerce",
        "tool_name": "direct_wines",
        "code": "async def rapi_direct_wines_recommendations(self,*args,**kwargs):\n    '''The API provides you a way to consume different API's around product, customer and account.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_direct_wines_recommendations',kwargs)\n        "
    },
    "rapi_direct_wines_cart": {
        "api_name": "cart",
        "category": "Commerce",
        "tool_name": "direct_wines",
        "code": "async def rapi_direct_wines_cart(self,*args,**kwargs):\n    '''The API provides you a way to consume different API's around product, customer and account.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_direct_wines_cart',kwargs)\n        "
    },
    "rapi_azaprime_check_holiday": {
        "api_name": "check_holiday",
        "category": "Commerce",
        "tool_name": "azaprime",
        "code": "async def rapi_azaprime_check_holiday(self,*args,**kwargs):\n    '''Date calculator\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_azaprime_check_holiday',kwargs)\n        "
    },
    "rapi_shoes_collections_get_a_specific_item": {
        "api_name": "get_a_specific_item",
        "category": "Commerce",
        "tool_name": "shoes_collections",
        "code": "async def rapi_shoes_collections_get_a_specific_item(self,*args,**kwargs):\n    '''This api provides you 30 random shoes ..\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shoes_collections_get_a_specific_item',kwargs)\n        "
    },
    "rapi_shoes_collections_get_all_the_shoes": {
        "api_name": "get_all_the_shoes",
        "category": "Commerce",
        "tool_name": "shoes_collections",
        "code": "async def rapi_shoes_collections_get_all_the_shoes(self,*args,**kwargs):\n    '''This api provides you 30 random shoes ..\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shoes_collections_get_all_the_shoes',kwargs)\n        "
    },
    "rapi_used_gpu_pricing_get_prices": {
        "api_name": "get_prices",
        "category": "Commerce",
        "tool_name": "used_gpu_pricing",
        "code": "async def rapi_used_gpu_pricing_get_prices(self,*args,**kwargs):\n    '''The API provides a simple endpoint that allows you to retrieve used prices of gpus on ebay. These prices are refreshed weekly automatically so you can have confidence these are up to date.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_used_gpu_pricing_get_prices',kwargs)\n        "
    },
    "rapi_tokopediaapi_get_product_detail": {
        "api_name": "get_product_detail",
        "category": "Commerce",
        "tool_name": "tokopediaapi",
        "code": "async def rapi_tokopediaapi_get_product_detail(self,*args,**kwargs):\n    '''Search & Product Details Api\n    \n    \n\n    :param string act:  defaults to detail\n    :param string slug:  defaults to /8jayafurniture/rak-lemari-sepatu-lunar-huga-425-pintu-kaca-sliding-kayu-jati-tua-white-wenge-non-rakit\n    :param boolean? _pretty:  defaults to true\n    '''\n    return await self._request_rapid_api('rapi_tokopediaapi_get_product_detail',kwargs)\n        "
    },
    "rapi_check_disposable_email_emailvalidation": {
        "api_name": "emailvalidation",
        "category": "Commerce",
        "tool_name": "check_disposable_email",
        "code": "async def rapi_check_disposable_email_emailvalidation(self,*args,**kwargs):\n    '''Easily check if a certain e-mail address is valid. Is it a valid domain? Is the e-mail a temporary/disposable e-mail? That\u2019s a common indicator of spamming/trolling, so now there\u2019s an API for you so you can easily block it!\n    \n    \n\n    :param string email: Email to be verified defaults to info@peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_check_disposable_email_emailvalidation',kwargs)\n        "
    },
    "rapi_check_disposable_email_whois": {
        "api_name": "whois",
        "category": "Commerce",
        "tool_name": "check_disposable_email",
        "code": "async def rapi_check_disposable_email_whois(self,*args,**kwargs):\n    '''Easily check if a certain e-mail address is valid. Is it a valid domain? Is the e-mail a temporary/disposable e-mail? That\u2019s a common indicator of spamming/trolling, so now there\u2019s an API for you so you can easily block it!\n    \n    \n\n    :param string domain: domain name of WhoIS to be searched defaults to peekdomain.com\n    '''\n    return await self._request_rapid_api('rapi_check_disposable_email_whois',kwargs)\n        "
    },
    "rapi_queuingappapi_testendpoint": {
        "api_name": "testendpoint",
        "category": "Commerce",
        "tool_name": "queuingappapi",
        "code": "async def rapi_queuingappapi_testendpoint(self,*args,**kwargs):\n    '''Developed for prototype queueing app\n    \n    \n\n    :param string testparam:  defaults to something\n    '''\n    return await self._request_rapid_api('rapi_queuingappapi_testendpoint',kwargs)\n        "
    },
    "rapi_face_compare_get_call": {
        "api_name": "get_call",
        "category": "Commerce",
        "tool_name": "face_compare",
        "code": "async def rapi_face_compare_get_call(self,*args,**kwargs):\n    '''This API compares and finds similarity between 2 face images. This is used to authenticate a person and detect an impersonation scenario.\n    \n    \n\n    :param string request_id:  defaults to 76d1c748-51ed-435b-bcd8-3d9c9d3eb68a\n    '''\n    return await self._request_rapid_api('rapi_face_compare_get_call',kwargs)\n        "
    },
    "rapi_aliexpress_true_api_hot_products": {
        "api_name": "hot_products",
        "category": "Commerce",
        "tool_name": "aliexpress_true_api",
        "code": "async def rapi_aliexpress_true_api_hot_products(self,*args,**kwargs):\n    '''Fetching data from AliExpress instantly using an powerful oracle server. If there will be high demand, I will set up multiple servers in different regions with a load balancer to ensure fast and reliable service. Rest assured, the service will be fast and reliable with no down times.\n    \n    \n\n    :param string search_value:  defaults to xiaomi\n    :param integer? max_price:  defaults to 10000\n    '''\n    return await self._request_rapid_api('rapi_aliexpress_true_api_hot_products',kwargs)\n        "
    },
    "rapi_aliexpress_true_api_product_by_id": {
        "api_name": "product_by_id",
        "category": "Commerce",
        "tool_name": "aliexpress_true_api",
        "code": "async def rapi_aliexpress_true_api_product_by_id(self,*args,**kwargs):\n    '''Fetching data from AliExpress instantly using an powerful oracle server. If there will be high demand, I will set up multiple servers in different regions with a load balancer to ensure fast and reliable service. Rest assured, the service will be fast and reliable with no down times.\n    \n    \n\n    :param integer product_id:  defaults to 32841070485\n    '''\n    return await self._request_rapid_api('rapi_aliexpress_true_api_product_by_id',kwargs)\n        "
    },
    "rapi_ebay_search_result_search_on_ebay": {
        "api_name": "search_on_ebay",
        "category": "Commerce",
        "tool_name": "ebay_search_result",
        "code": "async def rapi_ebay_search_result_search_on_ebay(self,*args,**kwargs):\n    '''API Returns necessary information from Ebay search page results, such as the price, title, shipping cost and direct url to the product \n    \n    \n\n    :param string searchQuery:  defaults to ipad\n    '''\n    return await self._request_rapid_api('rapi_ebay_search_result_search_on_ebay',kwargs)\n        "
    },
    "rapi_patreon_posts": {
        "api_name": "posts",
        "category": "Commerce",
        "tool_name": "patreon",
        "code": "async def rapi_patreon_posts(self,*args,**kwargs):\n    '''Search Creators and get their details and posts from Patreon (Unofficial)\n    \n    \n\n    :param integer creator_id: The `creator_id`can be obtained using the `/search` endpoint. defaults to 2416483\n    :param string? cursor: The cursor to the next page of results.\n    :param integer? amount: The `amount`of posts to be returned. Default is `10`. Max is `500`. Bigger amount results in higher response time. defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_patreon_posts',kwargs)\n        "
    },
    "rapi_patreon_details": {
        "api_name": "details",
        "category": "Commerce",
        "tool_name": "patreon",
        "code": "async def rapi_patreon_details(self,*args,**kwargs):\n    '''Search Creators and get their details and posts from Patreon (Unofficial)\n    \n    \n\n    :param integer creator_id: The `creator_id` can be obtained using the `/search` endpoint. defaults to 2416483\n    '''\n    return await self._request_rapid_api('rapi_patreon_details',kwargs)\n        "
    },
    "rapi_patreon_search_for_creators": {
        "api_name": "search_for_creators",
        "category": "Commerce",
        "tool_name": "patreon",
        "code": "async def rapi_patreon_search_for_creators(self,*args,**kwargs):\n    '''Search Creators and get their details and posts from Patreon (Unofficial)\n    \n    \n\n    :param string search_query: Search term used in Patreon search. defaults to adnr studios\n    '''\n    return await self._request_rapid_api('rapi_patreon_search_for_creators',kwargs)\n        "
    },
    "rapi_tokopedia_super_api_sortproductsmaster": {
        "api_name": "sortproductsmaster",
        "category": "Commerce",
        "tool_name": "tokopedia_super_api",
        "code": "async def rapi_tokopedia_super_api_sortproductsmaster(self,*args,**kwargs):\n    '''Unleash the Power of Tokopedia: Effortlessly Retrieve Shop and Product Information with Our API!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_tokopedia_super_api_sortproductsmaster',kwargs)\n        "
    },
    "rapi_shopeeapi_search_products": {
        "api_name": "search_products",
        "category": "Commerce",
        "tool_name": "shopeeapi",
        "code": "async def rapi_shopeeapi_search_products(self,*args,**kwargs):\n    '''Shopee product search api & product details api\n    \n    \n\n    :param string region: The region must one of [\\\\\\\"en\\\\\\\", \\\\\\\"sg\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"th\\\\\\\", \\\\\\\"vn\\\\\\\", \\\\\\\"ph\\\\\\\", \\\\\\\"tw\\\\\\\", \\\\\\\"br\\\\\\\", \\\\\\\"cl\\\\\\\", \\\\\\\"mx\\\\\\\", \\\\\\\"co\\\\\\\"] defaults to id\n    :param string q: A product search query defaults to Keripik Kentang\n    :param integer? p: Page number defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_shopeeapi_search_products',kwargs)\n        "
    },
    "rapi_shopeeapi_product_details": {
        "api_name": "product_details",
        "category": "Commerce",
        "tool_name": "shopeeapi",
        "code": "async def rapi_shopeeapi_product_details(self,*args,**kwargs):\n    '''Shopee product search api & product details api\n    \n    \n\n    :param string region: The region. must be one of [\\\\\\\"en\\\\\\\", \\\\\\\"sg\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"th\\\\\\\", \\\\\\\"vn\\\\\\\", \\\\\\\"ph\\\\\\\", \\\\\\\"tw\\\\\\\", \\\\\\\"br\\\\\\\", \\\\\\\"cl\\\\\\\", \\\\\\\"mx\\\\\\\", \\\\\\\"co\\\\\\\"] defaults to id\n    :param string path: Path parameters defaults to Min-order-2pcs-Kentang-Mustofa-100g-Kering-Kentang-Kripik-Kentang-Kentang-Garing-i.179967476.7583210867\n    '''\n    return await self._request_rapid_api('rapi_shopeeapi_product_details',kwargs)\n        "
    },
    "rapi_ai_resume_generator_generate_document_cover_letter": {
        "api_name": "generate_document_cover_letter",
        "category": "Jobs",
        "tool_name": "ai_resume_generator",
        "code": "async def rapi_ai_resume_generator_generate_document_cover_letter(self,*args,**kwargs):\n    '''Document Generation API that uses OpenAI to create an example resume when provided the following data: University Name, Degree, and a list of Skills\n    \n    \n\n    :param string? jobDescription:  defaults to Example Co. is looking for a Full Stack Web Developer to maintain and improve our custom web application. The solutions will require both frontend and backend skills. Our web application runs on a LEMP stack. LEMP stack experience is a bonus, but not required.\n    :param string? degree:  defaults to Information Systems\n    :param string? university:  defaults to Michigan State University\n    :param string? skills:  defaults to Networking, Web Development\n    :param string? jobTitle:  defaults to Full Stack Web Developer\n    '''\n    return await self._request_rapid_api('rapi_ai_resume_generator_generate_document_cover_letter',kwargs)\n        "
    },
    "rapi_ai_resume_generator_generate_document_resume": {
        "api_name": "generate_document_resume",
        "category": "Jobs",
        "tool_name": "ai_resume_generator",
        "code": "async def rapi_ai_resume_generator_generate_document_resume(self,*args,**kwargs):\n    '''Document Generation API that uses OpenAI to create an example resume when provided the following data: University Name, Degree, and a list of Skills\n    \n    \n\n    :param string? degree:  defaults to Information Systems\n    :param string? skills:  defaults to Networking, Web Development\n    :param string? university:  defaults to Michigan State University\n    '''\n    return await self._request_rapid_api('rapi_ai_resume_generator_generate_document_resume',kwargs)\n        "
    },
    "rapi_remote_jobs_api_get_the_latest_remote_jobs": {
        "api_name": "get_the_latest_remote_jobs",
        "category": "Jobs",
        "tool_name": "remote_jobs_api",
        "code": "async def rapi_remote_jobs_api_get_the_latest_remote_jobs(self,*args,**kwargs):\n    '''Get a list of remote jobs from different resources: weworkremotely, remoteok, GitHub, StackOverflow, Twitch, Mailchimp, Figma...\n    \n    \n\n    :param string? company:  defaults to shopify\n    :param ENUM? category: \n    '''\n    return await self._request_rapid_api('rapi_remote_jobs_api_get_the_latest_remote_jobs',kwargs)\n        "
    },
    "rapi_remote_jobs_api_pagination_for_remote_jobs": {
        "api_name": "pagination_for_remote_jobs",
        "category": "Jobs",
        "tool_name": "remote_jobs_api",
        "code": "async def rapi_remote_jobs_api_pagination_for_remote_jobs(self,*args,**kwargs):\n    '''Get a list of remote jobs from different resources: weworkremotely, remoteok, GitHub, StackOverflow, Twitch, Mailchimp, Figma...\n    \n    \n\n    :param integer pageId:  defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_remote_jobs_api_pagination_for_remote_jobs',kwargs)\n        "
    },
    "rapi_indeed_jobs_api_finland_searchjobs": {
        "api_name": "searchjobs",
        "category": "Jobs",
        "tool_name": "indeed_jobs_api_finland",
        "code": "async def rapi_indeed_jobs_api_finland_searchjobs(self,*args,**kwargs):\n    '''Indeed Jobs Search API - Finland\nGet the Jobs List as JSON by giving Keyword, Location (Finland Only) and offset value.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string location:  defaults to Helsinki\n    :param string keyword:  defaults to python developer\n    :param integer offset:  defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_indeed_jobs_api_finland_searchjobs',kwargs)\n        "
    },
    "rapi_hapihub_get_fixtures": {
        "api_name": "get_fixtures",
        "category": "Medical",
        "tool_name": "hapihub",
        "code": "async def rapi_hapihub_get_fixtures(self,*args,**kwargs):\n    '''Healthcare infrastructure for compliance, interoperability, & building applications\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hapihub_get_fixtures',kwargs)\n        "
    },
    "rapi_hapihub_version_metadata": {
        "api_name": "version_metadata",
        "category": "Medical",
        "tool_name": "hapihub",
        "code": "async def rapi_hapihub_version_metadata(self,*args,**kwargs):\n    '''Healthcare infrastructure for compliance, interoperability, & building applications\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hapihub_version_metadata',kwargs)\n        "
    },
    "rapi_hapihub_healthcheck": {
        "api_name": "healthcheck",
        "category": "Medical",
        "tool_name": "hapihub",
        "code": "async def rapi_hapihub_healthcheck(self,*args,**kwargs):\n    '''Healthcare infrastructure for compliance, interoperability, & building applications\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hapihub_healthcheck',kwargs)\n        "
    },
    "rapi_konviere_drugsapi_get_drug_info_by_drug_name_route": {
        "api_name": "get_drug_info_by_drug_name_route",
        "category": "Medical",
        "tool_name": "konviere_drugsapi",
        "code": "async def rapi_konviere_drugsapi_get_drug_info_by_drug_name_route(self,*args,**kwargs):\n    '''Konviere Drugs API serves public FDA data about National Drug Code (NDC) and Adverse Event Reporting System (FAERS)\n    \n    \n\n    :param string drgRte: \n    :param string drgNm: \n    :param string api_key: \n    '''\n    return await self._request_rapid_api('rapi_konviere_drugsapi_get_drug_info_by_drug_name_route',kwargs)\n        "
    },
    "rapi_konviere_drugsapi_get_adverse_event_info_by_reaction": {
        "api_name": "get_adverse_event_info_by_reaction",
        "category": "Medical",
        "tool_name": "konviere_drugsapi",
        "code": "async def rapi_konviere_drugsapi_get_adverse_event_info_by_reaction(self,*args,**kwargs):\n    '''Konviere Drugs API serves public FDA data about National Drug Code (NDC) and Adverse Event Reporting System (FAERS)\n    \n    \n\n    :param string reaction: \n    :param string api_key: \n    '''\n    return await self._request_rapid_api('rapi_konviere_drugsapi_get_adverse_event_info_by_reaction',kwargs)\n        "
    },
    "rapi_konviere_drugsapi_get_adverse_event_info_by_reaction_sex": {
        "api_name": "get_adverse_event_info_by_reaction_sex",
        "category": "Medical",
        "tool_name": "konviere_drugsapi",
        "code": "async def rapi_konviere_drugsapi_get_adverse_event_info_by_reaction_sex(self,*args,**kwargs):\n    '''Konviere Drugs API serves public FDA data about National Drug Code (NDC) and Adverse Event Reporting System (FAERS)\n    \n    \n\n    :param integer sex: \n    :param string api_key: \n    :param string reaction: \n    '''\n    return await self._request_rapid_api('rapi_konviere_drugsapi_get_adverse_event_info_by_reaction_sex',kwargs)\n        "
    },
    "rapi_endlessmedicalapi_getfeatures": {
        "api_name": "getfeatures",
        "category": "Medical",
        "tool_name": "endlessmedicalapi",
        "code": "async def rapi_endlessmedicalapi_getfeatures(self,*args,**kwargs):\n    '''From patient's symptoms and results to diagnosis (COVID-19  included) - free to use in 2020. It not only has symptoms, but also allows you to enter a detailed review of systems, physical examination findings and testing (i.e. blood work, chest x-ray) results. It has standard functions like \u201cnext best step\u201d in diagnosis, etc\u2026We are looking for beta testers, for whom, we prepared Goodies, like lifetime free access to the key of API functionalities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_endlessmedicalapi_getfeatures',kwargs)\n        "
    },
    "rapi_endlessmedicalapi_getoutcomes": {
        "api_name": "getoutcomes",
        "category": "Medical",
        "tool_name": "endlessmedicalapi",
        "code": "async def rapi_endlessmedicalapi_getoutcomes(self,*args,**kwargs):\n    '''From patient's symptoms and results to diagnosis (COVID-19  included) - free to use in 2020. It not only has symptoms, but also allows you to enter a detailed review of systems, physical examination findings and testing (i.e. blood work, chest x-ray) results. It has standard functions like \u201cnext best step\u201d in diagnosis, etc\u2026We are looking for beta testers, for whom, we prepared Goodies, like lifetime free access to the key of API functionalities.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_endlessmedicalapi_getoutcomes',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getcollectionvalues": {
        "api_name": "getcollectionvalues",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getcollectionvalues(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getcollectionvalues',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getmodalityvalues": {
        "api_name": "getmodalityvalues",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getmodalityvalues(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? Collection: A label used to name a set of images collected for a specific trial or other reason.  Assigned during the process of curating the data.\n    :param string? BodyPartExamined: Entered on a per collection basis using relevant SNOMED terms. (DICOM Tag  0018x0015)\n    :param string? Modality: Standard DICOM definition (DICOM Tag 0008x0060)\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getmodalityvalues',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getbodypartvalues": {
        "api_name": "getbodypartvalues",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getbodypartvalues(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    :param string? Collection: A label used to name a set of images collected for a specific trial or other reason.  Assigned during the process of curating the data.\n    :param string? BodyPartExamined: Standard DICOM definition (0018x0015)\n    :param string? Modality: Standard DICOM definition (0008x0060)\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getbodypartvalues',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getseries": {
        "api_name": "getseries",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getseries(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    :param string? Collection: A label used to name a set of images collected for a specific trial or other reason.  Assigned during the process of curating the data.\n    :param string? PatientID: Has been de-identified as part of submission process (DICOM Tag  0010x0020)\n    :param string? StudyInstanceUID: Has been de-identified as part of submission process. (DICOM Tag 0020x000D)\n    :param string? Modality: Standard DICOM definition (0008x0060)\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getseries',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getimage": {
        "api_name": "getimage",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getimage(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string SeriesInstanceUID: Has been de-identified as part of submission process. (DICOM Tag 0020x000E)\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getimage',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getpatient": {
        "api_name": "getpatient",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getpatient(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    :param string? Collection: A label used to name a set of images collected for a specific trial or other reason.  Assigned during the process of curating the data.\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getpatient',kwargs)\n        "
    },
    "rapi_the_cancer_imaging_archive_getmanufacturervalues": {
        "api_name": "getmanufacturervalues",
        "category": "Medical",
        "tool_name": "the_cancer_imaging_archive",
        "code": "async def rapi_the_cancer_imaging_archive_getmanufacturervalues(self,*args,**kwargs):\n    '''NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA\n    \n    \n\n    :param string? format: Specify output type. Allowed values CSV/HTML/XML/JSON\n    :param string? Collection: A label used to name a set of images collected for a specific trial or other reason.  Assigned during the process of curating the data.\n    :param string? BodyPartExamined: Standard DICOM definition (0018x0015)\n    :param string? Modality: Standard DICOM definition (0008x0060)\n    '''\n    return await self._request_rapid_api('rapi_the_cancer_imaging_archive_getmanufacturervalues',kwargs)\n        "
    },
    "rapi_covid_19_by_api_ninjas_v1_covid19": {
        "api_name": "v1_covid19",
        "category": "Medical",
        "tool_name": "covid_19_by_api_ninjas",
        "code": "async def rapi_covid_19_by_api_ninjas_v1_covid19(self,*args,**kwargs):\n    '''Covid-19 case count and death data for every country in the world. See more info at https://api-ninjas.com/api/covid19.\n    \n    \n\n    :param string? type: type of data to retrieve. Must be either cases or deaths. If not set, cases will be used by default.\n    :param string? country: country name (case insensitive).\n    :param string? date: date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g. 2022-01-01) defaults to 2022-01-01\n    :param string? county: county name for US states (case insensitive). For United States data only. Must be used in conjunction with country (United States) and region (e.g. California).\n    :param string? region: administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with country. If not set, countries with data broken down by administrative regions will return separate data for each region.\n    '''\n    return await self._request_rapid_api('rapi_covid_19_by_api_ninjas_v1_covid19',kwargs)\n        "
    },
    "rapi_shazam_api_charts_get_top_songs_in_country": {
        "api_name": "charts_get_top_songs_in_country",
        "category": "Music",
        "tool_name": "shazam_api",
        "code": "async def rapi_shazam_api_charts_get_top_songs_in_country(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application \n    \n    \n\n    :param string country_code: DZ,BY,CI,SN,TN,AU,AT,AZ,AR,BE,BG,BR,GB,HU,VE,VN,GH,DE,GR,DK,EG,ZM,IL,IN,ID,IE,ES,IT,KZ,CM,CA,KE,CN,CO,CR,MY,MA,MX,MZ,NG,NL,NZ,NO,AE,PE,PL,PT,RU,RO,SA,SG,US,TH,TZ,TR,UG,UZ,UA,UY,PH,FI,FR,HR,CZ,CL,CH,SE,ZA,KR,JP defaults to US\n    '''\n    return await self._request_rapid_api('rapi_shazam_api_charts_get_top_songs_in_country',kwargs)\n        "
    },
    "rapi_shazam_api_songs_list_recommendations": {
        "api_name": "songs_list_recommendations",
        "category": "Music",
        "tool_name": "shazam_api",
        "code": "async def rapi_shazam_api_songs_list_recommendations(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application \n    \n    \n\n    :param string id: The value of 'key' field returned in \u2026/search endpoint\n defaults to 628712770\n    '''\n    return await self._request_rapid_api('rapi_shazam_api_songs_list_recommendations',kwargs)\n        "
    },
    "rapi_billboard_api_top_artists_female": {
        "api_name": "top_artists_female",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_top_artists_female(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_top_artists_female',kwargs)\n        "
    },
    "rapi_billboard_api_billboard_200_albums": {
        "api_name": "billboard_200_albums",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_billboard_200_albums(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_billboard_200_albums',kwargs)\n        "
    },
    "rapi_billboard_api_top_labels": {
        "api_name": "top_labels",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_top_labels(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_top_labels',kwargs)\n        "
    },
    "rapi_billboard_api_top_artists_duo_group": {
        "api_name": "top_artists_duo_group",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_top_artists_duo_group(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_top_artists_duo_group',kwargs)\n        "
    },
    "rapi_billboard_api_billboard_global_200_year_end": {
        "api_name": "billboard_global_200_year_end",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_billboard_global_200_year_end(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_billboard_global_200_year_end',kwargs)\n        "
    },
    "rapi_billboard_api_top_artists": {
        "api_name": "top_artists",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_top_artists(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_top_artists',kwargs)\n        "
    },
    "rapi_billboard_api_hot_100_songs": {
        "api_name": "hot_100_songs",
        "category": "Music",
        "tool_name": "billboard_api",
        "code": "async def rapi_billboard_api_hot_100_songs(self,*args,**kwargs):\n    '''Providing the Billboard chart rankings and information on titles, artists, lyrics, images, and more. \n    \n    \n\n    :param string? year: date format(YYYY) defaults to 2022\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_hot_100_songs',kwargs)\n        "
    },
    "rapi_musicdata_api_youtube_toplikes": {
        "api_name": "youtube_toplikes",
        "category": "Music",
        "tool_name": "musicdata_api",
        "code": "async def rapi_musicdata_api_youtube_toplikes(self,*args,**kwargs):\n    '''Data for Youtube, Spotify music videos, tracks, albums, artist & more\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_musicdata_api_youtube_toplikes',kwargs)\n        "
    },
    "rapi_musicdata_api_youtube_trending_overall": {
        "api_name": "youtube_trending_overall",
        "category": "Music",
        "tool_name": "musicdata_api",
        "code": "async def rapi_musicdata_api_youtube_trending_overall(self,*args,**kwargs):\n    '''Data for Youtube, Spotify music videos, tracks, albums, artist & more\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_musicdata_api_youtube_trending_overall',kwargs)\n        "
    },
    "rapi_musicdata_api_youtube_24h": {
        "api_name": "youtube_24h",
        "category": "Music",
        "tool_name": "musicdata_api",
        "code": "async def rapi_musicdata_api_youtube_24h(self,*args,**kwargs):\n    '''Data for Youtube, Spotify music videos, tracks, albums, artist & more\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_musicdata_api_youtube_24h',kwargs)\n        "
    },
    "rapi_musiclinkssapi_search_by_url": {
        "api_name": "search_by_url",
        "category": "Music",
        "tool_name": "musiclinkssapi",
        "code": "async def rapi_musiclinkssapi_search_by_url(self,*args,**kwargs):\n    '''Get music links of song or artist.\n    \n    \n\n    :param string spotify_url:  defaults to https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\n    '''\n    return await self._request_rapid_api('rapi_musiclinkssapi_search_by_url',kwargs)\n        "
    },
    "rapi_musiclinkssapi_get_artist_s_albums": {
        "api_name": "get_artist_s_albums",
        "category": "Music",
        "tool_name": "musiclinkssapi",
        "code": "async def rapi_musiclinkssapi_get_artist_s_albums(self,*args,**kwargs):\n    '''Get music links of song or artist.\n    \n    \n\n    :param string spotify_url:  defaults to https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\n    '''\n    return await self._request_rapid_api('rapi_musiclinkssapi_get_artist_s_albums',kwargs)\n        "
    },
    "rapi_musiclinkssapi_search_by_query": {
        "api_name": "search_by_query",
        "category": "Music",
        "tool_name": "musiclinkssapi",
        "code": "async def rapi_musiclinkssapi_search_by_query(self,*args,**kwargs):\n    '''Get music links of song or artist.\n    \n    \n\n    :param string q:  defaults to Ennio Morricone\n    :param string type:  defaults to artist\n    '''\n    return await self._request_rapid_api('rapi_musiclinkssapi_search_by_query',kwargs)\n        "
    },
    "rapi_spotify_v3_track_credits": {
        "api_name": "track_credits",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_track_credits(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Track ID defaults to 4WNcduiCmDNfmTEz7JvmLv\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_track_credits',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_related": {
        "api_name": "artist_related",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_related(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_related',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_discovered_on": {
        "api_name": "artist_discovered_on",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_discovered_on(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_discovered_on',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_appears_on": {
        "api_name": "artist_appears_on",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_appears_on(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_appears_on',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_singles": {
        "api_name": "artist_singles",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_singles(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_singles',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_albums": {
        "api_name": "artist_albums",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_albums(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    :param integer? offset:  defaults to 0\n    :param integer? limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_albums',kwargs)\n        "
    },
    "rapi_spotify_v3_artist_discography_overview": {
        "api_name": "artist_discography_overview",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_artist_discography_overview(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_artist_discography_overview',kwargs)\n        "
    },
    "rapi_spotify_v3_get_artists": {
        "api_name": "get_artists",
        "category": "Music",
        "tool_name": "spotify_v3",
        "code": "async def rapi_spotify_v3_get_artists(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string ids: Artist IDs (you can use commas) defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_v3_get_artists',kwargs)\n        "
    },
    "rapi_apple_music_album": {
        "api_name": "album",
        "category": "Music",
        "tool_name": "apple_music",
        "code": "async def rapi_apple_music_album(self,*args,**kwargs):\n    '''Fetches songs & album data from Apple Music\n    \n    \n\n    :param string url:  defaults to https://music.apple.com/us/album/m-s-dhoni-the-untold-story-original-motion-picture/1158884319\n    '''\n    return await self._request_rapid_api('rapi_apple_music_album',kwargs)\n        "
    },
    "rapi_apple_music_single_track": {
        "api_name": "single_track",
        "category": "Music",
        "tool_name": "apple_music",
        "code": "async def rapi_apple_music_single_track(self,*args,**kwargs):\n    '''Fetches songs & album data from Apple Music\n    \n    \n\n    :param string url:  defaults to https://music.apple.com/us/album/penolong-yang-setia/1546605591?i=1546605594\n    '''\n    return await self._request_rapid_api('rapi_apple_music_single_track',kwargs)\n        "
    },
    "rapi_halsey_lyric_snippets_song_by_id": {
        "api_name": "song_by_id",
        "category": "Music",
        "tool_name": "halsey_lyric_snippets",
        "code": "async def rapi_halsey_lyric_snippets_song_by_id(self,*args,**kwargs):\n    '''An API that allows users to view short excerpts of Halsey's songs.\n    \n    \n\n    :param string id:  defaults to 63b7b10efac0fba0d5e1d187\n    '''\n    return await self._request_rapid_api('rapi_halsey_lyric_snippets_song_by_id',kwargs)\n        "
    },
    "rapi_halsey_lyric_snippets_random_song_out_of_artist": {
        "api_name": "random_song_out_of_artist",
        "category": "Music",
        "tool_name": "halsey_lyric_snippets",
        "code": "async def rapi_halsey_lyric_snippets_random_song_out_of_artist(self,*args,**kwargs):\n    '''An API that allows users to view short excerpts of Halsey's songs.\n    \n    \n\n    :param string artist:  defaults to Halsey\n    '''\n    return await self._request_rapid_api('rapi_halsey_lyric_snippets_random_song_out_of_artist',kwargs)\n        "
    },
    "rapi_halsey_lyric_snippets_all_songs_from_artist": {
        "api_name": "all_songs_from_artist",
        "category": "Music",
        "tool_name": "halsey_lyric_snippets",
        "code": "async def rapi_halsey_lyric_snippets_all_songs_from_artist(self,*args,**kwargs):\n    '''An API that allows users to view short excerpts of Halsey's songs.\n    \n    \n\n    :param string artist:  defaults to Halsey\n    '''\n    return await self._request_rapid_api('rapi_halsey_lyric_snippets_all_songs_from_artist',kwargs)\n        "
    },
    "rapi_halsey_lyric_snippets_all_albums_from_artist": {
        "api_name": "all_albums_from_artist",
        "category": "Music",
        "tool_name": "halsey_lyric_snippets",
        "code": "async def rapi_halsey_lyric_snippets_all_albums_from_artist(self,*args,**kwargs):\n    '''An API that allows users to view short excerpts of Halsey's songs.\n    \n    \n\n    :param string artist:  defaults to Halsey\n    '''\n    return await self._request_rapid_api('rapi_halsey_lyric_snippets_all_albums_from_artist',kwargs)\n        "
    },
    "rapi_l_yrics_main_endpoint": {
        "api_name": "main_endpoint",
        "category": "Music",
        "tool_name": "l_yrics",
        "code": "async def rapi_l_yrics_main_endpoint(self,*args,**kwargs):\n    '''Have you ever wished to read the words of a music you heard? Give us the name and let us handle the rest.\n    \n    \n\n    :param string song:  defaults to Ashes\n    :param string? artist:  defaults to Stellar\n    '''\n    return await self._request_rapid_api('rapi_l_yrics_main_endpoint',kwargs)\n        "
    },
    "rapi_kotak7_artis_info": {
        "api_name": "artis_info",
        "category": "Music",
        "tool_name": "kotak7",
        "code": "async def rapi_kotak7_artis_info(self,*args,**kwargs):\n    '''Api Musik Kotak7\n    \n    \n\n    :param integer num:  defaults to 6\n    :param string lang:  defaults to id\n    :param integer index:  defaults to 0\n    :param string country:  defaults to id\n    :param string id:  defaults to K0wfT9L1dhOcY3%2BWa%2BQY%2BA%3D%3D\n    '''\n    return await self._request_rapid_api('rapi_kotak7_artis_info',kwargs)\n        "
    },
    "rapi_kotak7_artis": {
        "api_name": "artis",
        "category": "Music",
        "tool_name": "kotak7",
        "code": "async def rapi_kotak7_artis(self,*args,**kwargs):\n    '''Api Musik Kotak7\n    \n    \n\n    :param integer index:  defaults to 0\n    :param string lang:  defaults to id\n    :param string country:  defaults to id\n    :param integer num:  defaults to 30\n    :param integer id:  defaults to 175\n    '''\n    return await self._request_rapid_api('rapi_kotak7_artis',kwargs)\n        "
    },
    "rapi_genius_song_lyrics_song_comments": {
        "api_name": "song_comments",
        "category": "Music",
        "tool_name": "genius_song_lyrics",
        "code": "async def rapi_genius_song_lyrics_song_comments(self,*args,**kwargs):\n    '''Genius - Song Lyrics, Artists, Albums, Knowledge & More API\n    \n    \n\n    :param string id: Song ID defaults to 2396871\n    :param string? text_format: Format for text bodies related to the document. One or more of `dom`, `plain`, `markdown`, and `html`, separated by commas (defaults to html).\n    :param integer? per_page: Number of results to return per request defaults to 20\n    :param integer? page: Paginated offset, (e.g., per_page=5&page=3 returns comments 11\u201315) defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_genius_song_lyrics_song_comments',kwargs)\n        "
    },
    "rapi_youtube_music_api_detailed_get_album": {
        "api_name": "get_album",
        "category": "Music",
        "tool_name": "youtube_music_api_detailed",
        "code": "async def rapi_youtube_music_api_detailed_get_album(self,*args,**kwargs):\n    '''Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.\n    \n    \n\n    :param string browse_id: browseId \u2013 browseId of the album, for example returned by **search()** defaults to MPREb_TXkYGyz3iEg\n    '''\n    return await self._request_rapid_api('rapi_youtube_music_api_detailed_get_album',kwargs)\n        "
    },
    "rapi_youtube_music_api_detailed_get_artist": {
        "api_name": "get_artist",
        "category": "Music",
        "tool_name": "youtube_music_api_detailed",
        "code": "async def rapi_youtube_music_api_detailed_get_artist(self,*args,**kwargs):\n    '''Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.\n    \n    \n\n    :param string? channel_id:  defaults to UCedvOgsKFzcK3hA5taf3KoQ\n    '''\n    return await self._request_rapid_api('rapi_youtube_music_api_detailed_get_artist',kwargs)\n        "
    },
    "rapi_miza_song_download_convert": {
        "api_name": "song_download_convert",
        "category": "Music",
        "tool_name": "miza",
        "code": "async def rapi_miza_song_download_convert(self,*args,**kwargs):\n    '''A multipurpose API that includes many image, video, and audio operations. Please see https://ko-fi.com/mizabot if you'd like premium features on the Discord bot itself!\n    \n    \n\n    :param string download:  defaults to https://www.youtube.com/watch?v=dQw4w9WgXcQ\n    :param string? fmt:  defaults to opus\n    '''\n    return await self._request_rapid_api('rapi_miza_song_download_convert',kwargs)\n        "
    },
    "rapi_latest_spotify_downloader_fetch_track_details": {
        "api_name": "fetch_track_details",
        "category": "Music",
        "tool_name": "latest_spotify_downloader",
        "code": "async def rapi_latest_spotify_downloader_fetch_track_details(self,*args,**kwargs):\n    '''Latest Spotify Downloader \u2014 Contact Us at spotify-support@logicsquares.com\n    \n    \n\n    :param string track_id:  defaults to 2gAKyzcfFIlMYdJ2b836At\n    '''\n    return await self._request_rapid_api('rapi_latest_spotify_downloader_fetch_track_details',kwargs)\n        "
    },
    "rapi_getsongs_get_top_songs": {
        "api_name": "get_top_songs",
        "category": "Music",
        "tool_name": "getsongs",
        "code": "async def rapi_getsongs_get_top_songs(self,*args,**kwargs):\n    '''top 10 Songs\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_getsongs_get_top_songs',kwargs)\n        "
    },
    "rapi_shazam_albums_get_related_artist": {
        "api_name": "albums_get_related_artist",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_albums_get_related_artist(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    :param string id: The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint defaults to 850569437\n    :param string? l: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_shazam_albums_get_related_artist',kwargs)\n        "
    },
    "rapi_shazam_albums_get_details": {
        "api_name": "albums_get_details",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_albums_get_details(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    :param string id: The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint defaults to 850576570\n    :param string? l: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_shazam_albums_get_details',kwargs)\n        "
    },
    "rapi_shazam_shazam_songs_list_similarities": {
        "api_name": "shazam_songs_list_similarities",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_shazam_songs_list_similarities(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    :param string id: The value of 'related-tracks->id' field returned in .../shazam-songs/get-details endpoint defaults to track-similarities-id-424767377\n    :param string? locale: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_shazam_shazam_songs_list_similarities',kwargs)\n        "
    },
    "rapi_shazam_charts_list": {
        "api_name": "charts_list",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_charts_list(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shazam_charts_list',kwargs)\n        "
    },
    "rapi_shazam_search": {
        "api_name": "search",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_search(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    :param string term: Full name of songs or artists defaults to kiss the rain\n    :param string? locale: The language code defaults to en-US\n    :param integer? limit: For paging purpose, maximum is fixed at 5 items per response defaults to 5\n    :param integer? offset: For paging purpose defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_shazam_search',kwargs)\n        "
    },
    "rapi_shazam_charts_track": {
        "api_name": "charts_track",
        "category": "Music",
        "tool_name": "shazam",
        "code": "async def rapi_shazam_charts_track(self,*args,**kwargs):\n    '''Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com\n    \n    \n\n    :param string? listId: The value of listId field returned in .../charts/list endpoint\n    :param integer? pageSize: Used for paging purpose, 20 items per response is maximum. defaults to 20\n    :param integer? startFrom: Used for paging purpose. defaults to 0\n    :param string? locale: The language code defaults to en-US\n    '''\n    return await self._request_rapid_api('rapi_shazam_charts_track',kwargs)\n        "
    },
    "rapi_spotify_get_tracks": {
        "api_name": "get_tracks",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_get_tracks(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string ids: Track IDs (you can use commas) defaults to 4WNcduiCmDNfmTEz7JvmLv\n    '''\n    return await self._request_rapid_api('rapi_spotify_get_tracks',kwargs)\n        "
    },
    "rapi_spotify_artist_related": {
        "api_name": "artist_related",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_related(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_related',kwargs)\n        "
    },
    "rapi_spotify_artist_featuring": {
        "api_name": "artist_featuring",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_featuring(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_featuring',kwargs)\n        "
    },
    "rapi_spotify_artist_discovered_on": {
        "api_name": "artist_discovered_on",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_discovered_on(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_discovered_on',kwargs)\n        "
    },
    "rapi_spotify_artist_appears_on": {
        "api_name": "artist_appears_on",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_appears_on(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_appears_on',kwargs)\n        "
    },
    "rapi_spotify_artist_singles": {
        "api_name": "artist_singles",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_singles(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    :param string? offset:  defaults to 0\n    :param string? limit:  defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_singles',kwargs)\n        "
    },
    "rapi_spotify_artist_albums": {
        "api_name": "artist_albums",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_albums(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    :param integer? offset:  defaults to 0\n    :param integer? limit:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_albums',kwargs)\n        "
    },
    "rapi_spotify_artist_discography_overview": {
        "api_name": "artist_discography_overview",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_discography_overview(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_discography_overview',kwargs)\n        "
    },
    "rapi_spotify_artist_overview": {
        "api_name": "artist_overview",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_artist_overview(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string id: Artist ID defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_artist_overview',kwargs)\n        "
    },
    "rapi_spotify_get_artists": {
        "api_name": "get_artists",
        "category": "Music",
        "tool_name": "spotify",
        "code": "async def rapi_spotify_get_artists(self,*args,**kwargs):\n    '''Spotify Data API for Millions of songs & podcasts, artists, albums, playlists and more.\n    \n    \n\n    :param string ids: Artist IDs (you can use commas) defaults to 2w9zwq3AktTeYYMuhMjju8\n    '''\n    return await self._request_rapid_api('rapi_spotify_get_artists',kwargs)\n        "
    },
    "rapi_billboard_api_v2_independent_albums": {
        "api_name": "independent_albums",
        "category": "Music",
        "tool_name": "billboard_api_v2",
        "code": "async def rapi_billboard_api_v2_independent_albums(self,*args,**kwargs):\n    '''Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....\n    \n    \n\n    :param DATE (YYYY-MM-DD)? week:  defaults to 2022-10-08\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_v2_independent_albums',kwargs)\n        "
    },
    "rapi_billboard_api_v2_catalog_albums": {
        "api_name": "catalog_albums",
        "category": "Music",
        "tool_name": "billboard_api_v2",
        "code": "async def rapi_billboard_api_v2_catalog_albums(self,*args,**kwargs):\n    '''Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....\n    \n    \n\n    :param DATE (YYYY-MM-DD)? week:  defaults to 2022-10-08\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_v2_catalog_albums',kwargs)\n        "
    },
    "rapi_billboard_api_v2_artist_100": {
        "api_name": "artist_100",
        "category": "Music",
        "tool_name": "billboard_api_v2",
        "code": "async def rapi_billboard_api_v2_artist_100(self,*args,**kwargs):\n    '''Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....\n    \n    \n\n    :param DATE (YYYY-MM-DD)? week:  defaults to 2022-10-08\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_v2_artist_100',kwargs)\n        "
    },
    "rapi_billboard_api_v2_billboard_hot_100": {
        "api_name": "billboard_hot_100",
        "category": "Music",
        "tool_name": "billboard_api_v2",
        "code": "async def rapi_billboard_api_v2_billboard_hot_100(self,*args,**kwargs):\n    '''Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....\n    \n    \n\n    :param DATE (YYYY-MM-DD)? week:  defaults to 2022-10-08\n    '''\n    return await self._request_rapid_api('rapi_billboard_api_v2_billboard_hot_100',kwargs)\n        "
    },
    "rapi_billboard_billboard_global_excl_us": {
        "api_name": "billboard_global_excl_us",
        "category": "Music",
        "tool_name": "billboard",
        "code": "async def rapi_billboard_billboard_global_excl_us(self,*args,**kwargs):\n    '''Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more\n    \n    \n\n    :param DATE (YYYY-MM-DD) date: Set the date for which you want to get a chart. defaults to 2020-09-19\n    '''\n    return await self._request_rapid_api('rapi_billboard_billboard_global_excl_us',kwargs)\n        "
    },
    "rapi_billboard_hot_100": {
        "api_name": "hot_100",
        "category": "Music",
        "tool_name": "billboard",
        "code": "async def rapi_billboard_hot_100(self,*args,**kwargs):\n    '''Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more\n    \n    \n\n    :param DATE (YYYY-MM-DD) date: Set the date for which you want to get a chart. defaults to 2020-03-18\n    '''\n    return await self._request_rapid_api('rapi_billboard_hot_100',kwargs)\n        "
    },
    "rapi_billboard_billboard_200": {
        "api_name": "billboard_200",
        "category": "Music",
        "tool_name": "billboard",
        "code": "async def rapi_billboard_billboard_200(self,*args,**kwargs):\n    '''Billboard charts: Hot 100, Billboard 200, Billboard 200 Global, Artist 100 and more\n    \n    \n\n    :param DATE (YYYY-MM-DD) date: Set the date for which you want to get a chart. defaults to 2020-03-18\n    '''\n    return await self._request_rapid_api('rapi_billboard_billboard_200',kwargs)\n        "
    },
    "rapi_spotify_v2_artist_albums": {
        "api_name": "artist_albums",
        "category": "Music",
        "tool_name": "spotify_v2",
        "code": "async def rapi_spotify_v2_artist_albums(self,*args,**kwargs):\n    '''Get Spotify Tracks & Playlist Details\n    \n    \n\n    :param string artist_id:  defaults to 52wBYviD0Fnactl1q7ibdT\n    '''\n    return await self._request_rapid_api('rapi_spotify_v2_artist_albums',kwargs)\n        "
    },
    "rapi_spotify_v2_artist_details_single": {
        "api_name": "artist_details_single",
        "category": "Music",
        "tool_name": "spotify_v2",
        "code": "async def rapi_spotify_v2_artist_details_single(self,*args,**kwargs):\n    '''Get Spotify Tracks & Playlist Details\n    \n    \n\n    :param string artist_id:  defaults to 52wBYviD0Fnactl1q7ibdT\n    '''\n    return await self._request_rapid_api('rapi_spotify_v2_artist_details_single',kwargs)\n        "
    },
    "rapi_spotify_v2_user_details": {
        "api_name": "user_details",
        "category": "Music",
        "tool_name": "spotify_v2",
        "code": "async def rapi_spotify_v2_user_details(self,*args,**kwargs):\n    '''Get Spotify Tracks & Playlist Details\n    \n    \n\n    :param string user_id:  defaults to cruilla\n    '''\n    return await self._request_rapid_api('rapi_spotify_v2_user_details',kwargs)\n        "
    },
    "rapi_spotify_v2_get_user_playlists": {
        "api_name": "get_user_playlists",
        "category": "Music",
        "tool_name": "spotify_v2",
        "code": "async def rapi_spotify_v2_get_user_playlists(self,*args,**kwargs):\n    '''Get Spotify Tracks & Playlist Details\n    \n    \n\n    :param string user_id:  defaults to cruilla\n    '''\n    return await self._request_rapid_api('rapi_spotify_v2_get_user_playlists',kwargs)\n        "
    },
    "rapi_spotify_v2_new_releases": {
        "api_name": "new_releases",
        "category": "Music",
        "tool_name": "spotify_v2",
        "code": "async def rapi_spotify_v2_new_releases(self,*args,**kwargs):\n    '''Get Spotify Tracks & Playlist Details\n    \n    \n\n    :param string country: Enter country code like: US, CA, SE, IN, UK... defaults to us\n    '''\n    return await self._request_rapid_api('rapi_spotify_v2_new_releases',kwargs)\n        "
    },
    "rapi_testing_options_opera_list": {
        "api_name": "opera_list",
        "category": "Music",
        "tool_name": "testing_options",
        "code": "async def rapi_testing_options_opera_list(self,*args,**kwargs):\n    '''This is my test API\n    \n    \n\n    :param string? genre__name_hy__in: Multiple values may be separated by commas.\n    :param string? genre__name_ru__in: Multiple values may be separated by commas.\n    :param string? genre__name_en__in: Multiple values may be separated by commas.\n    :param string? year__in: Multiple values may be separated by commas.\n    :param string? published_at__gt: \n    :param string? catalogue_id: \n    :param string? genre__name_en: \n    :param string? published_at: \n    :param string? published_at__gte: \n    :param string? genre__name_hy: \n    :param string? year: \n    :param string? catalogue_id__in: Multiple values may be separated by commas.\n    :param string? genre__name_ru: \n    '''\n    return await self._request_rapid_api('rapi_testing_options_opera_list',kwargs)\n        "
    },
    "rapi_spotify_scraper_list_top_tracks": {
        "api_name": "list_top_tracks",
        "category": "Music",
        "tool_name": "spotify_scraper",
        "code": "async def rapi_spotify_scraper_list_top_tracks(self,*args,**kwargs):\n    '''An all-in-one scraper for scraping everything on Spotify, and a highly available download solution for tracks, lyrics and episode previews.\n    \n    \n\n    :param string? region: `global` or region code (ISO 3166 alpha-2, e.g., `US`). Defaults to `global`.\n    :param ENUM? type: Time span. Defaults to `weekly`.\n    :param string? date: Date in `YYYY-MM-DD` format. Leave blank to get the latest chart.\n    '''\n    return await self._request_rapid_api('rapi_spotify_scraper_list_top_tracks',kwargs)\n        "
    },
    "rapi_spotify_scraper_get_artist_overview": {
        "api_name": "get_artist_overview",
        "category": "Music",
        "tool_name": "spotify_scraper",
        "code": "async def rapi_spotify_scraper_get_artist_overview(self,*args,**kwargs):\n    '''An all-in-one scraper for scraping everything on Spotify, and a highly available download solution for tracks, lyrics and episode previews.\n    \n    \n\n    :param string artistId: Artist ID. defaults to 6eUKZXaKkcviH0Ku9w2n3V\n    '''\n    return await self._request_rapid_api('rapi_spotify_scraper_get_artist_overview',kwargs)\n        "
    },
    "rapi_50k_radio_stations_get_cities": {
        "api_name": "get_cities",
        "category": "Music",
        "tool_name": "50k_radio_stations",
        "code": "async def rapi_50k_radio_stations_get_cities(self,*args,**kwargs):\n    '''More than 60,000 radio stations from different countries and various genres\n    \n    \n\n    :param integer? country_id: Use this parameter to filter cities by country id or set empty if you don't want to use it  defaults to 63\n    :param string? keyword: Use this parameter to filter cities by keyword or set empty if you don't want to use it  defaults to Jakarta\n    '''\n    return await self._request_rapid_api('rapi_50k_radio_stations_get_cities',kwargs)\n        "
    },
    "rapi_50k_radio_stations_get_countries": {
        "api_name": "get_countries",
        "category": "Music",
        "tool_name": "50k_radio_stations",
        "code": "async def rapi_50k_radio_stations_get_countries(self,*args,**kwargs):\n    '''More than 60,000 radio stations from different countries and various genres\n    \n    \n\n    :param string? keyword: Use this parameter to filter cities by keyword or set empty if you don't want to use it  defaults to Indonesia\n    '''\n    return await self._request_rapid_api('rapi_50k_radio_stations_get_countries',kwargs)\n        "
    },
    "rapi_50k_radio_stations_get_channels": {
        "api_name": "get_channels",
        "category": "Music",
        "tool_name": "50k_radio_stations",
        "code": "async def rapi_50k_radio_stations_get_channels(self,*args,**kwargs):\n    '''More than 60,000 radio stations from different countries and various genres\n    \n    \n\n    :param string? keyword: Use this parameter to filter cities by keyword or set empty if you don't want to use it  defaults to a\n    :param integer? genre_id: Use this parameter to filter cities by genre id or set empty if you don't want to use it \n    :param integer? city_id: Use this parameter to filter cities by city id or set empty if you don't want to use it \n    :param integer? country_id: Use this parameter to filter cities by country id or set empty if you don't want to use it  defaults to 50\n    :param integer? page: Use this parameter to get next page defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_50k_radio_stations_get_channels',kwargs)\n        "
    },
    "rapi_50k_radio_stations_get_genres": {
        "api_name": "get_genres",
        "category": "Music",
        "tool_name": "50k_radio_stations",
        "code": "async def rapi_50k_radio_stations_get_genres(self,*args,**kwargs):\n    '''More than 60,000 radio stations from different countries and various genres\n    \n    \n\n    :param string? keyword: Use this parameter to filter cities by keyword or set empty if you don't want to use it  defaults to music\n    '''\n    return await self._request_rapid_api('rapi_50k_radio_stations_get_genres',kwargs)\n        "
    },
    "rapi_spotify_top_charts_2022_spotify_music": {
        "api_name": "spotify_music",
        "category": "Music",
        "tool_name": "spotify_top_charts_2022",
        "code": "async def rapi_spotify_top_charts_2022_spotify_music(self,*args,**kwargs):\n    '''Dataset with global top chart songs during 2022. With danceability, loudness, and energy metrics.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_spotify_top_charts_2022_spotify_music',kwargs)\n        "
    },
    "rapi_soundcloud_scraper_list_track_comments": {
        "api_name": "list_track_comments",
        "category": "Music",
        "tool_name": "soundcloud_scraper",
        "code": "async def rapi_soundcloud_scraper_list_track_comments(self,*args,**kwargs):\n    '''An all-in-one SoundCloud scraper/downloader. Scrapes albums, playlists, profiles. Downloads uncut high-quality audios and lyrics.\n    \n    \n\n    :param string track: Track URL or ID. defaults to https://soundcloud.com/kusiya-records/kur04-semilla-vol-3-preview\n    :param boolean? filterReplies: Whether to remove replies. Defaults to `false`.\n    :param integer? offset: (**README**: [How to Use Endpoints with `offset`](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-endpoints-with-%60offset%60))\nThe number of items omitted before the results. Defaults to `0`.\n    :param integer? limit: The max number of items returned. Defaults to `50`.\n    '''\n    return await self._request_rapid_api('rapi_soundcloud_scraper_list_track_comments',kwargs)\n        "
    },
    "rapi_soundcloud_scraper_search_for_go_tracks": {
        "api_name": "search_for_go_tracks",
        "category": "Music",
        "tool_name": "soundcloud_scraper",
        "code": "async def rapi_soundcloud_scraper_search_for_go_tracks(self,*args,**kwargs):\n    '''An all-in-one SoundCloud scraper/downloader. Scrapes albums, playlists, profiles. Downloads uncut high-quality audios and lyrics.\n    \n    \n\n    :param string term: Search term. defaults to Ludovico\n    :param integer? offset: (**README**: [How to Use Endpoints with `offset`](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-endpoints-with-%60offset%60))\nThe number of items omitted before the results. Defaults to `0`.\n    :param ENUM? license: Filters by how a track can be used. Defaults to `listen`.\n* **`listen`**: To listen to\n* **`share`**: To share\n* **`use`**: To use commercially\n* **`modify`**: To modify commercially\n    :param boolean? goPlus: Searches for Go+ tracks only. Defaults to `false`.\n    :param integer? limit: The max number of items returned. Defaults to `50`.\n    :param ENUM? duration: Filters by a track's duration. Defaults to `any`.\n* **`any`**: Any duration\n* **`short`**: < 2 min\n* **`medium`**: 2-10 min\n* **`long`**: 10-30 min\n* **`epic`**: > 30 min\n    :param ENUM? addedIn: Filters by when a track was added. Defaults to `any`.\n* **`any`**: Added at any time\n* **`hour`**: Added in the past hour\n* **`day`**: Added in the past day\n* **`week`**: Added in the past week\n* **`month`**: Added in the past month\n* **`year`**: Added in the past year\n    :param string? genreOrTag: Filters by genre or tag (e.g., `classical`).\n    '''\n    return await self._request_rapid_api('rapi_soundcloud_scraper_search_for_go_tracks',kwargs)\n        "
    },
    "rapi_soundcloud_scraper_list_user_tracks": {
        "api_name": "list_user_tracks",
        "category": "Music",
        "tool_name": "soundcloud_scraper",
        "code": "async def rapi_soundcloud_scraper_list_user_tracks(self,*args,**kwargs):\n    '''An all-in-one SoundCloud scraper/downloader. Scrapes albums, playlists, profiles. Downloads uncut high-quality audios and lyrics.\n    \n    \n\n    :param string? user: User URL or ID. defaults to https://soundcloud.com/edsheeran\n    :param integer? limit: The max number of items returned. Defaults to `50`.\n    :param string? offsetToken: (**README**: [How to Use Endpoints with `offsetToken`](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-endpoints-with-%60offsettoken%60))\nA string for getting the next page of data. If not specified, the first page of data will be returned. If specified, `user` will be ignored.\n    '''\n    return await self._request_rapid_api('rapi_soundcloud_scraper_list_user_tracks',kwargs)\n        "
    },
    "rapi_soundcloud_scraper_get_station_details": {
        "api_name": "get_station_details",
        "category": "Music",
        "tool_name": "soundcloud_scraper",
        "code": "async def rapi_soundcloud_scraper_get_station_details(self,*args,**kwargs):\n    '''An all-in-one SoundCloud scraper/downloader. Scrapes albums, playlists, profiles. Downloads uncut high-quality audios and lyrics.\n    \n    \n\n    :param string stationUrl: Station URL. defaults to https://soundcloud.com/discover/sets/artist-stations:3685019\n    '''\n    return await self._request_rapid_api('rapi_soundcloud_scraper_get_station_details',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_playlist": {
        "api_name": "get_playlist",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_playlist(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string id:  defaults to 37i9dQZF1DX1ZQxccKVEtV\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_playlist',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_new_releases": {
        "api_name": "get_new_releases",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_new_releases(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string country: One of: AD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW defaults to US\n    :param integer? limit: Optional default value 20 MAX value 50. defaults to 20\n    :param integer? offset: Optional default value 0. defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_new_releases',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_album": {
        "api_name": "get_album",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_album(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string id: album id defaults to 4XE9M8giGvwLFebTgpCwSc\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_album',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_artist_related_artists": {
        "api_name": "get_artist_related_artists",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_artist_related_artists(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string id:  defaults to 0TnOYISbd1XYRBk9myaseg\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_artist_related_artists',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_artist_top_tracks": {
        "api_name": "get_artist_top_tracks",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_artist_top_tracks(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string id:  defaults to 0TnOYISbd1XYRBk9myaseg\n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_artist_top_tracks',kwargs)\n        "
    },
    "rapi_spotify_data_api_get_artist_albums": {
        "api_name": "get_artist_albums",
        "category": "Music",
        "tool_name": "spotify_data_api",
        "code": "async def rapi_spotify_data_api_get_artist_albums(self,*args,**kwargs):\n    '''Fetch all available Spotify Data like Shows,Playlists, Episodes,Artists, Tracks, User playlists and more\n\nNote: Currently the API is deployed on server with basic plan with auto sleep thats why the Latency is so high .After first subscription I will upgrade the plan with always on service and the latency will be normal.\n    \n    \n\n    :param string id: ID for the artist defaults to 0TnOYISbd1XYRBk9myaseg\n    :param string group: One of : album, single, appears_on, compilation defaults to album\n    :param integer? limit: Limit of the results Optional default 20  MAX 50 defaults to 20\n    :param integer? offset: Offset of the results default 0 \n    '''\n    return await self._request_rapid_api('rapi_spotify_data_api_get_artist_albums',kwargs)\n        "
    },
    "rapi_view_song_view_song_copy": {
        "api_name": "view_song_copy",
        "category": "Music",
        "tool_name": "view_song",
        "code": "async def rapi_view_song_view_song_copy(self,*args,**kwargs):\n    '''View Sonv\n    \n    \n\n    :param string https_only:  defaults to 1\n    :param string wmid:  defaults to 161445361\n    :param string songid:  defaults to ttEleQJoxgCuNOIbUuRh7Q==\n    :param string s:  defaults to fe7cc2de3cfcc4efd457838a9521e7e9\n    :param string song_preview_kbps:  defaults to 320\n    :param string lang:  defaults to id\n    :param string country:  defaults to id\n    '''\n    return await self._request_rapid_api('rapi_view_song_view_song_copy',kwargs)\n        "
    },
    "rapi_billboard_v2_greatest_of_all_time_songs_of_the_summer": {
        "api_name": "greatest_of_all_time_songs_of_the_summer",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_greatest_of_all_time_songs_of_the_summer(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_greatest_of_all_time_songs_of_the_summer',kwargs)\n        "
    },
    "rapi_billboard_v2_greatest_of_all_time_artists": {
        "api_name": "greatest_of_all_time_artists",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_greatest_of_all_time_artists(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_greatest_of_all_time_artists',kwargs)\n        "
    },
    "rapi_billboard_v2_greatest_of_all_time_hot_100_songs": {
        "api_name": "greatest_of_all_time_hot_100_songs",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_greatest_of_all_time_hot_100_songs(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_greatest_of_all_time_hot_100_songs',kwargs)\n        "
    },
    "rapi_billboard_v2_year_end_top_artists": {
        "api_name": "year_end_top_artists",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_year_end_top_artists(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param integer year:  defaults to 2021\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_year_end_top_artists',kwargs)\n        "
    },
    "rapi_billboard_v2_year_end_billboard_global_200": {
        "api_name": "year_end_billboard_global_200",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_year_end_billboard_global_200(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param integer year:  defaults to 2021\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_year_end_billboard_global_200',kwargs)\n        "
    },
    "rapi_billboard_v2_year_end_hot_100_songs": {
        "api_name": "year_end_hot_100_songs",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_year_end_hot_100_songs(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param integer year:  defaults to 2021\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_year_end_hot_100_songs',kwargs)\n        "
    },
    "rapi_billboard_v2_billboard_200": {
        "api_name": "billboard_200",
        "category": "Music",
        "tool_name": "billboard_v2",
        "code": "async def rapi_billboard_v2_billboard_200(self,*args,**kwargs):\n    '''Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!\n    \n    \n\n    :param DATE (YYYY-MM-DD) date:  defaults to 2021-07-07\n    :param string? range: Returns all results if range is not specified defaults to 1-10\n    '''\n    return await self._request_rapid_api('rapi_billboard_v2_billboard_200',kwargs)\n        "
    },
    "rapi_musicapi_public_search_introspection": {
        "api_name": "public_search_introspection",
        "category": "Music",
        "tool_name": "musicapi",
        "code": "async def rapi_musicapi_public_search_introspection(self,*args,**kwargs):\n    '''Spotify, Apple Music, YouTube, Amazon, Tidal, and more. Over 19 services supported.\n\nFetch metadata for the tracks, albums, playlists from multiple streaming services via URL.\nUse single search endpoints to find at once on all services and get sharable URLs to all of them. \n\nMusicAPI.com\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_musicapi_public_search_introspection',kwargs)\n        "
    },
    "rapi_florida_realty_api_getlisting": {
        "api_name": "getlisting",
        "category": "Business",
        "tool_name": "florida_realty_api",
        "code": "async def rapi_florida_realty_api_getlisting(self,*args,**kwargs):\n    '''Find condos and townhouses in Florida (USA) and get access to the original listing service MLS with thousands of properties.\n    \n    \n\n    :param string identifier: The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property. defaults to M5215311859\n    '''\n    return await self._request_rapid_api('rapi_florida_realty_api_getlisting',kwargs)\n        "
    },
    "rapi_florida_realty_api_getcities": {
        "api_name": "getcities",
        "category": "Business",
        "tool_name": "florida_realty_api",
        "code": "async def rapi_florida_realty_api_getcities(self,*args,**kwargs):\n    '''Find condos and townhouses in Florida (USA) and get access to the original listing service MLS with thousands of properties.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_florida_realty_api_getcities',kwargs)\n        "
    },
    "rapi_florida_realty_api_getlistings": {
        "api_name": "getlistings",
        "category": "Business",
        "tool_name": "florida_realty_api",
        "code": "async def rapi_florida_realty_api_getlistings(self,*args,**kwargs):\n    '''Find condos and townhouses in Florida (USA) and get access to the original listing service MLS with thousands of properties.\n    \n    \n\n    :param string? sort: Supported values are RELEVANCE (best match), NEWEST (newest first), PRICE_LOW (cheapest first), PRICE_HIGH (cheapest last). By default RELEVANCE is used. defaults to RELEVANCE\n    :param integer? offset: If you want to implement a paging use offset. The maximum items are defined by the parameter limit starting at offset For example, to return for the frist 10 items set offset to 0 and limit to 10. To return the next 10 items set offset to 10 and limit to 10 and so on. By default offset ist 0. defaults to 0\n    :param integer? price_max: The maximum price of the condos and townhouses you search for in US Dollar. By default 250000 for $250,000 is used. defaults to 250000\n    :param string? city: Name of the city to search for condos and townhouses. Supported cities are Cape Coral, Fort Myers, West Palm Beach, Lake Worth, Lantana, Boynton Beach, Delray Beach, Boca Raton, Pompano Beach, Fort Lauderdale. New supported cities are Naples, Tampa and Saint Petersburg. By default Cape Coral is used. defaults to Cape Coral\n    :param integer? limit: The maximum number of items to return in the result list. By default 50 is used. defaults to 50\n    '''\n    return await self._request_rapid_api('rapi_florida_realty_api_getlistings',kwargs)\n        "
    },
    "rapi_netherlands_vehicle_license_plate_lookup_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "netherlands_vehicle_license_plate_lookup",
        "code": "async def rapi_netherlands_vehicle_license_plate_lookup_search(self,*args,**kwargs):\n    '''Determine vehicle details from a Dutch license plate. \n    \n    \n\n    :param string? plate:  defaults to 3XKF30\n    :param string? function:  defaults to getktypefornumplatenetherlands\n    '''\n    return await self._request_rapid_api('rapi_netherlands_vehicle_license_plate_lookup_search',kwargs)\n        "
    },
    "rapi_agrofitdata_getactiveingredients": {
        "api_name": "getactiveingredients",
        "category": "Business",
        "tool_name": "agrofitdata",
        "code": "async def rapi_agrofitdata_getactiveingredients(self,*args,**kwargs):\n    '''API com informa\u00e7\u00f5es sobre agrotoxicos fitossanitarios aprovados pelo MAPA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_agrofitdata_getactiveingredients',kwargs)\n        "
    },
    "rapi_agrofitdata_getpestscommonname": {
        "api_name": "getpestscommonname",
        "category": "Business",
        "tool_name": "agrofitdata",
        "code": "async def rapi_agrofitdata_getpestscommonname(self,*args,**kwargs):\n    '''API com informa\u00e7\u00f5es sobre agrotoxicos fitossanitarios aprovados pelo MAPA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_agrofitdata_getpestscommonname',kwargs)\n        "
    },
    "rapi_agrofitdata_getpests": {
        "api_name": "getpests",
        "category": "Business",
        "tool_name": "agrofitdata",
        "code": "async def rapi_agrofitdata_getpests(self,*args,**kwargs):\n    '''API com informa\u00e7\u00f5es sobre agrotoxicos fitossanitarios aprovados pelo MAPA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_agrofitdata_getpests',kwargs)\n        "
    },
    "rapi_sertifi_esignature_and_epayment_v1_folderid_participants": {
        "api_name": "v1_folderid_participants",
        "category": "Business",
        "tool_name": "sertifi_esignature_and_epayment",
        "code": "async def rapi_sertifi_esignature_and_epayment_v1_folderid_participants(self,*args,**kwargs):\n    '''Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.\n    \n    \n\n    :param string folderId: The id of the folder to retrieve data for.\n    '''\n    return await self._request_rapid_api('rapi_sertifi_esignature_and_epayment_v1_folderid_participants',kwargs)\n        "
    },
    "rapi_sertifi_esignature_and_epayment_getfolder": {
        "api_name": "getfolder",
        "category": "Business",
        "tool_name": "sertifi_esignature_and_epayment",
        "code": "async def rapi_sertifi_esignature_and_epayment_getfolder(self,*args,**kwargs):\n    '''Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.\n    \n    \n\n    :param string folderId: The id of the folder to retrieve data for.\n    '''\n    return await self._request_rapid_api('rapi_sertifi_esignature_and_epayment_getfolder',kwargs)\n        "
    },
    "rapi_sertifi_esignature_and_epayment_v1_users_email": {
        "api_name": "v1_users_email",
        "category": "Business",
        "tool_name": "sertifi_esignature_and_epayment",
        "code": "async def rapi_sertifi_esignature_and_epayment_v1_users_email(self,*args,**kwargs):\n    '''Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.\n    \n    \n\n    :param string email: Email of the user\n    '''\n    return await self._request_rapid_api('rapi_sertifi_esignature_and_epayment_v1_users_email',kwargs)\n        "
    },
    "rapi_sertifi_esignature_and_epayment_v1_folderid_payments": {
        "api_name": "v1_folderid_payments",
        "category": "Business",
        "tool_name": "sertifi_esignature_and_epayment",
        "code": "async def rapi_sertifi_esignature_and_epayment_v1_folderid_payments(self,*args,**kwargs):\n    '''Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.\n    \n    \n\n    :param string folderId: The id of the folder to retrieve data for.\n    '''\n    return await self._request_rapid_api('rapi_sertifi_esignature_and_epayment_v1_folderid_payments',kwargs)\n        "
    },
    "rapi_sertifi_esignature_and_epayment_v1_folders_folderid_content": {
        "api_name": "v1_folders_folderid_content",
        "category": "Business",
        "tool_name": "sertifi_esignature_and_epayment",
        "code": "async def rapi_sertifi_esignature_and_epayment_v1_folders_folderid_content(self,*args,**kwargs):\n    '''Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.\n    \n    \n\n    :param string folderId: The folder id of the folder to download\n    '''\n    return await self._request_rapid_api('rapi_sertifi_esignature_and_epayment_v1_folders_folderid_content',kwargs)\n        "
    },
    "rapi_seloger_properties_list": {
        "api_name": "properties_list",
        "category": "Business",
        "tool_name": "seloger",
        "code": "async def rapi_seloger_properties_list(self,*args,**kwargs):\n    '''This API helps to query properties for sale or rent in France to create a real estate site/application such as seloger.com\n    \n    \n\n    :param string zipCodes: Either zipCodes OR districtIds parameter is required. The postal code, separated by comma for multiple values. Ex : 75,13,... defaults to 75\n    :param integer? pageIndex: For paging purpose defaults to 1\n    :param integer? pageSize: For paging purpose (Max is 50) defaults to 50\n    :param string? bedrooms: Filter by number of bedrooms (1-5). Separated by comma for multiple values. Ex : 2,3\n    :param string? rooms: Filter by number of rooms (1-5). Separated by comma for multiple values. Ex : 2,3\n    :param integer? minimumLivingArea: Filter by minimum living area\n    :param boolean? includeNewConstructions: Whether or not includes new constructions in listing defaults to true\n    :param integer? realtyTypes: One of the following : 1-Appartement | 2-Maison et Villa | 2048-Chateau | 128-Loft/Atelier/Surface | 4096-Hotel Particulier | 4-Parking/Box | 8-Terrain | 512-Immeuble | 1024-Batiment | 16-Boutique | 32-Local Commercial | 64-Bureau defaults to 1\n    :param integer? maximumGroundArea: Filter by maximum ground area\n    :param integer? maximumLivingArea: Filter by maximum living area\n    :param integer? minimumGroundArea: Filter by minimum ground area\n    :param integer? minimumFloor: Filter by minimum number of floors\n    :param integer? maximumPrice: Filter by maximum price\n    :param string? districtIds: Either zipCodes OR districtIds parameter is required. The value of id fields under 'districts' JSON object returned in .../locations/search endpoint. Separated by comma for multiple values. Ex : 133051,133137,...\n    :param integer? transactionType: One of the following : 1-Louer | 2-Acheter | 5-Viager | 6-Investir defaults to 1\n    :param integer? sortBy: One of the following : 0-Pertinence | 1-Prix croissant | 2-Prix decroissant | 10-Du + recent au + ancien | 9-Du + ancien au + recent | 5-Surface croissante | 6-Surface decroissante defaults to 0\n    :param integer? maximumFloor: Filter by maximum number of floors\n    '''\n    return await self._request_rapid_api('rapi_seloger_properties_list',kwargs)\n        "
    },
    "rapi_appraisalqc_validationreport": {
        "api_name": "validationreport",
        "category": "Business",
        "tool_name": "appraisalqc",
        "code": "async def rapi_appraisalqc_validationreport(self,*args,**kwargs):\n    '''Automated Appraisal Validation process by PropMix using Artificial Intelligence \u2013 machine learning and image recognition\n    \n    \n\n    :param string OrderNumber: OrderNumber of the uploaded PDF file for which validation report needs to be displayed\n    '''\n    return await self._request_rapid_api('rapi_appraisalqc_validationreport',kwargs)\n        "
    },
    "rapi_australian_business_industries_api_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "australian_business_industries_api",
        "code": "async def rapi_australian_business_industries_api_search(self,*args,**kwargs):\n    '''Welcome to the Australian Business Industries API, a powerful and comprehensive tool designed to cater to the needs of businesses, developers, and data analysts in Australia. Our API aims to provide seamless access to the precise industry codes for Australian businesses, making it an invaluable resource for those who require accurate classification of companies and industries within the Australian market.\n\n    \n    \n\n    :param string search:  defaults to farming\n    '''\n    return await self._request_rapid_api('rapi_australian_business_industries_api_search',kwargs)\n        "
    },
    "rapi_uk_vrm_lookup_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "uk_vrm_lookup",
        "code": "async def rapi_uk_vrm_lookup_search(self,*args,**kwargs):\n    '''Lookup a UK VRM (License Plate) using this API\n    \n    \n\n    :param string? plate:  defaults to UKZ2957\n    :param string? function:  defaults to getktypeforvrm\n    '''\n    return await self._request_rapid_api('rapi_uk_vrm_lookup_search',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_events": {
        "api_name": "companies_id_events",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_events(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id:  defaults to DEVFCLQFW054\n    :param string? category:  defaults to MANAGEMENT_AND_TEAM,FINANCES_AND_CAPITAL,NEWS_AND_EVENTS\n    :param DATE (YYYY-MM-DD)? since:  defaults to 2017-01-01\n    :param integer? size:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_events',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_financials": {
        "api_name": "companies_id_financials",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_financials(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id:  defaults to DEVFCLQFW054\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_financials',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_financials_exists": {
        "api_name": "companies_id_financials_exists",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_financials_exists(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id:  defaults to DEVFCLQFW054\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_financials_exists',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_jobs": {
        "api_name": "companies_id_jobs",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_jobs(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id:  defaults to DEVFCLQFW054\n    :param DATE (YYYY-MM-DD)? since:  defaults to 2017-01-01\n    :param integer? size:  defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_jobs',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_data": {
        "api_name": "companies_id_data",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_data(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id: The Implisense identifier of the company. defaults to DEVFCLQFW054\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_data',kwargs)\n        "
    },
    "rapi_german_company_data_v2_companies_id_people": {
        "api_name": "companies_id_people",
        "category": "Business",
        "tool_name": "german_company_data_v2",
        "code": "async def rapi_german_company_data_v2_companies_id_people(self,*args,**kwargs):\n    '''Enrich your CRM / MAS / ERP system with credible data about all incorporated companies from  Germany.\n    \n    \n\n    :param string id:  defaults to DEVFCLQFW054\n    '''\n    return await self._request_rapid_api('rapi_german_company_data_v2_companies_id_people',kwargs)\n        "
    },
    "rapi_self_help_quotes_get_a_random_quote_from_a_specific_book": {
        "api_name": "get_a_random_quote_from_a_specific_book",
        "category": "Business",
        "tool_name": "self_help_quotes",
        "code": "async def rapi_self_help_quotes_get_a_random_quote_from_a_specific_book(self,*args,**kwargs):\n    '''Hand-picked quotes from the best self-help books around. Get a random quote every day, filter by tags, books, and more...\n    \n    \n\n    :param string book_id:  defaults to quiet\n    '''\n    return await self._request_rapid_api('rapi_self_help_quotes_get_a_random_quote_from_a_specific_book',kwargs)\n        "
    },
    "rapi_self_help_quotes_get_all_available_self_help_books": {
        "api_name": "get_all_available_self_help_books",
        "category": "Business",
        "tool_name": "self_help_quotes",
        "code": "async def rapi_self_help_quotes_get_all_available_self_help_books(self,*args,**kwargs):\n    '''Hand-picked quotes from the best self-help books around. Get a random quote every day, filter by tags, books, and more...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_self_help_quotes_get_all_available_self_help_books',kwargs)\n        "
    },
    "rapi_self_help_quotes_get_a_random_self_help_quote": {
        "api_name": "get_a_random_self_help_quote",
        "category": "Business",
        "tool_name": "self_help_quotes",
        "code": "async def rapi_self_help_quotes_get_a_random_self_help_quote(self,*args,**kwargs):\n    '''Hand-picked quotes from the best self-help books around. Get a random quote every day, filter by tags, books, and more...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_self_help_quotes_get_a_random_self_help_quote',kwargs)\n        "
    },
    "rapi_bayut_properties_detail": {
        "api_name": "properties_detail",
        "category": "Business",
        "tool_name": "bayut",
        "code": "async def rapi_bayut_properties_detail(self,*args,**kwargs):\n    '''This API helps to query real estate in UAE to create a real estate site/application\n    \n    \n\n    :param string externalID: The value of externalID returned in ..../properties/list endpoint defaults to 4937770\n    '''\n    return await self._request_rapid_api('rapi_bayut_properties_detail',kwargs)\n        "
    },
    "rapi_bayut_properties_list": {
        "api_name": "properties_list",
        "category": "Business",
        "tool_name": "bayut",
        "code": "async def rapi_bayut_properties_list(self,*args,**kwargs):\n    '''This API helps to query real estate in UAE to create a real estate site/application\n    \n    \n\n    :param string locationExternalIDs: The location/externalID fields returned in .../auto-complete endpoint. Separated by comma for multiple locations. Ex : 5002,6020 defaults to 5002,6020\n    :param boolean? hasFloorPlan: \n    :param integer? areaMin: \n    :param string? purpose: One of the following : for-rent|for-sale defaults to for-rent\n    :param boolean? hasVideo: \n    :param boolean? hasPanorama: \n    :param string? furnishingStatus: One of the following : unfurnished|furnished\n    :param integer? bathsMin: \n    :param string? sort: One of the following : price-desc|price-asc|city-level-score|date-desc|verified-score defaults to city-level-score\n    :param integer? bathsMax: \n    :param integer? page: For paging purpose defaults to 0\n    :param string? agencyExternalIDs: The externalID fields returned in .../agencies/list endpoint. Separated by comma for multiple agencies. Ex : 7737,5002\n    :param integer? hitsPerPage: For paging purpose defaults to 25\n    :param integer? roomsMin: \n    :param integer? roomsMax: \n    :param integer? categoryExternalID: Apartment -> 4|Townhouses -> 16|Villas -> 3|Penthouses -> 18|Hotel Apartments -> 21|Villa Compound -> 19|Residential Plot -> 14|Residential Floor -> 12|Residential Building -> 17|Office -> 5|Shop -> 6|Warehouse -> 7|Labour camp -> 9|Commercial Villa -> 25|Bulk Units -> 20|Commercial Plot -> 15|Commercial Floor -> 13|Commercial Building -> 10|Factory -> 8|Industrial Land -> 22|Mixed Use Land -> 23|Showroom -> 24|Other Commercial -> 11 defaults to 4\n    :param string? rentFrequency: One of the following : monthly|yearly|weekly|daily defaults to monthly\n    :param string? lang: One of the following : en|ar defaults to en\n    :param integer? priceMin: \n    :param integer? priceMax: \n    :param integer? areaMax: \n    '''\n    return await self._request_rapid_api('rapi_bayut_properties_list',kwargs)\n        "
    },
    "rapi_bayut_auto_complete": {
        "api_name": "auto_complete",
        "category": "Business",
        "tool_name": "bayut",
        "code": "async def rapi_bayut_auto_complete(self,*args,**kwargs):\n    '''This API helps to query real estate in UAE to create a real estate site/application\n    \n    \n\n    :param string query: Any term or phrase that you are familiar with defaults to abu dhabi\n    :param integer? hitsPerPage: For paging purpose defaults to 25\n    :param string? lang: One of the following : en|ar defaults to en\n    :param integer? page: For paging purpose defaults to 0\n    '''\n    return await self._request_rapid_api('rapi_bayut_auto_complete',kwargs)\n        "
    },
    "rapi_gst_return_status_gstin": {
        "api_name": "gstin",
        "category": "Business",
        "tool_name": "gst_return_status",
        "code": "async def rapi_gst_return_status_gstin(self,*args,**kwargs):\n    '''GST Return Filing Status for India\n    \n    \n\n    :param string gstin:  defaults to 27AAJCM9929L1ZM\n    '''\n    return await self._request_rapid_api('rapi_gst_return_status_gstin',kwargs)\n        "
    },
    "rapi_apfd_getpetbyid": {
        "api_name": "getpetbyid",
        "category": "Business",
        "tool_name": "apfd",
        "code": "async def rapi_apfd_getpetbyid(self,*args,**kwargs):\n    '''apfd\n    \n    \n\n    :param integer petId: \u5ba0\u7269 ID\n    '''\n    return await self._request_rapid_api('rapi_apfd_getpetbyid',kwargs)\n        "
    },
    "rapi_apfd_loginuser": {
        "api_name": "loginuser",
        "category": "Business",
        "tool_name": "apfd",
        "code": "async def rapi_apfd_loginuser(self,*args,**kwargs):\n    '''apfd\n    \n    \n\n    :param string username: The user name for login\n    :param string password: The password for login in clear text\n    '''\n    return await self._request_rapid_api('rapi_apfd_loginuser',kwargs)\n        "
    },
    "rapi_enotas_gateway_buscar_empresas": {
        "api_name": "buscar_empresas",
        "category": "Business",
        "tool_name": "enotas_gateway",
        "code": "async def rapi_enotas_gateway_buscar_empresas(self,*args,**kwargs):\n    '''Automatic e-Service Brazilian invoicing platform, the easy way.\r\nNota Fiscal Eletr\u00f4nica de Servi\u00e7o Autom\u00e1tica, em n\u00edvel nacional, da forma mais f\u00e1cil poss\u00edvel.\n    \n    \n\n    :param integer pageNumber: Pagina\u00e7\u00e3o, a partir de 0 defaults to 0\n    :param integer pageSize: Tamanho da p\u00e1gina defaults to 20\n    '''\n    return await self._request_rapid_api('rapi_enotas_gateway_buscar_empresas',kwargs)\n        "
    },
    "rapi_domain_authority_domain_url_metrics": {
        "api_name": "domain_url_metrics",
        "category": "Business",
        "tool_name": "domain_authority",
        "code": "async def rapi_domain_authority_domain_url_metrics(self,*args,**kwargs):\n    '''Get Domain Authority and Page Authority of any Domain or URL.\n    \n    \n\n    :param string url:  defaults to h-supertools.com\n    '''\n    return await self._request_rapid_api('rapi_domain_authority_domain_url_metrics',kwargs)\n        "
    },
    "rapi_calendarevents_calendar_events": {
        "api_name": "calendar_events",
        "category": "Business",
        "tool_name": "calendarevents",
        "code": "async def rapi_calendarevents_calendar_events(self,*args,**kwargs):\n    '''Retrieve Google Calendar Events from a public calendar\n    \n    \n\n    :param string src: Calendar ID (ending in `@group.calendar.google.com`).\nYou can find it in the `src` parameter of the embed URL defaults to a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com\n    :param integer? months: Number of months of events to retireve.\nDefault is `2`. Max is `12`. defaults to 2\n    '''\n    return await self._request_rapid_api('rapi_calendarevents_calendar_events',kwargs)\n        "
    },
    "rapi_petstore_getorderbyid": {
        "api_name": "getorderbyid",
        "category": "Business",
        "tool_name": "petstore",
        "code": "async def rapi_petstore_getorderbyid(self,*args,**kwargs):\n    '''Petstore API Example\n    \n    \n\n    :param integer orderId: \n    '''\n    return await self._request_rapid_api('rapi_petstore_getorderbyid',kwargs)\n        "
    },
    "rapi_norwegian_license_plate_api_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "norwegian_license_plate_api",
        "code": "async def rapi_norwegian_license_plate_api_search(self,*args,**kwargs):\n    '''Lookup vehicle details for a Norwegian vehicle from it's number plate. \n    \n    \n\n    :param string? plate:  defaults to NF57872\n    :param string? function:  defaults to getktypefornumplatenorway\n    '''\n    return await self._request_rapid_api('rapi_norwegian_license_plate_api_search',kwargs)\n        "
    },
    "rapi_idealista_v2_properties_detail": {
        "api_name": "properties_detail",
        "category": "Business",
        "tool_name": "idealista_v2",
        "code": "async def rapi_idealista_v2_properties_detail(self,*args,**kwargs):\n    '''Query for rent and sale properties in Spain, Italy, Portugal\n    \n    \n\n    :param integer propertyCode: The value of propertyCode field returned in .../properties/list endpoint defaults to 19899037\n    :param string? country: One of the following it|es|pt defaults to it\n    :param string? language: One of the following en|es|it|pt|de|fr|ro|ru|pl|sv|fi|nb|nl defaults to en\n    '''\n    return await self._request_rapid_api('rapi_idealista_v2_properties_detail',kwargs)\n        "
    },
    "rapi_idealista_v2_auto_complete": {
        "api_name": "auto_complete",
        "category": "Business",
        "tool_name": "idealista_v2",
        "code": "async def rapi_idealista_v2_auto_complete(self,*args,**kwargs):\n    '''Query for rent and sale properties in Spain, Italy, Portugal\n    \n    \n\n    :param string prefix: Any term or phrase that you are familiar with defaults to rome\n    :param string? country: One of the following it|es|pt defaults to it\n    '''\n    return await self._request_rapid_api('rapi_idealista_v2_auto_complete',kwargs)\n        "
    },
    "rapi_basic_info_vikkon_assets_get_device_asset_by_identifier_copy": {
        "api_name": "get_device_asset_by_identifier_copy",
        "category": "Business",
        "tool_name": "basic_info_vikkon_assets",
        "code": "async def rapi_basic_info_vikkon_assets_get_device_asset_by_identifier_copy(self,*args,**kwargs):\n    '''Get information from vikkon platform.\n    \n    \n\n    :param string identifier:  defaults to 71491234-A\n    '''\n    return await self._request_rapid_api('rapi_basic_info_vikkon_assets_get_device_asset_by_identifier_copy',kwargs)\n        "
    },
    "rapi_token2go_read_a_link_or_token_by_its_id": {
        "api_name": "read_a_link_or_token_by_its_id",
        "category": "Business",
        "tool_name": "token2go",
        "code": "async def rapi_token2go_read_a_link_or_token_by_its_id(self,*args,**kwargs):\n    '''It is a  RESTful API intended to generate unique and verifiable tokens (cryptographic id codes). Use this tokens as an URL parameter in your marketing or customer service campaigns to validate requests that occurs in a timely period previously defined by your system\n    \n    \n\n    :param string id: \n    :param string t:  defaults to link\n    '''\n    return await self._request_rapid_api('rapi_token2go_read_a_link_or_token_by_its_id',kwargs)\n        "
    },
    "rapi_realty_in_au_schools_list": {
        "api_name": "schools_list",
        "category": "Business",
        "tool_name": "realty_in_au",
        "code": "async def rapi_realty_in_au_schools_list(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 in Australia to create a realtor, real estate site/application such as realestate.com.au\n    \n    \n\n    :param integer lat: The latitude of GEO location defaults to -37.79870933\n    :param string lon: The longitude of GEO location defaults to 144.95324086\n    '''\n    return await self._request_rapid_api('rapi_realty_in_au_schools_list',kwargs)\n        "
    },
    "rapi_realty_in_au_properties_list": {
        "api_name": "properties_list",
        "category": "Business",
        "tool_name": "realty_in_au",
        "code": "async def rapi_realty_in_au_properties_list(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 in Australia to create a realtor, real estate site/application such as realestate.com.au\n    \n    \n\n    :param string searchLocation: The value of text field returned in .../auto-complete endpoint defaults to Melbourne City - Greater Region, VIC\n    :param string channel: One of the following : buy|rent|sold defaults to buy\n    :param string searchLocationSubtext: The value of subtext field returned in .../auto-complete endpoint defaults to Region\n    :param string type: The value of region field returned in .../auto-complete endpoint defaults to region\n    :param string? keywords: Facilities you are looking for. Separated by comma for multiple options. Ex : pool,garage,etc...\n    :param integer? minimumBedrooms: \n    :param integer? minimumCars: \n    :param integer? maximumBedrooms: \n    :param integer? maximumPrice: \n    :param boolean? surroundingSuburbs:  defaults to true\n    :param integer? minimumPrice: \n    :param integer? page: For paging purpose defaults to 1\n    :param string? propertyTypes: Ignore or one of the following : townhouse|unit apartment|retire|acreage|land|unitblock|house|villa|rural. Separated by comma for multiple options. Ex : townhouse,house,villa\n    :param string? constructionStatus: Ignore or one of the following : established|new\n    :param integer? minimumBathroom: \n    :param string? sortType: One of the following relevance|new-asc|new-desc|price-asc|price-desc defaults to relevance\n    :param boolean? ex-under-contract:  defaults to false\n    :param integer? pageSize: The number of items returned per response. For paging purpose (max is 30) defaults to 30\n    :param integer? minimumLandSize: In m2\n    '''\n    return await self._request_rapid_api('rapi_realty_in_au_properties_list',kwargs)\n        "
    },
    "rapi_realty_in_au_auto_complete": {
        "api_name": "auto_complete",
        "category": "Business",
        "tool_name": "realty_in_au",
        "code": "async def rapi_realty_in_au_auto_complete(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 in Australia to create a realtor, real estate site/application such as realestate.com.au\n    \n    \n\n    :param string query: Any term or phrase you are familiar with. It can be an address to get the property id directly to use with .../properties/detail endpoint. defaults to sydney\n    '''\n    return await self._request_rapid_api('rapi_realty_in_au_auto_complete',kwargs)\n        "
    },
    "rapi_uspto_trademark_v1_trademarksearch": {
        "api_name": "v1_trademarksearch",
        "category": "Business",
        "tool_name": "uspto_trademark",
        "code": "async def rapi_uspto_trademark_v1_trademarksearch(self,*args,**kwargs):\n    '''Instant trademark search. Check if a trademark keyword is available, search trademarks from USPTO, filter on owner/applicant information, expiration date.\n    \n    \n\n    :param string keyword:  defaults to amazon\n    :param ENUM searchType: Default searchType is \\\"active\\\", which don't include Dead trademarks, but if you set \\\"all\\\" you see also expired trademarks. \n    '''\n    return await self._request_rapid_api('rapi_uspto_trademark_v1_trademarksearch',kwargs)\n        "
    },
    "rapi_uspto_trademark_v1_serialsearch": {
        "api_name": "v1_serialsearch",
        "category": "Business",
        "tool_name": "uspto_trademark",
        "code": "async def rapi_uspto_trademark_v1_serialsearch(self,*args,**kwargs):\n    '''Instant trademark search. Check if a trademark keyword is available, search trademarks from USPTO, filter on owner/applicant information, expiration date.\n    \n    \n\n    :param string serial_number:  defaults to 75527221\n    '''\n    return await self._request_rapid_api('rapi_uspto_trademark_v1_serialsearch',kwargs)\n        "
    },
    "rapi_uspto_trademark_v1_databasestatus": {
        "api_name": "v1_databasestatus",
        "category": "Business",
        "tool_name": "uspto_trademark",
        "code": "async def rapi_uspto_trademark_v1_databasestatus(self,*args,**kwargs):\n    '''Instant trademark search. Check if a trademark keyword is available, search trademarks from USPTO, filter on owner/applicant information, expiration date.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_uspto_trademark_v1_databasestatus',kwargs)\n        "
    },
    "rapi_domaine_nc_get_domaine": {
        "api_name": "get_domaine",
        "category": "Business",
        "tool_name": "domaine_nc",
        "code": "async def rapi_domaine_nc_get_domaine(self,*args,**kwargs):\n    '''API REST pour interagir avec les noms de domaine, de connaitre leur date d'expiration.\n    \n    \n\n    :param string ext: Chaque extension ob\u00e9it \u00e0 ses propres r\u00e8gles d'enregistrement, avec des variantes en termes d'identification des titulaires, de pr\u00e9sence locale ou de justificatifs \u00e0 fournir.\n\nCe sont les extensions disponibles en Nouvelle-Cal\u00e9donie, qui sont :\n\n- `nc` : extension g\u00e9n\u00e9rique\n- `asso.nc` : r\u00e9serv\u00e9 aux associations\n- `nom.nc` : r\u00e9serv\u00e9 aux particuliers qui d\u00e9sirerai deposer leur nom de famille \n defaults to NC\n    :param string nom: Nom de domaine, voir [quelques exemples](https://www.domaine.nc/whos?who=AA) sur le site web. defaults to 1012\n    '''\n    return await self._request_rapid_api('rapi_domaine_nc_get_domaine',kwargs)\n        "
    },
    "rapi_domaine_nc_get_api_health": {
        "api_name": "get_api_health",
        "category": "Business",
        "tool_name": "domaine_nc",
        "code": "async def rapi_domaine_nc_get_api_health(self,*args,**kwargs):\n    '''API REST pour interagir avec les noms de domaine, de connaitre leur date d'expiration.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_domaine_nc_get_api_health',kwargs)\n        "
    },
    "rapi_domaine_nc_get_all_domaines": {
        "api_name": "get_all_domaines",
        "category": "Business",
        "tool_name": "domaine_nc",
        "code": "async def rapi_domaine_nc_get_all_domaines(self,*args,**kwargs):\n    '''API REST pour interagir avec les noms de domaine, de connaitre leur date d'expiration.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_domaine_nc_get_all_domaines',kwargs)\n        "
    },
    "rapi_realty_in_us_properties_v2_list_for_sale_deprecated": {
        "api_name": "properties_v2_list_for_sale_deprecated",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_properties_v2_list_for_sale_deprecated(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param integer offset: The offset of items to be ignored in response for paging defaults to 0\n    :param string state_code: The value of state&#95;code field responded in locations/auto-complete API (do not use this parameter with postal&#95;code) defaults to NY\n    :param string city: The value of city field responded in locations/auto-complete API (do not use this parameter with postal_code) defaults to New York City\n    :param integer limit: The number of items to be responded in every request defaults to 200\n    :param string? sort: One of the followings (separated by comma for multiple values): relevance|newest|price&#95;low|price&#95;high|photos|open&#95;house&#95;date|sqft&#95;high|price&#95;reduced&#95;date defaults to relevance\n    :param integer? beds_min: Min beds of properties\n    :param integer? radius: Radius in miles to look for properties (1 to 20)\n    :param boolean? is_foreclosure: true/false - Foreclosures only\n    :param integer? age_min: Min age of properties\n    :param boolean? is_new_plan: true/false - Homes not yet built\n    :param integer? lot_sqft_min: Min Lot/Acreage size\n    :param integer? price_max: Option filter by setting max price\n    :param boolean? is_matterports: true/false - 3D tours only\n    :param integer? lot_sqft_max: Max Lot/Acreage size\n    :param integer? lat_min: Look for properties in bounding box, this is the min latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lng_max: Look for properties in bounding box, this is the max longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? price_min: Option filter by setting min price\n    :param integer? baths_min: Min baths of properties\n    :param boolean? is_new_construction: true/false - New construction only\n    :param string? prop_sub_type: One of the followings (separated by comma for multiple values): condo,cond&#95;op,townhouse,co&#95;op\n    :param string? prop_type: One of the followings (separated by comma for multiple values): single&#95;family,multi&#95;family,condo,mobile,land,farm,other\n    :param integer? age_max: Max age of properties\n    :param integer? sqft_max: Max size of the properties\n    :param integer? sqft_min: Min size of the properties\n    :param boolean? is_pending: true/false - Pending only\n    :param string? features: One of the followings (separated by comma for multiple values): garage&#95;2&#95;or&#95;more,view,waterfront,golf&#95;course&#95;view,swimming&#95;pool,cul&#95;de&#95;sac,hardwood&#95;floors,basement,fireplace,energy&#95;efficient,disability&#95;features,dining&#95;room,washer&#95;dryer,family&#95;room,den&#95;or&#95;office,game&#95;room,central&#95;air,central&#95;heat,forced&#95;air,single&#95;story,two&#95;or&#95;more&#95;stories,corner&#95;lot,water&#95;view,golf&#95;course&#95;lot&#95;or&#95;frontage,hill&#95;or&#95;mountain&#95;view,ocean&#95;view,city&#95;view,lake&#95;view,river&#95;view,community&#95;security&#95;features,community&#95;swimming&#95;pool,community&#95;boat&#95;facilities,recreation&#95;facilities,community&#95;clubhouse,community&#95;horse&#95;facilities,community&#95;tennis&#95;court,community&#95;park,community&#95;golf,senior&#95;community,community&#95;spa&#95;or&#95;hot&#95;tub,rv&#95;or&#95;boat&#95;parking,horse&#95;facilities,tennis&#95;court,spa&#95;or&#95;hot&#95;tub,garage&#95;1&#95;or&#95;more,garage&#95;3&#95;or&#95;more,carport\n    :param string? postal_code: Zip code or postal code (do not use this parameter with city and state_code)\n    :param boolean? is_contingent: true/false - Contingent only\n    :param boolean? has_open_house: true/false - Open houses only\n    :param integer? lng_min: Look for properties in bounding box, this is the min longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lat_max: Look for properties in bounding box, this is the max latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_properties_v2_list_for_sale_deprecated',kwargs)\n        "
    },
    "rapi_realty_in_us_properties_v2_list_for_rent_deprecated": {
        "api_name": "properties_v2_list_for_rent_deprecated",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_properties_v2_list_for_rent_deprecated(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param integer limit: The number of items to be responded in every request defaults to 200\n    :param string city: The value of city field responded in locations/auto-complete API (do not use this parameter with postal_code) defaults to New York City\n    :param string state_code: The value of state&#95;code field responded in locations/auto-complete API (do not use this parameter with postal&#95;code) defaults to NY\n    :param integer offset: The offset of items to be ignored in response for paging defaults to 0\n    :param integer? price_max: Option filter by setting max price\n    :param integer? baths_min: Min baths of properties\n    :param integer? beds_min: Min beds of `properties`\n    :param boolean? allows_cats: false/true - Whether or not cats are allowed to live in properties\n    :param integer? lot_sqft_min: Min Lot/Acreage size\n    :param string? features: One of the followings (separated by comma for multiple values): recreation&#95;facilities,swimming&#95;pool,washer&#95;dryer,garage&#95;1&#95;or&#95;more,central&#95;air,fireplace,spa&#95;or&#95;hot&#95;tub,dishwasher,community&#95;doorman,community&#95;elevator,furnished,laundry&#95;room,community&#95;no&#95;fee,community&#95;outdoor&#95;space,pets&#95;allowed\n    :param integer? sqft_max: Max size of the properties\n    :param integer? lot_sqft_max: Max Lot/Acreage size\n    :param integer? radius: Radius in miles to look for properties (1 to 20)\n    :param integer? lat_min: Look for properties in bounding box, this is the min latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param boolean? allows_dogs: false/true - Whether or not dogs are allowed to live in properties\n    :param integer? sqft_min: Min size of the properties\n    :param integer? price_min: Option filter by setting min price\n    :param string? postal_code: Zip code or postal code (do not use this parameter with city and state&#95;code)\n    :param string? prop_sub_type: One of the followings (separated by comma for multiple values): condo,cond&#95;op,townhouse,co&#95;op\n    :param string? prop_type: One of the followings (separated by comma for multiple values): single&#95;family,multi&#95;family,condo,mobile,land,farm,other\n    :param string? sort: One of the followings : relevance|newest|price&#95;low|price&#95;high|photos|open&#95;house&#95;date|sqft&#95;high|price&#95;reduced&#95;date defaults to relevance\n    :param integer? lng_max: Look for properties in bounding box, this is the max longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lat_max: Look for properties in bounding box, this is the max latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lng_min: Look for properties in bounding box, this is the min longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_properties_v2_list_for_rent_deprecated',kwargs)\n        "
    },
    "rapi_realty_in_us_properties_v2_list_sold_deprecated": {
        "api_name": "properties_v2_list_sold_deprecated",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_properties_v2_list_sold_deprecated(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param integer offset: The offset of items to be ignored in response for paging defaults to 0\n    :param integer limit: The number of items to be responded in every request defaults to 200\n    :param string city: The value of city field responded in locations/auto-complete API (do not use this parameter with postal_code) defaults to New York City\n    :param string state_code: The value of state&#95;code field responded in locations/auto-complete API (do not use this parameter with postal&#95;code) defaults to NY\n    :param string? postal_code: Zip code or postal code (do not use this parameter with city and state_code)\n    :param string? sort: One of the followings : sold&#95;date|beds&#95;high|price&#95;low|price&#95;high|lot&#95;sqft&#95;high defaults to sold_date\n    :param integer? price_min: Option filter by setting min price\n    :param integer? beds_min: Min beds of properties\n    :param string? prop_type: One of the followings (separated by comma for multiple values): single&#95;family,multi&#95;family,condo,mobile,land,farm,other\n    :param integer? radius: Radius in miles to look for properties (1 to 20)\n    :param integer? age_max: Max age of home\n    :param integer? price_max: Option filter by setting max price\n    :param integer? lot_sqft_max: Max Lot/Acreage size\n    :param integer? baths_min: Min baths of properties\n    :param integer? age_min: Min age of home\n    :param integer? lat_max: Look for properties in bounding box, this is the max latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? sqft_min: Min size of the properties\n    :param integer? lot_sqft_min: Min Lot/Acreage size\n    :param integer? sqft_max: Max size of the properties\n    :param integer? lng_max: Look for properties in bounding box, this is the max longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lat_min: Look for properties in bounding box, this is the min latitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    :param integer? lng_min: Look for properties in bounding box, this is the min longitude of the coordinate.\nHas no affect if postal&#95;code, or city or state&#95;code parameter has value.\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_properties_v2_list_sold_deprecated',kwargs)\n        "
    },
    "rapi_realty_in_us_agents_get_listings": {
        "api_name": "agents_get_listings",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_agents_get_listings(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param integer fulfillment_id: The value of advertiser_id field returned in .../agents/list endpoint defaults to 1633379\n    :param string id: The value of abbreviation field returned in .../agents/list endpoint defaults to AVCA\n    :param integer agent_id: The value of ...member/id JSON object returned in .../agents/list endpoint defaults to 77018\n    :param integer? page: For paging purpose defaults to 1\n    :param string? type: One of the following : all|forSale|forSold|forRent|openHouses defaults to all\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_agents_get_listings',kwargs)\n        "
    },
    "rapi_realty_in_us_agents_get_profile": {
        "api_name": "agents_get_profile",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_agents_get_profile(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param string nrds_id: The value of nrds_id field returned in .../agents/list endpoint defaults to 150577018\n    :param integer advertiser_id: The value of advertiser_id field returned in .../agents/list endpoint defaults to 1633379\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_agents_get_profile',kwargs)\n        "
    },
    "rapi_realty_in_us_agents_list": {
        "api_name": "agents_list",
        "category": "Business",
        "tool_name": "realty_in_us",
        "code": "async def rapi_realty_in_us_agents_list(self,*args,**kwargs):\n    '''This API helps to query properties for sale, rent, sold,etc\u2026 to create a real estate site/application such as realtor.com\n    \n    \n\n    :param string postal_code: Zip code or postal code defaults to 11234\n    :param integer? recommendations_count_min: Number of recommendations (max 10)\n    :param string? sort: One of the followings : recent&#95;activity&#95;high|recently&#95;sold&#95;high|for&#95;sale&#95;count&#95;high|recommendations&#95;count&#95;high|agent&#95;rating&#95;high defaults to recent_activity_high\n    :param integer? agent_rating_min: Rating (max 5)\n    :param integer? offset: The offset of items to be ignored in response for paging defaults to 0\n    :param integer? limit: For paging purpose (max 20) defaults to 20\n    :param string? name: Search for agent or team or company by name\n    :param string? agent_type: One of the followings or leave empty : buyer | seller\n    :param string? types: One of the followings : agent | team | office defaults to agent\n    :param integer? price_min: Option filter by setting min price\n    :param integer? price_max: Option filter by setting max price\n    '''\n    return await self._request_rapid_api('rapi_realty_in_us_agents_list',kwargs)\n        "
    },
    "rapi_verifica_targhe_italiane_api_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "verifica_targhe_italiane_api",
        "code": "async def rapi_verifica_targhe_italiane_api_search(self,*args,**kwargs):\n    '''Verifica Targhe Italiane \n    \n    \n\n    :param string? plate:  defaults to AB913CT\n    :param string? function:  defaults to getktypefornumplateitalian\n    '''\n    return await self._request_rapid_api('rapi_verifica_targhe_italiane_api_search',kwargs)\n        "
    },
    "rapi_remarketlite_apis_getlistingsbyradius_valuation": {
        "api_name": "getlistingsbyradius_valuation",
        "category": "Business",
        "tool_name": "remarketlite_apis",
        "code": "async def rapi_remarketlite_apis_getlistingsbyradius_valuation(self,*args,**kwargs):\n    '''The API set powered by PropMix, provides property listings by accepting various filters like Zip code, Street, City and State. It also provide comparable listings within the given radius, returns the count of listings by accepting various filters and more.\n    \n    \n\n    :param string Street: Street Address around which radius search needs to be performed\n    :param string Radius: Radius in whcih search needs to be done\n    :param string Zip: PostalCode of address around which radius search needs to be performed\n    :param string State: State of the address around which radius search needs to be performed\n    :param string City: City of the address around which radius search needs to be performed\n    :param string OrderId: Alpha numeric combinations to uniquely reference an order\n    :param string? Longitude: Longitude of the centre point for Radius Search\n    :param string? Latitude: Latitude of the centre point for Radius Search\n    '''\n    return await self._request_rapid_api('rapi_remarketlite_apis_getlistingsbyradius_valuation',kwargs)\n        "
    },
    "rapi_remarketlite_apis_getlistingsbygeo_idx": {
        "api_name": "getlistingsbygeo_idx",
        "category": "Business",
        "tool_name": "remarketlite_apis",
        "code": "async def rapi_remarketlite_apis_getlistingsbygeo_idx(self,*args,**kwargs):\n    '''The API set powered by PropMix, provides property listings by accepting various filters like Zip code, Street, City and State. It also provide comparable listings within the given radius, returns the count of listings by accepting various filters and more.\n    \n    \n\n    :param string Zip: The PostalCode in which the search needs to be performed\n    :param string OrderId: Alpha numeric combinations to uniquely reference an order\n    :param string State: The State in which the search needs to be performed\n    :param string City: The City in which the search needs to be performed\n    '''\n    return await self._request_rapid_api('rapi_remarketlite_apis_getlistingsbygeo_idx',kwargs)\n        "
    },
    "rapi_remarketlite_apis_getlistingsbyradius_idx": {
        "api_name": "getlistingsbyradius_idx",
        "category": "Business",
        "tool_name": "remarketlite_apis",
        "code": "async def rapi_remarketlite_apis_getlistingsbyradius_idx(self,*args,**kwargs):\n    '''The API set powered by PropMix, provides property listings by accepting various filters like Zip code, Street, City and State. It also provide comparable listings within the given radius, returns the count of listings by accepting various filters and more.\n    \n    \n\n    :param string State: State of the address around which radius search needs to be performed\n    :param string Street: Street Address around which radius search needs to be performed\n    :param string Zip: PostalCode of address around which radius search needs to be performed\n    :param string Radius: Radius in whcih search needs to be done\n    :param string OrderId: Alpha numeric combinations to uniquely reference an order\n    :param string City: City of the address around which radius search needs to be performed\n    :param string? Latitude: Latitude of the centre point for Radius Search\n    :param string? Longitude: Longitude of the centre point for Radius Search\n    '''\n    return await self._request_rapid_api('rapi_remarketlite_apis_getlistingsbyradius_idx',kwargs)\n        "
    },
    "rapi_remarketlite_apis_getlistingsbygeo_valuation": {
        "api_name": "getlistingsbygeo_valuation",
        "category": "Business",
        "tool_name": "remarketlite_apis",
        "code": "async def rapi_remarketlite_apis_getlistingsbygeo_valuation(self,*args,**kwargs):\n    '''The API set powered by PropMix, provides property listings by accepting various filters like Zip code, Street, City and State. It also provide comparable listings within the given radius, returns the count of listings by accepting various filters and more.\n    \n    \n\n    :param string OrderId: Alpha numeric combinations to uniquely reference an order\n    :param string State: The State in which the search needs to be performed\n    :param string City: The City in which the search needs to be performed\n    :param string Zip: The PostalCode in which the search needs to be performed\n    '''\n    return await self._request_rapid_api('rapi_remarketlite_apis_getlistingsbygeo_valuation',kwargs)\n        "
    },
    "rapi_deal_catcher_get_rentals": {
        "api_name": "get_rentals",
        "category": "Business",
        "tool_name": "deal_catcher",
        "code": "async def rapi_deal_catcher_get_rentals(self,*args,**kwargs):\n    '''Deal Catcher React Native app\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_deal_catcher_get_rentals',kwargs)\n        "
    },
    "rapi_mymemory_translation_memory_set_contribution": {
        "api_name": "set_contribution",
        "category": "Business",
        "tool_name": "mymemory_translation_memory",
        "code": "async def rapi_mymemory_translation_memory_set_contribution(self,*args,**kwargs):\n    '''Get a better translation! MyMemory is the world's largest Translation Memory that contains billions of words translated by professional translators. MyMemory will give you ModernMT machine translation  if a human translation is not available.\n    \n    \n\n    :param string seg: The source segment defaults to Hello World!\n    :param string tra: The translation of the source segment defaults to Ciao mondo!\n    :param string langpair: Source and language pair, separated by the | symbol. Use ISO standard names or RFC3066 defaults to en|it\n    :param string? key: Gives access to private memories and customized API limits defaults to ce1hG0w.8a8Xs\n    :param string? de: A valid email (recommended for CAT tools and high volume usage) defaults to a@b.c\n    '''\n    return await self._request_rapid_api('rapi_mymemory_translation_memory_set_contribution',kwargs)\n        "
    },
    "rapi_gst_details_filing_data_get_gst_info_filing_data": {
        "api_name": "get_gst_info_filing_data",
        "category": "Business",
        "tool_name": "gst_details_filing_data",
        "code": "async def rapi_gst_details_filing_data_get_gst_info_filing_data(self,*args,**kwargs):\n    '''Get company details, Return Status & Filing Data based on GSTIN\n- Monthly Data, Quarterly Data, Yearly Data & hsn codes\n-Update 21 May 2023: I have updated the API & it's even faster with zero errors.\n    \n    \n\n    :param string GSTIN:  defaults to 33AAACR4849R4ZP\n    '''\n    return await self._request_rapid_api('rapi_gst_details_filing_data_get_gst_info_filing_data',kwargs)\n        "
    },
    "rapi_prueba_products": {
        "api_name": "products",
        "category": "Business",
        "tool_name": "prueba",
        "code": "async def rapi_prueba_products(self,*args,**kwargs):\n    '''prueba de api\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_prueba_products',kwargs)\n        "
    },
    "rapi_ziff_base_currency_exchange_rates": {
        "api_name": "base_currency_exchange_rates",
        "category": "Business",
        "tool_name": "ziff",
        "code": "async def rapi_ziff_base_currency_exchange_rates(self,*args,**kwargs):\n    '''An API Service that enables you to retrieve Live Exchange Rates which are accurate and up to date. All World Currencies, Precious Metals + More! Free & Paid.\n    \n    \n\n    :param string basecurrency:  defaults to GBP\n    '''\n    return await self._request_rapid_api('rapi_ziff_base_currency_exchange_rates',kwargs)\n        "
    },
    "rapi_ziff_all_exchange_rates": {
        "api_name": "all_exchange_rates",
        "category": "Business",
        "tool_name": "ziff",
        "code": "async def rapi_ziff_all_exchange_rates(self,*args,**kwargs):\n    '''An API Service that enables you to retrieve Live Exchange Rates which are accurate and up to date. All World Currencies, Precious Metals + More! Free & Paid.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ziff_all_exchange_rates',kwargs)\n        "
    },
    "rapi_mgs_mgs_products": {
        "api_name": "mgs_products",
        "category": "Business",
        "tool_name": "mgs",
        "code": "async def rapi_mgs_mgs_products(self,*args,**kwargs):\n    '''My local gun shop\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mgs_mgs_products',kwargs)\n        "
    },
    "rapi_mgs_blogs_copy": {
        "api_name": "blogs_copy",
        "category": "Business",
        "tool_name": "mgs",
        "code": "async def rapi_mgs_blogs_copy(self,*args,**kwargs):\n    '''My local gun shop\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mgs_blogs_copy',kwargs)\n        "
    },
    "rapi_woo_temp_product_category": {
        "api_name": "product_category",
        "category": "Business",
        "tool_name": "woo_temp",
        "code": "async def rapi_woo_temp_product_category(self,*args,**kwargs):\n    '''Temp APi\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_woo_temp_product_category',kwargs)\n        "
    },
    "rapi_woo_temp_levels_category": {
        "api_name": "levels_category",
        "category": "Business",
        "tool_name": "woo_temp",
        "code": "async def rapi_woo_temp_levels_category(self,*args,**kwargs):\n    '''Temp APi\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_woo_temp_levels_category',kwargs)\n        "
    },
    "rapi_woo_temp_boxes": {
        "api_name": "boxes",
        "category": "Business",
        "tool_name": "woo_temp",
        "code": "async def rapi_woo_temp_boxes(self,*args,**kwargs):\n    '''Temp APi\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_woo_temp_boxes',kwargs)\n        "
    },
    "rapi_us_address_parser_parse": {
        "api_name": "parse",
        "category": "Business",
        "tool_name": "us_address_parser",
        "code": "async def rapi_us_address_parser_parse(self,*args,**kwargs):\n    '''Parses US Street Addresses and Returns JSON\n    \n    \n\n    :param string? q:  defaults to 2025 N HOPE ST PHILADELPHIA PA 19122\n    '''\n    return await self._request_rapid_api('rapi_us_address_parser_parse',kwargs)\n        "
    },
    "rapi_users_user_listing": {
        "api_name": "user_listing",
        "category": "Business",
        "tool_name": "users",
        "code": "async def rapi_users_user_listing(self,*args,**kwargs):\n    '''Users list\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_users_user_listing',kwargs)\n        "
    },
    "rapi_phone_validator_api_format_number": {
        "api_name": "format_number",
        "category": "Business",
        "tool_name": "phone_validator_api",
        "code": "async def rapi_phone_validator_api_format_number(self,*args,**kwargs):\n    '''Validate and verify phone numbers in your apps.\n    \n    \n\n    :param integer phone:  defaults to 34913353535\n    '''\n    return await self._request_rapid_api('rapi_phone_validator_api_format_number',kwargs)\n        "
    },
    "rapi_zoopla_new_build_developments": {
        "api_name": "new_build_developments",
        "category": "Business",
        "tool_name": "zoopla",
        "code": "async def rapi_zoopla_new_build_developments(self,*args,**kwargs):\n    '''Real-time data, unofficial API zoopla co uk. Users can search for information on flats, houses, villas, serviced apartments, and various other types of properties across the country. Zoopla offers an easy way to view details about each property, including photos, descriptions, information on size, number of rooms, and amenities. Users can also explore parameters such as estimated value, sales history, and the surrounding market.\nThe occurrence rate of the response status code != 200 is &lt; 0...\n    \n    \n\n    :param string search_area:  defaults to London\n    :param integer? max_bedroom: \n    :param integer? min_price: \n    :param integer? page: \n    :param integer? min_bedroom: \n    :param integer? max_price: \n    :param string? property_type: Property type comma-separated or empty for all types:\nEx: SemiDetached,Flats\n\n`SemiDetached`\n`Flats`\n`FarmsLand`\n`Detached`\n`Terraced`\n`Bungalows`\n`ParkHomes`\n    '''\n    return await self._request_rapid_api('rapi_zoopla_new_build_developments',kwargs)\n        "
    },
    "rapi_entity_risk_indicator_categories": {
        "api_name": "indicator_categories",
        "category": "Business",
        "tool_name": "entity_risk",
        "code": "async def rapi_entity_risk_indicator_categories(self,*args,**kwargs):\n    '''The Entity Risk API accesses our risk intelligence data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_entity_risk_indicator_categories',kwargs)\n        "
    },
    "rapi_entity_risk_sources": {
        "api_name": "sources",
        "category": "Business",
        "tool_name": "entity_risk",
        "code": "async def rapi_entity_risk_sources(self,*args,**kwargs):\n    '''The Entity Risk API accesses our risk intelligence data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_entity_risk_sources',kwargs)\n        "
    },
    "rapi_entity_risk_account_status": {
        "api_name": "account_status",
        "category": "Business",
        "tool_name": "entity_risk",
        "code": "async def rapi_entity_risk_account_status(self,*args,**kwargs):\n    '''The Entity Risk API accesses our risk intelligence data.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_entity_risk_account_status',kwargs)\n        "
    },
    "rapi_french_cnit_type_mime_api_searchcnit": {
        "api_name": "searchcnit",
        "category": "Business",
        "tool_name": "french_cnit_type_mime_api",
        "code": "async def rapi_french_cnit_type_mime_api_searchcnit(self,*args,**kwargs):\n    '''Lookup French CNIT / Mime Type values \n    \n    \n\n    :param string? plate:  defaults to 021A13\n    :param string? function:  defaults to getktypefornumplatefrancemineplate\n    '''\n    return await self._request_rapid_api('rapi_french_cnit_type_mime_api_searchcnit',kwargs)\n        "
    },
    "rapi_petstoreapi2_0_loginuser": {
        "api_name": "loginuser",
        "category": "Business",
        "tool_name": "petstoreapi2_0",
        "code": "async def rapi_petstoreapi2_0_loginuser(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n    \n    \n\n    :param string password: The password for login in clear text\n    :param string username: The user name for login\n    '''\n    return await self._request_rapid_api('rapi_petstoreapi2_0_loginuser',kwargs)\n        "
    },
    "rapi_petstoreapi2_0_getpetbyid": {
        "api_name": "getpetbyid",
        "category": "Business",
        "tool_name": "petstoreapi2_0",
        "code": "async def rapi_petstoreapi2_0_getpetbyid(self,*args,**kwargs):\n    '''This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n    \n    \n\n    :param integer petId: ID of pet to return\n    '''\n    return await self._request_rapid_api('rapi_petstoreapi2_0_getpetbyid',kwargs)\n        "
    },
    "rapi_textking_translation_list_topics": {
        "api_name": "list_topics",
        "category": "Business",
        "tool_name": "textking_translation",
        "code": "async def rapi_textking_translation_list_topics(self,*args,**kwargs):\n    '''The TEXTKING Translation API is a RESTful web service to access and manage translation projects on https://www.textking.com. You can use the translation API to integrate high quality human translation into your own software and streamline your translation workflow.\n    \n    \n\n    :param integer? per_page: An integer value defining how many entries should be returned. Only values between 1 and 100 (both inclusive) are allowed. If not given, this defaults to 100. defaults to 100\n    :param integer? page: Return search results starting at a given page. Used for paging through more than one page of results. defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_textking_translation_list_topics',kwargs)\n        "
    },
    "rapi_textking_translation_list_target_languages": {
        "api_name": "list_target_languages",
        "category": "Business",
        "tool_name": "textking_translation",
        "code": "async def rapi_textking_translation_list_target_languages(self,*args,**kwargs):\n    '''The TEXTKING Translation API is a RESTful web service to access and manage translation projects on https://www.textking.com. You can use the translation API to integrate high quality human translation into your own software and streamline your translation workflow.\n    \n    \n\n    :param integer? page: Return search results starting at a given page. Used for paging through more than one page of results. defaults to 1\n    :param integer? per_page: An integer value defining how many entries should be returned. Only values between 1 and 100 (both inclusive) are allowed. If not given, this defaults to 100. defaults to 100\n    '''\n    return await self._request_rapid_api('rapi_textking_translation_list_target_languages',kwargs)\n        "
    },
    "rapi_textking_translation_get_price_info_for_word_count": {
        "api_name": "get_price_info_for_word_count",
        "category": "Business",
        "tool_name": "textking_translation",
        "code": "async def rapi_textking_translation_get_price_info_for_word_count(self,*args,**kwargs):\n    '''The TEXTKING Translation API is a RESTful web service to access and manage translation projects on https://www.textking.com. You can use the translation API to integrate high quality human translation into your own software and streamline your translation workflow.\n    \n    \n\n    :param integer words: An integer value defining the number of words to translate. defaults to 3141\n    :param string source_language: ISO 639 language code of the source language. defaults to de\n    :param string target_language: ISO 639 language code of the target language. defaults to en\n    :param string topic: A topic UUID. defaults to 8576549a-097f-45b3-8c59-fb3d6a03147d\n    '''\n    return await self._request_rapid_api('rapi_textking_translation_get_price_info_for_word_count',kwargs)\n        "
    },
    "rapi_google_play_get_data_safety_attributes_by_app_id": {
        "api_name": "get_data_safety_attributes_by_app_id",
        "category": "Business",
        "tool_name": "google_play",
        "code": "async def rapi_google_play_get_data_safety_attributes_by_app_id(self,*args,**kwargs):\n    '''This is an API that retrieves information from Google API. You can search for applications, retrieve the information from developers, get reviews, retrieve permissions any many more different things directly from the API.\n    \n    \n\n    :param string appId: Application ID\n    '''\n    return await self._request_rapid_api('rapi_google_play_get_data_safety_attributes_by_app_id',kwargs)\n        "
    },
    "rapi_soti_sync_phone_number": {
        "api_name": "phone_number",
        "category": "Business",
        "tool_name": "soti_sync",
        "code": "async def rapi_soti_sync_phone_number(self,*args,**kwargs):\n    '''Application to receive SOTI Sync Event Registration\n    \n    \n\n    :param integer PNumber: \n    '''\n    return await self._request_rapid_api('rapi_soti_sync_phone_number',kwargs)\n        "
    },
    "rapi_soti_sync_no_of_participants": {
        "api_name": "no_of_participants",
        "category": "Business",
        "tool_name": "soti_sync",
        "code": "async def rapi_soti_sync_no_of_participants(self,*args,**kwargs):\n    '''Application to receive SOTI Sync Event Registration\n    \n    \n\n    :param integer ParticipantsCount: \n    '''\n    return await self._request_rapid_api('rapi_soti_sync_no_of_participants',kwargs)\n        "
    },
    "rapi_soti_sync_registration_fee": {
        "api_name": "registration_fee",
        "category": "Business",
        "tool_name": "soti_sync",
        "code": "async def rapi_soti_sync_registration_fee(self,*args,**kwargs):\n    '''Application to receive SOTI Sync Event Registration\n    \n    \n\n    :param integer RegFee: \n    '''\n    return await self._request_rapid_api('rapi_soti_sync_registration_fee',kwargs)\n        "
    },
    "rapi_soti_sync_price_after_discount": {
        "api_name": "price_after_discount",
        "category": "Business",
        "tool_name": "soti_sync",
        "code": "async def rapi_soti_sync_price_after_discount(self,*args,**kwargs):\n    '''Application to receive SOTI Sync Event Registration\n    \n    \n\n    :param integer priceafterdiscount: \n    '''\n    return await self._request_rapid_api('rapi_soti_sync_price_after_discount',kwargs)\n        "
    },
    "rapi_soti_sync_email": {
        "api_name": "email",
        "category": "Business",
        "tool_name": "soti_sync",
        "code": "async def rapi_soti_sync_email(self,*args,**kwargs):\n    '''Application to receive SOTI Sync Event Registration\n    \n    \n\n    :param string email: \n    '''\n    return await self._request_rapid_api('rapi_soti_sync_email',kwargs)\n        "
    },
    "rapi_shwe_2d_live_api_3d_live": {
        "api_name": "3d_live",
        "category": "Business",
        "tool_name": "shwe_2d_live_api",
        "code": "async def rapi_shwe_2d_live_api_3d_live(self,*args,**kwargs):\n    '''Myanmar 2D ,Thai Stock ,Set\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shwe_2d_live_api_3d_live',kwargs)\n        "
    },
    "rapi_shwe_2d_live_api_holidays_of_2d": {
        "api_name": "holidays_of_2d",
        "category": "Business",
        "tool_name": "shwe_2d_live_api",
        "code": "async def rapi_shwe_2d_live_api_holidays_of_2d(self,*args,**kwargs):\n    '''Myanmar 2D ,Thai Stock ,Set\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shwe_2d_live_api_holidays_of_2d',kwargs)\n        "
    },
    "rapi_shwe_2d_live_api_2d_calendar": {
        "api_name": "2d_calendar",
        "category": "Business",
        "tool_name": "shwe_2d_live_api",
        "code": "async def rapi_shwe_2d_live_api_2d_calendar(self,*args,**kwargs):\n    '''Myanmar 2D ,Thai Stock ,Set\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_shwe_2d_live_api_2d_calendar',kwargs)\n        "
    },
    "rapi_email_finder_fetch_email_of_a_person": {
        "api_name": "fetch_email_of_a_person",
        "category": "Business",
        "tool_name": "email_finder",
        "code": "async def rapi_email_finder_fetch_email_of_a_person(self,*args,**kwargs):\n    '''Find email of anyone from their first name, last name, and domain\n    \n    \n\n    :param string first_name:  defaults to John\n    :param string domain:  defaults to google.com\n    :param string last_name:  defaults to Doe\n    '''\n    return await self._request_rapid_api('rapi_email_finder_fetch_email_of_a_person',kwargs)\n        "
    },
    "rapi_zoopla_v2_house_prices_estimate": {
        "api_name": "house_prices_estimate",
        "category": "Business",
        "tool_name": "zoopla_v2",
        "code": "async def rapi_zoopla_v2_house_prices_estimate(self,*args,**kwargs):\n    '''This API helps to query for properties for rent, sale in UK to create a real estate site/application such as zoopla.com\n    \n    \n\n    :param string area: The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint. defaults to Greenwich Close, Crawley RH11\n    :param string? property_type: One of the following detached|flat|terraced|semi&#95;detached\n    :param integer? page_number: The page index for paging purpose defaults to 1\n    :param string? order_by: One of the following price&#95;paid|last&#95;sold|address|estimated&#95;value defaults to address\n    :param integer? page_size: The number of items per response (max 40) defaults to 40\n    :param string? ordering: One of the following ascending|descending defaults to descending\n    :param string? identifier: The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint. defaults to west-sussex/crawley/greenwich-close\n    '''\n    return await self._request_rapid_api('rapi_zoopla_v2_house_prices_estimate',kwargs)\n        "
    },
    "rapi_zoopla_v2_properties_get_broadband": {
        "api_name": "properties_get_broadband",
        "category": "Business",
        "tool_name": "zoopla_v2",
        "code": "async def rapi_zoopla_v2_properties_get_broadband(self,*args,**kwargs):\n    '''This API helps to query for properties for rent, sale in UK to create a real estate site/application such as zoopla.com\n    \n    \n\n    :param integer listing_id: The value of listing_id field returned in .../properties/list endpoint defaults to 56354192\n    '''\n    return await self._request_rapid_api('rapi_zoopla_v2_properties_get_broadband',kwargs)\n        "
    },
    "rapi_zoopla_v2_auto_complete": {
        "api_name": "auto_complete",
        "category": "Business",
        "tool_name": "zoopla_v2",
        "code": "async def rapi_zoopla_v2_auto_complete(self,*args,**kwargs):\n    '''This API helps to query for properties for rent, sale in UK to create a real estate site/application such as zoopla.com\n    \n    \n\n    :param string search_term:  defaults to greenwich\n    :param string? search_type: One of the following properties|listings. Use  listings value to get suggestion for .../properties/list endpoint. Use properties value to get suggestion for .../house-prices/estimate endpoint. defaults to listings\n    '''\n    return await self._request_rapid_api('rapi_zoopla_v2_auto_complete',kwargs)\n        "
    },
    "rapi_zoopla_v2_house_prices_get_market_activity": {
        "api_name": "house_prices_get_market_activity",
        "category": "Business",
        "tool_name": "zoopla_v2",
        "code": "async def rapi_zoopla_v2_house_prices_get_market_activity(self,*args,**kwargs):\n    '''This API helps to query for properties for rent, sale in UK to create a real estate site/application such as zoopla.com\n    \n    \n\n    :param string area: The value of suggestions/value json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value  returned by the endpoint. defaults to Greenwich Close, Crawley RH11\n    :param string? identifier: The value of suggestions/identifier json object returned in .../auto-complete endpoint with properties as search_type. You must use EXACTLY the value returned by the endpoint. defaults to west-sussex/crawley/greenwich-close\n    '''\n    return await self._request_rapid_api('rapi_zoopla_v2_house_prices_get_market_activity',kwargs)\n        "
    },
    "rapi_catalogapi_remove_item": {
        "api_name": "remove_item",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_remove_item(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso801\n    :param string creds_uuid: GUID\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string creds_checksum: checksum\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string catalog_item_id: The catalog_item_id of the item. This item must already exist in the cart.\n    :param string format: rest of restx defaults to rest\n    :param string? option_id: The option_id of the item, if the item has options. This option_id must match the option_id the item already in the cart.\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_remove_item',kwargs)\n        "
    },
    "rapi_catalogapi_empty": {
        "api_name": "empty",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_empty(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string format: rest or restx defaults to rest\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_empty',kwargs)\n        "
    },
    "rapi_catalogapi_list_available_catalogs": {
        "api_name": "list_available_catalogs",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_list_available_catalogs(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string format: rest or restx defaults to rest\n    :param string? token: \n    :param string? creds_uuid: GUID\n    :param string? creds_datetime: UTC iso8601 datetime\n    :param string? creds_checksum: checksum\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_list_available_catalogs',kwargs)\n        "
    },
    "rapi_catalogapi_view_item": {
        "api_name": "view_item",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_view_item(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string catalog_item_id: The catalog_item_id from the search_catalog method.\n    :param string format: rest or restx defaults to rest\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_view_item',kwargs)\n        "
    },
    "rapi_catalogapi_unlock": {
        "api_name": "unlock",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_unlock(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string format: rest or restx defaults to rest\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_unlock',kwargs)\n        "
    },
    "rapi_catalogapi_view": {
        "api_name": "view",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_view(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string format: rest or restx defaults to rest\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_view',kwargs)\n        "
    },
    "rapi_catalogapi_validate": {
        "api_name": "validate",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_validate(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string format: rest or restx defaults to rest\n    :param string? locked: Set this to \"1\" to lock the cart. (Defaults to \"0\") A locked cart cannot be modified, meaning that items cannot be added or removed, and the address cannot be changed. One use for this would be to lock the cart before processing a credit card transaction in your system. You would then be ensured that the item in the cart could not be changed while the transaction is processing. You can only call cart_view, cart_unlock, or cart_order_place on a locked cart.\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_validate',kwargs)\n        "
    },
    "rapi_catalogapi_set_address": {
        "api_name": "set_address",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_set_address(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string first_name: Max length is 40 characters.\n    :param string last_name: Max length is 40 characters.\n    :param string address_1: Max length is 75 characters.\n    :param string city: \n    :param string state_province: For US states, this must be the two character abbreviation.\n    :param string postal_code: \n    :param string country: The ISO 3166-1 alpha-2 country code of the country the order will be shipped to.\n    :param string phone_number: If set, this must be a valid phone number. This will only be used for order support or to contact the addressee to arrange a delivery time for any items that require a signature.\n    :param string format: rest or restx defaults to rest\n    :param string? address_2: Max length is 60 characters.\n    :param string? address_3: Max length is 60 characters.\n    :param string? email: If set, this must be a valid email address. We highly recommend that you provide an email address so that we can contact the addressee if there is a problem with the order.\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_set_address',kwargs)\n        "
    },
    "rapi_catalogapi_set_item_quantity": {
        "api_name": "set_item_quantity",
        "category": "Business",
        "tool_name": "catalogapi",
        "code": "async def rapi_catalogapi_set_item_quantity(self,*args,**kwargs):\n    '''Catalog API is a service that ties your application to our catalog and order support department. With minimal integration, you can receive data feeds easily scoped to your demographics to provide exciting, up-to-date, and motivating catalogs. Your pa\n    \n    \n\n    :param string creds_datetime: UTC iso8601\n    :param string creds_uuid: GUID\n    :param string creds_checksum: checksum\n    :param string socket_id: This is the socket that the item is in. You can find your available sockets by using the list_available_catalogs method.\n    :param string external_user_id: This is an id from your system that identifies the user that the cart is for. It can contain alphanumeric characters, dashes and underscores.\n    :param string catalog_item_id: The catalog_item_id from the search_catalog method.\n    :param string quantity: The number of items to add. If this item is already in the cart, this quantity will replace the current quantity.\n    :param string format: rest or restx defaults to rest\n    :param string? option_id: The option_id from the search_catalog method. (This is required for items that have options.)\n    '''\n    return await self._request_rapid_api('rapi_catalogapi_set_item_quantity',kwargs)\n        "
    },
    "rapi_kassbet_https_kassbet_p_rapidapi_com": {
        "api_name": "https_kassbet_p_rapidapi_com",
        "category": "Business",
        "tool_name": "kassbet",
        "code": "async def rapi_kassbet_https_kassbet_p_rapidapi_com(self,*args,**kwargs):\n    '''Its a betting site\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_kassbet_https_kassbet_p_rapidapi_com',kwargs)\n        "
    },
    "rapi_business_and_company_name_api_get_all_companies_paginated": {
        "api_name": "get_all_companies_paginated",
        "category": "Business",
        "tool_name": "business_and_company_name_api",
        "code": "async def rapi_business_and_company_name_api_get_all_companies_paginated(self,*args,**kwargs):\n    '''Use this Know-Your-Business Process (KYB) API to validate registered companies and business names recognised by the Corporate Affairs Commission (CAC). You have enpoints to search, validate name availability and validate and fetch business and company registration numbers.\n    \n    \n\n    :param integer page:  defaults to 1\n    :param integer limit:  defaults to 10\n    '''\n    return await self._request_rapid_api('rapi_business_and_company_name_api_get_all_companies_paginated',kwargs)\n        "
    },
    "rapi_job_title_categorization_categorize_job_title": {
        "api_name": "categorize_job_title",
        "category": "Business",
        "tool_name": "job_title_categorization",
        "code": "async def rapi_job_title_categorization_categorize_job_title(self,*args,**kwargs):\n    '''Accurately classify any job title. Our machine-learning API sorts job titles into two categories:\ndepartment (sales, finance,...) and level (director, manager, intern...) so you can prioritize the ones you're interested in.\n    \n    \n\n    :param string title:  defaults to Head of Finance\n    '''\n    return await self._request_rapid_api('rapi_job_title_categorization_categorize_job_title',kwargs)\n        "
    },
    "rapi_swedish_vehicle_license_plate_lookup_search": {
        "api_name": "search",
        "category": "Business",
        "tool_name": "swedish_vehicle_license_plate_lookup",
        "code": "async def rapi_swedish_vehicle_license_plate_lookup_search(self,*args,**kwargs):\n    '''Search for a Swedish vehicle from it's license plate\n    \n    \n\n    :param string? plate:  defaults to hcx67p\n    :param string? function:  defaults to getktypefornumplatesweden\n    '''\n    return await self._request_rapid_api('rapi_swedish_vehicle_license_plate_lookup_search',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_job_stories": {
        "api_name": "job_stories",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_job_stories(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_job_stories',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_updates": {
        "api_name": "updates",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_updates(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_updates',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_top_stories": {
        "api_name": "top_stories",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_top_stories(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_top_stories',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_user_by_id": {
        "api_name": "user_by_id",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_user_by_id(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    :param string id: User ID defaults to wing328hk\n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_user_by_id',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_show_stories": {
        "api_name": "show_stories",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_show_stories(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_show_stories',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_new_stories": {
        "api_name": "new_stories",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_new_stories(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_new_stories',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_best_stories": {
        "api_name": "best_stories",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_best_stories(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_best_stories',kwargs)\n        "
    },
    "rapi_yc_hacker_news_official_item_by_id": {
        "api_name": "item_by_id",
        "category": "Business",
        "tool_name": "yc_hacker_news_official",
        "code": "async def rapi_yc_hacker_news_official_item_by_id(self,*args,**kwargs):\n    '''The official hacker news API\n    \n    \n\n    :param string id: Item ID defaults to 10000\n    '''\n    return await self._request_rapid_api('rapi_yc_hacker_news_official_item_by_id',kwargs)\n        "
    },
    "rapi_website_categorization_api_categorize_website": {
        "api_name": "categorize_website",
        "category": "Business",
        "tool_name": "website_categorization_api",
        "code": "async def rapi_website_categorization_api_categorize_website(self,*args,**kwargs):\n    '''Identifies the top 3 categories for any website or text\n    \n    \n\n    :param string url:  defaults to vercel.com\n    '''\n    return await self._request_rapid_api('rapi_website_categorization_api_categorize_website',kwargs)\n        "
    },
    "rapi_business_starter_api_businessplan": {
        "api_name": "businessplan",
        "category": "Business",
        "tool_name": "business_starter_api",
        "code": "async def rapi_business_starter_api_businessplan(self,*args,**kwargs):\n    '''API that generates a name, slogan and idea for a business\n    \n    \n\n    :param string idea: \n    '''\n    return await self._request_rapid_api('rapi_business_starter_api_businessplan',kwargs)\n        "
    },
    "rapi_business_starter_api_business_idea": {
        "api_name": "business_idea",
        "category": "Business",
        "tool_name": "business_starter_api",
        "code": "async def rapi_business_starter_api_business_idea(self,*args,**kwargs):\n    '''API that generates a name, slogan and idea for a business\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_business_starter_api_business_idea',kwargs)\n        "
    },
    "rapi_business_starter_api_business_slogan": {
        "api_name": "business_slogan",
        "category": "Business",
        "tool_name": "business_starter_api",
        "code": "async def rapi_business_starter_api_business_slogan(self,*args,**kwargs):\n    '''API that generates a name, slogan and idea for a business\n    \n    \n\n    :param string name:  defaults to MyBusiness\n    '''\n    return await self._request_rapid_api('rapi_business_starter_api_business_slogan',kwargs)\n        "
    },
    "rapi_eu_vat_number_checker_check_1_param": {
        "api_name": "check_1_param",
        "category": "Business",
        "tool_name": "eu_vat_number_checker",
        "code": "async def rapi_eu_vat_number_checker_check_1_param(self,*args,**kwargs):\n    '''The EU VAT Number Validation API verifies the format and validity of EU VAT numbers and retrieves company information such as name, address, country code and VAT number. It returns a detailed response.\n    \n    \n\n    :param string vat:  defaults to SK2121316722\n    '''\n    return await self._request_rapid_api('rapi_eu_vat_number_checker_check_1_param',kwargs)\n        "
    },
    "rapi_eu_vat_number_checker_check_2_params": {
        "api_name": "check_2_params",
        "category": "Business",
        "tool_name": "eu_vat_number_checker",
        "code": "async def rapi_eu_vat_number_checker_check_2_params(self,*args,**kwargs):\n    '''The EU VAT Number Validation API verifies the format and validity of EU VAT numbers and retrieves company information such as name, address, country code and VAT number. It returns a detailed response.\n    \n    \n\n    :param string country:  defaults to SK\n    :param string vatnum:  defaults to 2121316722\n    '''\n    return await self._request_rapid_api('rapi_eu_vat_number_checker_check_2_params',kwargs)\n        "
    },
    "rapi_realtor_data_api_for_real_estate_realtorpropertylist": {
        "api_name": "realtorpropertylist",
        "category": "Business",
        "tool_name": "realtor_data_api_for_real_estate",
        "code": "async def rapi_realtor_data_api_for_real_estate_realtorpropertylist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string state_code:  defaults to CA\n    :param string offset:  defaults to 0\n    :param string city:  defaults to San Jose\n    '''\n    return await self._request_rapid_api('rapi_realtor_data_api_for_real_estate_realtorpropertylist',kwargs)\n        "
    },
    "rapi_realtor_data_api_for_real_estate_realtorschoollist": {
        "api_name": "realtorschoollist",
        "category": "Business",
        "tool_name": "realtor_data_api_for_real_estate",
        "code": "async def rapi_realtor_data_api_for_real_estate_realtorschoollist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string school_level:  defaults to elementary\n    :param string page:  defaults to 1\n    :param string city:  defaults to San Jose\n    :param string state_code:  defaults to CA\n    '''\n    return await self._request_rapid_api('rapi_realtor_data_api_for_real_estate_realtorschoollist',kwargs)\n        "
    },
    "rapi_realtor_data_api_for_real_estate_realtoragentlist": {
        "api_name": "realtoragentlist",
        "category": "Business",
        "tool_name": "realtor_data_api_for_real_estate",
        "code": "async def rapi_realtor_data_api_for_real_estate_realtoragentlist(self,*args,**kwargs):\n    '''Data API for Realtor USA\nYou can use this API to get all the Realtor Property data, Realtor Agents data and Realtor School data.\nCurrently it is from Realtor USA only.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.\n    \n    \n\n    :param string page:  defaults to 1\n    :param string state_code:  defaults to CA\n    :param string city:  defaults to San Jose\n    '''\n    return await self._request_rapid_api('rapi_realtor_data_api_for_real_estate_realtoragentlist',kwargs)\n        "
    },
    "rapi_project_gutenberg_api_extract_info": {
        "api_name": "extract_info",
        "category": "Business",
        "tool_name": "project_gutenberg_api",
        "code": "async def rapi_project_gutenberg_api_extract_info(self,*args,**kwargs):\n    '''This is a stable and reliable unofficial API for Project Gutenberg, allowing you to download ebooks as well as get information about a certain book (title, author, language, copyrights and publish date).\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_project_gutenberg_api_extract_info',kwargs)\n        "
    },
    "rapi_lemurbot_list_all_category_groups": {
        "api_name": "list_all_category_groups",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "lemurbot",
        "code": "async def rapi_lemurbot_list_all_category_groups(self,*args,**kwargs):\n    '''Meet Lemurbot - Your Personal AI Chatbot Companion! With advanced features like creating, training and chatting, Lemurbot makes it easy and fun for users to interact and learn from an intelligent conversationalist. Plus, with ChatGPT integration and the ability to create multiple bots, the possibilities for learning and entertainment are endless!\n    \n    \n\n    :param boolean? locked: Locked category groups can be linked to bot so that you can access their knowledge categories but you cannot cannot update, delete or access this group or it's categories\n    :param string? order: the search field you wish to order by - the available field names are the sames ones you can search by defaults to id\n    :param string? name: the name of the category group - this search is a partial search defaults to hello\n    :param integer? page: the page number of results to start from defaults to 1\n    :param integer? id: The id of the category group\n    :param string? dir: the direction of the ordering defaults to asc\n    :param integer? limit: the number of records to return defaults to 20\n    :param string? slug: the slug of the category group - this search is an exact search defaults to hello\n    :param string? description: the description of the category group - this search is a partial search\n    '''\n    return await self._request_rapid_api('rapi_lemurbot_list_all_category_groups',kwargs)\n        "
    },
    "rapi_lemurbot_list_all_clients": {
        "api_name": "list_all_clients",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "lemurbot",
        "code": "async def rapi_lemurbot_list_all_clients(self,*args,**kwargs):\n    '''Meet Lemurbot - Your Personal AI Chatbot Companion! With advanced features like creating, training and chatting, Lemurbot makes it easy and fun for users to interact and learn from an intelligent conversationalist. Plus, with ChatGPT integration and the ability to create multiple bots, the possibilities for learning and entertainment are endless!\n    \n    \n\n    :param string? order: the search field you wish to order by - the available field names are the sames ones you can search by defaults to id\n    :param string? slug: The slug of the client\n    :param integer? id: The id of the client\n    :param integer? limit: the number of records to return defaults to 20\n    :param string? dir: the direction of the ordering defaults to asc\n    :param integer? page: the page number of results to start from defaults to 1\n    :param boolean? is_banned: The banned status of this client defaults to name\n    '''\n    return await self._request_rapid_api('rapi_lemurbot_list_all_clients',kwargs)\n        "
    },
    "rapi_lemurbot_list_all_bot_category_groups": {
        "api_name": "list_all_bot_category_groups",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "lemurbot",
        "code": "async def rapi_lemurbot_list_all_bot_category_groups(self,*args,**kwargs):\n    '''Meet Lemurbot - Your Personal AI Chatbot Companion! With advanced features like creating, training and chatting, Lemurbot makes it easy and fun for users to interact and learn from an intelligent conversationalist. Plus, with ChatGPT integration and the ability to create multiple bots, the possibilities for learning and entertainment are endless!\n    \n    \n\n    :param string? category_group: Category group slug of the category group in the bot category group\n    :param string? dir: the direction of the ordering defaults to asc\n    :param integer? limit: the number of records to return defaults to 20\n    :param string? order: the search field you wish to order by - the available field names are the sames ones you can search by defaults to id\n    :param integer? id: The id of the bot category group\n    :param string? bot: Bot slug of the bot in the bot category group\n    :param integer? category_group_id: category_group_id of the category group\n    :param integer? bot_id: bot_id of the bot category group\n    :param integer? page: the page number of results to start from defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_lemurbot_list_all_bot_category_groups',kwargs)\n        "
    },
    "rapi_lemurbot_list_all_conversation_turns": {
        "api_name": "list_all_conversation_turns",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "lemurbot",
        "code": "async def rapi_lemurbot_list_all_conversation_turns(self,*args,**kwargs):\n    '''Meet Lemurbot - Your Personal AI Chatbot Companion! With advanced features like creating, training and chatting, Lemurbot makes it easy and fun for users to interact and learn from an intelligent conversationalist. Plus, with ChatGPT integration and the ability to create multiple bots, the possibilities for learning and entertainment are endless!\n    \n    \n\n    :param integer? limit: the number of records to return defaults to 20\n    :param string? conversation: The slug of the conversation - conversation are linked to conversation turns\n    :param integer? conversation_id: The id of the conversation - conversation are linked to conversation turns\n    :param string? dir: the direction of the ordering defaults to asc\n    :param string? input: What was said to the bot by the client - this is a partial search\n    :param integer? page: the page number of results to start from defaults to 1\n    :param string? output: What was said by the bot in response to the client input - this is a partial search\n    :param integer? id: The id of the conversation turn\n    :param string? order: the search field you wish to order by - the available field names are the sames ones you can search by defaults to id\n    '''\n    return await self._request_rapid_api('rapi_lemurbot_list_all_conversation_turns',kwargs)\n        "
    },
    "rapi_ttskraken_list_speakers": {
        "api_name": "list_speakers",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "ttskraken",
        "code": "async def rapi_ttskraken_list_speakers(self,*args,**kwargs):\n    '''Introducing our cutting-edge text to speech service, designed to provide you with the most realistic human-sounding voices at an affordable price. Our service is fast and reliable, delivering high-quality audio output in a matter of seconds. Additionally, we offer a wide range of languages and a variety of voice choices, so you can find the perfect fit for your project. Whether you need a voiceover for a video, an audiobook, or any other project, our text to speech service has you covered. Ex...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ttskraken_list_speakers',kwargs)\n        "
    },
    "rapi_ttskraken_list_languages": {
        "api_name": "list_languages",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "ttskraken",
        "code": "async def rapi_ttskraken_list_languages(self,*args,**kwargs):\n    '''Introducing our cutting-edge text to speech service, designed to provide you with the most realistic human-sounding voices at an affordable price. Our service is fast and reliable, delivering high-quality audio output in a matter of seconds. Additionally, we offer a wide range of languages and a variety of voice choices, so you can find the perfect fit for your project. Whether you need a voiceover for a video, an audiobook, or any other project, our text to speech service has you covered. Ex...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_ttskraken_list_languages',kwargs)\n        "
    },
    "rapi_microsoft_edge_text_to_speech_getvoiceslist": {
        "api_name": "getvoiceslist",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "microsoft_edge_text_to_speech",
        "code": "async def rapi_microsoft_edge_text_to_speech_getvoiceslist(self,*args,**kwargs):\n    '''an easy-to-use API of Microsoft Edge TTS.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_microsoft_edge_text_to_speech_getvoiceslist',kwargs)\n        "
    },
    "rapi_microsoft_edge_text_to_speech_getdownloadurl": {
        "api_name": "getdownloadurl",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "microsoft_edge_text_to_speech",
        "code": "async def rapi_microsoft_edge_text_to_speech_getdownloadurl(self,*args,**kwargs):\n    '''an easy-to-use API of Microsoft Edge TTS.\n    \n    \n\n    :param string text:  defaults to Are you alright?\n    :param string? voice_name:  defaults to en-US-AriaNeural\n    '''\n    return await self._request_rapid_api('rapi_microsoft_edge_text_to_speech_getdownloadurl',kwargs)\n        "
    },
    "rapi_demo_project_v3_get_product": {
        "api_name": "get_product",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "demo_project_v3",
        "code": "async def rapi_demo_project_v3_get_product(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer id: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v3_get_product',kwargs)\n        "
    },
    "rapi_demo_project_v3_get_products_in_category": {
        "api_name": "get_products_in_category",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "demo_project_v3",
        "code": "async def rapi_demo_project_v3_get_products_in_category(self,*args,**kwargs):\n    '''This Project is created by the onboarding process\n    \n    \n\n    :param integer skip: \n    :param integer limit: \n    :param string category: \n    '''\n    return await self._request_rapid_api('rapi_demo_project_v3_get_products_in_category',kwargs)\n        "
    },
    "rapi_dream_diffusion_getgeneration": {
        "api_name": "getgeneration",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "dream_diffusion",
        "code": "async def rapi_dream_diffusion_getgeneration(self,*args,**kwargs):\n    '''Train Stable Diffusion models in 8 minutes and generate custom images.\n    \n    \n\n    :param string generation_uuid:  defaults to c2d620eb-8d1a-4bda-b609-d2000858f22f\n    '''\n    return await self._request_rapid_api('rapi_dream_diffusion_getgeneration',kwargs)\n        "
    },
    "rapi_dream_diffusion_gettraining": {
        "api_name": "gettraining",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "dream_diffusion",
        "code": "async def rapi_dream_diffusion_gettraining(self,*args,**kwargs):\n    '''Train Stable Diffusion models in 8 minutes and generate custom images.\n    \n    \n\n    :param string training_uuid:  defaults to 95a0cdaa-0b16-45f7-9da6-ce4f43835d0d\n    '''\n    return await self._request_rapid_api('rapi_dream_diffusion_gettraining',kwargs)\n        "
    },
    "rapi_review_generator_ai_languages": {
        "api_name": "languages",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "review_generator_ai",
        "code": "async def rapi_review_generator_ai_languages(self,*args,**kwargs):\n    '''Generate testimonial & review using AI. Quickly write candid testimonials and reviews for people and services in 30+ languages\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_review_generator_ai_languages',kwargs)\n        "
    },
    "rapi_islam_ai_api_have_a_chat_with_our_bot": {
        "api_name": "have_a_chat_with_our_bot",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "islam_ai_api",
        "code": "async def rapi_islam_ai_api_have_a_chat_with_our_bot(self,*args,**kwargs):\n    '''Islam & AI API for Islamic ChatBot.\n\nThe Best AI for Islam! \n    \n    \n\n    :param string question:  defaults to What is Islam?\n    :param string? chatHistory:  defaults to What is Dua to recite when you see a miraculous thing like Islam & AI? | There is no specific dua (supplication) mentioned in the Quran or Hadith that is to be recited when witnessing a miracle. However, Muslims are encouraged to constantly remember Allah and express their gratitude to Him for the blessings and miracles they witness in their lives. In general, it is recommended to say 'Subhan Allah' (Glory be to Allah) when witnessing something amazing or miraculous\n    '''\n    return await self._request_rapid_api('rapi_islam_ai_api_have_a_chat_with_our_bot',kwargs)\n        "
    },
    "rapi_text_sentiment_analysis_text_sentiment_analysis": {
        "api_name": "text_sentiment_analysis",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "text_sentiment_analysis",
        "code": "async def rapi_text_sentiment_analysis_text_sentiment_analysis(self,*args,**kwargs):\n    '''Introducing the Sentiment Analysis API by Pizza API - a cutting-edge tool that provides instant sentiment analysis of any given text. With this API, you can easily determine whether a piece of text is positive, negative, or neutral in tone. The API uses advanced natural language processing techniques to analyse text and provide accurate results in real-time.  The Sentiment Analysis API is incredibly easy to use, simply send a request to the API with the text you want to analyse, and the API w...\n    \n    \n\n    :param string text:  defaults to have a good day\n    '''\n    return await self._request_rapid_api('rapi_text_sentiment_analysis_text_sentiment_analysis',kwargs)\n        "
    },
    "rapi_ai_content_detector_v2_chat_gpt_detector": {
        "api_name": "chat_gpt_detector",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "ai_content_detector_v2",
        "code": "async def rapi_ai_content_detector_v2_chat_gpt_detector(self,*args,**kwargs):\n    '''Detect fake news articles, homework, content, and web pages generated by ChatGPT. It is specifically designed to quickly identify if the text has been partially or completely created using a GPT-3 algorithm\n    \n    \n\n    :param string text:  defaults to Christmas is one of the most widely celebrated holidays in the world. It is a time of joy, love, and giving, and is traditionally celebrated on December 25th every year. The holiday has its roots in Christianity, where it commemorates the birth of Jesus Christ, but it is now celebrated by people of all religions and cultures.  Christmas is a time when families and friends come together to celebrate and enjoy each other's company. It is a time to share meals, exchange gifts, and participate in various traditions and activities. One of the most beloved traditions of Christmas is decorating a Christmas tree. This tradition originated in Germany and has since spread around the world. Families often decorate their trees with lights, ornaments, and tinsel.  Another beloved tradition is the exchange of gifts. Many people spend weeks or even months searching for the perfect gift for their loved ones. Giving and receiving gifts is a way to show love and appreciation for one another, and it is a way to bring joy to those around us.  Christmas is also a time for giving back to those in need. Many people donate their time, money, or resources to charities and organizations that help those who are less fortunate. This spirit of giving is one of the most important aspects of Christmas and helps to spread love and kindness to those who need it most.  In addition to these traditions, there are many other customs associated with Christmas. These include caroling, baking Christmas cookies, and watching Christmas movies. Each of these traditions brings a unique sense of joy and excitement to the holiday season.  In conclusion, Christmas is a time of joy, love, and giving. It is a time to come together with friends and family and celebrate the holiday season. While the holiday has its roots in Christianity, it is now celebrated by people of all cultures and religions around the world. Christmas traditions bring people together and create memories that will last a lifetime.\n    '''\n    return await self._request_rapid_api('rapi_ai_content_detector_v2_chat_gpt_detector',kwargs)\n        "
    },
    "rapi_text_to_speech_v2_voices_endpoint": {
        "api_name": "voices_endpoint",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "text_to_speech_v2",
        "code": "async def rapi_text_to_speech_v2_voices_endpoint(self,*args,**kwargs):\n    '''The Multilingual Text To Speech is a powerful tool for converting written text into spoken words in multiple languages. It supports a wide range of languages including English, Spanish, French, Portuguese, Mandarin and Japanese. The API uses state-of-the-art text-to-speech technology to generate high-quality audio files that can be used in a variety of applications such as e-learning, voice assistants, and more. With this API, you can easily convert any text into speech in a matter of seconds...\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_v2_voices_endpoint',kwargs)\n        "
    },
    "rapi_textsentai_ai_powered_text_sentiment_analyzer_textsentai_api": {
        "api_name": "textsentai_api",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "textsentai_ai_powered_text_sentiment_analyzer",
        "code": "async def rapi_textsentai_ai_powered_text_sentiment_analyzer_textsentai_api(self,*args,**kwargs):\n    '''\ud83d\udcca Looking for a powerful AI-driven API to analyze the sentiment of your text data? Look no further than TextSentAI! Our API can analyze text in over 140 languages, providing fast and accurate sentiment scores of either POSITIVE or NEGATIVE. Whether you're analyzing social media posts, customer feedback, or any other form of text data, TextSentAI can help you gain valuable insights into your content.\n    \n    \n\n    :param string text:  defaults to Support over 140 languages, try it now :)\n    '''\n    return await self._request_rapid_api('rapi_textsentai_ai_powered_text_sentiment_analyzer_textsentai_api',kwargs)\n        "
    },
    "rapi_the_apophis_getforecast_free": {
        "api_name": "getforecast_free",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "the_apophis",
        "code": "async def rapi_the_apophis_getforecast_free(self,*args,**kwargs):\n    '''AI-powered API for crypto asset price forecasting offers a range of features and benefits that can revolutionize how traders and investors navigate the dynamic and often unpredictable crypto market.\n    \n    \n\n    :param string currency:  defaults to btc\n    '''\n    return await self._request_rapid_api('rapi_the_apophis_getforecast_free',kwargs)\n        "
    },
    "rapi_text_to_speech_pro_get_list_of_audios": {
        "api_name": "get_list_of_audios",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "text_to_speech_pro",
        "code": "async def rapi_text_to_speech_pro_get_list_of_audios(self,*args,**kwargs):\n    '''Convert text into natural-sounding speech using an API - REALTIME & MULTI LANGUAGE\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_pro_get_list_of_audios',kwargs)\n        "
    },
    "rapi_text_to_speech_pro_get_list_of_voices": {
        "api_name": "get_list_of_voices",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "text_to_speech_pro",
        "code": "async def rapi_text_to_speech_pro_get_list_of_voices(self,*args,**kwargs):\n    '''Convert text into natural-sounding speech using an API - REALTIME & MULTI LANGUAGE\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_to_speech_pro_get_list_of_voices',kwargs)\n        "
    },
    "rapi_speech_recognition_languages": {
        "api_name": "languages",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "speech_recognition",
        "code": "async def rapi_speech_recognition_languages(self,*args,**kwargs):\n    '''Convert speech to text quickly and easily. Supports 100+ languages\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_speech_recognition_languages',kwargs)\n        "
    },
    "rapi_lexai_api_get_classes": {
        "api_name": "get_classes",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "lexai_api",
        "code": "async def rapi_lexai_api_get_classes(self,*args,**kwargs):\n    '''Images analyser API for multi-label object detection and classification!\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_lexai_api_get_classes',kwargs)\n        "
    },
    "rapi_text_mood_changer_ai_mood_list": {
        "api_name": "mood_list",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "text_mood_changer_ai",
        "code": "async def rapi_text_mood_changer_ai_mood_list(self,*args,**kwargs):\n    '''transforms written text into different styles of mood.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_text_mood_changer_ai_mood_list',kwargs)\n        "
    },
    "rapi_large_text_to_speech_get_job_status": {
        "api_name": "get_job_status",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "large_text_to_speech",
        "code": "async def rapi_large_text_to_speech_get_job_status(self,*args,**kwargs):\n    '''Large text to speech (TTS) API enables you to perform unlimited* text to speech synthesis (English) in single request.  With human like voice quality! Read more in About section.\n    \n    \n\n    :param string id:  defaults to 5425b1c0-357b-47cf-a06c-69c5260ea890\n    '''\n    return await self._request_rapid_api('rapi_large_text_to_speech_get_job_status',kwargs)\n        "
    },
    "rapi_stable_diffusion_v2_generate_image": {
        "api_name": "generate_image",
        "category": "Artificial_Intelligence_Machine_Learning",
        "tool_name": "stable_diffusion_v2",
        "code": "async def rapi_stable_diffusion_v2_generate_image(self,*args,**kwargs):\n    '''Generate high-quality images with the latest Stable Diffusion v2.1 model.\n    \n    \n\n    :param string description:  defaults to cat\n    '''\n    return await self._request_rapid_api('rapi_stable_diffusion_v2_generate_image',kwargs)\n        "
    },
    "rapi_zipwhip_user_login": {
        "api_name": "user_login",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_user_login(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string username: For US domestic use 10-digit number. For International numbers use full E.164 format. Examples: US: 5555555555 E.164: +1155555555555\n    :param string password: Password associated with phone number being entered in user/login.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_user_login',kwargs)\n        "
    },
    "rapi_zipwhip_group_get": {
        "api_name": "group_get",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_group_get(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string name: This is the name of the group that you would like to associate with a group of contacts when using group/save.\n    :param string type: This is used to identify the type of group you wish to create. For now, please use 'Group'\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    :param string? textline: If the group is being created within a landline or toll-free number than this parameter is required. This is the routing information for sending out the group message. Example format textline:/xxxxxxxxxx?carrier=xxx. After the :/ this is the logged in number's phone number. The carrier is equal to the carrier returned from user/get.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_group_get',kwargs)\n        "
    },
    "rapi_zipwhip_message_read": {
        "api_name": "message_read",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_message_read(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string messages: The message ID being modified. In all cases the method will take multiple messages as parameters.\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_message_read',kwargs)\n        "
    },
    "rapi_zipwhip_conversation_delete": {
        "api_name": "conversation_delete",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_conversation_delete(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string fingerprint: The unique identifier for a conversation. This can be retrieved from a conversation/list.\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_conversation_delete',kwargs)\n        "
    },
    "rapi_zipwhip_message_send": {
        "api_name": "message_send",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_message_send(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string contacts: This is the contact ID that is return from contact/list. A contact ID is also part of the return from message/send.\n    :param string body: The message body that you would like to send. This is a maximum of 160 ASCII characters or 140 Bytes.\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_message_send',kwargs)\n        "
    },
    "rapi_zipwhip_conversation_list": {
        "api_name": "conversation_list",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_conversation_list(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string fingerprint: The unique identifier for a conversation. This can be retrieved from a conversation/list.\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_conversation_list',kwargs)\n        "
    },
    "rapi_zipwhip_contact_list": {
        "api_name": "contact_list",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_contact_list(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    :param string? page: For paginated results iterate over the requested page(s) for all available content.\n    :param string? pageSize: Specify the number of results returned for a paginated method.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_contact_list',kwargs)\n        "
    },
    "rapi_zipwhip_group_delete": {
        "api_name": "group_delete",
        "category": "Communication",
        "tool_name": "zipwhip",
        "code": "async def rapi_zipwhip_group_delete(self,*args,**kwargs):\n    '''Cloud texting for toll free,\r\nlandline,\r\nand mobile numbers\r\nSend and receive text messages\r\nfrom your laptop, desktop, or\r\ntablet computer using your\r\nexisting mobile or landline\r\nphone number.\n    \n    \n\n    :param string address: For US domestic use 10-digit number. For International numbers use full E.164 format. Examples: US: 5555555555 E.164: +1155555555555\n    :param string session: This is the sessionKey that is returned from user/login. sessionKeys do not expire. Because of this, it is recommended that you do a single user/login and then save the sessionKey locally for future web calls.\n    '''\n    return await self._request_rapid_api('rapi_zipwhip_group_delete',kwargs)\n        "
    },
    "rapi_weather_dataset_weather_dataset": {
        "api_name": "weather_dataset",
        "category": "Communication",
        "tool_name": "weather_dataset",
        "code": "async def rapi_weather_dataset_weather_dataset(self,*args,**kwargs):\n    '''Weather_data Set on Django Project\n    \n    \n\n    :param string? data: Check The weather data into Weather_API Process defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_weather_dataset_weather_dataset',kwargs)\n        "
    },
    "rapi_punto_61_getarchive": {
        "api_name": "getarchive",
        "category": "Communication",
        "tool_name": "punto_61",
        "code": "async def rapi_punto_61_getarchive(self,*args,**kwargs):\n    '''.61 API\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_punto_61_getarchive',kwargs)\n        "
    },
    "rapi_phone_and_email_validator_v2_postalcode": {
        "api_name": "postalcode",
        "category": "Communication",
        "tool_name": "phone_and_email_validator_v2",
        "code": "async def rapi_phone_and_email_validator_v2_postalcode(self,*args,**kwargs):\n    '''Extremely Useful tool for Phone, Email, IP Address and Postal Code Validation\n    \n    \n\n    :param string postal_code:  defaults to 33166\n    '''\n    return await self._request_rapid_api('rapi_phone_and_email_validator_v2_postalcode',kwargs)\n        "
    },
    "rapi_phone_and_email_validator_v2_phone_number": {
        "api_name": "phone_number",
        "category": "Communication",
        "tool_name": "phone_and_email_validator_v2",
        "code": "async def rapi_phone_and_email_validator_v2_phone_number(self,*args,**kwargs):\n    '''Extremely Useful tool for Phone, Email, IP Address and Postal Code Validation\n    \n    \n\n    :param string phone:  defaults to 12345678900 for US\n    '''\n    return await self._request_rapid_api('rapi_phone_and_email_validator_v2_phone_number',kwargs)\n        "
    },
    "rapi_line_messaging_get_content": {
        "api_name": "get_content",
        "category": "Communication",
        "tool_name": "line_messaging",
        "code": "async def rapi_line_messaging_get_content(self,*args,**kwargs):\n    '''LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.\n    \n    \n\n    :param string messageId: Message ID\n    '''\n    return await self._request_rapid_api('rapi_line_messaging_get_content',kwargs)\n        "
    },
    "rapi_line_messaging_download_rich_menu_image": {
        "api_name": "download_rich_menu_image",
        "category": "Communication",
        "tool_name": "line_messaging",
        "code": "async def rapi_line_messaging_download_rich_menu_image(self,*args,**kwargs):\n    '''LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.\n    \n    \n\n    :param string richMenuId: ID of the rich menu with the image to be downloaded\n    '''\n    return await self._request_rapid_api('rapi_line_messaging_download_rich_menu_image',kwargs)\n        "
    },
    "rapi_line_messaging_get_rich_menu": {
        "api_name": "get_rich_menu",
        "category": "Communication",
        "tool_name": "line_messaging",
        "code": "async def rapi_line_messaging_get_rich_menu(self,*args,**kwargs):\n    '''LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.\n    \n    \n\n    :param string richMenuId: ID of an uploaded rich menu\n    '''\n    return await self._request_rapid_api('rapi_line_messaging_get_rich_menu',kwargs)\n        "
    },
    "rapi_line_messaging_get_default_rich_menu_id": {
        "api_name": "get_default_rich_menu_id",
        "category": "Communication",
        "tool_name": "line_messaging",
        "code": "async def rapi_line_messaging_get_default_rich_menu_id(self,*args,**kwargs):\n    '''LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_line_messaging_get_default_rich_menu_id',kwargs)\n        "
    },
    "rapi_line_messaging_get_number_of_sent_reply_messages": {
        "api_name": "get_number_of_sent_reply_messages",
        "category": "Communication",
        "tool_name": "line_messaging",
        "code": "async def rapi_line_messaging_get_number_of_sent_reply_messages(self,*args,**kwargs):\n    '''LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.\n    \n    \n\n    :param string date\t: Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9\n    '''\n    return await self._request_rapid_api('rapi_line_messaging_get_number_of_sent_reply_messages',kwargs)\n        "
    },
    "rapi_bombsaway_bombed": {
        "api_name": "bombed",
        "category": "Communication",
        "tool_name": "bombsaway",
        "code": "async def rapi_bombsaway_bombed(self,*args,**kwargs):\n    '''Shock and Awe\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_bombsaway_bombed',kwargs)\n        "
    },
    "rapi_english_talking_get_an_answer": {
        "api_name": "get_an_answer",
        "category": "Communication",
        "tool_name": "english_talking",
        "code": "async def rapi_english_talking_get_an_answer(self,*args,**kwargs):\n    '''This API aims to provide users with the possibility of conducting dialogues in English where the conversations and answers are registered and evaluated by the users themselves.\n\ud83d\udc7d\n    \n    \n\n    :param string? status: approved or analyzing defaults to approved\n    :param string? answer: Response to the initial speech of the dialogue defaults to Hi, how are you?\n    :param string? _id: Unique dialog identifier (automatically generated)\n\n defaults to 5ec47b3d8958430d6a6d5898\n    :param string? speech: Speak in which the usuairio wants to get an answer defaults to Hi\n    :param string? user: User who created the dialogue defaults to 5ec479048958430d6a6d5895\n    '''\n    return await self._request_rapid_api('rapi_english_talking_get_an_answer',kwargs)\n        "
    },
    "rapi_maytapi_whatsapp_purgequeue": {
        "api_name": "purgequeue",
        "category": "Communication",
        "tool_name": "maytapi_whatsapp",
        "code": "async def rapi_maytapi_whatsapp_purgequeue(self,*args,**kwargs):\n    '''Send and receive messages from WhatsApp via Maytapi. It is a stable and reliable solution. See more:  https://maytapi.com/\n    \n    \n\n    :param string phone_id: Enter phone id\n    '''\n    return await self._request_rapid_api('rapi_maytapi_whatsapp_purgequeue',kwargs)\n        "
    },
    "rapi_maytapi_whatsapp_getstatus": {
        "api_name": "getstatus",
        "category": "Communication",
        "tool_name": "maytapi_whatsapp",
        "code": "async def rapi_maytapi_whatsapp_getstatus(self,*args,**kwargs):\n    '''Send and receive messages from WhatsApp via Maytapi. It is a stable and reliable solution. See more:  https://maytapi.com/\n    \n    \n\n    :param string phone_id: Enter phone id\n    '''\n    return await self._request_rapid_api('rapi_maytapi_whatsapp_getstatus',kwargs)\n        "
    },
    "rapi_maytapi_whatsapp_getproduct": {
        "api_name": "getproduct",
        "category": "Communication",
        "tool_name": "maytapi_whatsapp",
        "code": "async def rapi_maytapi_whatsapp_getproduct(self,*args,**kwargs):\n    '''Send and receive messages from WhatsApp via Maytapi. It is a stable and reliable solution. See more:  https://maytapi.com/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_maytapi_whatsapp_getproduct',kwargs)\n        "
    },
    "rapi_maytapi_whatsapp_getlistphones": {
        "api_name": "getlistphones",
        "category": "Communication",
        "tool_name": "maytapi_whatsapp",
        "code": "async def rapi_maytapi_whatsapp_getlistphones(self,*args,**kwargs):\n    '''Send and receive messages from WhatsApp via Maytapi. It is a stable and reliable solution. See more:  https://maytapi.com/\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_maytapi_whatsapp_getlistphones',kwargs)\n        "
    },
    "rapi_mailvalid_check_lists": {
        "api_name": "check_lists",
        "category": "Communication",
        "tool_name": "mailvalid",
        "code": "async def rapi_mailvalid_check_lists(self,*args,**kwargs):\n    '''A REST API that checks for disposable and invalid emails\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_mailvalid_check_lists',kwargs)\n        "
    },
    "rapi_whin_delete_url": {
        "api_name": "delete_url",
        "category": "Communication",
        "tool_name": "whin",
        "code": "async def rapi_whin_delete_url(self,*args,**kwargs):\n    '''Send and receive any message type to your WhatsApp or owned groups with our gateway.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_whin_delete_url',kwargs)\n        "
    },
    "rapi_truecaller_v2_get_country_codes": {
        "api_name": "get_country_codes",
        "category": "Communication",
        "tool_name": "truecaller_v2",
        "code": "async def rapi_truecaller_v2_get_country_codes(self,*args,**kwargs):\n    '''\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_truecaller_v2_get_country_codes',kwargs)\n        "
    },
    "rapi_iss_location_get": {
        "api_name": "get",
        "category": "Communication",
        "tool_name": "iss_location",
        "code": "async def rapi_iss_location_get(self,*args,**kwargs):\n    '''Sends geographical location of NASA\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_iss_location_get',kwargs)\n        "
    },
    "rapi_d7_viber_check_balance": {
        "api_name": "check_balance",
        "category": "Communication",
        "tool_name": "d7_viber",
        "code": "async def rapi_d7_viber_check_balance(self,*args,**kwargs):\n    '''Experience boundless connectivity with the D7API Gateway, connecting you to a vast messaging network. Now with Viber integration, enjoy seamless communication and stay connected like never before.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_d7_viber_check_balance',kwargs)\n        "
    },
    "rapi_d7_viber_get_message_status": {
        "api_name": "get_message_status",
        "category": "Communication",
        "tool_name": "d7_viber",
        "code": "async def rapi_d7_viber_get_message_status(self,*args,**kwargs):\n    '''Experience boundless connectivity with the D7API Gateway, connecting you to a vast messaging network. Now with Viber integration, enjoy seamless communication and stay connected like never before.\n    \n    \n\n    :param string request_id: \n    '''\n    return await self._request_rapid_api('rapi_d7_viber_get_message_status',kwargs)\n        "
    },
    "rapi_hog_18_1_app_config": {
        "api_name": "18_1_app_config",
        "category": "Communication",
        "tool_name": "hog",
        "code": "async def rapi_hog_18_1_app_config(self,*args,**kwargs):\n    '''\u8ad6\u58c7\u5c08\u7528\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_hog_18_1_app_config',kwargs)\n        "
    },
    "rapi_getbs_prefereces": {
        "api_name": "prefereces",
        "category": "Communication",
        "tool_name": "getbs",
        "code": "async def rapi_getbs_prefereces(self,*args,**kwargs):\n    '''DuLieuBs63Tinh\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_getbs_prefereces',kwargs)\n        "
    },
    "rapi_veriphone_example": {
        "api_name": "example",
        "category": "Communication",
        "tool_name": "veriphone",
        "code": "async def rapi_veriphone_example(self,*args,**kwargs):\n    '''Global phone number verification in a free, fast, reliable JSON API\n    \n    \n\n    :param string? country_code: The example number's country in a 2 letters ISO format. Example: US, RU.  Optional: the country will be infered from the IP address if this parameter is absent or invalid. defaults to GB\n    :param string? type: The type of example number to return. Values: fixed_line, mobile , premium_rate, shared_cost, toll_free, voip defaults to mobile\n    '''\n    return await self._request_rapid_api('rapi_veriphone_example',kwargs)\n        "
    },
    "rapi_validate_phone_by_api_ninjas_v1_validatephone": {
        "api_name": "v1_validatephone",
        "category": "Communication",
        "tool_name": "validate_phone_by_api_ninjas",
        "code": "async def rapi_validate_phone_by_api_ninjas_v1_validatephone(self,*args,**kwargs):\n    '''Check whether a phone number is valid and get its metadata. See more info at https://api-ninjas.com/api/validatephone.\n    \n    \n\n    :param string number: phone number to check. If country is not set, the 3-digit country code prefix needs to be included. defaults to +12065550100\n    :param string? country: 2-letter ISO-3166 country code the phone number belongs to.\n    '''\n    return await self._request_rapid_api('rapi_validate_phone_by_api_ninjas_v1_validatephone',kwargs)\n        "
    },
    "rapi_qr_code_by_api_ninjas_v1_qrcode": {
        "api_name": "v1_qrcode",
        "category": "Communication",
        "tool_name": "qr_code_by_api_ninjas",
        "code": "async def rapi_qr_code_by_api_ninjas_v1_qrcode(self,*args,**kwargs):\n    '''Generate custom QR codes for any data. See more info at https://api-ninjas.com/api/qrcode.\n    \n    \n\n    :param string data: data to encode in the QR code. defaults to https://api-ninjas.com\n    :param string format: image format to return. Must be one of the following: png, jpg, jpeg, eps, svg. defaults to png\n    :param integer? size: size of the QR code image to generate. The output will be a square image with (size x size) dimensions.\n    :param string? fg_color: foreground color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is 000000 (black)\n    :param string? bg_color: background color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is ffffff (white)\n    '''\n    return await self._request_rapid_api('rapi_qr_code_by_api_ninjas_v1_qrcode',kwargs)\n        "
    },
    "rapi_test_apideno_article_index": {
        "api_name": "article_index",
        "category": "Communication",
        "tool_name": "test_apideno",
        "code": "async def rapi_test_apideno_article_index(self,*args,**kwargs):\n    '''test api deno\n    \n    \n\n    :param integer? limit:  defaults to 1\n    '''\n    return await self._request_rapid_api('rapi_test_apideno_article_index',kwargs)\n        "
    },
    "rapi_mojitok_sticker_store_sdk_stickers_trending": {
        "api_name": "stickers_trending",
        "category": "Communication",
        "tool_name": "mojitok_sticker_store_sdk",
        "code": "async def rapi_mojitok_sticker_store_sdk_stickers_trending(self,*args,**kwargs):\n    '''Mojitok Sticker Store API/SDK is a curated store of licensed animated stickers, emojis, and GIFs. \n    \n    \n\n    :param string? include: Use when you want to receive a response including sticker pack or creator information defaults to STICKER_PACK\n    '''\n    return await self._request_rapid_api('rapi_mojitok_sticker_store_sdk_stickers_trending',kwargs)\n        "
    },
    "rapi_languagetool_list_of_languages": {
        "api_name": "list_of_languages",
        "category": "Communication",
        "tool_name": "languagetool",
        "code": "async def rapi_languagetool_list_of_languages(self,*args,**kwargs):\n    '''Style and grammar checking / proofreading for more than 25 languages, including English, French, Polish, Spanish and German. Based on languagetool.org.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_languagetool_list_of_languages',kwargs)\n        "
    },
    "rapi_generaltalker_on_slack": {
        "api_name": "on_slack",
        "category": "Communication",
        "tool_name": "generaltalker",
        "code": "async def rapi_generaltalker_on_slack(self,*args,**kwargs):\n    '''\u307e\u308b\u3067\u4eba\u9593\u306e\u3088\u3046\u306a\u81ea\u7136\u306a\u4f1a\u8a71\u3092\u5b9f\u73fe\u3059\u308bAPI\n    \n    \n\n    :param string user_name: \u30dc\u30c3\u30c8\u306e\u8a71\u3057\u76f8\u624b\u3067\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to UserName\n    :param string user_msg_text: \u30e6\u30fc\u30b6\u30fc\u304b\u3089\u8a71\u3057\u304b\u3051\u3089\u308c\u305f\u5185\u5bb9\uff08\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to Hello\n    :param string channel_token: Slack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u3054\u3068\u306e\u30c8\u30fc\u30af\u30f3\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f8b 'D01E65TPZ2M' defaults to channel1\n    :param string bot_name: \u3053\u306eAPI\u3092\u5229\u7528\u3059\u308b\u30dc\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203bAPI\u5185\u90e8\u3067\u306f[bot_name - user_name]\u9593\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u5143\u306b\u3001\u300c\u6d41\u308c\u306e\u3042\u308b\u81ea\u7136\u306a\u4f1a\u8a71\u300d\u3092\u6210\u7acb\u3055\u305b\u307e\u3059\u3002 defaults to MyBotName\n    :param boolean? save_only_positive_info: use_detect_user_info \u306e\u60c5\u5831\u62bd\u51fa\u306e\u5bfe\u8c61\u3092\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u4e8b\u67c4\u306e\u307f\u306b\u3059\u308b\u5834\u5408true\u3001\u3059\u3079\u3066\u306e\u4e8b\u67c4\u3092\u62bd\u51fa\u3059\u308b\u5834\u5408\u306ffalse\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to true\n    :param boolean? use_detect_user_info: \u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u5834\u5408\u306ftrue\u3092\u3001\u60c5\u5831\u62bd\u51fa\u3092\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to true\n    :param boolean? load_only_positive_info: true\u306e\u6642\u3001\u8a71\u984c\u5909\u63db\u6642\u306b\u306f\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u5358\u8a9e\u306e\u307f\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n defaults to true\n    :param boolean? use_change_topic: true\u306a\u3089\u3070\u8a71\u984c\u5909\u63db\u3092\u3057\u307e\u3059\u3002\uff08detect_user_info=false\u306e\u6642\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\uff09 defaults to true\n    '''\n    return await self._request_rapid_api('rapi_generaltalker_on_slack',kwargs)\n        "
    },
    "rapi_generaltalker_on_general": {
        "api_name": "on_general",
        "category": "Communication",
        "tool_name": "generaltalker",
        "code": "async def rapi_generaltalker_on_general(self,*args,**kwargs):\n    '''\u307e\u308b\u3067\u4eba\u9593\u306e\u3088\u3046\u306a\u81ea\u7136\u306a\u4f1a\u8a71\u3092\u5b9f\u73fe\u3059\u308bAPI\n    \n    \n\n    :param string user_name: \u30dc\u30c3\u30c8\u306e\u8a71\u3057\u76f8\u624b\u3067\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to UserName\n    :param string user_msg_text: \u30e6\u30fc\u30b6\u30fc\u304b\u3089\u8a71\u3057\u304b\u3051\u3089\u308c\u305f\u5185\u5bb9\uff08\u30c6\u30ad\u30b9\u30c8\uff09\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to Hello\n    :param string bot_name: \u3053\u306eAPI\u3092\u5229\u7528\u3059\u308b\u30dc\u30c3\u30c8\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203bAPI\u5185\u90e8\u3067\u306f[bot_name - user_name]\u9593\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u5143\u306b\u3001\u300c\u6d41\u308c\u306e\u3042\u308b\u81ea\u7136\u306a\u4f1a\u8a71\u300d\u3092\u6210\u7acb\u3055\u305b\u307e\u3059\u3002 defaults to MyBotName\n    :param boolean? save_only_positive_info: use_detect_user_info \u306e\u60c5\u5831\u62bd\u51fa\u306e\u5bfe\u8c61\u3092\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u4e8b\u67c4\u306e\u307f\u306b\u3059\u308b\u5834\u5408true\u3001\u3059\u3079\u3066\u306e\u4e8b\u67c4\u3092\u62bd\u51fa\u3059\u308b\u5834\u5408\u306ffalse\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to true\n    :param boolean? load_only_positive_info: true\u306e\u6642\u3001\u8a71\u984c\u5909\u63db\u6642\u306b\u306f\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u5358\u8a9e\u306e\u307f\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n defaults to true\n    :param boolean? use_detect_user_info: \u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u5834\u5408\u306ftrue\u3092\u3001\u60c5\u5831\u62bd\u51fa\u3092\u3057\u306a\u3044\u5834\u5408\u306ffalse\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 defaults to true\n    :param boolean? use_change_topic: true\u306a\u3089\u3070\u8a71\u984c\u5909\u63db\u3092\u3057\u307e\u3059\u3002\uff08detect_user_info=false\u306e\u6642\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\uff09 defaults to true\n    '''\n    return await self._request_rapid_api('rapi_generaltalker_on_general',kwargs)\n        "
    },
    "rapi_serverless_blogging_media": {
        "api_name": "media",
        "category": "Communication",
        "tool_name": "serverless_blogging",
        "code": "async def rapi_serverless_blogging_media(self,*args,**kwargs):\n    '''Serverless blogging enables you to integrate a blogging system within seconds, whilst giving clients a full WYISWYG interface to create and sort content as they please.\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_serverless_blogging_media',kwargs)\n        "
    },
    "rapi_serverless_blogging_blog": {
        "api_name": "blog",
        "category": "Communication",
        "tool_name": "serverless_blogging",
        "code": "async def rapi_serverless_blogging_blog(self,*args,**kwargs):\n    '''Serverless blogging enables you to integrate a blogging system within seconds, whilst giving clients a full WYISWYG interface to create and sort content as they please.\n    \n    \n\n    :param string id: \n    '''\n    return await self._request_rapid_api('rapi_serverless_blogging_blog',kwargs)\n        "
    },
    "rapi_serverless_blogging_groups": {
        "api_name": "groups",
        "category": "Communication",
        "tool_name": "serverless_blogging",
        "code": "async def rapi_serverless_blogging_groups(self,*args,**kwargs):\n    '''Serverless blogging enables you to integrate a blogging system within seconds, whilst giving clients a full WYISWYG interface to create and sort content as they please.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_serverless_blogging_groups',kwargs)\n        "
    },
    "rapi_serverless_blogging_blogs": {
        "api_name": "blogs",
        "category": "Communication",
        "tool_name": "serverless_blogging",
        "code": "async def rapi_serverless_blogging_blogs(self,*args,**kwargs):\n    '''Serverless blogging enables you to integrate a blogging system within seconds, whilst giving clients a full WYISWYG interface to create and sort content as they please.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_serverless_blogging_blogs',kwargs)\n        "
    },
    "rapi_dns_lookup_api_a_domain": {
        "api_name": "api_a_domain",
        "category": "Communication",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_api_a_domain(self,*args,**kwargs):\n    '''API to programmatically perform DNS lookups.\n    \n    \n\n    :param string domain:  defaults to oxog.net\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_api_a_domain',kwargs)\n        "
    },
    "rapi_dns_lookup_api_aaaa_domain": {
        "api_name": "api_aaaa_domain",
        "category": "Communication",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_api_aaaa_domain(self,*args,**kwargs):\n    '''API to programmatically perform DNS lookups.\n    \n    \n\n    :param string domain:  defaults to oxog.net\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_api_aaaa_domain',kwargs)\n        "
    },
    "rapi_dns_lookup_api_ns_domain": {
        "api_name": "api_ns_domain",
        "category": "Communication",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_api_ns_domain(self,*args,**kwargs):\n    '''API to programmatically perform DNS lookups.\n    \n    \n\n    :param string domain:  defaults to oxog.net\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_api_ns_domain',kwargs)\n        "
    },
    "rapi_dns_lookup_api_soa_domain": {
        "api_name": "api_soa_domain",
        "category": "Communication",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_api_soa_domain(self,*args,**kwargs):\n    '''API to programmatically perform DNS lookups.\n    \n    \n\n    :param string domain:  defaults to oxog.net\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_api_soa_domain',kwargs)\n        "
    },
    "rapi_dns_lookup_api_txt_domain": {
        "api_name": "api_txt_domain",
        "category": "Communication",
        "tool_name": "dns_lookup",
        "code": "async def rapi_dns_lookup_api_txt_domain(self,*args,**kwargs):\n    '''API to programmatically perform DNS lookups.\n    \n    \n\n    :param string domain:  defaults to oxog.net\n    '''\n    return await self._request_rapid_api('rapi_dns_lookup_api_txt_domain',kwargs)\n        "
    },
    "rapi_retrieve_dns_entries_api_whois": {
        "api_name": "api_whois",
        "category": "Communication",
        "tool_name": "retrieve_dns_entries",
        "code": "async def rapi_retrieve_dns_entries_api_whois(self,*args,**kwargs):\n    '''The API enables you to make fast DNS and WHOIS lookups.\n    \n    \n\n    :param string? ip:  defaults to 8.8.8.8\n    :param string? host:  defaults to google.com\n    :param string? url:  defaults to http://google.com\n    '''\n    return await self._request_rapid_api('rapi_retrieve_dns_entries_api_whois',kwargs)\n        "
    },
    "rapi_skype_graph_search": {
        "api_name": "search",
        "category": "Communication",
        "tool_name": "skype_graph",
        "code": "async def rapi_skype_graph_search(self,*args,**kwargs):\n    '''Skype Graph is an Unofficial Skype API that allows you search for Skype users by name or email address\n    \n    \n\n    :param string Name:  defaults to robert.smith@hotmail.com\n    '''\n    return await self._request_rapid_api('rapi_skype_graph_search',kwargs)\n        "
    },
    "rapi_sagenda_free_booking_system_events_getbookableitemlist": {
        "api_name": "events_getbookableitemlist",
        "category": "Communication",
        "tool_name": "sagenda_free_booking_system",
        "code": "async def rapi_sagenda_free_booking_system_events_getbookableitemlist(self,*args,**kwargs):\n    '''Sagenda is a booking, reservation, scheduling or appointment online software that increases the productivity of your business free of cost.\n    \n    \n\n    \n    '''\n    return await self._request_rapid_api('rapi_sagenda_free_booking_system_events_getbookableitemlist',kwargs)\n        "
    }
}